

00:18:54.640 --> 00:18:58.110 align:start position:0%
equals a plus 12 we can do a plus equals
12<00:18:55.260><c> so</c><00:18:56.260><c> this</c><00:18:56.740><c> equals</c><00:18:57.100><c> the</c><00:18:57.250><c> same</c><00:18:57.460><c> thing</c><00:18:57.790><c> so</c>

00:18:58.110 --> 00:18:58.120 align:start position:0%
12 so this equals the same thing so
 

00:18:58.120 --> 00:19:02.600 align:start position:0%
12 so this equals the same thing so
instead<00:18:58.420><c> of</c><00:18:58.570><c> B</c><00:18:58.870><c> equals</c><00:18:59.380><c> 9</c><00:18:59.770><c> plus</c><00:18:59.800><c> B</c><00:19:00.580><c> we</c><00:19:01.300><c> can</c><00:19:01.510><c> do</c><00:19:01.780><c> B</c>

00:19:02.600 --> 00:19:02.610 align:start position:0%
instead of B equals 9 plus B we can do B
 

00:19:02.610 --> 00:19:09.000 align:start position:0%
instead of B equals 9 plus B we can do B
plus<00:19:03.610><c> equals</c><00:19:04.830><c> 9</c><00:19:05.830><c> so</c><00:19:06.820><c> now</c><00:19:07.270><c> we're</c><00:19:07.540><c> adding</c><00:19:08.010><c> the</c>

00:19:09.000 --> 00:19:09.010 align:start position:0%
plus equals 9 so now we're adding the
 

00:19:09.010 --> 00:19:13.170 align:start position:0%
plus equals 9 so now we're adding the
value<00:19:09.940><c> to</c><00:19:10.930><c> the</c><00:19:11.290><c> variable</c><00:19:11.470><c> and</c><00:19:12.130><c> assigning</c><00:19:12.670><c> the</c>

00:19:13.170 --> 00:19:13.180 align:start position:0%
value to the variable and assigning the
 

00:19:13.180 --> 00:19:16.230 align:start position:0%
value to the variable and assigning the
answer<00:19:13.630><c> to</c><00:19:13.930><c> that</c><00:19:13.960><c> variable</c><00:19:14.800><c> so</c><00:19:15.370><c> again</c><00:19:15.670><c> here</c><00:19:16.060><c> we</c>

00:19:16.230 --> 00:19:16.240 align:start position:0%
answer to that variable so again here we
 

00:19:16.240 --> 00:19:20.490 align:start position:0%
answer to that variable so again here we
can<00:19:16.450><c> do</c><00:19:16.630><c> plus</c><00:19:17.260><c> equal</c><00:19:18.010><c> 7</c><00:19:18.850><c> so</c><00:19:19.690><c> that's</c><00:19:20.020><c> just</c><00:19:20.320><c> a</c>

00:19:20.490 --> 00:19:20.500 align:start position:0%
can do plus equal 7 so that's just a
 

00:19:20.500 --> 00:19:25.019 align:start position:0%
can do plus equal 7 so that's just a
shortcut

00:19:25.019 --> 00:19:25.029 align:start position:0%
 
 

00:19:25.029 --> 00:19:27.850 align:start position:0%
 
previously<00:19:26.029><c> we</c><00:19:26.210><c> learned</c><00:19:26.419><c> about</c><00:19:26.659><c> plus</c><00:19:27.260><c> equals</c>

00:19:27.850 --> 00:19:27.860 align:start position:0%
previously we learned about plus equals
 

00:19:27.860 --> 00:19:30.970 align:start position:0%
previously we learned about plus equals
well<00:19:28.549><c> minus</c><00:19:29.090><c> equals</c><00:19:29.570><c> does</c><00:19:30.169><c> the</c><00:19:30.380><c> same</c><00:19:30.650><c> thing</c>

00:19:30.970 --> 00:19:30.980 align:start position:0%
well minus equals does the same thing
 

00:19:30.980 --> 00:19:33.850 align:start position:0%
well minus equals does the same thing
but<00:19:31.010><c> subtracting</c><00:19:31.970><c> so</c><00:19:32.539><c> this</c><00:19:32.720><c> says</c><00:19:32.900><c> a</c><00:19:33.169><c> equals</c><00:19:33.679><c> a</c>

00:19:33.850 --> 00:19:33.860 align:start position:0%
but subtracting so this says a equals a
 

00:19:33.860 --> 00:19:38.500 align:start position:0%
but subtracting so this says a equals a
minus<00:19:34.460><c> 6</c><00:19:35.059><c> we</c><00:19:35.570><c> started</c><00:19:35.990><c> at</c><00:19:36.110><c> 11</c><00:19:36.760><c> minus</c><00:19:37.760><c> 6</c><00:19:38.150><c> is</c>

00:19:38.500 --> 00:19:38.510 align:start position:0%
minus 6 we started at 11 minus 6 is
 

00:19:38.510 --> 00:19:42.100 align:start position:0%
minus 6 we started at 11 minus 6 is
going<00:19:38.900><c> to</c><00:19:39.020><c> be</c><00:19:39.110><c> 5</c><00:19:39.500><c> so</c><00:19:40.370><c> the</c><00:19:40.820><c> new</c><00:19:41.059><c> a</c><00:19:41.090><c> is</c><00:19:41.539><c> gonna</c><00:19:41.720><c> be</c><00:19:41.840><c> 5</c>

00:19:42.100 --> 00:19:42.110 align:start position:0%
going to be 5 so the new a is gonna be 5
 

00:19:42.110 --> 00:19:44.409 align:start position:0%
going to be 5 so the new a is gonna be 5
but<00:19:42.799><c> we</c><00:19:42.890><c> can</c><00:19:43.070><c> shorten</c><00:19:43.549><c> that</c><00:19:43.610><c> instead</c><00:19:44.210><c> of</c><00:19:44.270><c> a</c>

00:19:44.409 --> 00:19:44.419 align:start position:0%
but we can shorten that instead of a
 

00:19:44.419 --> 00:19:49.779 align:start position:0%
but we can shorten that instead of a
equals<00:19:44.929><c> a</c><00:19:45.080><c> minus</c><00:19:45.440><c> 6</c><00:19:46.010><c> we</c><00:19:46.610><c> can</c><00:19:46.640><c> do</c><00:19:47.049><c> -</c><00:19:48.049><c> equals</c><00:19:48.789><c> this</c>

00:19:49.779 --> 00:19:49.789 align:start position:0%
equals a minus 6 we can do - equals this
 

00:19:49.789 --> 00:19:51.970 align:start position:0%
equals a minus 6 we can do - equals this
is<00:19:49.850><c> just</c><00:19:50.240><c> a</c><00:19:50.360><c> shortcut</c><00:19:50.750><c> that</c><00:19:51.110><c> JavaScript</c><00:19:51.770><c> has</c>

00:19:51.970 --> 00:19:51.980 align:start position:0%
is just a shortcut that JavaScript has
 

00:19:51.980 --> 00:19:53.710 align:start position:0%
is just a shortcut that JavaScript has
that<00:19:52.460><c> means</c><00:19:52.669><c> the</c><00:19:52.880><c> same</c><00:19:53.120><c> thing</c>

00:19:53.710 --> 00:19:53.720 align:start position:0%
that means the same thing
 

00:19:53.720 --> 00:19:58.000 align:start position:0%
that means the same thing
that<00:19:54.350><c> means</c><00:19:55.010><c> a</c><00:19:55.340><c> equals</c><00:19:56.059><c> a</c><00:19:56.299><c> minus</c><00:19:56.690><c> 6</c><00:19:57.200><c> but</c><00:19:57.890><c> it's</c>

00:19:58.000 --> 00:19:58.010 align:start position:0%
that means a equals a minus 6 but it's
 

00:19:58.010 --> 00:20:00.430 align:start position:0%
that means a equals a minus 6 but it's
just<00:19:58.190><c> shortened</c><00:19:58.789><c> same</c><00:19:59.630><c> here</c><00:19:59.929><c> so</c><00:20:00.080><c> we</c><00:20:00.169><c> can</c><00:20:00.320><c> do</c>

00:20:00.430 --> 00:20:00.440 align:start position:0%
just shortened same here so we can do
 

00:20:00.440 --> 00:20:05.500 align:start position:0%
just shortened same here so we can do
minus<00:20:00.919><c> equals</c><00:20:01.370><c> 15</c><00:20:02.020><c> C</c><00:20:03.020><c> equals</c><00:20:03.620><c> C</c><00:20:04.070><c> minus</c><00:20:04.100><c> 1</c><00:20:04.850><c> we</c>

00:20:05.500 --> 00:20:05.510 align:start position:0%
minus equals 15 C equals C minus 1 we
 

00:20:05.510 --> 00:20:09.700 align:start position:0%
minus equals 15 C equals C minus 1 we
can<00:20:05.720><c> do</c><00:20:05.870><c> C</c><00:20:06.370><c> minus</c><00:20:07.370><c> equals</c><00:20:08.029><c> 1</c><00:20:08.480><c> so</c><00:20:09.289><c> it</c><00:20:09.500><c> just</c>

00:20:09.700 --> 00:20:09.710 align:start position:0%
can do C minus equals 1 so it just
 

00:20:09.710 --> 00:20:12.669 align:start position:0%
can do C minus equals 1 so it just
subtracts<00:20:10.490><c> the</c><00:20:10.549><c> number</c><00:20:11.090><c> from</c><00:20:11.929><c> the</c><00:20:12.230><c> original</c>

00:20:12.669 --> 00:20:12.679 align:start position:0%
subtracts the number from the original
 

00:20:12.679 --> 00:20:16.180 align:start position:0%
subtracts the number from the original
value<00:20:12.860><c> and</c><00:20:13.159><c> then</c><00:20:13.549><c> assigns</c><00:20:14.000><c> that</c><00:20:14.360><c> new</c><00:20:14.690><c> value</c><00:20:15.470><c> to</c>

00:20:16.180 --> 00:20:16.190 align:start position:0%
value and then assigns that new value to
 

00:20:16.190 --> 00:20:20.610 align:start position:0%
value and then assigns that new value to
the<00:20:16.220><c> variable</c>

00:20:20.610 --> 00:20:20.620 align:start position:0%
 
 

00:20:20.620 --> 00:20:24.720 align:start position:0%
 
here<00:20:21.490><c> we</c><00:20:21.640><c> have</c><00:20:21.760><c> a</c><00:20:21.880><c> equals</c><00:20:22.420><c> a</c><00:20:22.570><c> times</c><00:20:23.260><c> five</c><00:20:23.740><c> well</c>

00:20:24.720 --> 00:20:24.730 align:start position:0%
here we have a equals a times five well
 

00:20:24.730 --> 00:20:26.549 align:start position:0%
here we have a equals a times five well
we<00:20:24.910><c> can</c><00:20:25.059><c> do</c><00:20:25.180><c> the</c><00:20:25.330><c> same</c><00:20:25.540><c> thing</c><00:20:25.809><c> as</c><00:20:25.900><c> before</c><00:20:26.050><c> we</c>

00:20:26.549 --> 00:20:26.559 align:start position:0%
we can do the same thing as before we
 

00:20:26.559 --> 00:20:32.370 align:start position:0%
we can do the same thing as before we
can<00:20:26.770><c> shorten</c><00:20:27.250><c> this</c><00:20:27.460><c> to</c><00:20:28.120><c> a</c><00:20:29.550><c> x</c><00:20:30.550><c> equals</c><00:20:31.360><c> five</c><00:20:31.870><c> so</c>

00:20:32.370 --> 00:20:32.380 align:start position:0%
can shorten this to a x equals five so
 

00:20:32.380 --> 00:20:35.400 align:start position:0%
can shorten this to a x equals five so
that<00:20:32.890><c> means</c><00:20:33.100><c> the</c><00:20:33.220><c> same</c><00:20:33.460><c> thing</c><00:20:33.760><c> here</c><00:20:34.600><c> we</c><00:20:35.020><c> can</c><00:20:35.260><c> do</c>

00:20:35.400 --> 00:20:35.410 align:start position:0%
that means the same thing here we can do
 

00:20:35.410 --> 00:20:41.130 align:start position:0%
that means the same thing here we can do
a<00:20:35.760><c> x</c><00:20:36.760><c> equals</c><00:20:38.160><c> three</c><00:20:39.160><c> and</c><00:20:39.460><c> then</c><00:20:40.180><c> C</c><00:20:40.600><c> equals</c><00:20:40.870><c> C</c>

00:20:41.130 --> 00:20:41.140 align:start position:0%
a x equals three and then C equals C
 

00:20:41.140 --> 00:20:45.630 align:start position:0%
a x equals three and then C equals C
times<00:20:41.440><c> ten</c><00:20:41.860><c> we</c><00:20:42.160><c> can</c><00:20:42.370><c> shorten</c><00:20:42.880><c> this</c><00:20:43.090><c> to</c><00:20:43.600><c> C</c><00:20:44.640><c> times</c>

00:20:45.630 --> 00:20:45.640 align:start position:0%
times ten we can shorten this to C times
 

00:20:45.640 --> 00:20:49.200 align:start position:0%
times ten we can shorten this to C times
equal<00:20:46.360><c> 10</c><00:20:46.930><c> and</c><00:20:47.200><c> that's</c><00:20:47.830><c> another</c><00:20:48.190><c> shortcut</c><00:20:48.880><c> for</c>

00:20:49.200 --> 00:20:49.210 align:start position:0%
equal 10 and that's another shortcut for
 

00:20:49.210 --> 00:20:53.410 align:start position:0%
equal 10 and that's another shortcut for
JavaScript

00:20:53.410 --> 00:20:53.420 align:start position:0%
 
 

00:20:53.420 --> 00:20:56.800 align:start position:0%
 
and<00:20:53.860><c> there's</c><00:20:54.860><c> also</c><00:20:55.040><c> divide</c><00:20:55.580><c> equal</c><00:20:56.090><c> so</c><00:20:56.570><c> a</c>

00:20:56.800 --> 00:20:56.810 align:start position:0%
and there's also divide equal so a
 

00:20:56.810 --> 00:21:00.810 align:start position:0%
and there's also divide equal so a
equals<00:20:57.560><c> a</c><00:20:57.770><c> divided</c><00:20:58.250><c> by</c><00:20:58.430><c> 12</c><00:20:58.820><c> we</c><00:20:59.630><c> can</c><00:20:59.660><c> do</c><00:21:00.050><c> a</c>

00:21:00.810 --> 00:21:00.820 align:start position:0%
equals a divided by 12 we can do a
 

00:21:00.820 --> 00:21:05.320 align:start position:0%
equals a divided by 12 we can do a
divided<00:21:01.820><c> by</c><00:21:01.850><c> equal</c><00:21:02.540><c> 12</c><00:21:03.080><c> and</c><00:21:03.970><c> here</c><00:21:04.970><c> we</c><00:21:05.150><c> can</c><00:21:05.300><c> just</c>

00:21:05.320 --> 00:21:05.330 align:start position:0%
divided by equal 12 and here we can just
 

00:21:05.330 --> 00:21:09.340 align:start position:0%
divided by equal 12 and here we can just
do<00:21:05.650><c> divided</c><00:21:06.650><c> by</c><00:21:06.770><c> equal</c><00:21:07.310><c> 4</c><00:21:07.760><c> or</c><00:21:08.570><c> divided</c><00:21:09.320><c> by</c>

00:21:09.340 --> 00:21:09.350 align:start position:0%
do divided by equal 4 or divided by
 

00:21:09.350 --> 00:21:13.720 align:start position:0%
do divided by equal 4 or divided by
equal<00:21:09.980><c> 11</c><00:21:10.750><c> so</c><00:21:11.750><c> another</c><00:21:12.500><c> way</c><00:21:12.740><c> of</c><00:21:12.770><c> just</c><00:21:13.100><c> dividing</c>

00:21:13.720 --> 00:21:13.730 align:start position:0%
equal 11 so another way of just dividing
 

00:21:13.730 --> 00:21:15.580 align:start position:0%
equal 11 so another way of just dividing
the<00:21:13.970><c> variable</c><00:21:14.480><c> by</c><00:21:14.780><c> a</c><00:21:14.810><c> new</c><00:21:15.050><c> number</c><00:21:15.290><c> and</c>

00:21:15.580 --> 00:21:15.590 align:start position:0%
the variable by a new number and
 

00:21:15.590 --> 00:21:21.860 align:start position:0%
the variable by a new number and
assigning<00:21:15.980><c> that</c><00:21:16.430><c> answer</c><00:21:16.910><c> to</c><00:21:17.240><c> the</c><00:21:17.420><c> variable</c>

00:21:21.860 --> 00:21:21.870 align:start position:0%
 
 

00:21:21.870 --> 00:21:24.200 align:start position:0%
 
we've<00:21:22.650><c> already</c><00:21:22.890><c> mentioned</c><00:21:23.430><c> strings</c><00:21:24.030><c> a</c><00:21:24.180><c> little</c>

00:21:24.200 --> 00:21:24.210 align:start position:0%
we've already mentioned strings a little
 

00:21:24.210 --> 00:21:27.110 align:start position:0%
we've already mentioned strings a little
bit<00:21:24.630><c> but</c><00:21:25.170><c> anytime</c><00:21:25.380><c> you</c><00:21:25.860><c> have</c><00:21:26.130><c> some</c><00:21:26.550><c> character</c>

00:21:27.110 --> 00:21:27.120 align:start position:0%
bit but anytime you have some character
 

00:21:27.120 --> 00:21:29.690 align:start position:0%
bit but anytime you have some character
surrounded<00:21:27.690><c> by</c><00:21:27.810><c> quotation</c><00:21:28.350><c> marks</c><00:21:28.920><c> they</c><00:21:29.490><c> can</c>

00:21:29.690 --> 00:21:29.700 align:start position:0%
surrounded by quotation marks they can
 

00:21:29.700 --> 00:21:32.150 align:start position:0%
surrounded by quotation marks they can
either<00:21:29.820><c> be</c><00:21:29.910><c> single</c><00:21:30.570><c> quotation</c><00:21:31.140><c> marks</c><00:21:31.530><c> double</c>

00:21:32.150 --> 00:21:32.160 align:start position:0%
either be single quotation marks double
 

00:21:32.160 --> 00:21:35.120 align:start position:0%
either be single quotation marks double
quotation<00:21:32.670><c> marks</c><00:21:32.940><c> or</c><00:21:33.320><c> backticks</c><00:21:34.320><c> it's</c><00:21:34.920><c> a</c>

00:21:35.120 --> 00:21:35.130 align:start position:0%
quotation marks or backticks it's a
 

00:21:35.130 --> 00:21:37.430 align:start position:0%
quotation marks or backticks it's a
string<00:21:35.550><c> these</c><00:21:36.120><c> are</c><00:21:36.180><c> called</c><00:21:36.480><c> string</c><00:21:36.900><c> literals</c>

00:21:37.430 --> 00:21:37.440 align:start position:0%
string these are called string literals
 

00:21:37.440 --> 00:21:40.820 align:start position:0%
string these are called string literals
and<00:21:38.090><c> you</c><00:21:39.090><c> can</c><00:21:39.360><c> create</c><00:21:39.780><c> them</c><00:21:39.930><c> just</c><00:21:40.620><c> like</c><00:21:40.770><c> you</c>

00:21:40.820 --> 00:21:40.830 align:start position:0%
and you can create them just like you
 

00:21:40.830 --> 00:21:42.800 align:start position:0%
and you can create them just like you
see<00:21:41.130><c> above</c><00:21:41.430><c> I'm</c><00:21:41.730><c> going</c><00:21:41.760><c> to</c><00:21:41.880><c> do</c><00:21:42.030><c> a</c><00:21:42.060><c> few</c><00:21:42.390><c> more</c><00:21:42.540><c> so</c>

00:21:42.800 --> 00:21:42.810 align:start position:0%
see above I'm going to do a few more so
 

00:21:42.810 --> 00:21:51.550 align:start position:0%
see above I'm going to do a few more so
far<00:21:43.170><c> my</c><00:21:43.620><c> first</c><00:21:44.840><c> aim</c><00:21:46.250><c> equals</c><00:21:47.330><c> bow</c><00:21:48.330><c> and</c><00:21:49.790><c> VAR</c><00:21:50.790><c> my</c>

00:21:51.550 --> 00:21:51.560 align:start position:0%
far my first aim equals bow and VAR my
 

00:21:51.560 --> 00:21:58.100 align:start position:0%
far my first aim equals bow and VAR my
last<00:21:52.560><c> name</c><00:21:54.020><c> equals</c><00:21:55.040><c> Karns</c><00:21:56.630><c> so</c><00:21:57.630><c> that's</c><00:21:57.870><c> how</c><00:21:58.050><c> you</c>

00:21:58.100 --> 00:21:58.110 align:start position:0%
last name equals Karns so that's how you
 

00:21:58.110 --> 00:22:04.390 align:start position:0%
last name equals Karns so that's how you
create<00:21:58.410><c> a</c><00:21:58.860><c> string</c><00:21:59.340><c> in</c><00:21:59.550><c> JavaScript</c>

00:22:04.390 --> 00:22:04.400 align:start position:0%
 
 

00:22:04.400 --> 00:22:07.160 align:start position:0%
 
sometimes<00:22:05.400><c> your</c><00:22:05.610><c> strain</c><00:22:06.090><c> contains</c><00:22:06.690><c> the</c><00:22:06.990><c> quote</c>

00:22:07.160 --> 00:22:07.170 align:start position:0%
sometimes your strain contains the quote
 

00:22:07.170 --> 00:22:10.940 align:start position:0%
sometimes your strain contains the quote
symbol<00:22:07.770><c> now</c><00:22:08.430><c> normally</c><00:22:08.820><c> the</c><00:22:08.910><c> quotes</c><00:22:09.950><c> identify</c>

00:22:10.940 --> 00:22:10.950 align:start position:0%
symbol now normally the quotes identify
 

00:22:10.950 --> 00:22:12.380 align:start position:0%
symbol now normally the quotes identify
the<00:22:11.010><c> beginning</c><00:22:11.520><c> and</c><00:22:11.730><c> the</c><00:22:11.790><c> ending</c><00:22:12.150><c> of</c><00:22:12.270><c> the</c>

00:22:12.380 --> 00:22:12.390 align:start position:0%
the beginning and the ending of the
 

00:22:12.390 --> 00:22:13.910 align:start position:0%
the beginning and the ending of the
string<00:22:12.750><c> but</c><00:22:13.320><c> what</c><00:22:13.470><c> if</c><00:22:13.590><c> you</c><00:22:13.680><c> have</c><00:22:13.770><c> something</c>

00:22:13.910 --> 00:22:13.920 align:start position:0%
string but what if you have something
 

00:22:13.920 --> 00:22:21.370 align:start position:0%
string but what if you have something
like<00:22:14.040><c> this</c><00:22:14.370><c> I</c><00:22:14.610><c> am</c><00:22:15.270><c> a</c><00:22:16.220><c> double</c><00:22:17.570><c> quoted</c><00:22:19.670><c> spring</c>

00:22:21.370 --> 00:22:21.380 align:start position:0%
like this I am a double quoted spring
 

00:22:21.380 --> 00:22:29.060 align:start position:0%
like this I am a double quoted spring
inside<00:22:23.900><c> double</c><00:22:25.280><c> quotes</c><00:22:27.230><c> so</c><00:22:28.230><c> I'm</c><00:22:28.770><c> actually</c>

00:22:29.060 --> 00:22:29.070 align:start position:0%
inside double quotes so I'm actually
 

00:22:29.070 --> 00:22:33.890 align:start position:0%
inside double quotes so I'm actually
trying<00:22:29.550><c> to</c><00:22:30.110><c> use</c><00:22:31.110><c> these</c><00:22:31.440><c> quotes</c><00:22:32.070><c> right</c><00:22:32.970><c> inside</c>

00:22:33.890 --> 00:22:33.900 align:start position:0%
trying to use these quotes right inside
 

00:22:33.900 --> 00:22:37.460 align:start position:0%
trying to use these quotes right inside
the<00:22:34.230><c> string</c><00:22:34.680><c> but</c><00:22:35.750><c> the</c><00:22:36.750><c> JavaScript</c><00:22:37.320><c> doesn't</c>

00:22:37.460 --> 00:22:37.470 align:start position:0%
the string but the JavaScript doesn't
 

00:22:37.470 --> 00:22:38.660 align:start position:0%
the string but the JavaScript doesn't
know<00:22:37.650><c> what</c><00:22:37.800><c> to</c><00:22:37.830><c> do</c><00:22:38.040><c> about</c><00:22:38.190><c> it</c>

00:22:38.660 --> 00:22:38.670 align:start position:0%
know what to do about it
 

00:22:38.670 --> 00:22:40.400 align:start position:0%
know what to do about it
it<00:22:38.880><c> thinks</c><00:22:39.270><c> that</c><00:22:39.300><c> this</c><00:22:39.570><c> is</c><00:22:39.630><c> that</c><00:22:40.110><c> it</c><00:22:40.230><c> thinks</c>

00:22:40.400 --> 00:22:40.410 align:start position:0%
it thinks that this is that it thinks
 

00:22:40.410 --> 00:22:42.560 align:start position:0%
it thinks that this is that it thinks
that<00:22:40.590><c> this</c><00:22:40.860><c> is</c><00:22:40.920><c> the</c><00:22:41.040><c> whole</c><00:22:41.340><c> string</c><00:22:41.850><c> when</c><00:22:42.450><c> it</c>

00:22:42.560 --> 00:22:42.570 align:start position:0%
that this is the whole string when it
 

00:22:42.570 --> 00:22:45.200 align:start position:0%
that this is the whole string when it
sees<00:22:42.870><c> the</c><00:22:43.170><c> first</c><00:22:43.440><c> quote</c><00:22:43.920><c> inside</c><00:22:44.460><c> the</c><00:22:44.820><c> string</c>

00:22:45.200 --> 00:22:45.210 align:start position:0%
sees the first quote inside the string
 

00:22:45.210 --> 00:22:48.320 align:start position:0%
sees the first quote inside the string
it<00:22:45.600><c> thinks</c><00:22:46.110><c> R</c><00:22:46.140><c> at</c><00:22:46.290><c> the</c><00:22:46.470><c> end</c><00:22:46.710><c> of</c><00:22:46.950><c> the</c><00:22:47.070><c> string</c><00:22:47.430><c> so</c>

00:22:48.320 --> 00:22:48.330 align:start position:0%
it thinks R at the end of the string so
 

00:22:48.330 --> 00:22:50.510 align:start position:0%
it thinks R at the end of the string so
there's<00:22:48.540><c> something</c><00:22:48.810><c> called</c><00:22:49.320><c> an</c><00:22:49.710><c> escape</c>

00:22:50.510 --> 00:22:50.520 align:start position:0%
there's something called an escape
 

00:22:50.520 --> 00:22:53.630 align:start position:0%
there's something called an escape
character<00:22:51.020><c> so</c><00:22:52.020><c> if</c><00:22:52.260><c> you</c><00:22:52.470><c> want</c><00:22:52.710><c> to</c><00:22:52.770><c> escape</c><00:22:53.370><c> a</c>

00:22:53.630 --> 00:22:53.640 align:start position:0%
character so if you want to escape a
 

00:22:53.640 --> 00:22:57.020 align:start position:0%
character so if you want to escape a
quote<00:22:54.330><c> that</c><00:22:54.720><c> means</c><00:22:55.470><c> it</c><00:22:55.860><c> will</c><00:22:56.310><c> no</c><00:22:56.550><c> longer</c><00:22:56.580><c> be</c>

00:22:57.020 --> 00:22:57.030 align:start position:0%
quote that means it will no longer be
 

00:22:57.030 --> 00:22:59.450 align:start position:0%
quote that means it will no longer be
considered<00:22:57.390><c> the</c><00:22:57.960><c> end</c><00:22:58.140><c> of</c><00:22:58.380><c> the</c><00:22:58.500><c> string</c><00:22:58.920><c> I'm</c>

00:22:59.450 --> 00:22:59.460 align:start position:0%
considered the end of the string I'm
 

00:22:59.460 --> 00:23:02.680 align:start position:0%
considered the end of the string I'm
going<00:22:59.730><c> to</c><00:22:59.790><c> put</c><00:23:00.000><c> a</c><00:23:00.150><c> backslash</c><00:23:00.950><c> so</c><00:23:01.950><c> if</c><00:23:02.130><c> I</c><00:23:02.250><c> put</c><00:23:02.460><c> a</c>

00:23:02.680 --> 00:23:02.690 align:start position:0%
going to put a backslash so if I put a
 

00:23:02.690 --> 00:23:06.260 align:start position:0%
going to put a backslash so if I put a
backslash<00:23:03.690><c> before</c><00:23:04.380><c> each</c><00:23:04.860><c> of</c><00:23:05.130><c> these</c><00:23:05.280><c> quotation</c>

00:23:06.260 --> 00:23:06.270 align:start position:0%
backslash before each of these quotation
 

00:23:06.270 --> 00:23:09.830 align:start position:0%
backslash before each of these quotation
marks<00:23:07.280><c> JavaScript</c><00:23:08.280><c> no</c><00:23:08.580><c> longer</c><00:23:09.030><c> interprets</c><00:23:09.660><c> it</c>

00:23:09.830 --> 00:23:09.840 align:start position:0%
marks JavaScript no longer interprets it
 

00:23:09.840 --> 00:23:12.560 align:start position:0%
marks JavaScript no longer interprets it
as<00:23:10.020><c> being</c><00:23:10.680><c> the</c><00:23:11.010><c> last</c><00:23:11.390><c> character</c><00:23:12.390><c> in</c><00:23:12.540><c> the</c>

00:23:12.560 --> 00:23:12.570 align:start position:0%
as being the last character in the
 

00:23:12.570 --> 00:23:16.910 align:start position:0%
as being the last character in the
string<00:23:13.070><c> so</c><00:23:14.070><c> now</c><00:23:14.430><c> you</c><00:23:15.060><c> can</c><00:23:15.240><c> see</c><00:23:15.510><c> this</c><00:23:16.170><c> is</c><00:23:16.380><c> a</c><00:23:16.410><c> full</c>

00:23:16.910 --> 00:23:16.920 align:start position:0%
string so now you can see this is a full
 

00:23:16.920 --> 00:23:19.940 align:start position:0%
string so now you can see this is a full
string<00:23:17.640><c> and</c><00:23:18.000><c> then</c><00:23:18.720><c> if</c><00:23:18.870><c> I</c><00:23:19.050><c> log</c><00:23:19.470><c> this</c><00:23:19.740><c> out</c>

00:23:19.940 --> 00:23:19.950 align:start position:0%
string and then if I log this out
 

00:23:19.950 --> 00:23:24.080 align:start position:0%
string and then if I log this out
console<00:23:20.700><c> dot</c><00:23:20.910><c> log</c><00:23:20.990><c> and</c><00:23:21.990><c> I</c><00:23:22.410><c> put</c><00:23:22.740><c> my</c><00:23:23.160><c> string</c>

00:23:24.080 --> 00:23:24.090 align:start position:0%
console dot log and I put my string
 

00:23:24.090 --> 00:23:26.180 align:start position:0%
console dot log and I put my string
you'll<00:23:25.020><c> see</c><00:23:25.200><c> that</c><00:23:25.320><c> it's</c><00:23:25.470><c> not</c><00:23:25.620><c> going</c><00:23:25.800><c> to</c><00:23:25.890><c> show</c>

00:23:26.180 --> 00:23:26.190 align:start position:0%
you'll see that it's not going to show
 

00:23:26.190 --> 00:23:29.600 align:start position:0%
you'll see that it's not going to show
the<00:23:26.460><c> quotation</c><00:23:27.180><c> marks</c><00:23:27.350><c> so</c><00:23:28.350><c> I</c><00:23:28.770><c> mean</c><00:23:29.370><c> it's</c><00:23:29.550><c> not</c>

00:23:29.600 --> 00:23:29.610 align:start position:0%
the quotation marks so I mean it's not
 

00:23:29.610 --> 00:23:31.880 align:start position:0%
the quotation marks so I mean it's not
going<00:23:29.880><c> to</c><00:23:29.970><c> show</c><00:23:30.270><c> the</c><00:23:30.600><c> slash</c><00:23:30.930><c> the</c><00:23:31.290><c> back</c><00:23:31.500><c> slashes</c>

00:23:31.880 --> 00:23:31.890 align:start position:0%
going to show the slash the back slashes
 

00:23:31.890 --> 00:23:34.400 align:start position:0%
going to show the slash the back slashes
it<00:23:32.310><c> shows</c><00:23:32.790><c> the</c><00:23:33.030><c> quotation</c><00:23:33.660><c> marks</c><00:23:33.690><c> without</c><00:23:34.050><c> the</c>

00:23:34.400 --> 00:23:34.410 align:start position:0%
it shows the quotation marks without the
 

00:23:34.410 --> 00:23:36.890 align:start position:0%
it shows the quotation marks without the
back<00:23:34.620><c> slashes</c><00:23:34.980><c> because</c><00:23:35.730><c> when</c><00:23:36.390><c> we</c><00:23:36.570><c> put</c>

00:23:36.890 --> 00:23:36.900 align:start position:0%
back slashes because when we put
 

00:23:36.900 --> 00:23:39.320 align:start position:0%
back slashes because when we put
backslash<00:23:37.590><c> quotation</c><00:23:38.280><c> mark</c><00:23:38.490><c> javascript</c>

00:23:39.320 --> 00:23:39.330 align:start position:0%
backslash quotation mark javascript
 

00:23:39.330 --> 00:23:41.450 align:start position:0%
backslash quotation mark javascript
knows<00:23:39.600><c> that</c><00:23:39.870><c> this</c><00:23:40.260><c> should</c><00:23:40.650><c> just</c><00:23:40.680><c> mean</c><00:23:41.220><c> a</c>

00:23:41.450 --> 00:23:41.460 align:start position:0%
knows that this should just mean a
 

00:23:41.460 --> 00:23:46.550 align:start position:0%
knows that this should just mean a
quotation<00:23:42.090><c> mark</c>

00:23:46.550 --> 00:23:46.560 align:start position:0%
 
 

00:23:46.560 --> 00:23:49.100 align:start position:0%
 
we<00:23:47.190><c> talked</c><00:23:47.550><c> about</c><00:23:47.730><c> escaping</c><00:23:48.720><c> a</c><00:23:48.810><c> quote</c>

00:23:49.100 --> 00:23:49.110 align:start position:0%
we talked about escaping a quote
 

00:23:49.110 --> 00:23:50.900 align:start position:0%
we talked about escaping a quote
character<00:23:49.620><c> like</c><00:23:49.770><c> this</c><00:23:50.040><c> where</c><00:23:50.580><c> you</c><00:23:50.700><c> put</c><00:23:50.880><c> a</c>

00:23:50.900 --> 00:23:50.910 align:start position:0%
character like this where you put a
 

00:23:50.910 --> 00:23:53.510 align:start position:0%
character like this where you put a
backslash<00:23:51.270><c> before</c><00:23:51.990><c> the</c><00:23:52.080><c> quote</c><00:23:52.350><c> character</c><00:23:52.920><c> so</c>

00:23:53.510 --> 00:23:53.520 align:start position:0%
backslash before the quote character so
 

00:23:53.520 --> 00:23:55.670 align:start position:0%
backslash before the quote character so
javascript<00:23:54.300><c> knows</c><00:23:54.600><c> that</c><00:23:54.930><c> this</c><00:23:55.230><c> is</c><00:23:55.440><c> supposed</c>

00:23:55.670 --> 00:23:55.680 align:start position:0%
javascript knows that this is supposed
 

00:23:55.680 --> 00:23:58.280 align:start position:0%
javascript knows that this is supposed
to<00:23:55.950><c> be</c><00:23:56.130><c> a</c><00:23:56.160><c> literal</c><00:23:56.730><c> quote</c><00:23:57.030><c> character</c><00:23:57.600><c> inside</c>

00:23:58.280 --> 00:23:58.290 align:start position:0%
to be a literal quote character inside
 

00:23:58.290 --> 00:24:00.740 align:start position:0%
to be a literal quote character inside
the<00:23:58.590><c> string</c><00:23:59.030><c> however</c><00:24:00.030><c> you're</c><00:24:00.360><c> not</c><00:24:00.390><c> going</c><00:24:00.690><c> to</c>

00:24:00.740 --> 00:24:00.750 align:start position:0%
the string however you're not going to
 

00:24:00.750 --> 00:24:02.750 align:start position:0%
the string however you're not going to
have<00:24:00.870><c> to</c><00:24:00.990><c> escape</c><00:24:01.230><c> quote</c><00:24:02.070><c> characters</c><00:24:02.520><c> very</c>

00:24:02.750 --> 00:24:02.760 align:start position:0%
have to escape quote characters very
 

00:24:02.760 --> 00:24:04.760 align:start position:0%
have to escape quote characters very
often<00:24:03.150><c> because</c><00:24:03.450><c> there</c><00:24:03.660><c> are</c><00:24:03.780><c> other</c><00:24:03.990><c> methods</c><00:24:04.410><c> of</c>

00:24:04.760 --> 00:24:04.770 align:start position:0%
often because there are other methods of
 

00:24:04.770 --> 00:24:07.100 align:start position:0%
often because there are other methods of
accomplishing<00:24:05.670><c> the</c><00:24:05.850><c> same</c><00:24:05.970><c> thing</c><00:24:06.450><c> of</c><00:24:06.660><c> having</c><00:24:07.020><c> a</c>

00:24:07.100 --> 00:24:07.110 align:start position:0%
accomplishing the same thing of having a
 

00:24:07.110 --> 00:24:10.460 align:start position:0%
accomplishing the same thing of having a
quote<00:24:07.500><c> character</c><00:24:08.340><c> within</c><00:24:08.520><c> a</c><00:24:09.000><c> string</c><00:24:09.540><c> so</c><00:24:10.440><c> a</c>

00:24:10.460 --> 00:24:10.470 align:start position:0%
quote character within a string so a
 

00:24:10.470 --> 00:24:13.820 align:start position:0%
quote character within a string so a
common<00:24:11.280><c> way</c><00:24:11.430><c> is</c><00:24:11.700><c> to</c><00:24:11.730><c> use</c><00:24:12.170><c> instead</c><00:24:13.170><c> of</c><00:24:13.350><c> having</c>

00:24:13.820 --> 00:24:13.830 align:start position:0%
common way is to use instead of having
 

00:24:13.830 --> 00:24:15.460 align:start position:0%
common way is to use instead of having
your<00:24:14.070><c> strings</c><00:24:14.400><c> start</c><00:24:14.730><c> with</c><00:24:14.910><c> double</c><00:24:15.330><c> quotes</c>

00:24:15.460 --> 00:24:15.470 align:start position:0%
your strings start with double quotes
 

00:24:15.470 --> 00:24:19.250 align:start position:0%
your strings start with double quotes
have<00:24:16.470><c> it</c><00:24:16.650><c> start</c><00:24:16.980><c> with</c><00:24:17.160><c> a</c><00:24:17.190><c> single</c><00:24:17.760><c> quote</c><00:24:17.970><c> so</c><00:24:18.930><c> a</c>

00:24:19.250 --> 00:24:19.260 align:start position:0%
have it start with a single quote so a
 

00:24:19.260 --> 00:24:21.980 align:start position:0%
have it start with a single quote so a
string<00:24:19.920><c> can</c><00:24:20.670><c> either</c><00:24:21.000><c> be</c><00:24:21.360><c> surrounded</c><00:24:21.960><c> by</c>

00:24:21.980 --> 00:24:21.990 align:start position:0%
string can either be surrounded by
 

00:24:21.990 --> 00:24:26.330 align:start position:0%
string can either be surrounded by
single<00:24:22.800><c> quotes</c><00:24:23.100><c> or</c><00:24:23.370><c> double</c><00:24:23.460><c> quotes</c><00:24:24.590><c> so</c><00:24:25.590><c> this</c>

00:24:26.330 --> 00:24:26.340 align:start position:0%
single quotes or double quotes so this
 

00:24:26.340 --> 00:24:28.280 align:start position:0%
single quotes or double quotes so this
time<00:24:26.580><c> we're</c><00:24:26.700><c> just</c><00:24:26.730><c> going</c><00:24:27.060><c> to</c><00:24:27.210><c> have</c><00:24:27.600><c> single</c>

00:24:28.280 --> 00:24:28.290 align:start position:0%
time we're just going to have single
 

00:24:28.290 --> 00:24:32.810 align:start position:0%
time we're just going to have single
quotes<00:24:28.590><c> and</c><00:24:30.050><c> now</c><00:24:31.050><c> I</c><00:24:31.080><c> can</c><00:24:31.710><c> remove</c><00:24:32.070><c> all</c><00:24:32.370><c> these</c>

00:24:32.810 --> 00:24:32.820 align:start position:0%
quotes and now I can remove all these
 

00:24:32.820 --> 00:24:36.890 align:start position:0%
quotes and now I can remove all these
escape<00:24:33.570><c> characters</c><00:24:34.290><c> from</c><00:24:35.250><c> inside</c><00:24:35.910><c> the</c><00:24:36.540><c> string</c>

00:24:36.890 --> 00:24:36.900 align:start position:0%
escape characters from inside the string
 

00:24:36.900 --> 00:24:44.150 align:start position:0%
escape characters from inside the string
here<00:24:41.390><c> okay</c><00:24:42.390><c> so</c><00:24:42.450><c> now</c><00:24:42.900><c> you</c><00:24:43.410><c> can</c><00:24:43.620><c> see</c><00:24:43.890><c> that</c>

00:24:44.150 --> 00:24:44.160 align:start position:0%
here okay so now you can see that
 

00:24:44.160 --> 00:24:46.580 align:start position:0%
here okay so now you can see that
JavaScript<00:24:44.760><c> still</c><00:24:45.120><c> knows</c><00:24:45.480><c> it</c><00:24:45.810><c> knows</c><00:24:46.380><c> that</c>

00:24:46.580 --> 00:24:46.590 align:start position:0%
JavaScript still knows it knows that
 

00:24:46.590 --> 00:24:49.010 align:start position:0%
JavaScript still knows it knows that
this<00:24:46.800><c> is</c><00:24:46.950><c> a</c><00:24:47.070><c> string</c><00:24:47.520><c> even</c><00:24:48.150><c> though</c><00:24:48.570><c> it</c><00:24:48.780><c> has</c>

00:24:49.010 --> 00:24:49.020 align:start position:0%
this is a string even though it has
 

00:24:49.020 --> 00:24:52.820 align:start position:0%
this is a string even though it has
these<00:24:49.380><c> double</c><00:24:49.890><c> quotes</c><00:24:50.220><c> inside</c><00:24:50.790><c> an</c><00:24:51.830><c> additional</c>

00:24:52.820 --> 00:24:52.830 align:start position:0%
these double quotes inside an additional
 

00:24:52.830 --> 00:24:56.090 align:start position:0%
these double quotes inside an additional
thing<00:24:53.100><c> you</c><00:24:53.250><c> could</c><00:24:53.460><c> do</c><00:24:53.640><c> is</c><00:24:53.940><c> use</c><00:24:54.570><c> backticks</c><00:24:55.440><c> so</c>

00:24:56.090 --> 00:24:56.100 align:start position:0%
thing you could do is use backticks so
 

00:24:56.100 --> 00:25:00.170 align:start position:0%
thing you could do is use backticks so
if<00:24:56.670><c> I</c><00:24:57.000><c> put</c><00:24:57.270><c> a</c><00:24:57.300><c> back</c><00:24:57.660><c> ticks</c><00:24:58.080><c> before</c><00:24:59.070><c> at</c><00:25:00.030><c> the</c>

00:25:00.170 --> 00:25:00.180 align:start position:0%
if I put a back ticks before at the
 

00:25:00.180 --> 00:25:01.730 align:start position:0%
if I put a back ticks before at the
beginning<00:25:00.540><c> of</c><00:25:00.720><c> the</c><00:25:00.810><c> end</c><00:25:00.900><c> of</c><00:25:00.990><c> the</c><00:25:01.110><c> string</c>

00:25:01.730 --> 00:25:01.740 align:start position:0%
beginning of the end of the string
 

00:25:01.740 --> 00:25:05.390 align:start position:0%
beginning of the end of the string
now<00:25:02.580><c> I</c><00:25:02.970><c> actually</c><00:25:03.480><c> can</c><00:25:03.930><c> use</c><00:25:04.140><c> single</c><00:25:04.740><c> quotes</c><00:25:04.800><c> and</c>

00:25:05.390 --> 00:25:05.400 align:start position:0%
now I actually can use single quotes and
 

00:25:05.400 --> 00:25:08.990 align:start position:0%
now I actually can use single quotes and
double<00:25:06.210><c> quotes</c><00:25:06.390><c> both</c><00:25:07.080><c> within</c><00:25:07.440><c> the</c><00:25:07.740><c> string</c><00:25:08.100><c> but</c>

00:25:08.990 --> 00:25:09.000 align:start position:0%
double quotes both within the string but
 

00:25:09.000 --> 00:25:10.820 align:start position:0%
double quotes both within the string but
right<00:25:09.270><c> now</c><00:25:09.540><c> I'm</c><00:25:09.900><c> just</c><00:25:10.050><c> gonna</c><00:25:10.170><c> focus</c><00:25:10.530><c> on</c>

00:25:10.820 --> 00:25:10.830 align:start position:0%
right now I'm just gonna focus on
 

00:25:10.830 --> 00:25:13.340 align:start position:0%
right now I'm just gonna focus on
showing<00:25:11.220><c> you</c><00:25:11.580><c> the</c><00:25:12.270><c> double</c><00:25:12.750><c> quotes</c><00:25:13.080><c> or</c><00:25:13.260><c> the</c>

00:25:13.340 --> 00:25:13.350 align:start position:0%
showing you the double quotes or the
 

00:25:13.350 --> 00:25:16.370 align:start position:0%
showing you the double quotes or the
single<00:25:13.620><c> quotes</c><00:25:14.630><c> with</c><00:25:15.630><c> the</c><00:25:15.840><c> double</c><00:25:16.110><c> quotes</c>

00:25:16.370 --> 00:25:16.380 align:start position:0%
single quotes with the double quotes
 

00:25:16.380 --> 00:25:20.790 align:start position:0%
single quotes with the double quotes
inside

00:25:20.790 --> 00:25:20.800 align:start position:0%
 
 

00:25:20.800 --> 00:25:23.880 align:start position:0%
 
we<00:25:21.790><c> talked</c><00:25:22.090><c> about</c><00:25:22.270><c> escaping</c><00:25:22.900><c> a</c><00:25:23.170><c> double</c><00:25:23.559><c> quote</c>

00:25:23.880 --> 00:25:23.890 align:start position:0%
we talked about escaping a double quote
 

00:25:23.890 --> 00:25:26.340 align:start position:0%
we talked about escaping a double quote
character<00:25:24.460><c> by</c><00:25:24.670><c> using</c><00:25:24.970><c> the</c><00:25:25.179><c> backslash</c><00:25:25.750><c> before</c>

00:25:26.340 --> 00:25:26.350 align:start position:0%
character by using the backslash before
 

00:25:26.350 --> 00:25:28.590 align:start position:0%
character by using the backslash before
the<00:25:26.500><c> double</c><00:25:26.800><c> quote</c><00:25:27.130><c> there's</c><00:25:28.030><c> actually</c><00:25:28.450><c> quite</c>

00:25:28.590 --> 00:25:28.600 align:start position:0%
the double quote there's actually quite
 

00:25:28.600 --> 00:25:30.390 align:start position:0%
the double quote there's actually quite
a<00:25:28.720><c> few</c><00:25:28.900><c> other</c><00:25:29.020><c> things</c><00:25:29.080><c> you</c><00:25:29.380><c> can</c><00:25:29.679><c> escape</c><00:25:30.160><c> out</c>

00:25:30.390 --> 00:25:30.400 align:start position:0%
a few other things you can escape out
 

00:25:30.400 --> 00:25:32.640 align:start position:0%
a few other things you can escape out
you<00:25:30.970><c> can</c><00:25:31.150><c> escape</c><00:25:31.360><c> out</c><00:25:31.690><c> a</c><00:25:31.720><c> single</c><00:25:32.440><c> quote</c>

00:25:32.640 --> 00:25:32.650 align:start position:0%
you can escape out a single quote
 

00:25:32.650 --> 00:25:35.640 align:start position:0%
you can escape out a single quote
character<00:25:33.250><c> you</c><00:25:33.940><c> can</c><00:25:34.120><c> escape</c><00:25:34.540><c> out</c><00:25:34.780><c> a</c><00:25:34.929><c> backslash</c>

00:25:35.640 --> 00:25:35.650 align:start position:0%
character you can escape out a backslash
 

00:25:35.650 --> 00:25:37.710 align:start position:0%
character you can escape out a backslash
in<00:25:36.070><c> fact</c><00:25:36.700><c> anytime</c><00:25:37.150><c> you're</c><00:25:37.300><c> gonna</c><00:25:37.420><c> use</c><00:25:37.690><c> a</c>

00:25:37.710 --> 00:25:37.720 align:start position:0%
in fact anytime you're gonna use a
 

00:25:37.720 --> 00:25:39.750 align:start position:0%
in fact anytime you're gonna use a
backslash<00:25:38.080><c> you're</c><00:25:38.740><c> gonna</c><00:25:38.830><c> have</c><00:25:39.040><c> to</c><00:25:39.160><c> put</c><00:25:39.340><c> two</c>

00:25:39.750 --> 00:25:39.760 align:start position:0%
backslash you're gonna have to put two
 

00:25:39.760 --> 00:25:43.590 align:start position:0%
backslash you're gonna have to put two
backslashes<00:25:40.440><c> so</c><00:25:41.440><c> the</c><00:25:42.010><c> JavaScript</c><00:25:42.400><c> knows</c><00:25:43.270><c> that</c>

00:25:43.590 --> 00:25:43.600 align:start position:0%
backslashes so the JavaScript knows that
 

00:25:43.600 --> 00:25:46.140 align:start position:0%
backslashes so the JavaScript knows that
you're<00:25:43.809><c> not</c><00:25:44.080><c> trying</c><00:25:44.500><c> to</c><00:25:44.590><c> escape</c><00:25:44.860><c> a</c><00:25:45.460><c> character</c>

00:25:46.140 --> 00:25:46.150 align:start position:0%
you're not trying to escape a character
 

00:25:46.150 --> 00:25:50.220 align:start position:0%
you're not trying to escape a character
you<00:25:47.020><c> can</c><00:25:47.230><c> also</c><00:25:47.640><c> add</c><00:25:48.640><c> a</c><00:25:48.700><c> new</c><00:25:49.120><c> line</c><00:25:49.330><c> character</c><00:25:49.390><c> or</c>

00:25:50.220 --> 00:25:50.230 align:start position:0%
you can also add a new line character or
 

00:25:50.230 --> 00:25:55.220 align:start position:0%
you can also add a new line character or
a<00:25:50.260><c> carriage</c><00:25:51.220><c> return</c><00:25:51.370><c> a</c><00:25:52.030><c> tab</c><00:25:52.840><c> a</c><00:25:53.730><c> backspace</c><00:25:54.730><c> or</c><00:25:55.059><c> a</c>

00:25:55.220 --> 00:25:55.230 align:start position:0%
a carriage return a tab a backspace or a
 

00:25:55.230 --> 00:25:59.520 align:start position:0%
a carriage return a tab a backspace or a
form<00:25:56.230><c> feed</c><00:25:56.650><c> all</c><00:25:56.980><c> with</c><00:25:57.670><c> doing</c><00:25:58.330><c> a</c><00:25:58.420><c> slash</c><00:25:58.840><c> in</c><00:25:59.200><c> the</c>

00:25:59.520 --> 00:25:59.530 align:start position:0%
form feed all with doing a slash in the
 

00:25:59.530 --> 00:26:02.280 align:start position:0%
form feed all with doing a slash in the
corresponding<00:26:00.340><c> letter</c><00:26:00.610><c> here</c><00:26:01.150><c> so</c><00:26:01.750><c> let</c><00:26:01.960><c> me</c><00:26:02.080><c> show</c>

00:26:02.280 --> 00:26:02.290 align:start position:0%
corresponding letter here so let me show
 

00:26:02.290 --> 00:26:04.860 align:start position:0%
corresponding letter here so let me show
you<00:26:02.350><c> an</c><00:26:02.559><c> example</c><00:26:02.650><c> I'm</c><00:26:03.610><c> going</c><00:26:03.850><c> to</c><00:26:03.910><c> put</c><00:26:04.059><c> a</c><00:26:04.090><c> var</c><00:26:04.390><c> my</c>

00:26:04.860 --> 00:26:04.870 align:start position:0%
you an example I'm going to put a var my
 

00:26:04.870 --> 00:26:08.940 align:start position:0%
you an example I'm going to put a var my
string<00:26:05.610><c> equals</c><00:26:06.610><c> and</c><00:26:07.059><c> we're</c><00:26:07.960><c> gonna</c><00:26:08.110><c> make</c><00:26:08.679><c> a</c>

00:26:08.940 --> 00:26:08.950 align:start position:0%
string equals and we're gonna make a
 

00:26:08.950 --> 00:26:10.860 align:start position:0%
string equals and we're gonna make a
multi-line<00:26:09.610><c> string</c><00:26:10.150><c> so</c><00:26:10.420><c> we're</c><00:26:10.570><c> gonna</c><00:26:10.660><c> have</c>

00:26:10.860 --> 00:26:10.870 align:start position:0%
multi-line string so we're gonna have
 

00:26:10.870 --> 00:26:14.070 align:start position:0%
multi-line string so we're gonna have
the<00:26:11.080><c> first</c><00:26:11.410><c> line</c><00:26:11.740><c> and</c><00:26:12.190><c> now</c><00:26:12.910><c> I'm</c><00:26:13.300><c> going</c><00:26:13.630><c> to</c><00:26:13.780><c> put</c>

00:26:14.070 --> 00:26:14.080 align:start position:0%
the first line and now I'm going to put
 

00:26:14.080 --> 00:26:18.750 align:start position:0%
the first line and now I'm going to put
backslash<00:26:14.860><c> in</c><00:26:15.160><c> to</c><00:26:16.000><c> add</c><00:26:16.179><c> a</c><00:26:16.210><c> a</c><00:26:17.100><c> second</c><00:26:18.100><c> line</c><00:26:18.340><c> and</c>

00:26:18.750 --> 00:26:18.760 align:start position:0%
backslash in to add a a second line and
 

00:26:18.760 --> 00:26:21.720 align:start position:0%
backslash in to add a a second line and
then<00:26:19.300><c> I'm</c><00:26:19.390><c> going</c><00:26:19.510><c> to</c><00:26:19.540><c> put</c><00:26:19.780><c> a</c><00:26:19.840><c> tab</c><00:26:20.230><c> so</c><00:26:20.920><c> backslash</c>

00:26:21.720 --> 00:26:21.730 align:start position:0%
then I'm going to put a tab so backslash
 

00:26:21.730 --> 00:26:25.770 align:start position:0%
then I'm going to put a tab so backslash
T<00:26:22.240><c> for</c><00:26:22.480><c> the</c><00:26:22.570><c> tab</c><00:26:22.900><c> and</c><00:26:23.550><c> backslash</c><00:26:24.550><c> backslash</c><00:26:25.090><c> to</c>

00:26:25.770 --> 00:26:25.780 align:start position:0%
T for the tab and backslash backslash to
 

00:26:25.780 --> 00:26:28.140 align:start position:0%
T for the tab and backslash backslash to
add<00:26:25.900><c> a</c><00:26:25.929><c> backslash</c><00:26:26.770><c> now</c><00:26:27.610><c> it's</c><00:26:27.760><c> going</c><00:26:27.910><c> to</c><00:26:28.000><c> say</c>

00:26:28.140 --> 00:26:28.150 align:start position:0%
add a backslash now it's going to say
 

00:26:28.150 --> 00:26:31.980 align:start position:0%
add a backslash now it's going to say
second<00:26:28.809><c> line</c><00:26:29.250><c> now</c><00:26:30.250><c> I'll</c><00:26:30.460><c> do</c><00:26:30.730><c> backslash</c><00:26:31.570><c> and</c>

00:26:31.980 --> 00:26:31.990 align:start position:0%
second line now I'll do backslash and
 

00:26:31.990 --> 00:26:35.760 align:start position:0%
second line now I'll do backslash and
then<00:26:32.290><c> I'll</c><00:26:32.410><c> just</c><00:26:32.650><c> say</c><00:26:32.890><c> third</c><00:26:33.610><c> line</c><00:26:34.480><c> and</c><00:26:34.960><c> if</c><00:26:35.620><c> I</c>

00:26:35.760 --> 00:26:35.770 align:start position:0%
then I'll just say third line and if I
 

00:26:35.770 --> 00:26:38.340 align:start position:0%
then I'll just say third line and if I
were<00:26:35.920><c> able</c><00:26:36.100><c> to</c><00:26:36.490><c> log</c><00:26:36.820><c> out</c><00:26:37.030><c> all</c><00:26:37.270><c> that</c><00:26:37.600><c> you</c><00:26:38.170><c> would</c>

00:26:38.340 --> 00:26:38.350 align:start position:0%
were able to log out all that you would
 

00:26:38.350 --> 00:26:41.340 align:start position:0%
were able to log out all that you would
see<00:26:38.620><c> three</c><00:26:39.070><c> different</c><00:26:39.309><c> lines</c><00:26:39.790><c> and</c><00:26:40.330><c> you</c><00:26:41.200><c> would</c>

00:26:41.340 --> 00:26:41.350 align:start position:0%
see three different lines and you would
 

00:26:41.350 --> 00:26:43.919 align:start position:0%
see three different lines and you would
see<00:26:41.650><c> the</c><00:26:41.980><c> tab</c><00:26:42.309><c> and</c><00:26:42.760><c> then</c><00:26:43.210><c> the</c><00:26:43.240><c> backslash</c>

00:26:43.919 --> 00:26:43.929 align:start position:0%
see the tab and then the backslash
 

00:26:43.929 --> 00:26:48.640 align:start position:0%
see the tab and then the backslash
character

00:26:48.640 --> 00:26:48.650 align:start position:0%
 
 

00:26:48.650 --> 00:26:51.640 align:start position:0%
 
you<00:26:49.190><c> can</c><00:26:49.460><c> concatenate</c><00:26:50.000><c> strings</c><00:26:50.870><c> with</c><00:26:51.260><c> the</c>

00:26:51.640 --> 00:26:51.650 align:start position:0%
you can concatenate strings with the
 

00:26:51.650 --> 00:26:54.250 align:start position:0%
you can concatenate strings with the
plus<00:26:52.039><c> operator</c><00:26:52.669><c> you</c><00:26:53.390><c> can</c><00:26:53.600><c> see</c><00:26:53.779><c> here</c><00:26:54.049><c> that</c><00:26:54.080><c> we</c>

00:26:54.250 --> 00:26:54.260 align:start position:0%
plus operator you can see here that we
 

00:26:54.260 --> 00:26:57.580 align:start position:0%
plus operator you can see here that we
have<00:26:54.350><c> two</c><00:26:54.529><c> strings</c><00:26:54.919><c> I</c><00:26:55.279><c> come</c><00:26:55.850><c> first</c><00:26:56.210><c> and</c><00:26:56.539><c> I</c><00:26:57.140><c> come</c>

00:26:57.580 --> 00:26:57.590 align:start position:0%
have two strings I come first and I come
 

00:26:57.590 --> 00:27:00.640 align:start position:0%
have two strings I come first and I come
second<00:26:58.190><c> they've</c><00:26:58.850><c> been</c><00:26:59.270><c> added</c><00:26:59.900><c> together</c><00:27:00.110><c> or</c>

00:27:00.640 --> 00:27:00.650 align:start position:0%
second they've been added together or
 

00:27:00.650 --> 00:27:04.630 align:start position:0%
second they've been added together or
concatenated<00:27:01.610><c> with</c><00:27:01.850><c> this</c><00:27:02.299><c> so</c><00:27:02.900><c> the</c><00:27:03.230><c> are</c><00:27:03.640><c> STR</c>

00:27:04.630 --> 00:27:04.640 align:start position:0%
concatenated with this so the are STR
 

00:27:04.640 --> 00:27:08.409 align:start position:0%
concatenated with this so the are STR
our<00:27:04.940><c> string</c><00:27:05.480><c> is</c><00:27:05.779><c> now</c><00:27:06.350><c> one</c><00:27:06.860><c> long</c><00:27:07.549><c> string</c><00:27:08.120><c> that</c>

00:27:08.409 --> 00:27:08.419 align:start position:0%
our string is now one long string that
 

00:27:08.419 --> 00:27:12.430 align:start position:0%
our string is now one long string that
says<00:27:08.960><c> I</c><00:27:09.169><c> come</c><00:27:09.650><c> first</c><00:27:10.010><c> I</c><00:27:10.429><c> come</c><00:27:11.120><c> second</c><00:27:11.690><c> I'll</c>

00:27:12.430 --> 00:27:12.440 align:start position:0%
says I come first I come second I'll
 

00:27:12.440 --> 00:27:14.680 align:start position:0%
says I come first I come second I'll
give<00:27:12.679><c> you</c><00:27:12.770><c> another</c><00:27:12.919><c> example</c><00:27:13.490><c> here</c><00:27:13.850><c> so</c><00:27:14.360><c> we</c><00:27:14.510><c> can</c>

00:27:14.680 --> 00:27:14.690 align:start position:0%
give you another example here so we can
 

00:27:14.690 --> 00:27:20.260 align:start position:0%
give you another example here so we can
say<00:27:14.960><c> my</c><00:27:15.440><c> string</c><00:27:15.919><c> equals</c><00:27:17.980><c> this</c><00:27:18.980><c> is</c><00:27:19.279><c> the</c><00:27:19.789><c> start</c>

00:27:20.260 --> 00:27:20.270 align:start position:0%
say my string equals this is the start
 

00:27:20.270 --> 00:27:23.139 align:start position:0%
say my string equals this is the start
and<00:27:20.600><c> then</c><00:27:21.409><c> I'm</c><00:27:21.500><c> going</c><00:27:21.620><c> to</c><00:27:21.679><c> put</c><00:27:21.950><c> a</c><00:27:22.159><c> space</c><00:27:22.700><c> before</c>

00:27:23.139 --> 00:27:23.149 align:start position:0%
and then I'm going to put a space before
 

00:27:23.149 --> 00:27:25.750 align:start position:0%
and then I'm going to put a space before
the<00:27:23.450><c> in</c><00:27:23.690><c> quotation</c><00:27:24.380><c> mark</c><00:27:24.620><c> because</c><00:27:25.159><c> when</c><00:27:25.640><c> these</c>

00:27:25.750 --> 00:27:25.760 align:start position:0%
the in quotation mark because when these
 

00:27:25.760 --> 00:27:27.940 align:start position:0%
the in quotation mark because when these
get<00:27:25.970><c> concatenated</c><00:27:26.840><c> together</c><00:27:26.990><c> we</c><00:27:27.500><c> want</c><00:27:27.799><c> there</c>

00:27:27.940 --> 00:27:27.950 align:start position:0%
get concatenated together we want there
 

00:27:27.950 --> 00:27:29.620 align:start position:0%
get concatenated together we want there
to<00:27:27.980><c> be</c><00:27:28.100><c> a</c><00:27:28.190><c> space</c><00:27:28.549><c> between</c><00:27:29.090><c> these</c><00:27:29.360><c> two</c>

00:27:29.620 --> 00:27:29.630 align:start position:0%
to be a space between these two
 

00:27:29.630 --> 00:27:33.060 align:start position:0%
to be a space between these two
sentences<00:27:30.080><c> and</c><00:27:30.649><c> I'll</c><00:27:31.130><c> say</c><00:27:31.370><c> this</c><00:27:31.730><c> is</c><00:27:32.000><c> the</c><00:27:32.539><c> end</c>

00:27:33.060 --> 00:27:33.070 align:start position:0%
sentences and I'll say this is the end
 

00:27:33.070 --> 00:27:35.350 align:start position:0%
sentences and I'll say this is the end
now<00:27:34.070><c> let's</c><00:27:34.340><c> just</c><00:27:34.490><c> see</c><00:27:34.700><c> what</c><00:27:34.850><c> that</c><00:27:35.000><c> looks</c><00:27:35.270><c> like</c>

00:27:35.350 --> 00:27:35.360 align:start position:0%
now let's just see what that looks like
 

00:27:35.360 --> 00:27:39.190 align:start position:0%
now let's just see what that looks like
I'll<00:27:35.779><c> do</c><00:27:35.899><c> a</c><00:27:35.960><c> consult</c><00:27:36.620><c> out</c><00:27:36.860><c> log</c><00:27:37.220><c> and</c><00:27:37.850><c> do</c><00:27:38.750><c> a</c><00:27:38.779><c> my</c>

00:27:39.190 --> 00:27:39.200 align:start position:0%
I'll do a consult out log and do a my
 

00:27:39.200 --> 00:27:43.899 align:start position:0%
I'll do a consult out log and do a my
string<00:27:39.620><c> and</c><00:27:40.330><c> let's</c><00:27:41.330><c> see</c><00:27:41.690><c> if</c><00:27:41.899><c> I</c><00:27:42.460><c> run</c><00:27:43.460><c> this</c><00:27:43.669><c> we</c>

00:27:43.899 --> 00:27:43.909 align:start position:0%
string and let's see if I run this we
 

00:27:43.909 --> 00:27:45.789 align:start position:0%
string and let's see if I run this we
can<00:27:44.059><c> see</c><00:27:44.240><c> this</c><00:27:44.480><c> is</c><00:27:44.690><c> the</c><00:27:44.870><c> start</c><00:27:45.140><c> this</c><00:27:45.470><c> is</c><00:27:45.529><c> the</c>

00:27:45.789 --> 00:27:45.799 align:start position:0%
can see this is the start this is the
 

00:27:45.799 --> 00:27:51.460 align:start position:0%
can see this is the start this is the
end<00:27:46.039><c> just</c><00:27:46.669><c> one</c><00:27:46.940><c> long</c><00:27:47.240><c> string</c>

00:27:51.460 --> 00:27:51.470 align:start position:0%
 
 

00:27:51.470 --> 00:27:54.580 align:start position:0%
 
you<00:27:52.190><c> could</c><00:27:52.370><c> also</c><00:27:52.580><c> concatenate</c><00:27:53.480><c> strings</c><00:27:53.929><c> using</c>

00:27:54.580 --> 00:27:54.590 align:start position:0%
you could also concatenate strings using
 

00:27:54.590 --> 00:27:57.639 align:start position:0%
you could also concatenate strings using
the<00:27:54.710><c> plus</c><00:27:55.070><c> equal</c><00:27:55.549><c> operator</c><00:27:56.210><c> you</c><00:27:56.960><c> can</c><00:27:56.990><c> see</c><00:27:57.350><c> here</c>

00:27:57.639 --> 00:27:57.649 align:start position:0%
the plus equal operator you can see here
 

00:27:57.649 --> 00:27:59.950 align:start position:0%
the plus equal operator you can see here
in<00:27:57.710><c> this</c><00:27:57.799><c> example</c><00:27:57.860><c> we</c><00:27:58.850><c> have</c><00:27:59.029><c> the</c><00:27:59.210><c> AR</c><00:27:59.419><c> string</c>

00:27:59.950 --> 00:27:59.960 align:start position:0%
in this example we have the AR string
 

00:27:59.960 --> 00:28:03.909 align:start position:0%
in this example we have the AR string
equals<00:28:00.440><c> I</c><00:28:01.190><c> come</c><00:28:01.789><c> first</c><00:28:02.210><c> and</c><00:28:02.659><c> then</c><00:28:03.559><c> we</c><00:28:03.740><c> have</c><00:28:03.830><c> the</c>

00:28:03.909 --> 00:28:03.919 align:start position:0%
equals I come first and then we have the
 

00:28:03.919 --> 00:28:07.570 align:start position:0%
equals I come first and then we have the
AR<00:28:04.129><c> string</c><00:28:04.519><c> plus</c><00:28:05.120><c> equals</c><00:28:05.809><c> I</c><00:28:06.169><c> comes</c><00:28:06.830><c> second</c>

00:28:07.570 --> 00:28:07.580 align:start position:0%
AR string plus equals I comes second
 

00:28:07.580 --> 00:28:10.269 align:start position:0%
AR string plus equals I comes second
so<00:28:07.970><c> remember</c><00:28:08.720><c> just</c><00:28:08.750><c> like</c><00:28:09.139><c> in</c><00:28:09.440><c> when</c><00:28:10.159><c> you're</c>

00:28:10.269 --> 00:28:10.279 align:start position:0%
so remember just like in when you're
 

00:28:10.279 --> 00:28:13.119 align:start position:0%
so remember just like in when you're
using<00:28:10.460><c> numbers</c><00:28:11.029><c> plus</c><00:28:11.659><c> equals</c><00:28:12.230><c> means</c><00:28:12.830><c> that</c><00:28:13.039><c> you</c>

00:28:13.119 --> 00:28:13.129 align:start position:0%
using numbers plus equals means that you
 

00:28:13.129 --> 00:28:15.730 align:start position:0%
using numbers plus equals means that you
take<00:28:13.159><c> whatever</c><00:28:13.940><c> is</c><00:28:14.120><c> on</c><00:28:14.299><c> the</c><00:28:14.779><c> end</c><00:28:14.960><c> here</c><00:28:15.320><c> and</c><00:28:15.379><c> add</c>

00:28:15.730 --> 00:28:15.740 align:start position:0%
take whatever is on the end here and add
 

00:28:15.740 --> 00:28:20.169 align:start position:0%
take whatever is on the end here and add
it<00:28:16.129><c> to</c><00:28:16.570><c> the</c><00:28:17.570><c> variable</c><00:28:18.110><c> so</c><00:28:18.889><c> we've</c><00:28:19.190><c> just</c><00:28:19.220><c> added</c><00:28:19.970><c> I</c>

00:28:20.169 --> 00:28:20.179 align:start position:0%
it to the variable so we've just added I
 

00:28:20.179 --> 00:28:22.509 align:start position:0%
it to the variable so we've just added I
come<00:28:20.480><c> second</c><00:28:21.019><c> on</c><00:28:21.139><c> to</c><00:28:21.440><c> the</c><00:28:21.529><c> end</c><00:28:21.740><c> of</c><00:28:21.980><c> I</c><00:28:22.129><c> come</c>

00:28:22.509 --> 00:28:22.519 align:start position:0%
come second on to the end of I come
 

00:28:22.519 --> 00:28:25.299 align:start position:0%
come second on to the end of I come
first<00:28:22.879><c> let's</c><00:28:23.779><c> do</c><00:28:23.929><c> another</c><00:28:24.019><c> example</c><00:28:24.230><c> down</c><00:28:24.860><c> here</c>

00:28:25.299 --> 00:28:25.309 align:start position:0%
first let's do another example down here
 

00:28:25.309 --> 00:28:30.159 align:start position:0%
first let's do another example down here
my<00:28:25.909><c> string</c><00:28:26.389><c> equals</c><00:28:27.460><c> this</c><00:28:28.460><c> is</c><00:28:28.789><c> the</c><00:28:29.509><c> first</c>

00:28:30.159 --> 00:28:30.169 align:start position:0%
my string equals this is the first
 

00:28:30.169 --> 00:28:33.399 align:start position:0%
my string equals this is the first
sentence<00:28:31.039><c> and</c><00:28:31.509><c> then</c><00:28:32.509><c> I'll</c><00:28:32.570><c> put</c><00:28:32.720><c> a</c><00:28:32.779><c> space</c><00:28:33.169><c> at</c>

00:28:33.399 --> 00:28:33.409 align:start position:0%
sentence and then I'll put a space at
 

00:28:33.409 --> 00:28:35.740 align:start position:0%
sentence and then I'll put a space at
the<00:28:33.440><c> end</c><00:28:33.590><c> because</c><00:28:34.100><c> we're</c><00:28:34.490><c> gonna</c><00:28:34.580><c> do</c><00:28:34.759><c> my</c><00:28:35.149><c> string</c>

00:28:35.740 --> 00:28:35.750 align:start position:0%
the end because we're gonna do my string
 

00:28:35.750 --> 00:28:39.090 align:start position:0%
the end because we're gonna do my string
and<00:28:36.049><c> I'll</c><00:28:36.620><c> hear</c><00:28:36.860><c> oh</c><00:28:36.889><c> I'll</c><00:28:37.129><c> do</c><00:28:37.309><c> the</c><00:28:37.490><c> plus</c><00:28:37.879><c> equals</c>

00:28:39.090 --> 00:28:39.100 align:start position:0%
and I'll hear oh I'll do the plus equals
 

00:28:39.100 --> 00:28:45.759 align:start position:0%
and I'll hear oh I'll do the plus equals
this<00:28:40.100><c> is</c><00:28:40.460><c> the</c><00:28:41.450><c> second</c><00:28:42.580><c> sentence</c><00:28:44.289><c> now</c><00:28:45.289><c> if</c><00:28:45.620><c> I</c>

00:28:45.759 --> 00:28:45.769 align:start position:0%
this is the second sentence now if I
 

00:28:45.769 --> 00:28:50.049 align:start position:0%
this is the second sentence now if I
just<00:28:45.830><c> do</c><00:28:46.279><c> a</c><00:28:46.309><c> console</c><00:28:46.940><c> that</c><00:28:47.059><c> log</c><00:28:47.360><c> here</c><00:28:47.840><c> of</c><00:28:49.059><c> my</c>

00:28:50.049 --> 00:28:50.059 align:start position:0%
just do a console that log here of my
 

00:28:50.059 --> 00:28:52.749 align:start position:0%
just do a console that log here of my
string<00:28:50.480><c> we</c><00:28:51.259><c> should</c><00:28:51.649><c> see</c><00:28:52.129><c> that</c><00:28:52.549><c> those</c>

00:28:52.749 --> 00:28:52.759 align:start position:0%
string we should see that those
 

00:28:52.759 --> 00:28:55.389 align:start position:0%
string we should see that those
sentences<00:28:53.389><c> have</c><00:28:53.629><c> gone</c><00:28:53.840><c> together</c><00:28:54.080><c> this</c><00:28:55.009><c> is</c><00:28:55.220><c> the</c>

00:28:55.389 --> 00:28:55.399 align:start position:0%
sentences have gone together this is the
 

00:28:55.399 --> 00:28:57.999 align:start position:0%
sentences have gone together this is the
first<00:28:55.669><c> sentence</c><00:28:56.149><c> this</c><00:28:56.690><c> is</c><00:28:56.929><c> the</c><00:28:57.470><c> second</c>

00:28:57.999 --> 00:28:58.009 align:start position:0%
first sentence this is the second
 

00:28:58.009 --> 00:29:03.730 align:start position:0%
first sentence this is the second
sentence<00:28:58.580><c> good</c>

00:29:03.730 --> 00:29:03.740 align:start position:0%
 
 

00:29:03.740 --> 00:29:06.250 align:start position:0%
 
you<00:29:04.520><c> can</c><00:29:04.700><c> concatenate</c><00:29:05.120><c> strings</c><00:29:05.870><c> together</c>

00:29:06.250 --> 00:29:06.260 align:start position:0%
you can concatenate strings together
 

00:29:06.260 --> 00:29:09.220 align:start position:0%
you can concatenate strings together
with<00:29:06.710><c> variables</c><00:29:07.370><c> you</c><00:29:07.940><c> can</c><00:29:08.059><c> see</c><00:29:08.300><c> here</c><00:29:08.690><c> our</c><00:29:08.809><c> name</c>

00:29:09.220 --> 00:29:09.230 align:start position:0%
with variables you can see here our name
 

00:29:09.230 --> 00:29:12.040 align:start position:0%
with variables you can see here our name
freako<00:29:09.920><c> camp</c><00:29:10.309><c> hello</c><00:29:11.000><c> our</c><00:29:11.179><c> name</c><00:29:11.450><c> is</c><00:29:11.750><c> and</c><00:29:12.020><c> then</c>

00:29:12.040 --> 00:29:12.050 align:start position:0%
freako camp hello our name is and then
 

00:29:12.050 --> 00:29:15.010 align:start position:0%
freako camp hello our name is and then
we<00:29:12.800><c> add</c><00:29:13.280><c> this</c><00:29:13.790><c> variable</c><00:29:14.450><c> the</c><00:29:14.630><c> our</c><00:29:14.809><c> name</c>

00:29:15.010 --> 00:29:15.020 align:start position:0%
we add this variable the our name
 

00:29:15.020 --> 00:29:17.830 align:start position:0%
we add this variable the our name
variable<00:29:15.559><c> which</c><00:29:15.890><c> is</c><00:29:16.040><c> freako</c><00:29:16.520><c> camp</c><00:29:16.910><c> hello</c><00:29:17.690><c> our</c>

00:29:17.830 --> 00:29:17.840 align:start position:0%
variable which is freako camp hello our
 

00:29:17.840 --> 00:29:20.650 align:start position:0%
variable which is freako camp hello our
name<00:29:18.020><c> is</c><00:29:18.170><c> freako</c><00:29:18.620><c> camp</c><00:29:18.980><c> how</c><00:29:19.220><c> are</c><00:29:19.429><c> you</c><00:29:19.730><c> well</c>

00:29:20.650 --> 00:29:20.660 align:start position:0%
name is freako camp how are you well
 

00:29:20.660 --> 00:29:22.000 align:start position:0%
name is freako camp how are you well
we're<00:29:20.900><c> gonna</c><00:29:20.990><c> do</c><00:29:21.140><c> the</c><00:29:21.260><c> same</c><00:29:21.440><c> thing</c><00:29:21.500><c> down</c><00:29:21.950><c> here</c>

00:29:22.000 --> 00:29:22.010 align:start position:0%
we're gonna do the same thing down here
 

00:29:22.010 --> 00:29:27.540 align:start position:0%
we're gonna do the same thing down here
so<00:29:23.000><c> I'm</c><00:29:23.390><c> gonna</c><00:29:23.570><c> do</c><00:29:23.750><c> my</c><00:29:24.020><c> name</c><00:29:24.500><c> equals</c><00:29:25.220><c> o</c><00:29:25.840><c> and</c>

00:29:27.540 --> 00:29:27.550 align:start position:0%
so I'm gonna do my name equals o and
 

00:29:27.550 --> 00:29:33.010 align:start position:0%
so I'm gonna do my name equals o and
then<00:29:28.550><c> my</c><00:29:28.850><c> string</c><00:29:29.420><c> is</c><00:29:29.720><c> going</c><00:29:30.470><c> to</c><00:29:30.590><c> equal</c><00:29:32.020><c> mine</c>

00:29:33.010 --> 00:29:33.020 align:start position:0%
then my string is going to equal mine
 

00:29:33.020 --> 00:29:37.000 align:start position:0%
then my string is going to equal mine
name<00:29:33.980><c> is</c><00:29:34.429><c> and</c><00:29:35.150><c> then</c><00:29:35.900><c> I'm</c><00:29:36.080><c> going</c><00:29:36.260><c> to</c><00:29:36.320><c> add</c><00:29:36.620><c> the</c>

00:29:37.000 --> 00:29:37.010 align:start position:0%
name is and then I'm going to add the
 

00:29:37.010 --> 00:29:41.410 align:start position:0%
name is and then I'm going to add the
variable<00:29:37.490><c> name</c><00:29:37.730><c> which</c><00:29:38.330><c> is</c><00:29:38.570><c> myname</c><00:29:38.990><c> and</c><00:29:40.420><c> then</c>

00:29:41.410 --> 00:29:41.420 align:start position:0%
variable name which is myname and then
 

00:29:41.420 --> 00:29:43.570 align:start position:0%
variable name which is myname and then
I'll<00:29:41.600><c> continue</c><00:29:42.110><c> the</c><00:29:42.410><c> string</c><00:29:42.740><c> here</c><00:29:43.100><c> hopes</c><00:29:43.400><c> that</c>

00:29:43.570 --> 00:29:43.580 align:start position:0%
I'll continue the string here hopes that
 

00:29:43.580 --> 00:29:51.090 align:start position:0%
I'll continue the string here hopes that
supposed<00:29:43.790><c> to</c><00:29:43.820><c> be</c><00:29:43.880><c> a</c><00:29:43.940><c> plus</c><00:29:44.330><c> here</c><00:29:45.340><c> and</c><00:29:47.290><c> I</c><00:29:48.290><c> am</c><00:29:49.010><c> well</c>

00:29:51.090 --> 00:29:51.100 align:start position:0%
supposed to be a plus here and I am well
 

00:29:51.100 --> 00:29:54.520 align:start position:0%
supposed to be a plus here and I am well
see<00:29:52.100><c> that</c><00:29:52.280><c> I</c><00:29:52.309><c> put</c><00:29:52.670><c> a</c><00:29:52.820><c> space</c><00:29:53.300><c> here</c><00:29:53.809><c> and</c><00:29:54.020><c> here</c>

00:29:54.520 --> 00:29:54.530 align:start position:0%
see that I put a space here and here
 

00:29:54.530 --> 00:29:56.080 align:start position:0%
see that I put a space here and here
because<00:29:54.650><c> you</c><00:29:54.860><c> have</c><00:29:55.010><c> to</c><00:29:55.040><c> make</c><00:29:55.429><c> sure</c><00:29:55.460><c> you</c><00:29:55.850><c> put</c>

00:29:56.080 --> 00:29:56.090 align:start position:0%
because you have to make sure you put
 

00:29:56.090 --> 00:29:59.110 align:start position:0%
because you have to make sure you put
appropriate<00:29:56.840><c> spaces</c><00:29:57.440><c> in</c><00:29:57.650><c> and</c><00:29:58.100><c> let's</c><00:29:58.910><c> see</c><00:29:59.000><c> what</c>

00:29:59.110 --> 00:29:59.120 align:start position:0%
appropriate spaces in and let's see what
 

00:29:59.120 --> 00:30:01.270 align:start position:0%
appropriate spaces in and let's see what
that<00:29:59.150><c> looks</c><00:29:59.300><c> like</c><00:29:59.600><c> I'll</c><00:29:59.960><c> do</c><00:30:00.110><c> a</c><00:30:00.140><c> consult</c><00:30:01.100><c> out</c>

00:30:01.270 --> 00:30:01.280 align:start position:0%
that looks like I'll do a consult out
 

00:30:01.280 --> 00:30:07.360 align:start position:0%
that looks like I'll do a consult out
log<00:30:03.309><c> and</c><00:30:04.309><c> I'll</c><00:30:04.400><c> just</c><00:30:04.550><c> put</c><00:30:04.820><c> my</c><00:30:05.000><c> string</c><00:30:05.750><c> here</c><00:30:06.370><c> if</c>

00:30:07.360 --> 00:30:07.370 align:start position:0%
log and I'll just put my string here if
 

00:30:07.370 --> 00:30:11.799 align:start position:0%
log and I'll just put my string here if
I<00:30:07.940><c> show</c><00:30:08.600><c> that</c><00:30:08.870><c> my</c><00:30:09.590><c> name</c><00:30:09.860><c> is</c><00:30:10.070><c> Bo</c><00:30:10.309><c> and</c><00:30:10.640><c> I</c><00:30:11.210><c> am</c><00:30:11.510><c> well</c>

00:30:11.799 --> 00:30:11.809 align:start position:0%
I show that my name is Bo and I am well
 

00:30:11.809 --> 00:30:16.770 align:start position:0%
I show that my name is Bo and I am well
looks<00:30:12.770><c> good</c>

00:30:16.770 --> 00:30:16.780 align:start position:0%
 
 

00:30:16.780 --> 00:30:19.800 align:start position:0%
 
you<00:30:17.650><c> can</c><00:30:17.830><c> append</c><00:30:18.220><c> variables</c><00:30:18.880><c> to</c><00:30:19.060><c> strings</c><00:30:19.510><c> with</c>

00:30:19.800 --> 00:30:19.810 align:start position:0%
you can append variables to strings with
 

00:30:19.810 --> 00:30:22.620 align:start position:0%
you can append variables to strings with
this<00:30:20.080><c> plus</c><00:30:20.470><c> equals</c><00:30:21.010><c> operator</c><00:30:21.640><c> you</c><00:30:22.300><c> can</c><00:30:22.480><c> see</c>

00:30:22.620 --> 00:30:22.630 align:start position:0%
this plus equals operator you can see
 

00:30:22.630 --> 00:30:24.510 align:start position:0%
this plus equals operator you can see
with<00:30:22.780><c> this</c><00:30:22.930><c> variable</c><00:30:23.290><c> and</c><00:30:23.590><c> adjective</c><00:30:24.220><c> which</c>

00:30:24.510 --> 00:30:24.520 align:start position:0%
with this variable and adjective which
 

00:30:24.520 --> 00:30:27.150 align:start position:0%
with this variable and adjective which
is<00:30:24.730><c> set</c><00:30:25.000><c> to</c><00:30:25.030><c> the</c><00:30:25.360><c> word</c><00:30:25.570><c> awesome</c><00:30:26.170><c> and</c><00:30:26.380><c> then</c><00:30:27.070><c> we</c>

00:30:27.150 --> 00:30:27.160 align:start position:0%
is set to the word awesome and then we
 

00:30:27.160 --> 00:30:30.270 align:start position:0%
is set to the word awesome and then we
have<00:30:27.280><c> another</c><00:30:27.550><c> variable</c><00:30:28.260><c> freako</c><00:30:29.260><c> camp</c><00:30:29.560><c> is</c><00:30:29.770><c> and</c>

00:30:30.270 --> 00:30:30.280 align:start position:0%
have another variable freako camp is and
 

00:30:30.280 --> 00:30:33.120 align:start position:0%
have another variable freako camp is and
we<00:30:30.940><c> have</c><00:30:31.210><c> the</c><00:30:31.390><c> our</c><00:30:31.630><c> string</c><00:30:32.080><c> variable</c><00:30:32.680><c> plus</c>

00:30:33.120 --> 00:30:33.130 align:start position:0%
we have the our string variable plus
 

00:30:33.130 --> 00:30:36.720 align:start position:0%
we have the our string variable plus
equal<00:30:33.610><c> an</c><00:30:33.880><c> adjective</c><00:30:34.480><c> so</c><00:30:35.380><c> now</c><00:30:35.680><c> our</c><00:30:35.710><c> string</c><00:30:36.490><c> is</c>

00:30:36.720 --> 00:30:36.730 align:start position:0%
equal an adjective so now our string is
 

00:30:36.730 --> 00:30:41.130 align:start position:0%
equal an adjective so now our string is
going<00:30:36.940><c> to</c><00:30:37.090><c> equal</c><00:30:37.920><c> freako</c><00:30:38.920><c> camp</c><00:30:39.250><c> is</c><00:30:39.490><c> awesome</c><00:30:40.420><c> so</c>

00:30:41.130 --> 00:30:41.140 align:start position:0%
going to equal freako camp is awesome so
 

00:30:41.140 --> 00:30:44.460 align:start position:0%
going to equal freako camp is awesome so
let<00:30:41.530><c> me</c><00:30:41.620><c> show</c><00:30:41.770><c> you</c><00:30:41.860><c> another</c><00:30:41.980><c> example</c><00:30:43.470><c> we're</c>

00:30:44.460 --> 00:30:44.470 align:start position:0%
let me show you another example we're
 

00:30:44.470 --> 00:30:49.640 align:start position:0%
let me show you another example we're
going<00:30:44.620><c> to</c><00:30:44.710><c> say</c><00:30:44.950><c> some</c><00:30:45.490><c> adjective</c><00:30:46.060><c> equals</c><00:30:47.910><c> worth</c>

00:30:49.640 --> 00:30:49.650 align:start position:0%
going to say some adjective equals worth
 

00:30:49.650 --> 00:30:54.000 align:start position:0%
going to say some adjective equals worth
while<00:30:50.650><c> and</c><00:30:51.540><c> now</c><00:30:52.540><c> I'm</c><00:30:52.900><c> going</c><00:30:53.290><c> to</c><00:30:53.350><c> use</c><00:30:53.560><c> the</c><00:30:53.770><c> plus</c>

00:30:54.000 --> 00:30:54.010 align:start position:0%
while and now I'm going to use the plus
 

00:30:54.010 --> 00:30:58.890 align:start position:0%
while and now I'm going to use the plus
equal<00:30:54.430><c> so</c><00:30:54.640><c> my</c><00:30:55.000><c> STR</c><00:30:56.040><c> plus</c><00:30:57.040><c> equals</c><00:30:57.730><c> and</c><00:30:58.090><c> then</c><00:30:58.750><c> I</c>

00:30:58.890 --> 00:30:58.900 align:start position:0%
equal so my STR plus equals and then I
 

00:30:58.900 --> 00:31:02.700 align:start position:0%
equal so my STR plus equals and then I
can<00:30:59.080><c> put</c><00:30:59.320><c> some</c><00:30:59.710><c> adjectives</c><00:31:00.520><c> so</c><00:31:01.180><c> now</c><00:31:01.570><c> after</c><00:31:02.560><c> we</c>

00:31:02.700 --> 00:31:02.710 align:start position:0%
can put some adjectives so now after we
 

00:31:02.710 --> 00:31:04.680 align:start position:0%
can put some adjectives so now after we
do<00:31:02.950><c> the</c><00:31:03.190><c> my</c><00:31:03.400><c> string</c><00:31:03.850><c> plus</c><00:31:04.180><c> equals</c><00:31:04.480><c> some</c>

00:31:04.680 --> 00:31:04.690 align:start position:0%
do the my string plus equals some
 

00:31:04.690 --> 00:31:07.440 align:start position:0%
do the my string plus equals some
adjective<00:31:05.380><c> my</c><00:31:06.010><c> string</c><00:31:06.460><c> is</c><00:31:06.700><c> going</c><00:31:07.030><c> to</c><00:31:07.210><c> say</c>

00:31:07.440 --> 00:31:07.450 align:start position:0%
adjective my string is going to say
 

00:31:07.450 --> 00:31:13.930 align:start position:0%
adjective my string is going to say
learning<00:31:08.320><c> to</c><00:31:08.530><c> code</c><00:31:08.800><c> is</c><00:31:09.100><c> worthwhile</c>

00:31:13.930 --> 00:31:13.940 align:start position:0%
 
 

00:31:13.940 --> 00:31:16.120 align:start position:0%
 
sometimes<00:31:14.870><c> you</c><00:31:14.960><c> want</c><00:31:15.110><c> to</c><00:31:15.170><c> find</c><00:31:15.380><c> the</c><00:31:15.560><c> length</c><00:31:15.860><c> of</c>

00:31:16.120 --> 00:31:16.130 align:start position:0%
sometimes you want to find the length of
 

00:31:16.130 --> 00:31:19.450 align:start position:0%
sometimes you want to find the length of
a<00:31:16.250><c> string</c><00:31:16.900><c> javascript</c><00:31:17.900><c> makes</c><00:31:18.140><c> this</c><00:31:18.350><c> easy</c><00:31:18.650><c> so</c>

00:31:19.450 --> 00:31:19.460 align:start position:0%
a string javascript makes this easy so
 

00:31:19.460 --> 00:31:21.160 align:start position:0%
a string javascript makes this easy so
we<00:31:19.580><c> have</c><00:31:19.670><c> the</c><00:31:19.820><c> first</c><00:31:20.090><c> name</c><00:31:20.390><c> is</c><00:31:20.630><c> set</c><00:31:20.840><c> to</c><00:31:20.870><c> a</c><00:31:21.020><c> de</c>

00:31:21.160 --> 00:31:21.170 align:start position:0%
we have the first name is set to a de
 

00:31:21.170 --> 00:31:24.520 align:start position:0%
we have the first name is set to a de
but<00:31:22.160><c> we</c><00:31:22.370><c> just</c><00:31:22.550><c> use</c><00:31:22.670><c> the</c><00:31:23.090><c> dot</c><00:31:23.390><c> length</c><00:31:23.810><c> property</c>

00:31:24.520 --> 00:31:24.530 align:start position:0%
but we just use the dot length property
 

00:31:24.530 --> 00:31:27.490 align:start position:0%
but we just use the dot length property
to<00:31:24.920><c> find</c><00:31:25.100><c> the</c><00:31:25.280><c> length</c><00:31:25.550><c> so</c><00:31:26.120><c> first</c><00:31:26.720><c> name</c><00:31:26.840><c> dot</c>

00:31:27.490 --> 00:31:27.500 align:start position:0%
to find the length so first name dot
 

00:31:27.500 --> 00:31:29.620 align:start position:0%
to find the length so first name dot
length<00:31:27.860><c> remember</c><00:31:28.460><c> our</c><00:31:28.670><c> first</c><00:31:28.940><c> name</c><00:31:29.240><c> is</c><00:31:29.390><c> Ana</c>

00:31:29.620 --> 00:31:29.630 align:start position:0%
length remember our first name is Ana
 

00:31:29.630 --> 00:31:32.320 align:start position:0%
length remember our first name is Ana
here<00:31:30.080><c> and</c><00:31:30.260><c> then</c><00:31:30.590><c> dot</c><00:31:30.830><c> length</c><00:31:31.160><c> will</c><00:31:31.550><c> return</c><00:31:31.970><c> an</c>

00:31:32.320 --> 00:31:32.330 align:start position:0%
here and then dot length will return an
 

00:31:32.330 --> 00:31:34.420 align:start position:0%
here and then dot length will return an
integer<00:31:32.660><c> a</c><00:31:32.870><c> number</c><00:31:33.410><c> that</c><00:31:33.650><c> has</c><00:31:33.710><c> the</c><00:31:34.070><c> number</c><00:31:34.340><c> of</c>

00:31:34.420 --> 00:31:34.430 align:start position:0%
integer a number that has the number of
 

00:31:34.430 --> 00:31:36.610 align:start position:0%
integer a number that has the number of
characters<00:31:34.940><c> in</c><00:31:34.970><c> the</c><00:31:35.360><c> string</c><00:31:35.390><c> so</c><00:31:36.200><c> that</c><00:31:36.230><c> will</c><00:31:36.470><c> be</c>

00:31:36.610 --> 00:31:36.620 align:start position:0%
characters in the string so that will be
 

00:31:36.620 --> 00:31:39.250 align:start position:0%
characters in the string so that will be
three<00:31:37.010><c> so</c><00:31:37.820><c> let's</c><00:31:38.210><c> try</c><00:31:38.420><c> this</c><00:31:38.480><c> again</c><00:31:38.900><c> here's</c>

00:31:39.250 --> 00:31:39.260 align:start position:0%
three so let's try this again here's
 

00:31:39.260 --> 00:31:40.150 align:start position:0%
three so let's try this again here's
another<00:31:39.320><c> example</c>

00:31:40.150 --> 00:31:40.160 align:start position:0%
another example
 

00:31:40.160 --> 00:31:42.940 align:start position:0%
another example
last<00:31:40.610><c> name</c><00:31:40.880><c> length</c><00:31:41.180><c> equals</c><00:31:41.660><c> last</c><00:31:42.020><c> name</c><00:31:42.380><c> we</c>

00:31:42.940 --> 00:31:42.950 align:start position:0%
last name length equals last name we
 

00:31:42.950 --> 00:31:46.510 align:start position:0%
last name length equals last name we
just<00:31:42.980><c> have</c><00:31:43.280><c> to</c><00:31:43.400><c> type</c><00:31:43.640><c> in</c><00:31:43.880><c> dot</c><00:31:44.390><c> length</c><00:31:44.870><c> and</c><00:31:45.520><c> just</c>

00:31:46.510 --> 00:31:46.520 align:start position:0%
just have to type in dot length and just
 

00:31:46.520 --> 00:31:48.700 align:start position:0%
just have to type in dot length and just
to<00:31:46.670><c> show</c><00:31:46.880><c> you</c><00:31:46.940><c> let</c><00:31:47.270><c> me</c><00:31:47.540><c> console</c><00:31:48.050><c> that</c><00:31:48.170><c> log</c><00:31:48.410><c> that</c>

00:31:48.700 --> 00:31:48.710 align:start position:0%
to show you let me console that log that
 

00:31:48.710 --> 00:31:51.520 align:start position:0%
to show you let me console that log that
and<00:31:49.070><c> you'll</c><00:31:50.000><c> be</c><00:31:50.120><c> able</c><00:31:50.180><c> to</c><00:31:50.300><c> see</c><00:31:50.600><c> if</c><00:31:50.810><c> I</c><00:31:50.990><c> put</c><00:31:51.440><c> in</c>

00:31:51.520 --> 00:31:51.530 align:start position:0%
and you'll be able to see if I put in
 

00:31:51.530 --> 00:31:55.120 align:start position:0%
and you'll be able to see if I put in
last<00:31:51.800><c> name</c><00:31:52.160><c> length</c><00:31:52.660><c> and</c><00:31:53.660><c> if</c><00:31:53.960><c> I</c><00:31:54.170><c> run</c><00:31:55.100><c> that</c>

00:31:55.120 --> 00:31:55.130 align:start position:0%
last name length and if I run that
 

00:31:55.130 --> 00:31:57.610 align:start position:0%
last name length and if I run that
you'll<00:31:55.580><c> see</c><00:31:55.790><c> eight</c><00:31:56.080><c> because</c><00:31:57.080><c> there</c><00:31:57.290><c> are</c><00:31:57.410><c> eight</c>

00:31:57.610 --> 00:31:57.620 align:start position:0%
you'll see eight because there are eight
 

00:31:57.620 --> 00:32:04.030 align:start position:0%
you'll see eight because there are eight
characters<00:31:58.250><c> in</c><00:31:58.490><c> the</c><00:31:58.910><c> word</c><00:31:59.150><c> Lovelace</c>

00:32:04.030 --> 00:32:04.040 align:start position:0%
 
 

00:32:04.040 --> 00:32:06.770 align:start position:0%
 
bracket<00:32:05.040><c> notation</c><00:32:05.190><c> is</c><00:32:05.850><c> a</c><00:32:05.880><c> way</c><00:32:06.180><c> to</c><00:32:06.240><c> get</c><00:32:06.600><c> a</c>

00:32:06.770 --> 00:32:06.780 align:start position:0%
bracket notation is a way to get a
 

00:32:06.780 --> 00:32:09.170 align:start position:0%
bracket notation is a way to get a
character<00:32:07.440><c> at</c><00:32:07.620><c> a</c><00:32:07.650><c> specific</c><00:32:07.980><c> index</c><00:32:08.730><c> within</c><00:32:09.000><c> a</c>

00:32:09.170 --> 00:32:09.180 align:start position:0%
character at a specific index within a
 

00:32:09.180 --> 00:32:11.090 align:start position:0%
character at a specific index within a
string<00:32:09.540><c> so</c><00:32:10.320><c> you</c><00:32:10.350><c> can</c><00:32:10.530><c> see</c><00:32:10.650><c> right</c><00:32:10.770><c> here</c><00:32:10.830><c> we</c><00:32:11.070><c> have</c>

00:32:11.090 --> 00:32:11.100 align:start position:0%
string so you can see right here we have
 

00:32:11.100 --> 00:32:13.460 align:start position:0%
string so you can see right here we have
the<00:32:11.280><c> first</c><00:32:11.490><c> name</c><00:32:11.820><c> adda</c><00:32:12.120><c> and</c><00:32:12.510><c> right</c><00:32:13.110><c> here</c><00:32:13.320><c> we</c>

00:32:13.460 --> 00:32:13.470 align:start position:0%
the first name adda and right here we
 

00:32:13.470 --> 00:32:15.650 align:start position:0%
the first name adda and right here we
have<00:32:13.620><c> first</c><00:32:14.010><c> name</c><00:32:14.400><c> and</c><00:32:14.760><c> then</c><00:32:15.180><c> here's</c><00:32:15.480><c> the</c>

00:32:15.650 --> 00:32:15.660 align:start position:0%
have first name and then here's the
 

00:32:15.660 --> 00:32:17.810 align:start position:0%
have first name and then here's the
bracken<00:32:16.200><c> notation</c><00:32:16.800><c> you</c><00:32:17.280><c> can</c><00:32:17.460><c> see</c><00:32:17.610><c> there's</c>

00:32:17.810 --> 00:32:17.820 align:start position:0%
bracken notation you can see there's
 

00:32:17.820 --> 00:32:21.200 align:start position:0%
bracken notation you can see there's
brackets<00:32:18.330><c> with</c><00:32:18.510><c> a</c><00:32:18.540><c> number</c><00:32:19.020><c> inside</c><00:32:19.430><c> so</c><00:32:20.430><c> most</c>

00:32:21.200 --> 00:32:21.210 align:start position:0%
brackets with a number inside so most
 

00:32:21.210 --> 00:32:23.120 align:start position:0%
brackets with a number inside so most
modern<00:32:21.630><c> programming</c><00:32:21.930><c> languages</c><00:32:22.920><c> like</c>

00:32:23.120 --> 00:32:23.130 align:start position:0%
modern programming languages like
 

00:32:23.130 --> 00:32:26.300 align:start position:0%
modern programming languages like
JavaScript<00:32:24.060><c> don't</c><00:32:24.810><c> start</c><00:32:25.290><c> counting</c><00:32:25.620><c> at</c><00:32:26.010><c> one</c>

00:32:26.300 --> 00:32:26.310 align:start position:0%
JavaScript don't start counting at one
 

00:32:26.310 --> 00:32:29.630 align:start position:0%
JavaScript don't start counting at one
like<00:32:26.760><c> humans</c><00:32:27.240><c> do</c><00:32:27.450><c> they</c><00:32:28.110><c> start</c><00:32:28.500><c> at</c><00:32:28.590><c> zero</c><00:32:28.980><c> which</c>

00:32:29.630 --> 00:32:29.640 align:start position:0%
like humans do they start at zero which
 

00:32:29.640 --> 00:32:32.690 align:start position:0%
like humans do they start at zero which
is<00:32:29.820><c> called</c><00:32:30.090><c> zero-based</c><00:32:30.960><c> indexing</c><00:32:31.400><c> so</c><00:32:32.400><c> with</c>

00:32:32.690 --> 00:32:32.700 align:start position:0%
is called zero-based indexing so with
 

00:32:32.700 --> 00:32:35.570 align:start position:0%
is called zero-based indexing so with
the<00:32:32.880><c> number</c><00:32:33.270><c> zero</c><00:32:33.810><c> that</c><00:32:34.470><c> refers</c><00:32:34.920><c> to</c><00:32:34.950><c> the</c><00:32:35.400><c> in</c>

00:32:35.570 --> 00:32:35.580 align:start position:0%
the number zero that refers to the in
 

00:32:35.580 --> 00:32:38.300 align:start position:0%
the number zero that refers to the in
the<00:32:35.940><c> first</c><00:32:36.270><c> index</c><00:32:36.870><c> of</c><00:32:37.110><c> this</c><00:32:37.590><c> string</c><00:32:38.010><c> which</c>

00:32:38.300 --> 00:32:38.310 align:start position:0%
the first index of this string which
 

00:32:38.310 --> 00:32:41.570 align:start position:0%
the first index of this string which
would<00:32:38.490><c> be</c><00:32:38.580><c> the</c><00:32:38.730><c> a</c><00:32:38.760><c> so</c><00:32:39.660><c> the</c><00:32:39.930><c> a</c><00:32:40.110><c> would</c><00:32:40.380><c> be</c><00:32:40.530><c> zero</c><00:32:40.890><c> D</c>

00:32:41.570 --> 00:32:41.580 align:start position:0%
would be the a so the a would be zero D
 

00:32:41.580 --> 00:32:45.710 align:start position:0%
would be the a so the a would be zero D
is<00:32:41.760><c> one</c><00:32:42.120><c> and</c><00:32:42.510><c> then</c><00:32:42.960><c> a</c><00:32:43.110><c> is</c><00:32:43.530><c> two</c><00:32:44.040><c> so</c><00:32:44.790><c> this</c><00:32:45.360><c> first</c>

00:32:45.710 --> 00:32:45.720 align:start position:0%
is one and then a is two so this first
 

00:32:45.720 --> 00:32:48.590 align:start position:0%
is one and then a is two so this first
letter<00:32:46.110><c> of</c><00:32:46.200><c> first</c><00:32:46.590><c> name</c><00:32:46.950><c> if</c><00:32:47.310><c> we</c><00:32:47.790><c> do</c><00:32:47.940><c> first</c><00:32:48.300><c> name</c>

00:32:48.590 --> 00:32:48.600 align:start position:0%
letter of first name if we do first name
 

00:32:48.600 --> 00:32:50.840 align:start position:0%
letter of first name if we do first name

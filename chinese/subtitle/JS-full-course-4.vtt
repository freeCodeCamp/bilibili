00:12:08.510 --> 00:12:08.520 align:start position:0%
value is undefined we have not set them
 

00:12:08.520 --> 00:12:10.970 align:start position:0%
value is undefined we have not set them
to<00:12:08.670><c> anything</c><00:12:08.850><c> but</c><00:12:09.810><c> it's</c><00:12:09.990><c> simple</c><00:12:10.350><c> to</c><00:12:10.500><c> fix</c><00:12:10.740><c> that</c>

00:12:10.970 --> 00:12:10.980 align:start position:0%
to anything but it's simple to fix that
 

00:12:10.980 --> 00:12:15.410 align:start position:0%
to anything but it's simple to fix that
I'll<00:12:11.250><c> just</c><00:12:11.640><c> set</c><00:12:11.880><c> this</c><00:12:12.060><c> to</c><00:12:12.270><c> 5</c><00:12:12.570><c> I'll</c><00:12:12.960><c> set</c><00:12:13.650><c> B</c><00:12:14.100><c> to</c><00:12:14.940><c> 10</c>

00:12:15.410 --> 00:12:15.420 align:start position:0%
I'll just set this to 5 I'll set B to 10
 

00:12:15.420 --> 00:12:18.110 align:start position:0%
I'll just set this to 5 I'll set B to 10
and<00:12:15.750><c> then</c><00:12:16.470><c> we</c><00:12:16.500><c> can</c><00:12:16.740><c> set</c><00:12:16.920><c> C</c><00:12:17.190><c> to</c><00:12:17.220><c> a</c><00:12:17.370><c> string</c><00:12:17.790><c> it's</c>

00:12:18.110 --> 00:12:18.120 align:start position:0%
and then we can set C to a string it's
 

00:12:18.120 --> 00:12:22.340 align:start position:0%
and then we can set C to a string it's
going<00:12:18.150><c> to</c><00:12:18.300><c> be</c><00:12:18.540><c> I</c><00:12:18.950><c> am</c><00:12:19.950><c> a</c><00:12:20.570><c> string</c><00:12:21.570><c> and</c><00:12:22.080><c> you</c><00:12:22.200><c> always</c>

00:12:22.340 --> 00:12:22.350 align:start position:0%
going to be I am a string and you always
 

00:12:22.350 --> 00:12:24.340 align:start position:0%
going to be I am a string and you always
have<00:12:22.530><c> to</c><00:12:22.620><c> put</c><00:12:22.770><c> in</c><00:12:22.920><c> quotation</c><00:12:23.400><c> marks</c><00:12:23.640><c> like</c><00:12:24.030><c> that</c>

00:12:24.340 --> 00:12:24.350 align:start position:0%
have to put in quotation marks like that
 

00:12:24.350 --> 00:12:28.490 align:start position:0%
have to put in quotation marks like that
so<00:12:25.350><c> you</c><00:12:26.040><c> can</c><00:12:26.070><c> see</c><00:12:26.400><c> a</c><00:12:26.610><c> a</c><00:12:27.090><c> plus</c><00:12:27.540><c> 1</c><00:12:27.960><c> is</c><00:12:28.230><c> going</c><00:12:28.410><c> to</c>

00:12:28.490 --> 00:12:28.500 align:start position:0%
so you can see a a plus 1 is going to
 

00:12:28.500 --> 00:12:32.510 align:start position:0%
so you can see a a plus 1 is going to
equal<00:12:28.860><c> 6</c><00:12:29.430><c> 5</c><00:12:29.850><c> plus</c><00:12:30.240><c> 1</c><00:12:30.600><c> equals</c><00:12:30.990><c> 6</c><00:12:31.230><c> B</c><00:12:31.710><c> equals</c><00:12:32.430><c> B</c>

00:12:32.510 --> 00:12:32.520 align:start position:0%
equal 6 5 plus 1 equals 6 B equals B
 

00:12:32.520 --> 00:12:35.960 align:start position:0%
equal 6 5 plus 1 equals 6 B equals B
plus<00:12:32.760><c> 5</c><00:12:33.390><c> that's</c><00:12:33.900><c> gonna</c><00:12:34.020><c> be</c><00:12:34.140><c> 15</c><00:12:34.710><c> and</c><00:12:35.040><c> then</c><00:12:35.610><c> C</c><00:12:35.880><c> is</c>

00:12:35.960 --> 00:12:35.970 align:start position:0%
plus 5 that's gonna be 15 and then C is
 

00:12:35.970 --> 00:12:42.569 align:start position:0%
plus 5 that's gonna be 15 and then C is
now<00:12:36.150><c> gonna</c><00:12:36.360><c> say</c><00:12:36.630><c> I</c><00:12:36.810><c> am</c><00:12:37.350><c> a</c><00:12:37.740><c> string</c>

00:12:42.569 --> 00:12:42.579 align:start position:0%
 
 

00:12:42.579 --> 00:12:45.519 align:start position:0%
 
variable<00:12:43.579><c> names</c><00:12:43.879><c> and</c><00:12:44.120><c> function</c><00:12:45.110><c> names</c><00:12:45.319><c> in</c>

00:12:45.519 --> 00:12:45.529 align:start position:0%
variable names and function names in
 

00:12:45.529 --> 00:12:47.740 align:start position:0%
variable names and function names in
JavaScript<00:12:46.190><c> are</c><00:12:46.370><c> case-sensitive</c>

00:12:47.740 --> 00:12:47.750 align:start position:0%
JavaScript are case-sensitive
 

00:12:47.750 --> 00:12:51.100 align:start position:0%
JavaScript are case-sensitive
that<00:12:48.410><c> means</c><00:12:48.649><c> the</c><00:12:48.829><c> capitalization</c><00:12:49.519><c> matters</c><00:12:50.180><c> so</c>

00:12:51.100 --> 00:12:51.110 align:start position:0%
that means the capitalization matters so
 

00:12:51.110 --> 00:12:54.519 align:start position:0%
that means the capitalization matters so
this<00:12:51.470><c> declaration</c><00:12:52.370><c> here</c><00:12:52.819><c> is</c><00:12:53.000><c> not</c><00:12:53.750><c> the</c><00:12:54.019><c> same</c><00:12:54.290><c> as</c>

00:12:54.519 --> 00:12:54.529 align:start position:0%
this declaration here is not the same as
 

00:12:54.529 --> 00:12:56.800 align:start position:0%
this declaration here is not the same as
this<00:12:54.709><c> assignment</c><00:12:55.209><c> even</c><00:12:56.209><c> though</c><00:12:56.329><c> the</c><00:12:56.509><c> letters</c>

00:12:56.800 --> 00:12:56.810 align:start position:0%
this assignment even though the letters
 

00:12:56.810 --> 00:12:59.470 align:start position:0%
this assignment even though the letters
are<00:12:56.959><c> the</c><00:12:57.019><c> same</c><00:12:57.379><c> the</c><00:12:57.800><c> capitalization</c><00:12:58.370><c> is</c><00:12:58.970><c> not</c>

00:12:59.470 --> 00:12:59.480 align:start position:0%
are the same the capitalization is not
 

00:12:59.480 --> 00:13:01.629 align:start position:0%
are the same the capitalization is not
the<00:12:59.779><c> same</c><00:13:00.050><c> so</c><00:13:00.589><c> it's</c><00:13:00.740><c> not</c><00:13:00.860><c> going</c><00:13:01.100><c> to</c><00:13:01.310><c> assign</c>

00:13:01.629 --> 00:13:01.639 align:start position:0%
the same so it's not going to assign
 

00:13:01.639 --> 00:13:05.050 align:start position:0%
the same so it's not going to assign
correctly<00:13:02.389><c> and</c><00:13:02.629><c> in</c><00:13:03.589><c> here</c><00:13:04.220><c> you'll</c><00:13:04.550><c> see</c><00:13:04.790><c> there's</c>

00:13:05.050 --> 00:13:05.060 align:start position:0%
correctly and in here you'll see there's
 

00:13:05.060 --> 00:13:07.660 align:start position:0%
correctly and in here you'll see there's
an<00:13:05.209><c> error</c><00:13:05.569><c> if</c><00:13:05.810><c> we</c><00:13:05.870><c> try</c><00:13:06.319><c> to</c><00:13:06.379><c> run</c><00:13:06.589><c> it</c><00:13:06.670><c> because</c>

00:13:07.660 --> 00:13:07.670 align:start position:0%
an error if we try to run it because
 

00:13:07.670 --> 00:13:10.329 align:start position:0%
an error if we try to run it because
this<00:13:08.000><c> has</c><00:13:08.240><c> not</c><00:13:08.509><c> been</c><00:13:08.839><c> defined</c><00:13:09.050><c> it</c><00:13:09.680><c> has</c><00:13:10.160><c> not</c>

00:13:10.329 --> 00:13:10.339 align:start position:0%
this has not been defined it has not
 

00:13:10.339 --> 00:13:13.449 align:start position:0%
this has not been defined it has not
been<00:13:10.579><c> declared</c><00:13:10.959><c> it's</c><00:13:12.009><c> generally</c><00:13:13.009><c> common</c>

00:13:13.449 --> 00:13:13.459 align:start position:0%
been declared it's generally common
 

00:13:13.459 --> 00:13:16.569 align:start position:0%
been declared it's generally common
practice<00:13:14.000><c> to</c><00:13:14.029><c> use</c><00:13:14.290><c> camel</c><00:13:15.290><c> case</c><00:13:15.339><c> so</c><00:13:16.339><c> let</c><00:13:16.459><c> me</c>

00:13:16.569 --> 00:13:16.579 align:start position:0%
practice to use camel case so let me
 

00:13:16.579 --> 00:13:18.490 align:start position:0%
practice to use camel case so let me
show<00:13:16.790><c> you</c><00:13:16.850><c> how</c><00:13:17.180><c> we</c><00:13:17.240><c> do</c><00:13:17.480><c> that</c><00:13:17.509><c> instead</c><00:13:18.439><c> of</c>

00:13:18.490 --> 00:13:18.500 align:start position:0%
show you how we do that instead of
 

00:13:18.500 --> 00:13:21.540 align:start position:0%
show you how we do that instead of
Studley<00:13:19.189><c> cap</c><00:13:19.550><c> var</c><00:13:20.060><c> it's</c><00:13:20.569><c> gonna</c><00:13:20.750><c> be</c><00:13:20.839><c> stud</c>

00:13:21.540 --> 00:13:21.550 align:start position:0%
Studley cap var it's gonna be stud
 

00:13:21.550 --> 00:13:25.990 align:start position:0%
Studley cap var it's gonna be stud
League<00:13:22.550><c> cap</c><00:13:23.209><c> var</c><00:13:23.990><c> so</c><00:13:24.410><c> the</c><00:13:25.160><c> first</c><00:13:25.519><c> letter</c><00:13:25.850><c> is</c>

00:13:25.990 --> 00:13:26.000 align:start position:0%
League cap var so the first letter is
 

00:13:26.000 --> 00:13:28.119 align:start position:0%
League cap var so the first letter is
always<00:13:26.269><c> gonna</c><00:13:26.420><c> be</c><00:13:26.480><c> lowercase</c><00:13:27.350><c> and</c><00:13:27.649><c> anytime</c>

00:13:28.119 --> 00:13:28.129 align:start position:0%
always gonna be lowercase and anytime
 

00:13:28.129 --> 00:13:30.280 align:start position:0%
always gonna be lowercase and anytime
you<00:13:28.430><c> have</c><00:13:28.490><c> a</c><00:13:28.610><c> new</c><00:13:28.939><c> word</c><00:13:29.300><c> or</c><00:13:29.600><c> new</c><00:13:29.750><c> section</c><00:13:30.139><c> of</c><00:13:30.199><c> a</c>

00:13:30.280 --> 00:13:30.290 align:start position:0%
you have a new word or new section of a
 

00:13:30.290 --> 00:13:32.199 align:start position:0%
you have a new word or new section of a
word<00:13:30.500><c> you</c><00:13:30.680><c> just</c><00:13:30.889><c> capitalize</c><00:13:31.579><c> the</c><00:13:32.180><c> first</c>

00:13:32.199 --> 00:13:32.209 align:start position:0%
word you just capitalize the first
 

00:13:32.209 --> 00:13:36.879 align:start position:0%
word you just capitalize the first
letter<00:13:32.660><c> and</c><00:13:33.220><c> so</c><00:13:34.300><c> we</c><00:13:35.300><c> can</c><00:13:35.480><c> change</c><00:13:35.720><c> this</c><00:13:36.079><c> this</c>

00:13:36.879 --> 00:13:36.889 align:start position:0%
letter and so we can change this this
 

00:13:36.889 --> 00:13:39.280 align:start position:0%
letter and so we can change this this
one's<00:13:37.189><c> correct</c><00:13:37.550><c> so</c><00:13:38.000><c> now</c><00:13:38.240><c> just</c><00:13:38.420><c> go</c><00:13:38.689><c> down</c><00:13:38.839><c> here</c>

00:13:39.280 --> 00:13:39.290 align:start position:0%
one's correct so now just go down here
 

00:13:39.290 --> 00:13:44.220 align:start position:0%
one's correct so now just go down here
studly<00:13:40.069><c> cap</c><00:13:41.060><c> var</c><00:13:41.689><c> and</c><00:13:42.170><c> then</c><00:13:42.949><c> we</c><00:13:43.220><c> just</c><00:13:43.459><c> do</c>

00:13:44.220 --> 00:13:44.230 align:start position:0%
studly cap var and then we just do
 

00:13:44.230 --> 00:13:50.699 align:start position:0%
studly cap var and then we just do
proper<00:13:45.230><c> camel</c><00:13:46.220><c> case</c><00:13:46.790><c> and</c><00:13:47.410><c> then</c><00:13:48.579><c> title</c><00:13:49.579><c> case</c>

00:13:50.699 --> 00:13:50.709 align:start position:0%
proper camel case and then title case
 

00:13:50.709 --> 00:13:55.689 align:start position:0%
proper camel case and then title case
over<00:13:51.709><c> so</c><00:13:52.639><c> now</c><00:13:53.089><c> all</c><00:13:53.480><c> these</c><00:13:54.139><c> should</c><00:13:54.589><c> be</c><00:13:54.699><c> defined</c>

00:13:55.689 --> 00:13:55.699 align:start position:0%
over so now all these should be defined
 

00:13:55.699 --> 00:13:57.850 align:start position:0%
over so now all these should be defined
so<00:13:56.329><c> we</c><00:13:56.449><c> declare</c><00:13:56.839><c> them</c><00:13:57.019><c> up</c><00:13:57.139><c> here</c><00:13:57.380><c> we</c><00:13:57.529><c> assign</c>

00:13:57.850 --> 00:13:57.860 align:start position:0%
so we declare them up here we assign
 

00:13:57.860 --> 00:14:00.519 align:start position:0%
so we declare them up here we assign
them<00:13:57.949><c> right</c><00:13:58.370><c> here</c><00:13:58.730><c> and</c><00:13:58.939><c> then</c><00:13:59.420><c> this</c><00:14:00.199><c> is</c><00:14:00.380><c> not</c>

00:14:00.519 --> 00:14:00.529 align:start position:0%
them right here and then this is not
 

00:14:00.529 --> 00:14:02.439 align:start position:0%
them right here and then this is not
going<00:14:00.680><c> to</c><00:14:00.740><c> give</c><00:14:00.889><c> us</c><00:14:01.009><c> any</c><00:14:01.220><c> errors</c><00:14:01.850><c> it's</c><00:14:02.120><c> going</c>

00:14:02.439 --> 00:14:02.449 align:start position:0%
going to give us any errors it's going
 

00:14:02.449 --> 00:14:04.269 align:start position:0%
going to give us any errors it's going
to<00:14:02.540><c> behave</c><00:14:02.689><c> exactly</c><00:14:03.050><c> how</c><00:14:03.649><c> we</c><00:14:03.709><c> want</c><00:14:04.100><c> it</c><00:14:04.130><c> to</c>

00:14:04.269 --> 00:14:04.279 align:start position:0%
to behave exactly how we want it to
 

00:14:04.279 --> 00:14:08.290 align:start position:0%
to behave exactly how we want it to
behave

00:14:08.290 --> 00:14:08.300 align:start position:0%
 
 

00:14:08.300 --> 00:14:10.940 align:start position:0%
 
adding<00:14:09.300><c> two</c><00:14:09.540><c> numbers</c><00:14:09.750><c> in</c><00:14:10.140><c> JavaScript</c><00:14:10.800><c> is</c>

00:14:10.940 --> 00:14:10.950 align:start position:0%
adding two numbers in JavaScript is
 

00:14:10.950 --> 00:14:12.230 align:start position:0%
adding two numbers in JavaScript is
pretty<00:14:11.280><c> straightforward</c>

00:14:12.230 --> 00:14:12.240 align:start position:0%
pretty straightforward
 

00:14:12.240 --> 00:14:14.660 align:start position:0%
pretty straightforward
you<00:14:12.540><c> just</c><00:14:12.780><c> use</c><00:14:12.960><c> the</c><00:14:13.170><c> plus</c><00:14:13.500><c> operator</c><00:14:14.100><c> so</c><00:14:14.490><c> this</c>

00:14:14.660 --> 00:14:14.670 align:start position:0%
you just use the plus operator so this
 

00:14:14.670 --> 00:14:17.780 align:start position:0%
you just use the plus operator so this
says<00:14:14.910><c> 10</c><00:14:15.330><c> plus</c><00:14:15.690><c> 0</c><00:14:16.050><c> which</c><00:14:16.410><c> equals</c><00:14:16.770><c> 10</c><00:14:17.040><c> we</c><00:14:17.760><c> can</c>

00:14:17.780 --> 00:14:17.790 align:start position:0%
says 10 plus 0 which equals 10 we can
 

00:14:17.790 --> 00:14:20.510 align:start position:0%
says 10 plus 0 which equals 10 we can
also<00:14:18.030><c> do</c><00:14:18.300><c> 10</c><00:14:18.750><c> plus</c><00:14:19.080><c> 10</c><00:14:19.500><c> which</c><00:14:20.160><c> is</c><00:14:20.220><c> going</c><00:14:20.460><c> to</c>

00:14:20.510 --> 00:14:20.520 align:start position:0%
also do 10 plus 10 which is going to
 

00:14:20.520 --> 00:14:24.770 align:start position:0%
also do 10 plus 10 which is going to
equal<00:14:20.850><c> 20</c><00:14:21.150><c> if</c><00:14:21.450><c> we</c><00:14:21.990><c> do</c><00:14:22.170><c> a</c><00:14:22.200><c> console</c><00:14:22.920><c> log</c><00:14:23.610><c> and</c><00:14:24.240><c> I</c>

00:14:24.770 --> 00:14:24.780 align:start position:0%
equal 20 if we do a console log and I
 

00:14:24.780 --> 00:14:27.620 align:start position:0%
equal 20 if we do a console log and I
can<00:14:24.960><c> put</c><00:14:25.140><c> some</c><00:14:25.560><c> here</c><00:14:25.980><c> and</c><00:14:26.160><c> then</c><00:14:27.060><c> you'll</c><00:14:27.450><c> be</c>

00:14:27.620 --> 00:14:27.630 align:start position:0%
can put some here and then you'll be
 

00:14:27.630 --> 00:14:30.440 align:start position:0%
can put some here and then you'll be
able<00:14:27.690><c> to</c><00:14:27.810><c> see</c><00:14:28.050><c> that</c><00:14:28.410><c> the</c><00:14:28.530><c> answer</c><00:14:28.950><c> is</c><00:14:29.130><c> 20</c><00:14:29.670><c> right</c>

00:14:30.440 --> 00:14:30.450 align:start position:0%
able to see that the answer is 20 right
 

00:14:30.450 --> 00:14:37.210 align:start position:0%
able to see that the answer is 20 right
in<00:14:30.570><c> the</c><00:14:30.690><c> console</c><00:14:31.170><c> 10</c><00:14:31.500><c> plus</c><00:14:31.770><c> 10</c><00:14:32.040><c> is</c><00:14:32.310><c> 20</c>

00:14:37.210 --> 00:14:37.220 align:start position:0%
 
 

00:14:37.220 --> 00:14:39.670 align:start position:0%
 
and<00:14:37.899><c> subtraction</c><00:14:38.899><c> is</c><00:14:39.019><c> also</c><00:14:39.319><c> what</c><00:14:39.470><c> you</c><00:14:39.560><c> would</c>

00:14:39.670 --> 00:14:39.680 align:start position:0%
and subtraction is also what you would
 

00:14:39.680 --> 00:14:41.470 align:start position:0%
and subtraction is also what you would
expect<00:14:40.100><c> we</c><00:14:40.279><c> have</c><00:14:40.399><c> the</c><00:14:40.519><c> subtraction</c><00:14:41.000><c> sign</c><00:14:41.449><c> here</c>

00:14:41.470 --> 00:14:41.480 align:start position:0%
expect we have the subtraction sign here
 

00:14:41.480 --> 00:14:45.069 align:start position:0%
expect we have the subtraction sign here
this<00:14:42.230><c> says</c><00:14:42.439><c> 45</c><00:14:42.920><c> minus</c><00:14:43.670><c> zero</c><00:14:44.000><c> we</c><00:14:44.600><c> can</c><00:14:44.750><c> also</c><00:14:44.870><c> do</c>

00:14:45.069 --> 00:14:45.079 align:start position:0%
this says 45 minus zero we can also do
 

00:14:45.079 --> 00:14:49.090 align:start position:0%
this says 45 minus zero we can also do
45<00:14:45.560><c> minus</c><00:14:46.220><c> 33</c><00:14:46.939><c> and</c><00:14:47.209><c> then</c><00:14:47.839><c> that</c><00:14:48.019><c> would</c><00:14:48.170><c> equal</c><00:14:48.560><c> 12</c>

00:14:49.090 --> 00:14:49.100 align:start position:0%
45 minus 33 and then that would equal 12
 

00:14:49.100 --> 00:14:55.300 align:start position:0%
45 minus 33 and then that would equal 12
so<00:14:49.310><c> the</c><00:14:49.430><c> difference</c><00:14:49.850><c> variable</c><00:14:50.360><c> equals</c><00:14:50.779><c> 12</c><00:14:51.170><c> now</c>

00:14:55.300 --> 00:14:55.310 align:start position:0%
 
 

00:14:55.310 --> 00:14:57.970 align:start position:0%
 
multiplication<00:14:56.150><c> in</c><00:14:56.660><c> JavaScript</c><00:14:57.320><c> uses</c><00:14:57.770><c> this</c>

00:14:57.970 --> 00:14:57.980 align:start position:0%
multiplication in JavaScript uses this
 

00:14:57.980 --> 00:15:00.670 align:start position:0%
multiplication in JavaScript uses this
asterisk<00:14:58.760><c> or</c><00:14:58.880><c> a</c><00:14:58.970><c> star</c><00:14:59.600><c> symbol</c><00:15:00.200><c> here</c>

00:15:00.670 --> 00:15:00.680 align:start position:0%
asterisk or a star symbol here
 

00:15:00.680 --> 00:15:04.960 align:start position:0%
asterisk or a star symbol here
so<00:15:01.070><c> this</c><00:15:01.310><c> says</c><00:15:01.580><c> 8</c><00:15:01.850><c> times</c><00:15:02.450><c> 0</c><00:15:02.720><c> which</c><00:15:03.650><c> is</c><00:15:03.710><c> 0</c><00:15:03.860><c> or</c><00:15:04.580><c> we</c>

00:15:04.960 --> 00:15:04.970 align:start position:0%
so this says 8 times 0 which is 0 or we
 

00:15:04.970 --> 00:15:07.660 align:start position:0%
so this says 8 times 0 which is 0 or we
can<00:15:05.150><c> change</c><00:15:05.360><c> it</c><00:15:05.480><c> to</c><00:15:05.570><c> 8</c><00:15:05.750><c> times</c><00:15:06.110><c> 10</c><00:15:06.529><c> which</c><00:15:07.100><c> is</c><00:15:07.160><c> 80</c>

00:15:07.660 --> 00:15:07.670 align:start position:0%
can change it to 8 times 10 which is 80
 

00:15:07.670 --> 00:15:14.489 align:start position:0%
can change it to 8 times 10 which is 80
so<00:15:08.390><c> now</c><00:15:08.570><c> the</c><00:15:08.630><c> product</c><00:15:09.380><c> variable</c><00:15:09.920><c> equals</c><00:15:10.580><c> 80</c>

00:15:14.489 --> 00:15:14.499 align:start position:0%
 
 

00:15:14.499 --> 00:15:17.009 align:start position:0%
 
you<00:15:15.249><c> can</c><00:15:15.429><c> divide</c><00:15:15.759><c> in</c><00:15:15.909><c> JavaScript</c><00:15:16.599><c> with</c><00:15:16.809><c> this</c>

00:15:17.009 --> 00:15:17.019 align:start position:0%
you can divide in JavaScript with this
 

00:15:17.019 --> 00:15:20.789 align:start position:0%
you can divide in JavaScript with this
slash<00:15:17.589><c> symbol</c><00:15:18.009><c> so</c><00:15:18.759><c> this</c><00:15:18.789><c> says</c><00:15:19.179><c> 66</c><00:15:20.019><c> divided</c><00:15:20.649><c> by</c>

00:15:20.789 --> 00:15:20.799 align:start position:0%
slash symbol so this says 66 divided by
 

00:15:20.799 --> 00:15:23.999 align:start position:0%
slash symbol so this says 66 divided by
zero<00:15:21.249><c> we</c><00:15:21.969><c> can</c><00:15:22.179><c> change</c><00:15:22.509><c> this</c><00:15:22.719><c> to</c><00:15:22.799><c> 33</c>

00:15:23.999 --> 00:15:24.009 align:start position:0%
zero we can change this to 33
 

00:15:24.009 --> 00:15:28.469 align:start position:0%
zero we can change this to 33
so<00:15:24.579><c> now</c><00:15:25.059><c> 66</c><00:15:26.049><c> divided</c><00:15:26.319><c> by</c><00:15:26.439><c> 33</c><00:15:26.769><c> is</c><00:15:27.159><c> two</c><00:15:27.479><c> quotient</c>

00:15:28.469 --> 00:15:28.479 align:start position:0%
so now 66 divided by 33 is two quotient
 

00:15:28.479 --> 00:15:32.879 align:start position:0%
so now 66 divided by 33 is two quotient
equals<00:15:28.989><c> two</c>

00:15:32.879 --> 00:15:32.889 align:start position:0%
 
 

00:15:32.889 --> 00:15:36.090 align:start position:0%
 
to<00:15:33.670><c> increment</c><00:15:34.179><c> a</c><00:15:34.569><c> number</c><00:15:34.989><c> means</c><00:15:35.199><c> to</c><00:15:35.470><c> add</c><00:15:35.709><c> one</c>

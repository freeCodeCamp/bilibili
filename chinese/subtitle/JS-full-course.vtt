WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.540 align:start position:0%
 
this<00:00:00.420><c> is</c><00:00:00.690><c> the</c><00:00:01.079><c> beginners</c><00:00:01.589><c> JavaScript</c><00:00:02.280><c> course</c>

00:00:02.540 --> 00:00:02.550 align:start position:0%
this is the beginners JavaScript course
 

00:00:02.550 --> 00:00:06.050 align:start position:0%
this is the beginners JavaScript course
you<00:00:02.939><c> are</c><00:00:03.030><c> looking</c><00:00:03.360><c> for</c><00:00:03.600><c> my</c><00:00:04.589><c> name</c><00:00:04.650><c> is</c><00:00:04.859><c> Bo</c><00:00:05.520><c> Carnes</c>

00:00:06.050 --> 00:00:06.060 align:start position:0%
you are looking for my name is Bo Carnes
 

00:00:06.060 --> 00:00:10.009 align:start position:0%
you are looking for my name is Bo Carnes
and<00:00:06.299><c> I'm</c><00:00:06.600><c> with</c><00:00:06.870><c> freak</c><00:00:07.200><c> ok</c><00:00:07.620><c> org</c><00:00:08.130><c> in</c><00:00:08.580><c> this</c><00:00:09.420><c> full</c>

00:00:10.009 --> 00:00:10.019 align:start position:0%
and I'm with freak ok org in this full
 

00:00:10.019 --> 00:00:12.110 align:start position:0%
and I'm with freak ok org in this full
JavaScript<00:00:10.500><c> course</c><00:00:11.160><c> you</c><00:00:11.759><c> will</c><00:00:11.910><c> learn</c>

00:00:12.110 --> 00:00:12.120 align:start position:0%
JavaScript course you will learn
 

00:00:12.120 --> 00:00:13.970 align:start position:0%
JavaScript course you will learn
everything<00:00:12.360><c> you</c><00:00:13.049><c> need</c><00:00:13.230><c> to</c><00:00:13.380><c> know</c><00:00:13.410><c> to</c><00:00:13.650><c> get</c>

00:00:13.970 --> 00:00:13.980 align:start position:0%
everything you need to know to get
 

00:00:13.980 --> 00:00:17.060 align:start position:0%
everything you need to know to get
started<00:00:14.490><c> with</c><00:00:14.670><c> JavaScript</c><00:00:15.509><c> this</c><00:00:16.410><c> course</c><00:00:16.830><c> is</c>

00:00:17.060 --> 00:00:17.070 align:start position:0%
started with JavaScript this course is
 

00:00:17.070 --> 00:00:20.210 align:start position:0%
started with JavaScript this course is
perfect<00:00:17.430><c> for</c><00:00:17.910><c> beginners</c><00:00:18.570><c> or</c><00:00:19.039><c> anyone</c><00:00:20.039><c> that</c>

00:00:20.210 --> 00:00:20.220 align:start position:0%
perfect for beginners or anyone that
 

00:00:20.220 --> 00:00:22.400 align:start position:0%
perfect for beginners or anyone that
just<00:00:20.340><c> wants</c><00:00:20.670><c> a</c><00:00:20.699><c> refresher</c><00:00:21.180><c> on</c><00:00:21.510><c> basic</c>

00:00:22.400 --> 00:00:22.410 align:start position:0%
just wants a refresher on basic
 

00:00:22.410 --> 00:00:24.769 align:start position:0%
just wants a refresher on basic
JavaScript<00:00:22.740><c> syntax</c><00:00:23.240><c> this</c><00:00:24.240><c> course</c><00:00:24.539><c> actually</c>

00:00:24.769 --> 00:00:24.779 align:start position:0%
JavaScript syntax this course actually
 

00:00:24.779 --> 00:00:27.529 align:start position:0%
JavaScript syntax this course actually
goes<00:00:25.170><c> along</c><00:00:25.439><c> with</c><00:00:26.010><c> the</c><00:00:26.310><c> free</c><00:00:26.609><c> code</c><00:00:26.849><c> kappa</c><00:00:27.119><c> or</c>

00:00:27.529 --> 00:00:27.539 align:start position:0%
goes along with the free code kappa or
 

00:00:27.539 --> 00:00:30.080 align:start position:0%
goes along with the free code kappa or
javascript<00:00:28.380><c> curriculum</c><00:00:29.010><c> so</c><00:00:29.640><c> if</c><00:00:29.789><c> you</c><00:00:29.910><c> want</c>

00:00:30.080 --> 00:00:30.090 align:start position:0%
javascript curriculum so if you want
 

00:00:30.090 --> 00:00:32.479 align:start position:0%
javascript curriculum so if you want
some<00:00:30.300><c> live</c><00:00:30.539><c> coding</c><00:00:30.900><c> challenges</c><00:00:31.650><c> to</c><00:00:32.040><c> go</c><00:00:32.189><c> along</c>

00:00:32.479 --> 00:00:32.489 align:start position:0%
some live coding challenges to go along
 

00:00:32.489 --> 00:00:34.459 align:start position:0%
some live coding challenges to go along
with<00:00:32.520><c> every</c><00:00:33.000><c> part</c><00:00:33.270><c> of</c><00:00:33.300><c> this</c><00:00:33.420><c> course</c><00:00:33.780><c> you</c><00:00:34.320><c> can</c>

00:00:34.459 --> 00:00:34.469 align:start position:0%
with every part of this course you can
 

00:00:34.469 --> 00:00:36.110 align:start position:0%
with every part of this course you can
check<00:00:34.710><c> the</c><00:00:34.860><c> link</c><00:00:35.100><c> in</c><00:00:35.219><c> the</c><00:00:35.340><c> description</c><00:00:35.910><c> to</c>

00:00:36.110 --> 00:00:36.120 align:start position:0%
check the link in the description to
 

00:00:36.120 --> 00:00:38.600 align:start position:0%
check the link in the description to
that<00:00:36.149><c> curriculum</c><00:00:36.570><c> but</c><00:00:37.469><c> this</c><00:00:37.770><c> is</c><00:00:37.950><c> a</c><00:00:37.980><c> completely</c>

00:00:38.600 --> 00:00:38.610 align:start position:0%
that curriculum but this is a completely
 

00:00:38.610 --> 00:00:41.810 align:start position:0%
that curriculum but this is a completely
standalone<00:00:38.940><c> video</c><00:00:39.809><c> so</c><00:00:40.500><c> you</c><00:00:40.920><c> don't</c><00:00:41.100><c> need</c><00:00:41.399><c> to</c><00:00:41.670><c> go</c>

00:00:41.810 --> 00:00:41.820 align:start position:0%
standalone video so you don't need to go
 

00:00:41.820 --> 00:00:44.150 align:start position:0%
standalone video so you don't need to go
through<00:00:42.059><c> freako</c><00:00:42.570><c> Kappa</c><00:00:42.809><c> org</c><00:00:43.170><c> but</c><00:00:43.739><c> it</c><00:00:43.890><c> could</c><00:00:44.070><c> be</c>

00:00:44.150 --> 00:00:44.160 align:start position:0%
through freako Kappa org but it could be
 

00:00:44.160 --> 00:00:47.299 align:start position:0%
through freako Kappa org but it could be
helpful<00:00:44.899><c> also</c><00:00:45.899><c> after</c><00:00:46.500><c> this</c><00:00:46.680><c> course</c><00:00:47.039><c> you're</c>

00:00:47.299 --> 00:00:47.309 align:start position:0%
helpful also after this course you're
 

00:00:47.309 --> 00:00:50.029 align:start position:0%
helpful also after this course you're
going<00:00:47.340><c> to</c><00:00:47.670><c> want</c><00:00:48.180><c> to</c><00:00:48.239><c> complete</c><00:00:48.899><c> some</c><00:00:49.200><c> or</c><00:00:49.530><c> build</c>

00:00:50.029 --> 00:00:50.039 align:start position:0%
going to want to complete some or build
 

00:00:50.039 --> 00:00:52.639 align:start position:0%
going to want to complete some or build
some<00:00:50.399><c> JavaScript</c><00:00:51.090><c> projects</c><00:00:51.690><c> so</c><00:00:52.289><c> I</c><00:00:52.320><c> have</c><00:00:52.620><c> a</c>

00:00:52.639 --> 00:00:52.649 align:start position:0%
some JavaScript projects so I have a
 

00:00:52.649 --> 00:00:55.069 align:start position:0%
some JavaScript projects so I have a
link<00:00:52.949><c> in</c><00:00:53.190><c> the</c><00:00:53.280><c> description</c><00:00:53.399><c> to</c><00:00:54.300><c> some</c><00:00:54.600><c> project</c>

00:00:55.069 --> 00:00:55.079 align:start position:0%
link in the description to some project
 

00:00:55.079 --> 00:00:57.350 align:start position:0%
link in the description to some project
tutorials<00:00:55.770><c> but</c><00:00:56.489><c> then</c><00:00:56.640><c> after</c><00:00:56.910><c> event</c><00:00:57.180><c> you're</c>

00:00:57.350 --> 00:00:57.360 align:start position:0%
tutorials but then after event you're
 

00:00:57.360 --> 00:00:59.060 align:start position:0%
tutorials but then after event you're
going<00:00:57.390><c> to</c><00:00:57.570><c> want</c><00:00:57.750><c> to</c><00:00:57.840><c> create</c><00:00:57.989><c> some</c><00:00:58.320><c> project</c><00:00:58.920><c> on</c>

00:00:59.060 --> 00:00:59.070 align:start position:0%
going to want to create some project on
 

00:00:59.070 --> 00:01:01.220 align:start position:0%
going to want to create some project on
your<00:00:59.129><c> own</c><00:00:59.460><c> that's</c><00:01:00.300><c> how</c><00:01:00.390><c> you</c><00:01:00.510><c> really</c><00:01:00.989><c> learn</c>

00:01:01.220 --> 00:01:01.230 align:start position:0%
your own that's how you really learn
 

00:01:01.230 --> 00:01:03.110 align:start position:0%
your own that's how you really learn
JavaScript<00:01:01.920><c> you</c><00:01:02.309><c> have</c><00:01:02.460><c> to</c><00:01:02.579><c> create</c><00:01:02.820><c> things</c>

00:01:03.110 --> 00:01:03.120 align:start position:0%
JavaScript you have to create things
 

00:01:03.120 --> 00:01:04.880 align:start position:0%
JavaScript you have to create things
without<00:01:03.359><c> even</c><00:01:03.539><c> going</c><00:01:04.019><c> through</c><00:01:04.199><c> the</c><00:01:04.320><c> tutorial</c>

00:01:04.880 --> 00:01:04.890 align:start position:0%
without even going through the tutorial
 

00:01:04.890 --> 00:01:06.980 align:start position:0%
without even going through the tutorial
and<00:01:05.040><c> just</c><00:01:05.250><c> use</c><00:01:05.760><c> a</c><00:01:05.790><c> search</c><00:01:06.210><c> engine</c><00:01:06.390><c> to</c><00:01:06.659><c> find</c><00:01:06.689><c> the</c>

00:01:06.980 --> 00:01:06.990 align:start position:0%
and just use a search engine to find the
 

00:01:06.990 --> 00:01:08.510 align:start position:0%
and just use a search engine to find the
things<00:01:07.200><c> that</c><00:01:07.290><c> you</c><00:01:07.439><c> don't</c><00:01:07.950><c> know</c><00:01:08.100><c> or</c><00:01:08.130><c> need</c><00:01:08.400><c> to</c>

00:01:08.510 --> 00:01:08.520 align:start position:0%
things that you don't know or need to
 

00:01:08.520 --> 00:01:12.080 align:start position:0%
things that you don't know or need to
learn<00:01:08.900><c> to</c><00:01:09.900><c> go</c><00:01:10.049><c> along</c><00:01:10.380><c> with</c><00:01:10.640><c> the</c><00:01:11.640><c> free</c><00:01:11.850><c> code</c>

00:01:12.080 --> 00:01:12.090 align:start position:0%
learn to go along with the free code
 

00:01:12.090 --> 00:01:14.600 align:start position:0%
learn to go along with the free code
camp<00:01:12.330><c> curriculum</c><00:01:12.900><c> I</c><00:01:13.080><c> have</c><00:01:13.439><c> all</c><00:01:13.619><c> the</c><00:01:13.740><c> es6</c><00:01:14.220><c> stuff</c>

00:01:14.600 --> 00:01:14.610 align:start position:0%
camp curriculum I have all the es6 stuff
 

00:01:14.610 --> 00:01:17.300 align:start position:0%
camp curriculum I have all the es6 stuff
in<00:01:14.880><c> the</c><00:01:15.030><c> second</c><00:01:15.509><c> part</c><00:01:15.720><c> of</c><00:01:15.780><c> this</c><00:01:15.900><c> course</c><00:01:16.310><c> and</c>

00:01:17.300 --> 00:01:17.310 align:start position:0%
in the second part of this course and
 

00:01:17.310 --> 00:01:18.230 align:start position:0%
in the second part of this course and
that's<00:01:17.549><c> pretty</c><00:01:17.729><c> much</c><00:01:17.909><c> it</c>

00:01:18.230 --> 00:01:18.240 align:start position:0%
that's pretty much it
 

00:01:18.240 --> 00:01:27.109 align:start position:0%
that's pretty much it
let's<00:01:18.689><c> learn</c><00:01:18.960><c> some</c><00:01:19.320><c> JavaScript</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
 
 

00:01:27.119 --> 00:01:30.529 align:start position:0%
 
so<00:01:27.810><c> how</c><00:01:28.140><c> exactly</c><00:01:28.710><c> do</c><00:01:28.950><c> you</c><00:01:29.039><c> install</c><00:01:29.549><c> JavaScript</c>

00:01:30.529 --> 00:01:30.539 align:start position:0%
so how exactly do you install JavaScript
 

00:01:30.539 --> 00:01:33.340 align:start position:0%
so how exactly do you install JavaScript
well<00:01:31.469><c> for</c><00:01:32.009><c> the</c><00:01:32.100><c> most</c><00:01:32.310><c> part</c><00:01:32.609><c> you</c><00:01:32.909><c> don't</c>

00:01:33.340 --> 00:01:33.350 align:start position:0%
well for the most part you don't
 

00:01:33.350 --> 00:01:36.230 align:start position:0%
well for the most part you don't
actually<00:01:34.350><c> all</c><00:01:34.590><c> web</c><00:01:34.979><c> browsers</c><00:01:35.189><c> can</c><00:01:35.880><c> run</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
actually all web browsers can run
 

00:01:36.240 --> 00:01:39.380 align:start position:0%
actually all web browsers can run
JavaScript<00:01:37.229><c> which</c><00:01:38.009><c> is</c><00:01:38.159><c> great</c><00:01:38.429><c> cuz</c><00:01:38.880><c> a</c><00:01:38.909><c> lot</c><00:01:39.210><c> of</c>

00:01:39.380 --> 00:01:39.390 align:start position:0%
JavaScript which is great cuz a lot of
 

00:01:39.390 --> 00:01:42.169 align:start position:0%
JavaScript which is great cuz a lot of
devices<00:01:39.750><c> have</c><00:01:40.350><c> web</c><00:01:40.710><c> browsers</c><00:01:41.250><c> on</c><00:01:41.490><c> them</c><00:01:41.819><c> so</c>

00:01:42.169 --> 00:01:42.179 align:start position:0%
devices have web browsers on them so
 

00:01:42.179 --> 00:01:44.480 align:start position:0%
devices have web browsers on them so
when<00:01:42.450><c> you</c><00:01:42.539><c> write</c><00:01:42.719><c> something</c><00:01:43.229><c> with</c><00:01:43.490><c> JavaScript</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
when you write something with JavaScript
 

00:01:44.490 --> 00:01:47.569 align:start position:0%
when you write something with JavaScript
it<00:01:44.909><c> will</c><00:01:45.090><c> run</c><00:01:45.390><c> on</c><00:01:45.630><c> all</c><00:01:46.020><c> sorts</c><00:01:46.619><c> of</c><00:01:46.709><c> devices</c><00:01:46.920><c> and</c>

00:01:47.569 --> 00:01:47.579 align:start position:0%
it will run on all sorts of devices and
 

00:01:47.579 --> 00:01:50.149 align:start position:0%
it will run on all sorts of devices and
operating<00:01:48.090><c> systems</c><00:01:48.959><c> so</c><00:01:49.590><c> you</c><00:01:49.649><c> have</c><00:01:49.859><c> a</c><00:01:49.890><c> few</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
operating systems so you have a few
 

00:01:50.159 --> 00:01:52.550 align:start position:0%
operating systems so you have a few
options<00:01:50.640><c> for</c><00:01:50.700><c> writing</c><00:01:51.240><c> JavaScript</c><00:01:51.959><c> let</c><00:01:52.439><c> me</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
options for writing JavaScript let me
 

00:01:52.560 --> 00:01:54.260 align:start position:0%
options for writing JavaScript let me
show<00:01:52.740><c> you</c><00:01:52.799><c> a</c><00:01:52.950><c> few</c><00:01:53.310><c> things</c><00:01:53.520><c> you</c><00:01:53.670><c> can</c><00:01:53.880><c> do</c><00:01:54.060><c> to</c>

00:01:54.260 --> 00:01:54.270 align:start position:0%
show you a few things you can do to
 

00:01:54.270 --> 00:01:57.020 align:start position:0%
show you a few things you can do to
follow<00:01:54.539><c> along</c><00:01:55.049><c> with</c><00:01:55.109><c> this</c><00:01:55.590><c> course</c><00:01:56.069><c> you</c><00:01:56.700><c> could</c>

00:01:57.020 --> 00:01:57.030 align:start position:0%
follow along with this course you could
 

00:01:57.030 --> 00:01:59.630 align:start position:0%
follow along with this course you could
download<00:01:57.240><c> a</c><00:01:57.569><c> code</c><00:01:57.929><c> editor</c><00:01:58.369><c> here</c><00:01:59.369><c> I</c><00:01:59.399><c> have</c>

00:01:59.630 --> 00:01:59.640 align:start position:0%
download a code editor here I have
 

00:01:59.640 --> 00:02:02.899 align:start position:0%
download a code editor here I have
sublime<00:02:00.119><c> text</c><00:02:00.479><c> you</c><00:02:01.200><c> could</c><00:02:01.349><c> also</c><00:02:01.530><c> use</c><00:02:02.130><c> Visual</c>

00:02:02.899 --> 00:02:02.909 align:start position:0%
sublime text you could also use Visual
 

00:02:02.909 --> 00:02:05.839 align:start position:0%
sublime text you could also use Visual
Studio<00:02:03.030><c> code</c><00:02:03.509><c> or</c><00:02:03.869><c> atom</c><00:02:04.319><c> or</c><00:02:04.530><c> any</c><00:02:05.039><c> code</c><00:02:05.429><c> editor</c>

00:02:05.839 --> 00:02:05.849 align:start position:0%
Studio code or atom or any code editor
 

00:02:05.849 --> 00:02:10.039 align:start position:0%
Studio code or atom or any code editor
and<00:02:06.090><c> I've</c><00:02:06.989><c> created</c><00:02:07.560><c> an</c><00:02:07.860><c> HTML</c><00:02:08.789><c> file</c><00:02:09.090><c> because</c>

00:02:10.039 --> 00:02:10.049 align:start position:0%
and I've created an HTML file because
 

00:02:10.049 --> 00:02:12.410 align:start position:0%
and I've created an HTML file because
HTML<00:02:10.530><c> files</c><00:02:10.920><c> can</c><00:02:11.190><c> be</c><00:02:11.220><c> open</c><00:02:11.640><c> in</c><00:02:11.730><c> web</c><00:02:11.910><c> browsers</c>

00:02:12.410 --> 00:02:12.420 align:start position:0%
HTML files can be open in web browsers
 

00:02:12.420 --> 00:02:16.309 align:start position:0%
HTML files can be open in web browsers
and<00:02:12.660><c> I</c><00:02:13.440><c> have</c><00:02:14.010><c> these</c><00:02:14.220><c> script</c><00:02:14.910><c> tags</c><00:02:15.269><c> these</c><00:02:16.140><c> are</c>

00:02:16.309 --> 00:02:16.319 align:start position:0%
and I have these script tags these are
 

00:02:16.319 --> 00:02:19.069 align:start position:0%
and I have these script tags these are
HTML<00:02:16.560><c> tags</c><00:02:17.280><c> but</c><00:02:17.790><c> within</c><00:02:18.090><c> our</c><00:02:18.239><c> script</c><00:02:18.599><c> tags</c><00:02:18.810><c> we</c>

00:02:19.069 --> 00:02:19.079 align:start position:0%
HTML tags but within our script tags we
 

00:02:19.079 --> 00:02:21.860 align:start position:0%
HTML tags but within our script tags we
have<00:02:19.260><c> our</c><00:02:19.440><c> JavaScript</c><00:02:20.129><c> so</c><00:02:20.790><c> if</c><00:02:21.090><c> I</c><00:02:21.269><c> open</c><00:02:21.450><c> up</c><00:02:21.720><c> this</c>

00:02:21.860 --> 00:02:21.870 align:start position:0%
have our JavaScript so if I open up this
 

00:02:21.870 --> 00:02:23.900 align:start position:0%
have our JavaScript so if I open up this
file<00:02:22.170><c> in</c><00:02:22.379><c> a</c><00:02:22.440><c> web</c><00:02:22.650><c> browser</c><00:02:22.680><c> it</c><00:02:23.250><c> looks</c><00:02:23.489><c> like</c><00:02:23.670><c> this</c>

00:02:23.900 --> 00:02:23.910 align:start position:0%
file in a web browser it looks like this
 

00:02:23.910 --> 00:02:28.250 align:start position:0%
file in a web browser it looks like this
well<00:02:24.629><c> I</c><00:02:24.810><c> can</c><00:02:25.110><c> open</c><00:02:25.500><c> up</c><00:02:25.620><c> my</c><00:02:26.599><c> JavaScript</c><00:02:27.599><c> console</c>

00:02:28.250 --> 00:02:28.260 align:start position:0%
well I can open up my JavaScript console
 

00:02:28.260 --> 00:02:31.370 align:start position:0%
well I can open up my JavaScript console
and<00:02:28.650><c> then</c><00:02:29.370><c> in</c><00:02:29.519><c> the</c><00:02:29.700><c> console</c><00:02:30.299><c> you</c><00:02:30.810><c> can</c><00:02:31.019><c> see</c><00:02:31.230><c> it</c>

00:02:31.370 --> 00:02:31.380 align:start position:0%
and then in the console you can see it
 

00:02:31.380 --> 00:02:34.670 align:start position:0%
and then in the console you can see it
says<00:02:31.590><c> hello</c><00:02:32.100><c> world</c><00:02:32.450><c> that's</c><00:02:33.450><c> right</c><00:02:33.900><c> from</c><00:02:34.260><c> my</c>

00:02:34.670 --> 00:02:34.680 align:start position:0%
says hello world that's right from my
 

00:02:34.680 --> 00:02:37.009 align:start position:0%
says hello world that's right from my
JavaScript<00:02:35.280><c> program</c><00:02:35.670><c> so</c><00:02:36.209><c> whenever</c><00:02:36.810><c> you</c>

00:02:37.009 --> 00:02:37.019 align:start position:0%
JavaScript program so whenever you
 

00:02:37.019 --> 00:02:38.690 align:start position:0%
JavaScript program so whenever you
console<00:02:37.500><c> that</c><00:02:37.590><c> log</c><00:02:37.859><c> is</c><00:02:38.069><c> gonna</c><00:02:38.220><c> show</c><00:02:38.489><c> in</c><00:02:38.609><c> the</c>

00:02:38.690 --> 00:02:38.700 align:start position:0%
console that log is gonna show in the
 

00:02:38.700 --> 00:02:42.589 align:start position:0%
console that log is gonna show in the
console<00:02:39.150><c> here</c><00:02:39.510><c> you</c><00:02:40.500><c> could</c><00:02:40.709><c> also</c><00:02:40.980><c> just</c><00:02:41.430><c> use</c><00:02:42.000><c> the</c>

00:02:42.589 --> 00:02:42.599 align:start position:0%
console here you could also just use the
 

00:02:42.599 --> 00:02:44.599 align:start position:0%
console here you could also just use the
code<00:02:42.870><c> editor</c><00:02:43.079><c> that's</c><00:02:43.470><c> included</c><00:02:43.950><c> on</c><00:02:44.040><c> free</c><00:02:44.340><c> code</c>

00:02:44.599 --> 00:02:44.609 align:start position:0%
code editor that's included on free code
 

00:02:44.609 --> 00:02:47.120 align:start position:0%
code editor that's included on free code
camp<00:02:44.970><c> org</c><00:02:45.389><c> like</c><00:02:46.079><c> I</c><00:02:46.230><c> mentioned</c><00:02:46.650><c> this</c><00:02:46.799><c> course</c>

00:02:47.120 --> 00:02:47.130 align:start position:0%
camp org like I mentioned this course
 

00:02:47.130 --> 00:02:49.009 align:start position:0%
camp org like I mentioned this course
follows<00:02:47.579><c> along</c><00:02:47.849><c> with</c><00:02:47.910><c> the</c><00:02:48.299><c> JavaScript</c>

00:02:49.009 --> 00:02:49.019 align:start position:0%
follows along with the JavaScript
 

00:02:49.019 --> 00:02:51.250 align:start position:0%
follows along with the JavaScript
curriculum<00:02:49.560><c> on</c><00:02:49.680><c> free</c><00:02:49.859><c> code</c><00:02:50.069><c> camp</c><00:02:50.340><c> org</c><00:02:50.760><c> and</c>

00:02:51.250 --> 00:02:51.260 align:start position:0%
curriculum on free code camp org and
 

00:02:51.260 --> 00:02:53.809 align:start position:0%
curriculum on free code camp org and
there's<00:02:52.260><c> a</c><00:02:52.380><c> built</c><00:02:52.829><c> in</c><00:02:52.980><c> JavaScript</c><00:02:53.670><c> editor</c>

00:02:53.809 --> 00:02:53.819 align:start position:0%
there's a built in JavaScript editor
 

00:02:53.819 --> 00:02:56.420 align:start position:0%
there's a built in JavaScript editor
right<00:02:54.299><c> in</c><00:02:54.480><c> here</c><00:02:54.810><c> and</c><00:02:54.959><c> then</c><00:02:55.470><c> it</c><00:02:55.590><c> shows</c><00:02:56.069><c> you</c><00:02:56.099><c> the</c>

00:02:56.420 --> 00:02:56.430 align:start position:0%
right in here and then it shows you the
 

00:02:56.430 --> 00:02:59.569 align:start position:0%
right in here and then it shows you the
console<00:02:56.910><c> down</c><00:02:57.120><c> here</c><00:02:57.769><c> another</c><00:02:58.769><c> option</c><00:02:59.280><c> would</c>

00:02:59.569 --> 00:02:59.579 align:start position:0%
console down here another option would
 

00:02:59.579 --> 00:03:02.089 align:start position:0%
console down here another option would
be<00:02:59.639><c> to</c><00:02:59.819><c> use</c><00:03:00.000><c> code</c><00:03:00.660><c> pen</c><00:03:00.989><c> if</c><00:03:01.560><c> you</c><00:03:01.620><c> go</c><00:03:01.769><c> to</c><00:03:01.829><c> code</c>

00:03:02.089 --> 00:03:02.099 align:start position:0%
be to use code pen if you go to code
 

00:03:02.099 --> 00:03:05.890 align:start position:0%
be to use code pen if you go to code
pinned<00:03:02.400><c> IO</c><00:03:02.730><c> I'm</c><00:03:03.359><c> gonna</c><00:03:03.540><c> go</c><00:03:03.720><c> to</c><00:03:03.780><c> create</c><00:03:04.290><c> pin</c><00:03:05.099><c> and</c>

00:03:05.890 --> 00:03:05.900 align:start position:0%
pinned IO I'm gonna go to create pin and
 

00:03:05.900 --> 00:03:09.770 align:start position:0%
pinned IO I'm gonna go to create pin and
then<00:03:06.900><c> there's</c><00:03:07.440><c> gonna</c><00:03:07.650><c> be</c><00:03:07.799><c> three</c><00:03:08.099><c> windows</c><00:03:09.090><c> HTML</c>

00:03:09.770 --> 00:03:09.780 align:start position:0%
then there's gonna be three windows HTML
 

00:03:09.780 --> 00:03:12.470 align:start position:0%
then there's gonna be three windows HTML
CSS<00:03:10.049><c> and</c><00:03:10.380><c> JavaScript</c><00:03:10.730><c> well</c><00:03:11.730><c> we</c><00:03:11.970><c> just</c><00:03:12.150><c> care</c>

00:03:12.470 --> 00:03:12.480 align:start position:0%
CSS and JavaScript well we just care
 

00:03:12.480 --> 00:03:14.870 align:start position:0%
CSS and JavaScript well we just care
about<00:03:12.510><c> the</c><00:03:12.690><c> JavaScript</c><00:03:13.530><c> and</c><00:03:13.799><c> in</c><00:03:14.400><c> this</c><00:03:14.549><c> course</c>

00:03:14.870 --> 00:03:14.880 align:start position:0%
about the JavaScript and in this course
 

00:03:14.880 --> 00:03:16.370 align:start position:0%
about the JavaScript and in this course
we're<00:03:15.090><c> not</c><00:03:15.120><c> gonna</c><00:03:15.329><c> be</c><00:03:15.480><c> doing</c><00:03:15.720><c> anything</c><00:03:15.959><c> with</c>

00:03:16.370 --> 00:03:16.380 align:start position:0%
we're not gonna be doing anything with
 

00:03:16.380 --> 00:03:19.729 align:start position:0%
we're not gonna be doing anything with
HTML<00:03:17.069><c> and</c><00:03:17.099><c> CSS</c><00:03:17.400><c> we</c><00:03:18.359><c> just</c><00:03:18.660><c> need</c><00:03:18.840><c> the</c><00:03:19.079><c> JavaScript</c>

00:03:19.729 --> 00:03:19.739 align:start position:0%
HTML and CSS we just need the JavaScript
 

00:03:19.739 --> 00:03:22.729 align:start position:0%
HTML and CSS we just need the JavaScript
and<00:03:19.919><c> the</c><00:03:19.980><c> JavaScript</c><00:03:20.730><c> console</c><00:03:21.329><c> so</c><00:03:22.019><c> if</c><00:03:22.290><c> I</c><00:03:22.680><c> do</c>

00:03:22.729 --> 00:03:22.739 align:start position:0%
and the JavaScript console so if I do
 

00:03:22.739 --> 00:03:27.309 align:start position:0%
and the JavaScript console so if I do
consult<00:03:23.370><c> out</c><00:03:23.579><c> log</c><00:03:23.910><c> and</c><00:03:24.389><c> then</c><00:03:25.019><c> do</c><00:03:25.340><c> hello</c><00:03:26.340><c> world</c>

00:03:27.309 --> 00:03:27.319 align:start position:0%
consult out log and then do hello world
 

00:03:27.319 --> 00:03:30.170 align:start position:0%
consult out log and then do hello world
then<00:03:28.319><c> we</c><00:03:28.470><c> can</c><00:03:28.620><c> see</c><00:03:28.889><c> right</c><00:03:29.280><c> in</c><00:03:29.459><c> the</c><00:03:29.609><c> console</c>

00:03:30.170 --> 00:03:30.180 align:start position:0%
then we can see right in the console
 

00:03:30.180 --> 00:03:31.400 align:start position:0%
then we can see right in the console
hello<00:03:30.870><c> world</c>

00:03:31.400 --> 00:03:31.410 align:start position:0%
hello world
 

00:03:31.410 --> 00:03:32.930 align:start position:0%
hello world
the<00:03:31.620><c> final</c><00:03:32.069><c> thing</c><00:03:32.220><c> you</c><00:03:32.250><c> could</c><00:03:32.489><c> do</c><00:03:32.639><c> would</c><00:03:32.880><c> be</c>

00:03:32.930 --> 00:03:32.940 align:start position:0%
the final thing you could do would be
 

00:03:32.940 --> 00:03:35.569 align:start position:0%
the final thing you could do would be
used<00:03:33.450><c> scrim</c><00:03:33.930><c> ba'</c><00:03:34.109><c> most</c><00:03:34.620><c> of</c><00:03:34.829><c> the</c><00:03:34.950><c> course</c><00:03:35.280><c> I</c>

00:03:35.569 --> 00:03:35.579 align:start position:0%
used scrim ba' most of the course I
 

00:03:35.579 --> 00:03:38.119 align:start position:0%
used scrim ba' most of the course I
actually<00:03:35.849><c> recorded</c><00:03:36.510><c> using</c><00:03:36.900><c> scrim</c><00:03:37.140><c> be</c><00:03:37.230><c> calm</c><00:03:37.680><c> so</c>

00:03:38.119 --> 00:03:38.129 align:start position:0%
actually recorded using scrim be calm so
 

00:03:38.129 --> 00:03:40.100 align:start position:0%
actually recorded using scrim be calm so
if<00:03:38.280><c> you</c><00:03:38.370><c> want</c><00:03:38.610><c> you</c><00:03:38.760><c> can</c><00:03:38.969><c> use</c><00:03:39.000><c> grimbo</c><00:03:39.480><c> calm</c><00:03:39.870><c> to</c>

00:03:40.100 --> 00:03:40.110 align:start position:0%
if you want you can use grimbo calm to
 

00:03:40.110 --> 00:03:40.930 align:start position:0%
if you want you can use grimbo calm to
follow<00:03:40.349><c> along</c>

00:03:40.930 --> 00:03:40.940 align:start position:0%
follow along
 

00:03:40.940 --> 00:03:43.810 align:start position:0%
follow along
once<00:03:41.630><c> you</c><00:03:41.750><c> log</c><00:03:41.990><c> in</c><00:03:42.020><c> just</c><00:03:42.530><c> click</c><00:03:43.310><c> the</c><00:03:43.520><c> plus</c>

00:03:43.810 --> 00:03:43.820 align:start position:0%
once you log in just click the plus
 

00:03:43.820 --> 00:03:47.020 align:start position:0%
once you log in just click the plus
button<00:03:44.090><c> I</c><00:03:44.540><c> do</c><00:03:44.960><c> a</c><00:03:44.990><c> JavaScript</c><00:03:45.710><c> playground</c><00:03:46.640><c> and</c>

00:03:47.020 --> 00:03:47.030 align:start position:0%
button I do a JavaScript playground and
 

00:03:47.030 --> 00:03:49.690 align:start position:0%
button I do a JavaScript playground and
then<00:03:47.510><c> confirm</c><00:03:48.050><c> and</c><00:03:48.410><c> it's</c><00:03:48.890><c> gonna</c><00:03:49.040><c> open</c><00:03:49.430><c> up</c><00:03:49.550><c> a</c>

00:03:49.690 --> 00:03:49.700 align:start position:0%
then confirm and it's gonna open up a
 

00:03:49.700 --> 00:03:52.960 align:start position:0%
then confirm and it's gonna open up a
new<00:03:49.940><c> JavaScript</c><00:03:50.720><c> window</c><00:03:51.230><c> now</c><00:03:51.770><c> I</c><00:03:51.800><c> can</c><00:03:52.370><c> increase</c>

00:03:52.960 --> 00:03:52.970 align:start position:0%
new JavaScript window now I can increase
 

00:03:52.970 --> 00:03:55.930 align:start position:0%
new JavaScript window now I can increase
the<00:03:53.090><c> font</c><00:03:53.630><c> size</c><00:03:53.750><c> here</c><00:03:53.960><c> and</c><00:03:54.500><c> it</c><00:03:55.370><c> already</c><00:03:55.520><c> has</c>

00:03:55.930 --> 00:03:55.940 align:start position:0%
the font size here and it already has
 

00:03:55.940 --> 00:03:57.850 align:start position:0%
the font size here and it already has
console<00:03:56.420><c> dot</c><00:03:56.510><c> log</c><00:03:56.570><c> hello</c><00:03:57.020><c> from</c><00:03:57.230><c> JavaScript</c>

00:03:57.850 --> 00:03:57.860 align:start position:0%
console dot log hello from JavaScript
 

00:03:57.860 --> 00:03:59.710 align:start position:0%
console dot log hello from JavaScript
you<00:03:58.040><c> can</c><00:03:58.220><c> see</c><00:03:58.370><c> in</c><00:03:58.460><c> the</c><00:03:58.550><c> console</c><00:03:59.120><c> right</c><00:03:59.300><c> here</c>

00:03:59.710 --> 00:03:59.720 align:start position:0%
you can see in the console right here
 

00:03:59.720 --> 00:04:03.070 align:start position:0%
you can see in the console right here
hello<00:04:00.290><c> from</c><00:04:00.470><c> JavaScript</c><00:04:01.100><c> also</c><00:04:01.970><c> if</c><00:04:02.630><c> you</c><00:04:02.810><c> hit</c>

00:04:03.070 --> 00:04:03.080 align:start position:0%
hello from JavaScript also if you hit
 

00:04:03.080 --> 00:04:04.960 align:start position:0%
hello from JavaScript also if you hit
reload<00:04:03.530><c> it</c><00:04:03.740><c> reloads</c><00:04:04.100><c> everything</c><00:04:04.580><c> and</c><00:04:04.820><c> you'll</c>

00:04:04.960 --> 00:04:04.970 align:start position:0%
reload it reloads everything and you'll
 

00:04:04.970 --> 00:04:08.050 align:start position:0%
reload it reloads everything and you'll
see<00:04:05.180><c> this</c><00:04:05.420><c> pop</c><00:04:05.750><c> up</c><00:04:06.020><c> hello</c><00:04:06.560><c> from</c><00:04:06.800><c> JavaScript</c><00:04:07.460><c> so</c>

00:04:08.050 --> 00:04:08.060 align:start position:0%
see this pop up hello from JavaScript so
 

00:04:08.060 --> 00:04:09.910 align:start position:0%
see this pop up hello from JavaScript so
that's<00:04:08.330><c> something</c><00:04:08.630><c> interesting</c><00:04:09.320><c> about</c><00:04:09.410><c> scrim</c>

00:04:09.910 --> 00:04:09.920 align:start position:0%
that's something interesting about scrim
 

00:04:09.920 --> 00:04:12.820 align:start position:0%
that's something interesting about scrim
ba'<00:04:10.100><c> is</c><00:04:10.280><c> that</c><00:04:10.520><c> it</c><00:04:10.640><c> has</c><00:04:10.820><c> two</c><00:04:11.300><c> ways</c><00:04:11.930><c> of</c><00:04:12.260><c> logging</c>

00:04:12.820 --> 00:04:12.830 align:start position:0%
ba' is that it has two ways of logging
 

00:04:12.830 --> 00:04:15.040 align:start position:0%
ba' is that it has two ways of logging
in<00:04:12.920><c> the</c><00:04:13.010><c> console</c><00:04:13.580><c> we</c><00:04:14.150><c> have</c><00:04:14.270><c> the</c><00:04:14.360><c> pop-up</c><00:04:14.870><c> and</c>

00:04:15.040 --> 00:04:15.050 align:start position:0%
in the console we have the pop-up and
 

00:04:15.050 --> 00:04:17.890 align:start position:0%
in the console we have the pop-up and
then<00:04:15.110><c> we</c><00:04:15.680><c> have</c><00:04:15.800><c> the</c><00:04:15.920><c> console</c><00:04:16.430><c> here</c><00:04:16.850><c> you'll</c><00:04:17.570><c> see</c>

00:04:17.890 --> 00:04:17.900 align:start position:0%
then we have the console here you'll see
 

00:04:17.900 --> 00:04:20.080 align:start position:0%
then we have the console here you'll see
that<00:04:18.110><c> in</c><00:04:18.290><c> this</c><00:04:18.410><c> course</c><00:04:18.830><c> -</c><00:04:19.190><c> the</c><00:04:19.549><c> two</c><00:04:19.760><c> different</c>

00:04:20.080 --> 00:04:20.090 align:start position:0%
that in this course - the two different
 

00:04:20.090 --> 00:04:25.659 align:start position:0%
that in this course - the two different
ways<00:04:20.239><c> of</c><00:04:20.510><c> logging</c><00:04:21.350><c> to</c><00:04:21.470><c> the</c><00:04:21.560><c> console</c>

00:04:25.659 --> 00:04:25.669 align:start position:0%
 
 

00:04:25.669 --> 00:04:27.969 align:start position:0%
 
the<00:04:26.479><c> first</c><00:04:26.810><c> thing</c><00:04:27.080><c> we'll</c><00:04:27.259><c> talk</c><00:04:27.500><c> about</c><00:04:27.770><c> in</c>

00:04:27.969 --> 00:04:27.979 align:start position:0%
the first thing we'll talk about in
 

00:04:27.979 --> 00:04:31.570 align:start position:0%
the first thing we'll talk about in
javascript<00:04:28.669><c> is</c><00:04:29.349><c> comments</c><00:04:30.460><c> comments</c><00:04:31.460><c> are</c>

00:04:31.570 --> 00:04:31.580 align:start position:0%
javascript is comments comments are
 

00:04:31.580 --> 00:04:33.640 align:start position:0%
javascript is comments comments are
lines<00:04:31.819><c> of</c><00:04:32.000><c> code</c><00:04:32.300><c> that</c><00:04:32.469><c> JavaScript</c><00:04:33.469><c> will</c>

00:04:33.640 --> 00:04:33.650 align:start position:0%
lines of code that JavaScript will
 

00:04:33.650 --> 00:04:35.980 align:start position:0%
lines of code that JavaScript will
intentionally<00:04:34.099><c> ignore</c><00:04:34.909><c> they</c><00:04:35.659><c> don't</c><00:04:35.840><c> do</c>

00:04:35.980 --> 00:04:35.990 align:start position:0%
intentionally ignore they don't do
 

00:04:35.990 --> 00:04:39.399 align:start position:0%
intentionally ignore they don't do
anything<00:04:36.259><c> they're</c><00:04:37.129><c> just</c><00:04:37.460><c> used</c><00:04:38.120><c> to</c><00:04:38.449><c> create</c>

00:04:39.399 --> 00:04:39.409 align:start position:0%
anything they're just used to create
 

00:04:39.409 --> 00:04:41.980 align:start position:0%
anything they're just used to create
notes<00:04:39.740><c> for</c><00:04:40.129><c> yourself</c><00:04:40.610><c> and</c><00:04:40.909><c> others</c><00:04:41.330><c> about</c><00:04:41.599><c> what</c>

00:04:41.980 --> 00:04:41.990 align:start position:0%
notes for yourself and others about what
 

00:04:41.990 --> 00:04:44.800 align:start position:0%
notes for yourself and others about what
the<00:04:42.139><c> code</c><00:04:42.409><c> does</c><00:04:42.550><c> so</c><00:04:43.550><c> if</c><00:04:43.699><c> you</c><00:04:43.819><c> do</c><00:04:43.969><c> slash</c><00:04:44.419><c> slash</c>

00:04:44.800 --> 00:04:44.810 align:start position:0%
the code does so if you do slash slash
 

00:04:44.810 --> 00:04:48.339 align:start position:0%
the code does so if you do slash slash
you<00:04:45.139><c> can</c><00:04:45.319><c> make</c><00:04:45.500><c> an</c><00:04:45.650><c> inline</c><00:04:46.189><c> comment</c><00:04:47.150><c> an</c><00:04:47.360><c> inline</c>

00:04:48.339 --> 00:04:48.349 align:start position:0%
you can make an inline comment an inline
 

00:04:48.349 --> 00:04:51.249 align:start position:0%
you can make an inline comment an inline
comment<00:04:48.830><c> means</c><00:04:49.009><c> it's</c><00:04:49.280><c> at</c><00:04:49.460><c> the</c><00:04:49.580><c> end</c><00:04:49.819><c> of</c><00:04:50.240><c> a</c><00:04:50.629><c> line</c>

00:04:51.249 --> 00:04:51.259 align:start position:0%
comment means it's at the end of a line
 

00:04:51.259 --> 00:04:53.879 align:start position:0%
comment means it's at the end of a line
of<00:04:51.409><c> code</c><00:04:51.710><c> for</c><00:04:52.039><c> instance</c><00:04:52.789><c> I</c><00:04:52.969><c> can</c><00:04:53.180><c> put</c><00:04:53.389><c> var</c>

00:04:53.879 --> 00:04:53.889 align:start position:0%
of code for instance I can put var
 

00:04:53.889 --> 00:04:58.420 align:start position:0%
of code for instance I can put var
number<00:04:55.180><c> equals</c><00:04:56.180><c> 5</c><00:04:56.810><c> that's</c><00:04:57.560><c> a</c><00:04:57.710><c> way</c><00:04:57.860><c> to</c><00:04:57.919><c> declare</c>

00:04:58.420 --> 00:04:58.430 align:start position:0%
number equals 5 that's a way to declare
 

00:04:58.430 --> 00:05:00.369 align:start position:0%
number equals 5 that's a way to declare
a<00:04:58.460><c> variable</c><00:04:58.759><c> and</c><00:04:59.330><c> we'll</c><00:04:59.870><c> talk</c><00:05:00.110><c> more</c><00:05:00.319><c> about</c>

00:05:00.369 --> 00:05:00.379 align:start position:0%
a variable and we'll talk more about
 

00:05:00.379 --> 00:05:03.040 align:start position:0%
a variable and we'll talk more about
that<00:05:00.590><c> later</c><00:05:01.490><c> but</c><00:05:02.360><c> right</c><00:05:02.569><c> now</c><00:05:02.750><c> we're</c><00:05:02.900><c> just</c>

00:05:03.040 --> 00:05:03.050 align:start position:0%
that later but right now we're just
 

00:05:03.050 --> 00:05:05.379 align:start position:0%
that later but right now we're just
talking<00:05:03.409><c> about</c><00:05:03.469><c> comments</c><00:05:04.279><c> you</c><00:05:04.759><c> can</c><00:05:04.939><c> see</c><00:05:05.180><c> that</c>

00:05:05.379 --> 00:05:05.389 align:start position:0%
talking about comments you can see that
 

00:05:05.389 --> 00:05:07.929 align:start position:0%
talking about comments you can see that
this<00:05:05.539><c> code</c><00:05:05.870><c> is</c><00:05:06.080><c> in</c><00:05:06.229><c> color</c><00:05:06.560><c> because</c><00:05:07.490><c> the</c><00:05:07.669><c> code</c>

00:05:07.929 --> 00:05:07.939 align:start position:0%
this code is in color because the code
 

00:05:07.939 --> 00:05:09.909 align:start position:0%
this code is in color because the code
editor<00:05:08.180><c> knows</c><00:05:08.779><c> that</c><00:05:09.050><c> that's</c><00:05:09.259><c> code</c><00:05:09.650><c> that's</c>

00:05:09.909 --> 00:05:09.919 align:start position:0%
editor knows that that's code that's
 

00:05:09.919 --> 00:05:12.219 align:start position:0%
editor knows that that's code that's
going<00:05:10.099><c> to</c><00:05:10.219><c> run</c><00:05:10.610><c> and</c><00:05:10.939><c> the</c><00:05:11.479><c> comment</c><00:05:12.080><c> is</c>

00:05:12.219 --> 00:05:12.229 align:start position:0%
going to run and the comment is
 

00:05:12.229 --> 00:05:14.170 align:start position:0%
going to run and the comment is
automatically<00:05:13.069><c> grayed</c><00:05:13.430><c> out</c><00:05:13.460><c> because</c><00:05:14.029><c> it's</c>

00:05:14.170 --> 00:05:14.180 align:start position:0%
automatically grayed out because it's
 

00:05:14.180 --> 00:05:16.779 align:start position:0%
automatically grayed out because it's
not<00:05:14.419><c> going</c><00:05:14.779><c> to</c><00:05:14.930><c> run</c><00:05:15.169><c> we</c><00:05:15.919><c> can</c><00:05:16.099><c> also</c><00:05:16.279><c> do</c><00:05:16.639><c> an</c>

00:05:16.779 --> 00:05:16.789 align:start position:0%
not going to run we can also do an
 

00:05:16.789 --> 00:05:19.420 align:start position:0%
not going to run we can also do an
inline<00:05:17.330><c> comment</c><00:05:17.960><c> or</c><00:05:18.169><c> I</c><00:05:18.469><c> mean</c><00:05:18.710><c> a</c><00:05:18.740><c> multi-line</c>

00:05:19.420 --> 00:05:19.430 align:start position:0%
inline comment or I mean a multi-line
 

00:05:19.430 --> 00:05:22.450 align:start position:0%
inline comment or I mean a multi-line
comment<00:05:19.969><c> if</c><00:05:20.120><c> we</c><00:05:20.569><c> do</c><00:05:20.689><c> a</c><00:05:20.719><c> slash</c><00:05:21.139><c> star</c><00:05:21.500><c> and</c><00:05:21.860><c> I</c><00:05:22.279><c> can</c>

00:05:22.450 --> 00:05:22.460 align:start position:0%
comment if we do a slash star and I can
 

00:05:22.460 --> 00:05:24.990 align:start position:0%
comment if we do a slash star and I can
put<00:05:22.669><c> this</c><00:05:22.939><c> is</c><00:05:23.210><c> a</c><00:05:23.539><c> and</c><00:05:23.960><c> then</c><00:05:24.379><c> I</c><00:05:24.439><c> can</c><00:05:24.620><c> put</c>

00:05:24.990 --> 00:05:25.000 align:start position:0%
put this is a and then I can put
 

00:05:25.000 --> 00:05:28.540 align:start position:0%
put this is a and then I can put
multi-line<00:05:26.000><c> comment</c><00:05:26.990><c> and</c><00:05:27.259><c> I'm</c><00:05:27.770><c> going</c><00:05:28.129><c> to</c><00:05:28.159><c> end</c>

00:05:28.540 --> 00:05:28.550 align:start position:0%
multi-line comment and I'm going to end
 

00:05:28.550 --> 00:05:32.079 align:start position:0%
multi-line comment and I'm going to end
with<00:05:29.060><c> a</c><00:05:29.120><c> star</c><00:05:29.960><c> slash</c><00:05:30.800><c> so</c><00:05:31.460><c> it</c><00:05:31.580><c> begins</c><00:05:31.909><c> with</c><00:05:32.029><c> a</c>

00:05:32.079 --> 00:05:32.089 align:start position:0%
with a star slash so it begins with a
 

00:05:32.089 --> 00:05:34.839 align:start position:0%
with a star slash so it begins with a
slash<00:05:32.479><c> star</c><00:05:32.870><c> and</c><00:05:33.229><c> end</c><00:05:33.409><c> with</c><00:05:33.620><c> a</c><00:05:33.680><c> star</c><00:05:34.039><c> slash</c><00:05:34.430><c> and</c>

00:05:34.839 --> 00:05:34.849 align:start position:0%
slash star and end with a star slash and
 

00:05:34.849 --> 00:05:37.450 align:start position:0%
slash star and end with a star slash and
you<00:05:35.060><c> can</c><00:05:35.240><c> put</c><00:05:35.389><c> as</c><00:05:35.479><c> much</c><00:05:35.719><c> text</c><00:05:36.680><c> as</c><00:05:36.770><c> you</c><00:05:36.949><c> want</c><00:05:37.250><c> in</c>

00:05:37.450 --> 00:05:37.460 align:start position:0%
you can put as much text as you want in
 

00:05:37.460 --> 00:05:39.760 align:start position:0%
you can put as much text as you want in
between<00:05:37.669><c> these</c><00:05:38.240><c> and</c><00:05:38.539><c> you</c><00:05:39.050><c> can</c><00:05:39.199><c> see</c><00:05:39.440><c> this</c><00:05:39.589><c> is</c>

00:05:39.760 --> 00:05:39.770 align:start position:0%
between these and you can see this is
 

00:05:39.770 --> 00:05:41.469 align:start position:0%
between these and you can see this is
all<00:05:40.069><c> grayed</c><00:05:40.490><c> out</c><00:05:40.520><c> because</c><00:05:40.940><c> it's</c><00:05:41.270><c> all</c><00:05:41.449><c> a</c>

00:05:41.469 --> 00:05:41.479 align:start position:0%
all grayed out because it's all a
 

00:05:41.479 --> 00:05:44.649 align:start position:0%
all grayed out because it's all a
comment<00:05:42.050><c> and</c><00:05:42.319><c> then</c><00:05:42.800><c> afterwards</c><00:05:43.610><c> I</c><00:05:43.940><c> can</c><00:05:44.240><c> put</c>

00:05:44.649 --> 00:05:44.659 align:start position:0%
comment and then afterwards I can put
 

00:05:44.659 --> 00:05:48.309 align:start position:0%
comment and then afterwards I can put
number<00:05:45.250><c> equals</c><00:05:46.250><c> it</c><00:05:46.699><c> they</c><00:05:47.479><c> can</c><00:05:47.659><c> put</c><00:05:47.960><c> number</c>

00:05:48.309 --> 00:05:48.319 align:start position:0%
number equals it they can put number
 

00:05:48.319 --> 00:05:51.519 align:start position:0%
number equals it they can put number
equals<00:05:49.129><c> nine</c><00:05:49.520><c> and</c><00:05:50.000><c> you</c><00:05:50.389><c> can</c><00:05:50.569><c> see</c><00:05:50.810><c> it</c><00:05:51.050><c> will</c><00:05:51.259><c> be</c>

00:05:51.519 --> 00:05:51.529 align:start position:0%
equals nine and you can see it will be
 

00:05:51.529 --> 00:05:53.519 align:start position:0%
equals nine and you can see it will be
in<00:05:51.770><c> color</c><00:05:52.069><c> again</c><00:05:52.490><c> because</c><00:05:53.089><c> it's</c><00:05:53.210><c> no</c><00:05:53.419><c> longer</c>

00:05:53.519 --> 00:05:53.529 align:start position:0%
in color again because it's no longer
 

00:05:53.529 --> 00:05:58.840 align:start position:0%
in color again because it's no longer
commented<00:05:54.529><c> out</c>

00:05:58.840 --> 00:05:58.850 align:start position:0%
 
 

00:05:58.850 --> 00:06:01.060 align:start position:0%
 
now<00:05:59.690><c> we're</c><00:05:59.840><c> going</c><00:05:59.930><c> to</c><00:05:59.990><c> talk</c><00:06:00.230><c> about</c><00:06:00.440><c> data</c><00:06:00.890><c> types</c>

00:06:01.060 --> 00:06:01.070 align:start position:0%
now we're going to talk about data types
 

00:06:01.070 --> 00:06:04.510 align:start position:0%
now we're going to talk about data types
and<00:06:01.610><c> variables</c><00:06:02.270><c> in</c><00:06:02.750><c> computer</c><00:06:03.560><c> science</c><00:06:03.770><c> data</c>

00:06:04.510 --> 00:06:04.520 align:start position:0%
and variables in computer science data
 

00:06:04.520 --> 00:06:06.430 align:start position:0%
and variables in computer science data
is<00:06:04.760><c> anything</c><00:06:05.150><c> that</c><00:06:05.210><c> is</c><00:06:05.360><c> meaningful</c><00:06:05.930><c> to</c><00:06:06.170><c> the</c>

00:06:06.430 --> 00:06:06.440 align:start position:0%
is anything that is meaningful to the
 

00:06:06.440 --> 00:06:09.190 align:start position:0%
is anything that is meaningful to the
computer<00:06:06.950><c> and</c><00:06:07.450><c> javascript</c><00:06:08.450><c> provides</c><00:06:08.780><c> seven</c>

00:06:09.190 --> 00:06:09.200 align:start position:0%
computer and javascript provides seven
 

00:06:09.200 --> 00:06:11.260 align:start position:0%
computer and javascript provides seven
different<00:06:09.500><c> data</c><00:06:09.800><c> types</c><00:06:10.220><c> that</c><00:06:10.490><c> you</c><00:06:10.850><c> can</c><00:06:10.880><c> use</c>

00:06:11.260 --> 00:06:11.270 align:start position:0%
different data types that you can use
 

00:06:11.270 --> 00:06:14.170 align:start position:0%
different data types that you can use
within<00:06:11.510><c> JavaScript</c><00:06:12.440><c> now</c><00:06:13.070><c> some</c><00:06:13.730><c> of</c><00:06:13.850><c> the</c><00:06:13.910><c> more</c>

00:06:14.170 --> 00:06:14.180 align:start position:0%
within JavaScript now some of the more
 

00:06:14.180 --> 00:06:16.930 align:start position:0%
within JavaScript now some of the more
obvious<00:06:14.420><c> and</c><00:06:15.020><c> most</c><00:06:15.650><c> common</c><00:06:16.070><c> are</c><00:06:16.160><c> strings</c><00:06:16.610><c> and</c>

00:06:16.930 --> 00:06:16.940 align:start position:0%
obvious and most common are strings and
 

00:06:16.940 --> 00:06:19.660 align:start position:0%
obvious and most common are strings and
numbers<00:06:17.180><c> a</c><00:06:17.630><c> string</c><00:06:18.380><c> is</c><00:06:18.650><c> just</c><00:06:19.100><c> any</c><00:06:19.280><c> sort</c><00:06:19.610><c> of</c>

00:06:19.660 --> 00:06:19.670 align:start position:0%
numbers a string is just any sort of
 

00:06:19.670 --> 00:06:23.140 align:start position:0%
numbers a string is just any sort of
text<00:06:20.270><c> a</c><00:06:20.450><c> number</c><00:06:21.140><c> is</c><00:06:21.320><c> a</c><00:06:21.380><c> number</c><00:06:21.890><c> now</c><00:06:22.700><c> let's</c><00:06:22.940><c> go</c>

00:06:23.140 --> 00:06:23.150 align:start position:0%
text a number is a number now let's go
 

00:06:23.150 --> 00:06:25.690 align:start position:0%
text a number is a number now let's go
from<00:06:23.360><c> the</c><00:06:23.450><c> top</c><00:06:23.690><c> so</c><00:06:23.960><c> undefined</c><00:06:24.740><c> is</c><00:06:25.100><c> something</c>

00:06:25.690 --> 00:06:25.700 align:start position:0%
from the top so undefined is something
 

00:06:25.700 --> 00:06:28.270 align:start position:0%
from the top so undefined is something
that<00:06:25.910><c> hasn't</c><00:06:26.300><c> been</c><00:06:26.630><c> defined</c><00:06:27.020><c> you</c><00:06:27.830><c> may</c><00:06:28.040><c> have</c><00:06:28.250><c> a</c>

00:06:28.270 --> 00:06:28.280 align:start position:0%
that hasn't been defined you may have a
 

00:06:28.280 --> 00:06:29.950 align:start position:0%
that hasn't been defined you may have a
variable<00:06:28.820><c> that</c><00:06:29.120><c> you</c><00:06:29.240><c> haven't</c><00:06:29.540><c> set</c><00:06:29.750><c> to</c><00:06:29.870><c> be</c>

00:06:29.950 --> 00:06:29.960 align:start position:0%
variable that you haven't set to be
 

00:06:29.960 --> 00:06:33.040 align:start position:0%
variable that you haven't set to be
anything<00:06:30.410><c> yet</c><00:06:30.620><c> null</c><00:06:31.580><c> means</c><00:06:32.150><c> nothing</c><00:06:32.870><c> so</c>

00:06:33.040 --> 00:06:33.050 align:start position:0%
anything yet null means nothing so
 

00:06:33.050 --> 00:06:36.100 align:start position:0%
anything yet null means nothing so
you've<00:06:33.560><c> set</c><00:06:34.130><c> it</c><00:06:34.160><c> to</c><00:06:34.760><c> be</c><00:06:34.910><c> something</c><00:06:35.450><c> and</c><00:06:35.660><c> that</c>

00:06:36.100 --> 00:06:36.110 align:start position:0%
you've set it to be something and that
 

00:06:36.110 --> 00:06:38.680 align:start position:0%
you've set it to be something and that
thing<00:06:36.410><c> is</c><00:06:36.770><c> nothing</c><00:06:37.340><c> so</c><00:06:37.760><c> you</c><00:06:37.790><c> can</c><00:06:38.000><c> say</c><00:06:38.210><c> this</c><00:06:38.450><c> is</c>

00:06:38.680 --> 00:06:38.690 align:start position:0%
thing is nothing so you can say this is
 

00:06:38.690 --> 00:06:42.040 align:start position:0%
thing is nothing so you can say this is
null<00:06:39.050><c> or</c><00:06:39.380><c> nothing</c><00:06:39.920><c> a</c><00:06:40.100><c> boolean</c><00:06:40.790><c> means</c><00:06:41.420><c> true</c><00:06:41.780><c> or</c>

00:06:42.040 --> 00:06:42.050 align:start position:0%
null or nothing a boolean means true or
 

00:06:42.050 --> 00:06:45.730 align:start position:0%
null or nothing a boolean means true or
false<00:06:42.320><c> we</c><00:06:42.740><c> talked</c><00:06:43.280><c> about</c><00:06:43.400><c> string</c><00:06:43.880><c> a</c><00:06:44.560><c> symbol</c><00:06:45.560><c> is</c>

00:06:45.730 --> 00:06:45.740 align:start position:0%
false we talked about string a symbol is
 

00:06:45.740 --> 00:06:48.580 align:start position:0%
false we talked about string a symbol is
an<00:06:46.130><c> immutable</c><00:06:46.580><c> primitive</c><00:06:47.510><c> value</c><00:06:47.990><c> that</c><00:06:48.410><c> is</c>

00:06:48.580 --> 00:06:48.590 align:start position:0%
an immutable primitive value that is
 

00:06:48.590 --> 00:06:50.710 align:start position:0%
an immutable primitive value that is
unique<00:06:48.980><c> now</c><00:06:49.640><c> we'll</c><00:06:49.820><c> talk</c><00:06:50.000><c> more</c><00:06:50.240><c> about</c><00:06:50.300><c> those</c>

00:06:50.710 --> 00:06:50.720 align:start position:0%
unique now we'll talk more about those
 

00:06:50.720 --> 00:06:55.140 align:start position:0%
unique now we'll talk more about those
later<00:06:51.670><c> numbers</c><00:06:52.670><c> number</c><00:06:53.150><c> and</c><00:06:53.360><c> an</c><00:06:53.540><c> object</c><00:06:54.230><c> can</c>

00:06:55.140 --> 00:06:55.150 align:start position:0%
later numbers number and an object can
 

00:06:55.150 --> 00:06:58.420 align:start position:0%
later numbers number and an object can
store<00:06:56.150><c> a</c><00:06:56.180><c> lot</c><00:06:56.750><c> of</c><00:06:56.780><c> different</c><00:06:57.200><c> key</c><00:06:57.470><c> value</c><00:06:58.010><c> pairs</c>

00:06:58.420 --> 00:06:58.430 align:start position:0%
store a lot of different key value pairs
 

00:06:58.430 --> 00:07:00.910 align:start position:0%
store a lot of different key value pairs
again<00:06:58.880><c> we'll</c><00:06:59.450><c> talk</c><00:06:59.750><c> more</c><00:06:59.990><c> about</c><00:07:00.050><c> those</c><00:07:00.410><c> later</c>

00:07:00.910 --> 00:07:00.920 align:start position:0%
again we'll talk more about those later
 

00:07:00.920 --> 00:07:04.420 align:start position:0%
again we'll talk more about those later
now<00:07:01.700><c> Euler</c><00:07:02.570><c> you</c><00:07:02.780><c> are</c><00:07:03.020><c> often</c><00:07:03.560><c> going</c><00:07:03.860><c> to</c><00:07:04.040><c> set</c>

00:07:04.420 --> 00:07:04.430 align:start position:0%
now Euler you are often going to set
 

00:07:04.430 --> 00:07:08.530 align:start position:0%
now Euler you are often going to set
data<00:07:04.760><c> into</c><00:07:05.750><c> a</c><00:07:05.780><c> variable</c><00:07:06.560><c> a</c><00:07:07.370><c> variable</c><00:07:07.880><c> allows</c>

00:07:08.530 --> 00:07:08.540 align:start position:0%
data into a variable a variable allows
 

00:07:08.540 --> 00:07:11.020 align:start position:0%
data into a variable a variable allows
computers<00:07:09.020><c> to</c><00:07:09.200><c> store</c><00:07:09.410><c> and</c><00:07:10.040><c> manipulate</c><00:07:10.220><c> data</c>

00:07:11.020 --> 00:07:11.030 align:start position:0%
computers to store and manipulate data
 

00:07:11.030 --> 00:07:13.600 align:start position:0%
computers to store and manipulate data
in<00:07:11.390><c> a</c><00:07:11.960><c> dynamic</c><00:07:12.590><c> fashion</c>

00:07:13.600 --> 00:07:13.610 align:start position:0%
in a dynamic fashion
 

00:07:13.610 --> 00:07:16.810 align:start position:0%
in a dynamic fashion
it's<00:07:13.940><c> basically</c><00:07:14.510><c> a</c><00:07:14.810><c> label</c><00:07:15.710><c> to</c><00:07:15.980><c> point</c><00:07:16.400><c> to</c><00:07:16.670><c> the</c>

00:07:16.810 --> 00:07:16.820 align:start position:0%
it's basically a label to point to the
 

00:07:16.820 --> 00:07:19.660 align:start position:0%
it's basically a label to point to the
data<00:07:17.320><c> variables</c><00:07:18.320><c> almost</c><00:07:18.590><c> like</c><00:07:18.710><c> a</c><00:07:18.740><c> box</c><00:07:19.160><c> and</c><00:07:19.580><c> you</c>

00:07:19.660 --> 00:07:19.670 align:start position:0%
data variables almost like a box and you
 

00:07:19.670 --> 00:07:20.980 align:start position:0%
data variables almost like a box and you
can<00:07:19.820><c> fill</c><00:07:20.060><c> it</c><00:07:20.180><c> with</c><00:07:20.210><c> anything</c>

00:07:20.980 --> 00:07:20.990 align:start position:0%
can fill it with anything
 

00:07:20.990 --> 00:07:22.600 align:start position:0%
can fill it with anything
you'll<00:07:21.200><c> fill</c><00:07:21.560><c> it</c><00:07:21.650><c> with</c><00:07:21.800><c> the</c><00:07:21.950><c> data</c><00:07:22.190><c> that</c><00:07:22.460><c> you</c>

00:07:22.600 --> 00:07:22.610 align:start position:0%
you'll fill it with the data that you
 

00:07:22.610 --> 00:07:26.470 align:start position:0%
you'll fill it with the data that you
want<00:07:22.640><c> so</c><00:07:23.570><c> to</c><00:07:24.380><c> declare</c><00:07:24.980><c> a</c><00:07:25.010><c> variable</c><00:07:25.190><c> one</c><00:07:26.090><c> way</c><00:07:26.270><c> is</c>

00:07:26.470 --> 00:07:26.480 align:start position:0%
want so to declare a variable one way is
 

00:07:26.480 --> 00:07:29.560 align:start position:0%
want so to declare a variable one way is
to<00:07:26.510><c> use</c><00:07:26.870><c> the</c><00:07:27.200><c> VAR</c><00:07:27.530><c> keyword</c><00:07:28.520><c> var</c><00:07:29.000><c> stands</c><00:07:29.360><c> for</c>

00:07:29.560 --> 00:07:29.570 align:start position:0%
to use the VAR keyword var stands for
 

00:07:29.570 --> 00:07:33.880 align:start position:0%
to use the VAR keyword var stands for
variable<00:07:30.140><c> and</c><00:07:30.380><c> I</c><00:07:30.860><c> can</c><00:07:31.100><c> say</c><00:07:31.310><c> my</c><00:07:31.880><c> name</c><00:07:31.910><c> I</c><00:07:32.750><c> can</c><00:07:33.290><c> set</c>

00:07:33.880 --> 00:07:33.890 align:start position:0%
variable and I can say my name I can set
 

00:07:33.890 --> 00:07:36.310 align:start position:0%
variable and I can say my name I can set
this<00:07:34.100><c> to</c><00:07:34.160><c> anything</c><00:07:35.060><c> it</c><00:07:35.360><c> can</c><00:07:35.630><c> be</c><00:07:35.660><c> any</c><00:07:35.960><c> of</c><00:07:36.170><c> the</c>

00:07:36.310 --> 00:07:36.320 align:start position:0%
this to anything it can be any of the
 

00:07:36.320 --> 00:07:39.760 align:start position:0%
this to anything it can be any of the
data<00:07:36.590><c> types</c><00:07:36.920><c> above</c><00:07:37.460><c> but</c><00:07:38.270><c> it's</c><00:07:39.050><c> common</c><00:07:39.350><c> to</c><00:07:39.500><c> set</c>

00:07:39.760 --> 00:07:39.770 align:start position:0%
data types above but it's common to set
 

00:07:39.770 --> 00:07:43.090 align:start position:0%
data types above but it's common to set
something<00:07:40.040><c> to</c><00:07:40.370><c> a</c><00:07:40.400><c> string</c><00:07:41.000><c> so</c><00:07:41.720><c> I</c><00:07:41.990><c> can</c><00:07:42.260><c> set</c><00:07:42.530><c> my</c>

00:07:43.090 --> 00:07:43.100 align:start position:0%
something to a string so I can set my
 

00:07:43.100 --> 00:07:47.680 align:start position:0%
something to a string so I can set my
name<00:07:43.370><c> to</c><00:07:43.670><c> be</c><00:07:43.850><c> Bo</c><00:07:44.590><c> now</c><00:07:45.590><c> later</c><00:07:46.460><c> you</c><00:07:47.120><c> can</c><00:07:47.390><c> set</c><00:07:47.600><c> to</c>

00:07:47.680 --> 00:07:47.690 align:start position:0%
name to be Bo now later you can set to
 

00:07:47.690 --> 00:07:50.040 align:start position:0%
name to be Bo now later you can set to
be<00:07:47.780><c> something</c><00:07:48.080><c> else</c><00:07:48.200><c> I</c><00:07:48.410><c> can</c><00:07:48.440><c> say</c><00:07:48.830><c> my</c><00:07:49.160><c> name</c>

00:07:50.040 --> 00:07:50.050 align:start position:0%
be something else I can say my name
 

00:07:50.050 --> 00:07:54.190 align:start position:0%
be something else I can say my name
equals<00:07:51.050><c> eight</c><00:07:51.860><c> and</c><00:07:52.250><c> you</c><00:07:53.090><c> can</c><00:07:53.360><c> just</c><00:07:53.630><c> set</c><00:07:53.840><c> other</c>

00:07:54.190 --> 00:07:54.200 align:start position:0%
equals eight and you can just set other
 

00:07:54.200 --> 00:07:57.610 align:start position:0%
equals eight and you can just set other
data<00:07:54.620><c> types</c><00:07:54.950><c> later</c><00:07:55.690><c> now</c><00:07:56.690><c> there</c><00:07:57.080><c> are</c><00:07:57.230><c> actually</c>

00:07:57.610 --> 00:07:57.620 align:start position:0%
data types later now there are actually
 

00:07:57.620 --> 00:08:00.460 align:start position:0%
data types later now there are actually
three<00:07:58.070><c> ways</c><00:07:58.100><c> to</c><00:07:58.820><c> declare</c><00:07:59.360><c> a</c><00:07:59.390><c> variable</c><00:07:59.990><c> in</c>

00:08:00.460 --> 00:08:00.470 align:start position:0%
three ways to declare a variable in
 

00:08:00.470 --> 00:08:03.220 align:start position:0%
three ways to declare a variable in
JavaScript<00:08:01.220><c> so</c><00:08:01.760><c> var</c><00:08:02.180><c> is</c><00:08:02.450><c> one</c><00:08:02.720><c> of</c><00:08:02.840><c> them</c><00:08:02.990><c> and</c><00:08:03.200><c> for</c>

00:08:03.220 --> 00:08:03.230 align:start position:0%
JavaScript so var is one of them and for
 

00:08:03.230 --> 00:08:06.190 align:start position:0%
JavaScript so var is one of them and for
awhile<00:08:03.800><c> that</c><00:08:03.920><c> was</c><00:08:04.460><c> the</c><00:08:04.640><c> only</c><00:08:05.030><c> way</c><00:08:05.240><c> but</c><00:08:05.960><c> there</c>

00:08:06.190 --> 00:08:06.200 align:start position:0%
awhile that was the only way but there
 

00:08:06.200 --> 00:08:08.680 align:start position:0%
awhile that was the only way but there
are<00:08:06.320><c> other</c><00:08:06.500><c> ways</c><00:08:06.770><c> too</c><00:08:07.190><c> there's</c><00:08:08.120><c> a</c><00:08:08.210><c> way</c><00:08:08.419><c> called</c>

00:08:08.680 --> 00:08:08.690 align:start position:0%
are other ways too there's a way called
 

00:08:08.690 --> 00:08:12.580 align:start position:0%
are other ways too there's a way called
let<00:08:09.050><c> so</c><00:08:09.710><c> I</c><00:08:09.740><c> can</c><00:08:09.980><c> say</c><00:08:10.190><c> let</c><00:08:10.520><c> our</c><00:08:10.820><c> name</c>

00:08:12.580 --> 00:08:12.590 align:start position:0%
let so I can say let our name
 

00:08:12.590 --> 00:08:16.300 align:start position:0%
let so I can say let our name
and<00:08:12.680><c> then</c><00:08:13.070><c> I</c><00:08:13.160><c> can</c><00:08:13.370><c> say</c><00:08:13.610><c> equals</c><00:08:14.390><c> free</c><00:08:15.260><c> code</c><00:08:15.800><c> camp</c>

00:08:16.300 --> 00:08:16.310 align:start position:0%
and then I can say equals free code camp
 

00:08:16.310 --> 00:08:20.950 align:start position:0%
and then I can say equals free code camp
and<00:08:17.500><c> then</c><00:08:18.500><c> the</c><00:08:19.190><c> other</c><00:08:19.400><c> thing</c><00:08:19.790><c> would</c><00:08:20.030><c> be</c><00:08:20.090><c> Const</c>

00:08:20.950 --> 00:08:20.960 align:start position:0%
and then the other thing would be Const
 

00:08:20.960 --> 00:08:23.200 align:start position:0%
and then the other thing would be Const
so<00:08:21.470><c> I</c><00:08:21.500><c> could</c><00:08:21.650><c> do</c><00:08:21.740><c> a</c><00:08:21.800><c> say</c><00:08:22.070><c> you</c><00:08:22.340><c> can't</c><00:08:22.730><c> speak</c>

00:08:23.200 --> 00:08:23.210 align:start position:0%
so I could do a say you can't speak
 

00:08:23.210 --> 00:08:27.820 align:start position:0%
so I could do a say you can't speak
wills<00:08:23.870><c> and</c><00:08:24.730><c> 3.14</c><00:08:25.730><c> now</c><00:08:26.720><c> the</c><00:08:27.440><c> difference</c>

00:08:27.820 --> 00:08:27.830 align:start position:0%
wills and 3.14 now the difference
 

00:08:27.830 --> 00:08:31.750 align:start position:0%
wills and 3.14 now the difference
between<00:08:27.980><c> varlet</c><00:08:28.970><c> and</c><00:08:29.150><c> Const</c><00:08:29.840><c> VAR</c><00:08:30.770><c> is</c><00:08:31.130><c> going</c><00:08:31.670><c> to</c>

00:08:31.750 --> 00:08:31.760 align:start position:0%
between varlet and Const VAR is going to
 

00:08:31.760 --> 00:08:33.550 align:start position:0%
between varlet and Const VAR is going to
be<00:08:31.850><c> able</c><00:08:31.970><c> to</c><00:08:32.120><c> be</c><00:08:32.240><c> used</c><00:08:32.600><c> throughout</c><00:08:33.020><c> your</c><00:08:33.170><c> whole</c>

00:08:33.550 --> 00:08:33.560 align:start position:0%
be able to be used throughout your whole
 

00:08:33.560 --> 00:08:38.290 align:start position:0%
be able to be used throughout your whole
program<00:08:34.390><c> let</c><00:08:35.390><c> will</c><00:08:36.380><c> only</c><00:08:36.770><c> be</c><00:08:37.280><c> used</c><00:08:37.670><c> within</c><00:08:37.970><c> the</c>

00:08:38.290 --> 00:08:38.300 align:start position:0%
program let will only be used within the
 

00:08:38.300 --> 00:08:41.740 align:start position:0%
program let will only be used within the
scope<00:08:38.750><c> of</c><00:08:39.050><c> where</c><00:08:39.500><c> you</c><00:08:39.680><c> declare</c><00:08:40.040><c> that</c><00:08:40.750><c> now</c>

00:08:41.740 --> 00:08:41.750 align:start position:0%
scope of where you declare that now
 

00:08:41.750 --> 00:08:43.540 align:start position:0%
scope of where you declare that now
we're<00:08:42.050><c> going</c><00:08:42.140><c> to</c><00:08:42.230><c> be</c><00:08:42.320><c> talking</c><00:08:42.770><c> about</c><00:08:42.800><c> letting</c>

00:08:43.540 --> 00:08:43.550 align:start position:0%
we're going to be talking about letting
 

00:08:43.550 --> 00:08:45.430 align:start position:0%
we're going to be talking about letting
Const<00:08:44.030><c> more</c><00:08:44.240><c> later</c><00:08:44.540><c> so</c><00:08:44.810><c> I'm</c><00:08:44.900><c> just</c><00:08:45.110><c> giving</c><00:08:45.410><c> you</c>

00:08:45.430 --> 00:08:45.440 align:start position:0%
Const more later so I'm just giving you
 

00:08:45.440 --> 00:08:48.030 align:start position:0%
Const more later so I'm just giving you
a<00:08:45.500><c> brief</c><00:08:45.770><c> overview</c><00:08:46.520><c> of</c><00:08:46.550><c> what</c><00:08:46.880><c> they</c><00:08:47.000><c> are</c><00:08:47.030><c> now</c>

00:08:48.030 --> 00:08:48.040 align:start position:0%
a brief overview of what they are now
 

00:08:48.040 --> 00:08:51.190 align:start position:0%
a brief overview of what they are now
Const<00:08:49.040><c> is</c><00:08:49.250><c> a</c><00:08:49.610><c> variable</c><00:08:50.330><c> that</c><00:08:50.360><c> should</c><00:08:50.930><c> never</c>

00:08:51.190 --> 00:08:51.200 align:start position:0%
Const is a variable that should never
 

00:08:51.200 --> 00:08:54.310 align:start position:0%
Const is a variable that should never
change<00:08:51.320><c> it</c><00:08:52.070><c> can</c><00:08:52.340><c> never</c><00:08:52.580><c> change</c><00:08:52.700><c> so</c><00:08:53.300><c> like</c><00:08:54.080><c> right</c>

00:08:54.310 --> 00:08:54.320 align:start position:0%
change it can never change so like right
 

00:08:54.320 --> 00:08:57.610 align:start position:0%
change it can never change so like right
up<00:08:54.470><c> here</c><00:08:54.770><c> I</c><00:08:54.950><c> declared</c><00:08:55.730><c> my</c><00:08:56.360><c> name</c><00:08:56.690><c> but</c><00:08:57.320><c> then</c><00:08:57.500><c> we</c>

00:08:57.610 --> 00:08:57.620 align:start position:0%
up here I declared my name but then we
 

00:08:57.620 --> 00:08:59.890 align:start position:0%
up here I declared my name but then we
changed<00:08:57.650><c> it</c><00:08:58.340><c> here</c><00:08:58.880><c> so</c><00:08:59.060><c> it</c><00:08:59.150><c> started</c><00:08:59.540><c> out</c><00:08:59.690><c> to</c><00:08:59.870><c> be</c>

00:08:59.890 --> 00:08:59.900 align:start position:0%
changed it here so it started out to be
 

00:08:59.900 --> 00:09:03.250 align:start position:0%
changed it here so it started out to be
Bo<00:09:00.230><c> and</c><00:09:00.590><c> we</c><00:09:00.710><c> change</c><00:09:00.980><c> it</c><00:09:01.100><c> to</c><00:09:01.250><c> 8a</c><00:09:01.840><c> Const</c><00:09:02.840><c> you</c><00:09:03.050><c> can</c>

00:09:03.250 --> 00:09:03.260 align:start position:0%
Bo and we change it to 8a Const you can
 

00:09:03.260 --> 00:09:05.680 align:start position:0%
Bo and we change it to 8a Const you can
never<00:09:03.470><c> change</c><00:09:03.560><c> it</c><00:09:04.130><c> if</c><00:09:04.280><c> you</c><00:09:04.880><c> do</c><00:09:05.090><c> try</c><00:09:05.300><c> to</c><00:09:05.360><c> change</c>

00:09:05.680 --> 00:09:05.690 align:start position:0%
never change it if you do try to change
 

00:09:05.690 --> 00:09:08.890 align:start position:0%
never change it if you do try to change
it<00:09:05.930><c> you'll</c><00:09:06.200><c> get</c><00:09:06.470><c> an</c><00:09:06.650><c> error</c><00:09:07.420><c> okay</c><00:09:08.420><c> that's</c><00:09:08.720><c> all</c>

00:09:08.890 --> 00:09:08.900 align:start position:0%
it you'll get an error okay that's all
 

00:09:08.900 --> 00:09:10.750 align:start position:0%
it you'll get an error okay that's all
for<00:09:09.110><c> now</c><00:09:09.260><c> but</c><00:09:09.650><c> like</c><00:09:09.860><c> I</c><00:09:09.890><c> said</c><00:09:10.040><c> we'll</c><00:09:10.370><c> be</c><00:09:10.520><c> talking</c>

00:09:10.750 --> 00:09:10.760 align:start position:0%
for now but like I said we'll be talking
 

00:09:10.760 --> 00:09:12.280 align:start position:0%
for now but like I said we'll be talking
more<00:09:11.120><c> about</c><00:09:11.180><c> the</c><00:09:11.510><c> different</c><00:09:11.840><c> types</c><00:09:11.870><c> of</c>

00:09:12.280 --> 00:09:12.290 align:start position:0%
more about the different types of
 

00:09:12.290 --> 00:09:17.579 align:start position:0%
more about the different types of
variables<00:09:12.650><c> later</c>

00:09:17.579 --> 00:09:17.589 align:start position:0%
 
 

00:09:17.589 --> 00:09:20.069 align:start position:0%
 
there's<00:09:18.310><c> a</c><00:09:18.459><c> difference</c><00:09:18.939><c> between</c><00:09:19.120><c> declaring</c>

00:09:20.069 --> 00:09:20.079 align:start position:0%
there's a difference between declaring
 

00:09:20.079 --> 00:09:23.040 align:start position:0%
there's a difference between declaring
variables<00:09:20.319><c> and</c><00:09:20.860><c> assigning</c><00:09:21.579><c> variables</c><00:09:22.050><c> here's</c>

00:09:23.040 --> 00:09:23.050 align:start position:0%
variables and assigning variables here's
 

00:09:23.050 --> 00:09:25.650 align:start position:0%
variables and assigning variables here's
how<00:09:23.199><c> you</c><00:09:23.259><c> assign</c><00:09:23.649><c> the</c><00:09:23.860><c> variable</c><00:09:24.339><c> var</c><00:09:24.939><c> a</c><00:09:25.180><c> and</c>

00:09:25.650 --> 00:09:25.660 align:start position:0%
how you assign the variable var a and
 

00:09:25.660 --> 00:09:28.079 align:start position:0%
how you assign the variable var a and
then<00:09:25.839><c> the</c><00:09:25.990><c> semicolon</c><00:09:26.259><c> I</c><00:09:27.100><c> didn't</c><00:09:27.790><c> mention</c><00:09:27.910><c> this</c>

00:09:28.079 --> 00:09:28.089 align:start position:0%
then the semicolon I didn't mention this
 

00:09:28.089 --> 00:09:30.660 align:start position:0%
then the semicolon I didn't mention this
earlier<00:09:28.300><c> but</c><00:09:28.870><c> you</c><00:09:29.110><c> end</c><00:09:29.410><c> all</c><00:09:29.769><c> lines</c><00:09:30.249><c> in</c>

00:09:30.660 --> 00:09:30.670 align:start position:0%
earlier but you end all lines in
 

00:09:30.670 --> 00:09:33.210 align:start position:0%
earlier but you end all lines in
JavaScript<00:09:31.300><c> with</c><00:09:31.449><c> a</c><00:09:31.480><c> semicolon</c><00:09:32.100><c> well</c><00:09:33.100><c> it's</c>

00:09:33.210 --> 00:09:33.220 align:start position:0%
JavaScript with a semicolon well it's
 

00:09:33.220 --> 00:09:35.389 align:start position:0%
JavaScript with a semicolon well it's
not<00:09:33.310><c> actually</c><00:09:33.699><c> required</c><00:09:34.120><c> you</c><00:09:34.809><c> can</c><00:09:34.839><c> actually</c>

00:09:35.389 --> 00:09:35.399 align:start position:0%
not actually required you can actually
 

00:09:35.399 --> 00:09:39.090 align:start position:0%
not actually required you can actually
just<00:09:36.399><c> skip</c><00:09:36.999><c> the</c><00:09:37.180><c> semicolons</c><00:09:37.809><c> completely</c><00:09:38.439><c> but</c>

00:09:39.090 --> 00:09:39.100 align:start position:0%
just skip the semicolons completely but
 

00:09:39.100 --> 00:09:41.639 align:start position:0%
just skip the semicolons completely but
most<00:09:39.519><c> people</c><00:09:40.329><c> recommend</c><00:09:40.870><c> that</c><00:09:41.110><c> you</c><00:09:41.379><c> put</c><00:09:41.589><c> a</c>

00:09:41.639 --> 00:09:41.649 align:start position:0%
most people recommend that you put a
 

00:09:41.649 --> 00:09:43.980 align:start position:0%
most people recommend that you put a
semicolon<00:09:42.040><c> just</c><00:09:42.910><c> so</c><00:09:43.029><c> it's</c><00:09:43.209><c> obvious</c><00:09:43.689><c> where</c><00:09:43.870><c> the</c>

00:09:43.980 --> 00:09:43.990 align:start position:0%
semicolon just so it's obvious where the
 

00:09:43.990 --> 00:09:47.819 align:start position:0%
semicolon just so it's obvious where the
end<00:09:44.170><c> of</c><00:09:44.290><c> the</c><00:09:44.410><c> line</c><00:09:44.620><c> is</c><00:09:44.860><c> so</c><00:09:45.670><c> here</c><00:09:46.360><c> we</c><00:09:46.899><c> are</c><00:09:46.930><c> just</c>

00:09:47.819 --> 00:09:47.829 align:start position:0%
end of the line is so here we are just
 

00:09:47.829 --> 00:09:50.999 align:start position:0%
end of the line is so here we are just
declaring<00:09:48.550><c> a</c><00:09:48.730><c> variable</c><00:09:48.759><c> to</c><00:09:49.449><c> be</c><00:09:49.480><c> called</c><00:09:50.319><c> a</c><00:09:50.499><c> and</c>

00:09:50.999 --> 00:09:51.009 align:start position:0%
declaring a variable to be called a and
 

00:09:51.009 --> 00:09:53.309 align:start position:0%
declaring a variable to be called a and
then<00:09:51.699><c> here</c><00:09:52.059><c> we</c><00:09:52.240><c> are</c><00:09:52.269><c> assigning</c><00:09:52.779><c> a</c><00:09:53.139><c> variable</c>

00:09:53.309 --> 00:09:53.319 align:start position:0%
then here we are assigning a variable
 

00:09:53.319 --> 00:09:56.069 align:start position:0%
then here we are assigning a variable
we're<00:09:53.949><c> declaring</c><00:09:54.339><c> an</c><00:09:54.819><c> assigning</c><00:09:55.389><c> in</c><00:09:55.509><c> one</c><00:09:55.779><c> line</c>

00:09:56.069 --> 00:09:56.079 align:start position:0%
we're declaring an assigning in one line
 

00:09:56.079 --> 00:09:59.519 align:start position:0%
we're declaring an assigning in one line
so<00:09:56.829><c> we're</c><00:09:57.009><c> declaring</c><00:09:57.309><c> it</c><00:09:57.699><c> VAR</c><00:09:57.999><c> b</c><00:09:58.329><c> and</c><00:09:58.629><c> then</c><00:09:59.110><c> the</c>

00:09:59.519 --> 00:09:59.529 align:start position:0%
so we're declaring it VAR b and then the
 

00:09:59.529 --> 00:10:03.720 align:start position:0%
so we're declaring it VAR b and then the
equal<00:10:00.160><c> sign</c><00:10:00.459><c> is</c><00:10:00.879><c> the</c><00:10:01.509><c> assignment</c><00:10:02.319><c> operator</c><00:10:02.730><c> it</c>

00:10:03.720 --> 00:10:03.730 align:start position:0%
equal sign is the assignment operator it
 

00:10:03.730 --> 00:10:07.139 align:start position:0%
equal sign is the assignment operator it
means<00:10:04.149><c> that</c><00:10:04.449><c> 2</c><00:10:05.079><c> is</c><00:10:05.410><c> being</c><00:10:05.769><c> assigned</c><00:10:06.309><c> to</c><00:10:06.759><c> B</c>

00:10:07.139 --> 00:10:07.149 align:start position:0%
means that 2 is being assigned to B
 

00:10:07.149 --> 00:10:09.809 align:start position:0%
means that 2 is being assigned to B
we're<00:10:07.930><c> not</c><00:10:08.050><c> checking</c><00:10:08.439><c> if</c><00:10:08.800><c> B</c><00:10:09.009><c> equals</c><00:10:09.430><c> 2</c><00:10:09.610><c> though</c>

00:10:09.809 --> 00:10:09.819 align:start position:0%
we're not checking if B equals 2 though
 

00:10:09.819 --> 00:10:12.600 align:start position:0%
we're not checking if B equals 2 though
we're<00:10:09.999><c> just</c><00:10:10.029><c> assigning</c><00:10:10.540><c> 2</c><00:10:10.930><c> to</c><00:10:11.079><c> B</c><00:10:11.259><c> so</c><00:10:12.009><c> after</c>

00:10:12.600 --> 00:10:12.610 align:start position:0%
we're just assigning 2 to B so after
 

00:10:12.610 --> 00:10:15.299 align:start position:0%
we're just assigning 2 to B so after
that<00:10:12.759><c> we</c><00:10:13.389><c> can</c><00:10:13.689><c> actually</c><00:10:13.899><c> assign</c><00:10:14.620><c> other</c><00:10:14.920><c> things</c>

00:10:15.299 --> 00:10:15.309 align:start position:0%
that we can actually assign other things
 

00:10:15.309 --> 00:10:21.840 align:start position:0%
that we can actually assign other things
so<00:10:15.970><c> I</c><00:10:15.999><c> can</c><00:10:16.300><c> say</c><00:10:16.749><c> a</c><00:10:17.819><c> equals</c><00:10:19.319><c> 7</c><00:10:20.319><c> so</c><00:10:20.889><c> now</c><00:10:21.129><c> I've</c><00:10:21.490><c> just</c>

00:10:21.840 --> 00:10:21.850 align:start position:0%
so I can say a equals 7 so now I've just
 

00:10:21.850 --> 00:10:24.869 align:start position:0%
so I can say a equals 7 so now I've just
assigned<00:10:22.439><c> 7th</c><00:10:23.439><c> a</c><00:10:23.649><c> I</c><00:10:23.800><c> didn't</c><00:10:24.309><c> have</c><00:10:24.399><c> to</c><00:10:24.519><c> declare</c>

00:10:24.869 --> 00:10:24.879 align:start position:0%
assigned 7th a I didn't have to declare
 

00:10:24.879 --> 00:10:27.569 align:start position:0%
assigned 7th a I didn't have to declare
a<00:10:25.120><c> because</c><00:10:25.420><c> it</c><00:10:25.509><c> was</c><00:10:25.629><c> already</c><00:10:25.809><c> declared</c><00:10:26.319><c> and</c><00:10:26.740><c> I</c>

00:10:27.569 --> 00:10:27.579 align:start position:0%
a because it was already declared and I
 

00:10:27.579 --> 00:10:35.249 align:start position:0%
a because it was already declared and I
can<00:10:27.819><c> also</c><00:10:28.680><c> say</c><00:10:29.680><c> that</c><00:10:30.149><c> B</c><00:10:31.149><c> equals</c><00:10:32.069><c> a</c><00:10:33.660><c> so</c><00:10:34.660><c> I've</c><00:10:34.899><c> now</c>

00:10:35.249 --> 00:10:35.259 align:start position:0%
can also say that B equals a so I've now
 

00:10:35.259 --> 00:10:39.900 align:start position:0%
can also say that B equals a so I've now
assigned<00:10:35.860><c> the</c><00:10:36.100><c> contents</c><00:10:36.879><c> of</c><00:10:37.029><c> A</c><00:10:37.529><c> to</c><00:10:38.529><c> B</c><00:10:38.559><c> and</c><00:10:39.459><c> put</c>

00:10:39.900 --> 00:10:39.910 align:start position:0%
assigned the contents of A to B and put
 

00:10:39.910 --> 00:10:42.689 align:start position:0%
assigned the contents of A to B and put
the<00:10:40.029><c> semicolon</c><00:10:40.329><c> there</c><00:10:41.160><c> one</c><00:10:42.160><c> thing</c><00:10:42.370><c> I</c><00:10:42.490><c> want</c><00:10:42.639><c> to</c>

00:10:42.689 --> 00:10:42.699 align:start position:0%
the semicolon there one thing I want to
 

00:10:42.699 --> 00:10:44.749 align:start position:0%
the semicolon there one thing I want to
tell<00:10:42.879><c> you</c><00:10:43.000><c> about</c><00:10:43.120><c> is</c><00:10:43.389><c> console</c><00:10:44.079><c> dot</c><00:10:44.230><c> log</c>

00:10:44.749 --> 00:10:44.759 align:start position:0%
tell you about is console dot log
 

00:10:44.759 --> 00:10:48.269 align:start position:0%
tell you about is console dot log
console<00:10:45.759><c> dot</c><00:10:45.910><c> log</c><00:10:46.230><c> allows</c><00:10:47.230><c> you</c><00:10:47.559><c> to</c><00:10:47.740><c> see</c><00:10:48.040><c> things</c>

00:10:48.269 --> 00:10:48.279 align:start position:0%
console dot log allows you to see things
 

00:10:48.279 --> 00:10:51.150 align:start position:0%
console dot log allows you to see things
in<00:10:48.519><c> the</c><00:10:48.550><c> console</c><00:10:49.269><c> so</c><00:10:49.839><c> I'm</c><00:10:50.170><c> going</c><00:10:50.529><c> to</c><00:10:50.589><c> console</c>

00:10:51.150 --> 00:10:51.160 align:start position:0%
in the console so I'm going to console
 

00:10:51.160 --> 00:10:54.809 align:start position:0%
in the console so I'm going to console
that<00:10:51.279><c> log</c><00:10:51.579><c> a</c><00:10:51.879><c> and</c><00:10:52.449><c> if</c><00:10:52.839><c> I</c><00:10:53.019><c> load</c><00:10:53.680><c> this</c><00:10:53.920><c> here</c><00:10:54.250><c> you</c>

00:10:54.809 --> 00:10:54.819 align:start position:0%
that log a and if I load this here you
 

00:10:54.819 --> 00:10:56.519 align:start position:0%
that log a and if I load this here you
can<00:10:54.850><c> see</c><00:10:55.149><c> down</c><00:10:55.329><c> here</c><00:10:55.569><c> in</c><00:10:55.660><c> the</c><00:10:55.720><c> console</c><00:10:56.259><c> it</c>

00:10:56.519 --> 00:10:56.529 align:start position:0%
can see down here in the console it
 

00:10:56.529 --> 00:11:00.179 align:start position:0%
can see down here in the console it
shows<00:10:56.980><c> seven</c><00:10:57.730><c> so</c><00:10:58.629><c> right</c><00:10:59.410><c> now</c><00:10:59.559><c> we've</c><00:10:59.800><c> assigned</c>

00:11:00.179 --> 00:11:00.189 align:start position:0%
shows seven so right now we've assigned
 

00:11:00.189 --> 00:11:03.210 align:start position:0%
shows seven so right now we've assigned
A<00:11:00.490><c> to</c><00:11:01.000><c> B</c><00:11:01.029><c> seven</c><00:11:01.600><c> or</c><00:11:01.839><c> and</c><00:11:02.139><c> so</c><00:11:02.709><c> we</c><00:11:02.949><c> when</c><00:11:03.129><c> we</c>

00:11:03.210 --> 00:11:03.220 align:start position:0%
A to B seven or and so we when we
 

00:11:03.220 --> 00:11:05.100 align:start position:0%
A to B seven or and so we when we
console<00:11:03.610><c> that</c><00:11:03.699><c> log</c><00:11:03.910><c> a</c><00:11:04.149><c> it</c><00:11:04.389><c> shows</c><00:11:04.569><c> seven</c><00:11:04.959><c> down</c>

00:11:05.100 --> 00:11:05.110 align:start position:0%
console that log a it shows seven down
 

00:11:05.110 --> 00:11:09.360 align:start position:0%
console that log a it shows seven down
there<00:11:05.579><c> if</c><00:11:06.689><c> we</c><00:11:07.689><c> put</c><00:11:08.139><c> another</c><00:11:08.470><c> console</c><00:11:09.009><c> that</c><00:11:09.100><c> log</c>

00:11:09.360 --> 00:11:09.370 align:start position:0%
there if we put another console that log
 

00:11:09.370 --> 00:11:12.900 align:start position:0%
there if we put another console that log
right<00:11:09.639><c> here</c><00:11:11.009><c> this</c><00:11:12.009><c> will</c><00:11:12.220><c> allow</c><00:11:12.399><c> us</c><00:11:12.429><c> to</c><00:11:12.579><c> show</c>

00:11:12.900 --> 00:11:12.910 align:start position:0%
right here this will allow us to show
 

00:11:12.910 --> 00:11:15.210 align:start position:0%
right here this will allow us to show
what<00:11:13.089><c> a</c><00:11:13.269><c> was</c><00:11:13.660><c> up</c><00:11:13.959><c> here</c><00:11:14.230><c> and</c><00:11:14.499><c> then</c><00:11:14.709><c> down</c><00:11:14.920><c> there</c>

00:11:15.210 --> 00:11:15.220 align:start position:0%
what a was up here and then down there
 

00:11:15.220 --> 00:11:19.470 align:start position:0%
what a was up here and then down there
so<00:11:15.819><c> console</c><00:11:16.449><c> dot</c><00:11:16.600><c> log</c><00:11:16.829><c> now</c><00:11:17.829><c> if</c><00:11:17.949><c> I</c><00:11:18.040><c> run</c><00:11:18.279><c> that</c><00:11:18.480><c> we</c>

00:11:19.470 --> 00:11:19.480 align:start position:0%
so console dot log now if I run that we
 

00:11:19.480 --> 00:11:21.629 align:start position:0%
so console dot log now if I run that we
can<00:11:19.689><c> now</c><00:11:19.839><c> see</c><00:11:20.110><c> at</c><00:11:20.230><c> first</c><00:11:20.259><c> it</c><00:11:20.980><c> was</c><00:11:21.309><c> null</c><00:11:21.610><c> and</c>

00:11:21.629 --> 00:11:21.639 align:start position:0%
can now see at first it was null and
 

00:11:21.639 --> 00:11:24.600 align:start position:0%
can now see at first it was null and
then<00:11:22.269><c> now</c><00:11:22.480><c> at</c><00:11:22.689><c> seven</c><00:11:23.139><c> so</c><00:11:23.290><c> here</c><00:11:23.559><c> oh</c><00:11:23.589><c> it's</c><00:11:24.009><c> not</c><00:11:24.279><c> as</c>

00:11:24.600 --> 00:11:24.610 align:start position:0%
then now at seven so here oh it's not as
 

00:11:24.610 --> 00:11:26.999 align:start position:0%
then now at seven so here oh it's not as
seven<00:11:25.120><c> down</c><00:11:25.269><c> here</c><00:11:25.629><c> so</c><00:11:26.050><c> you</c><00:11:26.110><c> can</c><00:11:26.379><c> check</c><00:11:26.709><c> what</c>

00:11:26.999 --> 00:11:27.009 align:start position:0%
seven down here so you can check what
 

00:11:27.009 --> 00:11:28.980 align:start position:0%
seven down here so you can check what
variables<00:11:27.579><c> are</c><00:11:27.759><c> at</c><00:11:28.029><c> various</c><00:11:28.389><c> points</c><00:11:28.809><c> in</c><00:11:28.899><c> your</c>

00:11:28.980 --> 00:11:28.990 align:start position:0%
variables are at various points in your
 

00:11:28.990 --> 00:11:33.999 align:start position:0%
variables are at various points in your
program

00:11:33.999 --> 00:11:34.009 align:start position:0%
 
 

00:11:34.009 --> 00:11:36.699 align:start position:0%
 
now<00:11:35.009><c> I'll</c><00:11:35.160><c> show</c><00:11:35.189><c> you</c><00:11:35.459><c> another</c><00:11:35.579><c> example</c><00:11:36.420><c> of</c>

00:11:36.699 --> 00:11:36.709 align:start position:0%
now I'll show you another example of
 

00:11:36.709 --> 00:11:39.650 align:start position:0%
now I'll show you another example of
initializing<00:11:37.709><c> a</c><00:11:38.009><c> variable</c><00:11:38.040><c> to</c><00:11:38.790><c> an</c><00:11:39.060><c> initial</c>

00:11:39.650 --> 00:11:39.660 align:start position:0%
initializing a variable to an initial
 

00:11:39.660 --> 00:11:43.340 align:start position:0%
initializing a variable to an initial
value<00:11:39.930><c> at</c><00:11:40.529><c> the</c><00:11:40.800><c> same</c><00:11:41.040><c> time</c><00:11:41.399><c> it's</c><00:11:41.699><c> declared</c><00:11:42.509><c> so</c>

00:11:43.340 --> 00:11:43.350 align:start position:0%
value at the same time it's declared so
 

00:11:43.350 --> 00:11:47.689 align:start position:0%
value at the same time it's declared so
I'm<00:11:43.620><c> going</c><00:11:43.740><c> to</c><00:11:43.769><c> say</c><00:11:43.980><c> var</c><00:11:44.339><c> a</c><00:11:45.230><c> equals</c><00:11:46.230><c> 9</c><00:11:46.740><c> so</c><00:11:47.129><c> the</c>

00:11:47.689 --> 00:11:47.699 align:start position:0%
I'm going to say var a equals 9 so the
 

00:11:47.699 --> 00:11:50.990 align:start position:0%
I'm going to say var a equals 9 so the
VAR<00:11:47.939><c> a</c><00:11:48.180><c> is</c><00:11:48.660><c> the</c><00:11:49.230><c> clearing</c><00:11:49.769><c> it</c><00:11:49.920><c> and</c><00:11:50.069><c> the</c><00:11:50.519><c> equals</c>

00:11:50.990 --> 00:11:51.000 align:start position:0%
VAR a is the clearing it and the equals
 

00:11:51.000 --> 00:11:54.139 align:start position:0%
VAR a is the clearing it and the equals
9<00:11:51.300><c> is</c><00:11:51.660><c> initializing</c><00:11:52.620><c> it</c><00:11:52.949><c> with</c><00:11:53.009><c> that</c><00:11:53.910><c> the</c>

00:11:54.139 --> 00:11:54.149 align:start position:0%
9 is initializing it with that the
 

00:11:54.149 --> 00:11:56.119 align:start position:0%
9 is initializing it with that the
assignment<00:11:54.750><c> operator</c><00:11:54.870><c> which</c><00:11:55.500><c> is</c><00:11:55.649><c> the</c><00:11:55.769><c> equal</c>

00:11:56.119 --> 00:11:56.129 align:start position:0%
assignment operator which is the equal
 

00:11:56.129 --> 00:12:00.400 align:start position:0%
assignment operator which is the equal
sign

00:12:00.400 --> 00:12:00.410 align:start position:0%
 
 

00:12:00.410 --> 00:12:02.870 align:start position:0%
 
before<00:12:01.410><c> we</c><00:12:01.620><c> do</c><00:12:01.800><c> anything</c><00:12:02.040><c> to</c><00:12:02.220><c> these</c><00:12:02.430><c> variables</c>

00:12:02.870 --> 00:12:02.880 align:start position:0%
before we do anything to these variables
 

00:12:02.880 --> 00:12:05.870 align:start position:0%
before we do anything to these variables
they<00:12:03.390><c> are</c><00:12:03.500><c> uninitialized</c><00:12:04.500><c> that</c><00:12:05.460><c> means</c><00:12:05.670><c> their</c>

00:12:05.870 --> 00:12:05.880 align:start position:0%
they are uninitialized that means their
 

00:12:05.880 --> 00:12:08.510 align:start position:0%
they are uninitialized that means their
value<00:12:06.330><c> is</c><00:12:06.510><c> undefined</c><00:12:07.350><c> we</c><00:12:07.710><c> have</c><00:12:07.890><c> not</c><00:12:08.040><c> set</c><00:12:08.340><c> them</c>

00:12:08.510 --> 00:12:08.520 align:start position:0%
value is undefined we have not set them
 

00:12:08.520 --> 00:12:10.970 align:start position:0%
value is undefined we have not set them
to<00:12:08.670><c> anything</c><00:12:08.850><c> but</c><00:12:09.810><c> it's</c><00:12:09.990><c> simple</c><00:12:10.350><c> to</c><00:12:10.500><c> fix</c><00:12:10.740><c> that</c>

00:12:10.970 --> 00:12:10.980 align:start position:0%
to anything but it's simple to fix that
 

00:12:10.980 --> 00:12:15.410 align:start position:0%
to anything but it's simple to fix that
I'll<00:12:11.250><c> just</c><00:12:11.640><c> set</c><00:12:11.880><c> this</c><00:12:12.060><c> to</c><00:12:12.270><c> 5</c><00:12:12.570><c> I'll</c><00:12:12.960><c> set</c><00:12:13.650><c> B</c><00:12:14.100><c> to</c><00:12:14.940><c> 10</c>

00:12:15.410 --> 00:12:15.420 align:start position:0%
I'll just set this to 5 I'll set B to 10
 

00:12:15.420 --> 00:12:18.110 align:start position:0%
I'll just set this to 5 I'll set B to 10
and<00:12:15.750><c> then</c><00:12:16.470><c> we</c><00:12:16.500><c> can</c><00:12:16.740><c> set</c><00:12:16.920><c> C</c><00:12:17.190><c> to</c><00:12:17.220><c> a</c><00:12:17.370><c> string</c><00:12:17.790><c> it's</c>

00:12:18.110 --> 00:12:18.120 align:start position:0%
and then we can set C to a string it's
 

00:12:18.120 --> 00:12:22.340 align:start position:0%
and then we can set C to a string it's
going<00:12:18.150><c> to</c><00:12:18.300><c> be</c><00:12:18.540><c> I</c><00:12:18.950><c> am</c><00:12:19.950><c> a</c><00:12:20.570><c> string</c><00:12:21.570><c> and</c><00:12:22.080><c> you</c><00:12:22.200><c> always</c>

00:12:22.340 --> 00:12:22.350 align:start position:0%
going to be I am a string and you always
 

00:12:22.350 --> 00:12:24.340 align:start position:0%
going to be I am a string and you always
have<00:12:22.530><c> to</c><00:12:22.620><c> put</c><00:12:22.770><c> in</c><00:12:22.920><c> quotation</c><00:12:23.400><c> marks</c><00:12:23.640><c> like</c><00:12:24.030><c> that</c>

00:12:24.340 --> 00:12:24.350 align:start position:0%
have to put in quotation marks like that
 

00:12:24.350 --> 00:12:28.490 align:start position:0%
have to put in quotation marks like that
so<00:12:25.350><c> you</c><00:12:26.040><c> can</c><00:12:26.070><c> see</c><00:12:26.400><c> a</c><00:12:26.610><c> a</c><00:12:27.090><c> plus</c><00:12:27.540><c> 1</c><00:12:27.960><c> is</c><00:12:28.230><c> going</c><00:12:28.410><c> to</c>

00:12:28.490 --> 00:12:28.500 align:start position:0%
so you can see a a plus 1 is going to
 

00:12:28.500 --> 00:12:32.510 align:start position:0%
so you can see a a plus 1 is going to
equal<00:12:28.860><c> 6</c><00:12:29.430><c> 5</c><00:12:29.850><c> plus</c><00:12:30.240><c> 1</c><00:12:30.600><c> equals</c><00:12:30.990><c> 6</c><00:12:31.230><c> B</c><00:12:31.710><c> equals</c><00:12:32.430><c> B</c>

00:12:32.510 --> 00:12:32.520 align:start position:0%
equal 6 5 plus 1 equals 6 B equals B
 

00:12:32.520 --> 00:12:35.960 align:start position:0%
equal 6 5 plus 1 equals 6 B equals B
plus<00:12:32.760><c> 5</c><00:12:33.390><c> that's</c><00:12:33.900><c> gonna</c><00:12:34.020><c> be</c><00:12:34.140><c> 15</c><00:12:34.710><c> and</c><00:12:35.040><c> then</c><00:12:35.610><c> C</c><00:12:35.880><c> is</c>

00:12:35.960 --> 00:12:35.970 align:start position:0%
plus 5 that's gonna be 15 and then C is
 

00:12:35.970 --> 00:12:42.569 align:start position:0%
plus 5 that's gonna be 15 and then C is
now<00:12:36.150><c> gonna</c><00:12:36.360><c> say</c><00:12:36.630><c> I</c><00:12:36.810><c> am</c><00:12:37.350><c> a</c><00:12:37.740><c> string</c>

00:12:42.569 --> 00:12:42.579 align:start position:0%
 
 

00:12:42.579 --> 00:12:45.519 align:start position:0%
 
variable<00:12:43.579><c> names</c><00:12:43.879><c> and</c><00:12:44.120><c> function</c><00:12:45.110><c> names</c><00:12:45.319><c> in</c>

00:12:45.519 --> 00:12:45.529 align:start position:0%
variable names and function names in
 

00:12:45.529 --> 00:12:47.740 align:start position:0%
variable names and function names in
JavaScript<00:12:46.190><c> are</c><00:12:46.370><c> case-sensitive</c>

00:12:47.740 --> 00:12:47.750 align:start position:0%
JavaScript are case-sensitive
 

00:12:47.750 --> 00:12:51.100 align:start position:0%
JavaScript are case-sensitive
that<00:12:48.410><c> means</c><00:12:48.649><c> the</c><00:12:48.829><c> capitalization</c><00:12:49.519><c> matters</c><00:12:50.180><c> so</c>

00:12:51.100 --> 00:12:51.110 align:start position:0%
that means the capitalization matters so
 

00:12:51.110 --> 00:12:54.519 align:start position:0%
that means the capitalization matters so
this<00:12:51.470><c> declaration</c><00:12:52.370><c> here</c><00:12:52.819><c> is</c><00:12:53.000><c> not</c><00:12:53.750><c> the</c><00:12:54.019><c> same</c><00:12:54.290><c> as</c>

00:12:54.519 --> 00:12:54.529 align:start position:0%
this declaration here is not the same as
 

00:12:54.529 --> 00:12:56.800 align:start position:0%
this declaration here is not the same as
this<00:12:54.709><c> assignment</c><00:12:55.209><c> even</c><00:12:56.209><c> though</c><00:12:56.329><c> the</c><00:12:56.509><c> letters</c>

00:12:56.800 --> 00:12:56.810 align:start position:0%
this assignment even though the letters
 

00:12:56.810 --> 00:12:59.470 align:start position:0%
this assignment even though the letters
are<00:12:56.959><c> the</c><00:12:57.019><c> same</c><00:12:57.379><c> the</c><00:12:57.800><c> capitalization</c><00:12:58.370><c> is</c><00:12:58.970><c> not</c>

00:12:59.470 --> 00:12:59.480 align:start position:0%
are the same the capitalization is not
 

00:12:59.480 --> 00:13:01.629 align:start position:0%
are the same the capitalization is not
the<00:12:59.779><c> same</c><00:13:00.050><c> so</c><00:13:00.589><c> it's</c><00:13:00.740><c> not</c><00:13:00.860><c> going</c><00:13:01.100><c> to</c><00:13:01.310><c> assign</c>

00:13:01.629 --> 00:13:01.639 align:start position:0%
the same so it's not going to assign
 

00:13:01.639 --> 00:13:05.050 align:start position:0%
the same so it's not going to assign
correctly<00:13:02.389><c> and</c><00:13:02.629><c> in</c><00:13:03.589><c> here</c><00:13:04.220><c> you'll</c><00:13:04.550><c> see</c><00:13:04.790><c> there's</c>

00:13:05.050 --> 00:13:05.060 align:start position:0%
correctly and in here you'll see there's
 

00:13:05.060 --> 00:13:07.660 align:start position:0%
correctly and in here you'll see there's
an<00:13:05.209><c> error</c><00:13:05.569><c> if</c><00:13:05.810><c> we</c><00:13:05.870><c> try</c><00:13:06.319><c> to</c><00:13:06.379><c> run</c><00:13:06.589><c> it</c><00:13:06.670><c> because</c>

00:13:07.660 --> 00:13:07.670 align:start position:0%
an error if we try to run it because
 

00:13:07.670 --> 00:13:10.329 align:start position:0%
an error if we try to run it because
this<00:13:08.000><c> has</c><00:13:08.240><c> not</c><00:13:08.509><c> been</c><00:13:08.839><c> defined</c><00:13:09.050><c> it</c><00:13:09.680><c> has</c><00:13:10.160><c> not</c>

00:13:10.329 --> 00:13:10.339 align:start position:0%
this has not been defined it has not
 

00:13:10.339 --> 00:13:13.449 align:start position:0%
this has not been defined it has not
been<00:13:10.579><c> declared</c><00:13:10.959><c> it's</c><00:13:12.009><c> generally</c><00:13:13.009><c> common</c>

00:13:13.449 --> 00:13:13.459 align:start position:0%
been declared it's generally common
 

00:13:13.459 --> 00:13:16.569 align:start position:0%
been declared it's generally common
practice<00:13:14.000><c> to</c><00:13:14.029><c> use</c><00:13:14.290><c> camel</c><00:13:15.290><c> case</c><00:13:15.339><c> so</c><00:13:16.339><c> let</c><00:13:16.459><c> me</c>

00:13:16.569 --> 00:13:16.579 align:start position:0%
practice to use camel case so let me
 

00:13:16.579 --> 00:13:18.490 align:start position:0%
practice to use camel case so let me
show<00:13:16.790><c> you</c><00:13:16.850><c> how</c><00:13:17.180><c> we</c><00:13:17.240><c> do</c><00:13:17.480><c> that</c><00:13:17.509><c> instead</c><00:13:18.439><c> of</c>

00:13:18.490 --> 00:13:18.500 align:start position:0%
show you how we do that instead of
 

00:13:18.500 --> 00:13:21.540 align:start position:0%
show you how we do that instead of
Studley<00:13:19.189><c> cap</c><00:13:19.550><c> var</c><00:13:20.060><c> it's</c><00:13:20.569><c> gonna</c><00:13:20.750><c> be</c><00:13:20.839><c> stud</c>

00:13:21.540 --> 00:13:21.550 align:start position:0%
Studley cap var it's gonna be stud
 

00:13:21.550 --> 00:13:25.990 align:start position:0%
Studley cap var it's gonna be stud
League<00:13:22.550><c> cap</c><00:13:23.209><c> var</c><00:13:23.990><c> so</c><00:13:24.410><c> the</c><00:13:25.160><c> first</c><00:13:25.519><c> letter</c><00:13:25.850><c> is</c>

00:13:25.990 --> 00:13:26.000 align:start position:0%
League cap var so the first letter is
 

00:13:26.000 --> 00:13:28.119 align:start position:0%
League cap var so the first letter is
always<00:13:26.269><c> gonna</c><00:13:26.420><c> be</c><00:13:26.480><c> lowercase</c><00:13:27.350><c> and</c><00:13:27.649><c> anytime</c>

00:13:28.119 --> 00:13:28.129 align:start position:0%
always gonna be lowercase and anytime
 

00:13:28.129 --> 00:13:30.280 align:start position:0%
always gonna be lowercase and anytime
you<00:13:28.430><c> have</c><00:13:28.490><c> a</c><00:13:28.610><c> new</c><00:13:28.939><c> word</c><00:13:29.300><c> or</c><00:13:29.600><c> new</c><00:13:29.750><c> section</c><00:13:30.139><c> of</c><00:13:30.199><c> a</c>

00:13:30.280 --> 00:13:30.290 align:start position:0%
you have a new word or new section of a
 

00:13:30.290 --> 00:13:32.199 align:start position:0%
you have a new word or new section of a
word<00:13:30.500><c> you</c><00:13:30.680><c> just</c><00:13:30.889><c> capitalize</c><00:13:31.579><c> the</c><00:13:32.180><c> first</c>

00:13:32.199 --> 00:13:32.209 align:start position:0%
word you just capitalize the first
 

00:13:32.209 --> 00:13:36.879 align:start position:0%
word you just capitalize the first
letter<00:13:32.660><c> and</c><00:13:33.220><c> so</c><00:13:34.300><c> we</c><00:13:35.300><c> can</c><00:13:35.480><c> change</c><00:13:35.720><c> this</c><00:13:36.079><c> this</c>

00:13:36.879 --> 00:13:36.889 align:start position:0%
letter and so we can change this this
 

00:13:36.889 --> 00:13:39.280 align:start position:0%
letter and so we can change this this
one's<00:13:37.189><c> correct</c><00:13:37.550><c> so</c><00:13:38.000><c> now</c><00:13:38.240><c> just</c><00:13:38.420><c> go</c><00:13:38.689><c> down</c><00:13:38.839><c> here</c>

00:13:39.280 --> 00:13:39.290 align:start position:0%
one's correct so now just go down here
 

00:13:39.290 --> 00:13:44.220 align:start position:0%
one's correct so now just go down here
studly<00:13:40.069><c> cap</c><00:13:41.060><c> var</c><00:13:41.689><c> and</c><00:13:42.170><c> then</c><00:13:42.949><c> we</c><00:13:43.220><c> just</c><00:13:43.459><c> do</c>

00:13:44.220 --> 00:13:44.230 align:start position:0%
studly cap var and then we just do
 

00:13:44.230 --> 00:13:50.699 align:start position:0%
studly cap var and then we just do
proper<00:13:45.230><c> camel</c><00:13:46.220><c> case</c><00:13:46.790><c> and</c><00:13:47.410><c> then</c><00:13:48.579><c> title</c><00:13:49.579><c> case</c>

00:13:50.699 --> 00:13:50.709 align:start position:0%
proper camel case and then title case
 

00:13:50.709 --> 00:13:55.689 align:start position:0%
proper camel case and then title case
over<00:13:51.709><c> so</c><00:13:52.639><c> now</c><00:13:53.089><c> all</c><00:13:53.480><c> these</c><00:13:54.139><c> should</c><00:13:54.589><c> be</c><00:13:54.699><c> defined</c>

00:13:55.689 --> 00:13:55.699 align:start position:0%
over so now all these should be defined
 

00:13:55.699 --> 00:13:57.850 align:start position:0%
over so now all these should be defined
so<00:13:56.329><c> we</c><00:13:56.449><c> declare</c><00:13:56.839><c> them</c><00:13:57.019><c> up</c><00:13:57.139><c> here</c><00:13:57.380><c> we</c><00:13:57.529><c> assign</c>

00:13:57.850 --> 00:13:57.860 align:start position:0%
so we declare them up here we assign
 

00:13:57.860 --> 00:14:00.519 align:start position:0%
so we declare them up here we assign
them<00:13:57.949><c> right</c><00:13:58.370><c> here</c><00:13:58.730><c> and</c><00:13:58.939><c> then</c><00:13:59.420><c> this</c><00:14:00.199><c> is</c><00:14:00.380><c> not</c>

00:14:00.519 --> 00:14:00.529 align:start position:0%
them right here and then this is not
 

00:14:00.529 --> 00:14:02.439 align:start position:0%
them right here and then this is not
going<00:14:00.680><c> to</c><00:14:00.740><c> give</c><00:14:00.889><c> us</c><00:14:01.009><c> any</c><00:14:01.220><c> errors</c><00:14:01.850><c> it's</c><00:14:02.120><c> going</c>

00:14:02.439 --> 00:14:02.449 align:start position:0%
going to give us any errors it's going
 

00:14:02.449 --> 00:14:04.269 align:start position:0%
going to give us any errors it's going
to<00:14:02.540><c> behave</c><00:14:02.689><c> exactly</c><00:14:03.050><c> how</c><00:14:03.649><c> we</c><00:14:03.709><c> want</c><00:14:04.100><c> it</c><00:14:04.130><c> to</c>

00:14:04.269 --> 00:14:04.279 align:start position:0%
to behave exactly how we want it to
 

00:14:04.279 --> 00:14:08.290 align:start position:0%
to behave exactly how we want it to
behave

00:14:08.290 --> 00:14:08.300 align:start position:0%
 
 

00:14:08.300 --> 00:14:10.940 align:start position:0%
 
adding<00:14:09.300><c> two</c><00:14:09.540><c> numbers</c><00:14:09.750><c> in</c><00:14:10.140><c> JavaScript</c><00:14:10.800><c> is</c>

00:14:10.940 --> 00:14:10.950 align:start position:0%
adding two numbers in JavaScript is
 

00:14:10.950 --> 00:14:12.230 align:start position:0%
adding two numbers in JavaScript is
pretty<00:14:11.280><c> straightforward</c>

00:14:12.230 --> 00:14:12.240 align:start position:0%
pretty straightforward
 

00:14:12.240 --> 00:14:14.660 align:start position:0%
pretty straightforward
you<00:14:12.540><c> just</c><00:14:12.780><c> use</c><00:14:12.960><c> the</c><00:14:13.170><c> plus</c><00:14:13.500><c> operator</c><00:14:14.100><c> so</c><00:14:14.490><c> this</c>

00:14:14.660 --> 00:14:14.670 align:start position:0%
you just use the plus operator so this
 

00:14:14.670 --> 00:14:17.780 align:start position:0%
you just use the plus operator so this
says<00:14:14.910><c> 10</c><00:14:15.330><c> plus</c><00:14:15.690><c> 0</c><00:14:16.050><c> which</c><00:14:16.410><c> equals</c><00:14:16.770><c> 10</c><00:14:17.040><c> we</c><00:14:17.760><c> can</c>

00:14:17.780 --> 00:14:17.790 align:start position:0%
says 10 plus 0 which equals 10 we can
 

00:14:17.790 --> 00:14:20.510 align:start position:0%
says 10 plus 0 which equals 10 we can
also<00:14:18.030><c> do</c><00:14:18.300><c> 10</c><00:14:18.750><c> plus</c><00:14:19.080><c> 10</c><00:14:19.500><c> which</c><00:14:20.160><c> is</c><00:14:20.220><c> going</c><00:14:20.460><c> to</c>

00:14:20.510 --> 00:14:20.520 align:start position:0%
also do 10 plus 10 which is going to
 

00:14:20.520 --> 00:14:24.770 align:start position:0%
also do 10 plus 10 which is going to
equal<00:14:20.850><c> 20</c><00:14:21.150><c> if</c><00:14:21.450><c> we</c><00:14:21.990><c> do</c><00:14:22.170><c> a</c><00:14:22.200><c> console</c><00:14:22.920><c> log</c><00:14:23.610><c> and</c><00:14:24.240><c> I</c>

00:14:24.770 --> 00:14:24.780 align:start position:0%
equal 20 if we do a console log and I
 

00:14:24.780 --> 00:14:27.620 align:start position:0%
equal 20 if we do a console log and I
can<00:14:24.960><c> put</c><00:14:25.140><c> some</c><00:14:25.560><c> here</c><00:14:25.980><c> and</c><00:14:26.160><c> then</c><00:14:27.060><c> you'll</c><00:14:27.450><c> be</c>

00:14:27.620 --> 00:14:27.630 align:start position:0%
can put some here and then you'll be
 

00:14:27.630 --> 00:14:30.440 align:start position:0%
can put some here and then you'll be
able<00:14:27.690><c> to</c><00:14:27.810><c> see</c><00:14:28.050><c> that</c><00:14:28.410><c> the</c><00:14:28.530><c> answer</c><00:14:28.950><c> is</c><00:14:29.130><c> 20</c><00:14:29.670><c> right</c>

00:14:30.440 --> 00:14:30.450 align:start position:0%
able to see that the answer is 20 right
 

00:14:30.450 --> 00:14:37.210 align:start position:0%
able to see that the answer is 20 right
in<00:14:30.570><c> the</c><00:14:30.690><c> console</c><00:14:31.170><c> 10</c><00:14:31.500><c> plus</c><00:14:31.770><c> 10</c><00:14:32.040><c> is</c><00:14:32.310><c> 20</c>

00:14:37.210 --> 00:14:37.220 align:start position:0%
 
 

00:14:37.220 --> 00:14:39.670 align:start position:0%
 
and<00:14:37.899><c> subtraction</c><00:14:38.899><c> is</c><00:14:39.019><c> also</c><00:14:39.319><c> what</c><00:14:39.470><c> you</c><00:14:39.560><c> would</c>

00:14:39.670 --> 00:14:39.680 align:start position:0%
and subtraction is also what you would
 

00:14:39.680 --> 00:14:41.470 align:start position:0%
and subtraction is also what you would
expect<00:14:40.100><c> we</c><00:14:40.279><c> have</c><00:14:40.399><c> the</c><00:14:40.519><c> subtraction</c><00:14:41.000><c> sign</c><00:14:41.449><c> here</c>

00:14:41.470 --> 00:14:41.480 align:start position:0%
expect we have the subtraction sign here
 

00:14:41.480 --> 00:14:45.069 align:start position:0%
expect we have the subtraction sign here
this<00:14:42.230><c> says</c><00:14:42.439><c> 45</c><00:14:42.920><c> minus</c><00:14:43.670><c> zero</c><00:14:44.000><c> we</c><00:14:44.600><c> can</c><00:14:44.750><c> also</c><00:14:44.870><c> do</c>

00:14:45.069 --> 00:14:45.079 align:start position:0%
this says 45 minus zero we can also do
 

00:14:45.079 --> 00:14:49.090 align:start position:0%
this says 45 minus zero we can also do
45<00:14:45.560><c> minus</c><00:14:46.220><c> 33</c><00:14:46.939><c> and</c><00:14:47.209><c> then</c><00:14:47.839><c> that</c><00:14:48.019><c> would</c><00:14:48.170><c> equal</c><00:14:48.560><c> 12</c>

00:14:49.090 --> 00:14:49.100 align:start position:0%
45 minus 33 and then that would equal 12
 

00:14:49.100 --> 00:14:55.300 align:start position:0%
45 minus 33 and then that would equal 12
so<00:14:49.310><c> the</c><00:14:49.430><c> difference</c><00:14:49.850><c> variable</c><00:14:50.360><c> equals</c><00:14:50.779><c> 12</c><00:14:51.170><c> now</c>

00:14:55.300 --> 00:14:55.310 align:start position:0%
 
 

00:14:55.310 --> 00:14:57.970 align:start position:0%
 
multiplication<00:14:56.150><c> in</c><00:14:56.660><c> JavaScript</c><00:14:57.320><c> uses</c><00:14:57.770><c> this</c>

00:14:57.970 --> 00:14:57.980 align:start position:0%
multiplication in JavaScript uses this
 

00:14:57.980 --> 00:15:00.670 align:start position:0%
multiplication in JavaScript uses this
asterisk<00:14:58.760><c> or</c><00:14:58.880><c> a</c><00:14:58.970><c> star</c><00:14:59.600><c> symbol</c><00:15:00.200><c> here</c>

00:15:00.670 --> 00:15:00.680 align:start position:0%
asterisk or a star symbol here
 

00:15:00.680 --> 00:15:04.960 align:start position:0%
asterisk or a star symbol here
so<00:15:01.070><c> this</c><00:15:01.310><c> says</c><00:15:01.580><c> 8</c><00:15:01.850><c> times</c><00:15:02.450><c> 0</c><00:15:02.720><c> which</c><00:15:03.650><c> is</c><00:15:03.710><c> 0</c><00:15:03.860><c> or</c><00:15:04.580><c> we</c>

00:15:04.960 --> 00:15:04.970 align:start position:0%
so this says 8 times 0 which is 0 or we
 

00:15:04.970 --> 00:15:07.660 align:start position:0%
so this says 8 times 0 which is 0 or we
can<00:15:05.150><c> change</c><00:15:05.360><c> it</c><00:15:05.480><c> to</c><00:15:05.570><c> 8</c><00:15:05.750><c> times</c><00:15:06.110><c> 10</c><00:15:06.529><c> which</c><00:15:07.100><c> is</c><00:15:07.160><c> 80</c>

00:15:07.660 --> 00:15:07.670 align:start position:0%
can change it to 8 times 10 which is 80
 

00:15:07.670 --> 00:15:14.489 align:start position:0%
can change it to 8 times 10 which is 80
so<00:15:08.390><c> now</c><00:15:08.570><c> the</c><00:15:08.630><c> product</c><00:15:09.380><c> variable</c><00:15:09.920><c> equals</c><00:15:10.580><c> 80</c>

00:15:14.489 --> 00:15:14.499 align:start position:0%
 
 

00:15:14.499 --> 00:15:17.009 align:start position:0%
 
you<00:15:15.249><c> can</c><00:15:15.429><c> divide</c><00:15:15.759><c> in</c><00:15:15.909><c> JavaScript</c><00:15:16.599><c> with</c><00:15:16.809><c> this</c>

00:15:17.009 --> 00:15:17.019 align:start position:0%
you can divide in JavaScript with this
 

00:15:17.019 --> 00:15:20.789 align:start position:0%
you can divide in JavaScript with this
slash<00:15:17.589><c> symbol</c><00:15:18.009><c> so</c><00:15:18.759><c> this</c><00:15:18.789><c> says</c><00:15:19.179><c> 66</c><00:15:20.019><c> divided</c><00:15:20.649><c> by</c>

00:15:20.789 --> 00:15:20.799 align:start position:0%
slash symbol so this says 66 divided by
 

00:15:20.799 --> 00:15:23.999 align:start position:0%
slash symbol so this says 66 divided by
zero<00:15:21.249><c> we</c><00:15:21.969><c> can</c><00:15:22.179><c> change</c><00:15:22.509><c> this</c><00:15:22.719><c> to</c><00:15:22.799><c> 33</c>

00:15:23.999 --> 00:15:24.009 align:start position:0%
zero we can change this to 33
 

00:15:24.009 --> 00:15:28.469 align:start position:0%
zero we can change this to 33
so<00:15:24.579><c> now</c><00:15:25.059><c> 66</c><00:15:26.049><c> divided</c><00:15:26.319><c> by</c><00:15:26.439><c> 33</c><00:15:26.769><c> is</c><00:15:27.159><c> two</c><00:15:27.479><c> quotient</c>

00:15:28.469 --> 00:15:28.479 align:start position:0%
so now 66 divided by 33 is two quotient
 

00:15:28.479 --> 00:15:32.879 align:start position:0%
so now 66 divided by 33 is two quotient
equals<00:15:28.989><c> two</c>

00:15:32.879 --> 00:15:32.889 align:start position:0%
 
 

00:15:32.889 --> 00:15:36.090 align:start position:0%
 
to<00:15:33.670><c> increment</c><00:15:34.179><c> a</c><00:15:34.569><c> number</c><00:15:34.989><c> means</c><00:15:35.199><c> to</c><00:15:35.470><c> add</c><00:15:35.709><c> one</c>

00:15:36.090 --> 00:15:36.100 align:start position:0%
to increment a number means to add one
 

00:15:36.100 --> 00:15:39.150 align:start position:0%
to increment a number means to add one
to<00:15:36.369><c> it</c><00:15:36.399><c> so</c><00:15:37.089><c> here</c><00:15:37.480><c> we're</c><00:15:37.660><c> incrementing</c><00:15:38.109><c> my</c><00:15:38.769><c> var</c>

00:15:39.150 --> 00:15:39.160 align:start position:0%
to it so here we're incrementing my var
 

00:15:39.160 --> 00:15:43.169 align:start position:0%
to it so here we're incrementing my var
by<00:15:39.759><c> one</c><00:15:40.089><c> so</c><00:15:40.480><c> it</c><00:15:40.600><c> starts</c><00:15:40.899><c> at</c><00:15:40.929><c> 87</c><00:15:41.679><c> 87</c><00:15:42.429><c> plus</c><00:15:42.730><c> one</c><00:15:42.970><c> is</c>

00:15:43.169 --> 00:15:43.179 align:start position:0%
by one so it starts at 87 87 plus one is
 

00:15:43.179 --> 00:15:47.009 align:start position:0%
by one so it starts at 87 87 plus one is
88<00:15:43.660><c> there</c><00:15:44.529><c> is</c><00:15:44.769><c> a</c><00:15:44.799><c> quicker</c><00:15:45.459><c> way</c><00:15:45.850><c> to</c><00:15:45.899><c> increment</c><00:15:46.899><c> a</c>

00:15:47.009 --> 00:15:47.019 align:start position:0%
88 there is a quicker way to increment a
 

00:15:47.019 --> 00:15:49.559 align:start position:0%
88 there is a quicker way to increment a
number<00:15:47.410><c> instead</c><00:15:48.040><c> of</c><00:15:48.189><c> doing</c><00:15:48.369><c> this</c><00:15:48.609><c> we</c><00:15:49.089><c> can</c><00:15:49.119><c> just</c>

00:15:49.559 --> 00:15:49.569 align:start position:0%
number instead of doing this we can just
 

00:15:49.569 --> 00:15:53.400 align:start position:0%
number instead of doing this we can just
do<00:15:49.749><c> my</c><00:15:50.079><c> bar</c><00:15:50.379><c> plus</c><00:15:50.829><c> plus</c><00:15:51.279><c> I</c><00:15:51.669><c> have</c><00:15:52.540><c> our</c><00:15:52.660><c> plus</c><00:15:53.049><c> plus</c>

00:15:53.400 --> 00:15:53.410 align:start position:0%
do my bar plus plus I have our plus plus
 

00:15:53.410 --> 00:15:56.669 align:start position:0%
do my bar plus plus I have our plus plus
now<00:15:53.980><c> we</c><00:15:54.040><c> have</c><00:15:54.339><c> incremented</c><00:15:55.209><c> my</c><00:15:55.480><c> var</c><00:15:55.749><c> from</c><00:15:55.929><c> 87</c>

00:15:56.669 --> 00:15:56.679 align:start position:0%
now we have incremented my var from 87
 

00:15:56.679 --> 00:16:00.980 align:start position:0%
now we have incremented my var from 87
to<00:15:56.889><c> 88</c>

00:16:00.980 --> 00:16:00.990 align:start position:0%
 
 

00:16:00.990 --> 00:16:03.230 align:start position:0%
 
we<00:16:01.740><c> learned</c><00:16:01.920><c> about</c><00:16:02.100><c> incrementing</c><00:16:02.940><c> a</c><00:16:03.000><c> number</c>

00:16:03.230 --> 00:16:03.240 align:start position:0%
we learned about incrementing a number
 

00:16:03.240 --> 00:16:05.990 align:start position:0%
we learned about incrementing a number
with<00:16:03.360><c> plus</c><00:16:03.690><c> plus</c><00:16:04.050><c> you</c><00:16:04.560><c> can</c><00:16:04.710><c> also</c><00:16:04.830><c> decrement</c><00:16:05.820><c> a</c>

00:16:05.990 --> 00:16:06.000 align:start position:0%
with plus plus you can also decrement a
 

00:16:06.000 --> 00:16:08.210 align:start position:0%
with plus plus you can also decrement a
number<00:16:06.390><c> with</c><00:16:06.570><c> minus</c><00:16:07.050><c> -</c><00:16:07.560><c> that</c><00:16:08.010><c> means</c>

00:16:08.210 --> 00:16:08.220 align:start position:0%
number with minus - that means
 

00:16:08.220 --> 00:16:11.300 align:start position:0%
number with minus - that means
subtracting<00:16:08.820><c> one</c><00:16:09.089><c> so</c><00:16:09.810><c> right</c><00:16:10.080><c> now</c><00:16:10.320><c> my</c><00:16:10.830><c> var</c><00:16:11.160><c> is</c>

00:16:11.300 --> 00:16:11.310 align:start position:0%
subtracting one so right now my var is
 

00:16:11.310 --> 00:16:13.490 align:start position:0%
subtracting one so right now my var is
going<00:16:11.430><c> to</c><00:16:11.490><c> equal</c><00:16:11.580><c> ten</c><00:16:12.060><c> eleven</c><00:16:12.779><c> minus</c><00:16:13.200><c> one</c>

00:16:13.490 --> 00:16:13.500 align:start position:0%
going to equal ten eleven minus one
 

00:16:13.500 --> 00:16:16.490 align:start position:0%
going to equal ten eleven minus one
equals<00:16:13.980><c> ten</c><00:16:14.339><c> we</c><00:16:14.910><c> can</c><00:16:15.089><c> do</c><00:16:15.180><c> the</c><00:16:15.300><c> same</c><00:16:15.540><c> thing</c><00:16:15.930><c> with</c>

00:16:16.490 --> 00:16:16.500 align:start position:0%
equals ten we can do the same thing with
 

00:16:16.500 --> 00:16:20.030 align:start position:0%
equals ten we can do the same thing with
the<00:16:16.890><c> minus</c><00:16:17.279><c> minus</c><00:16:17.790><c> operator</c><00:16:18.390><c> so</c><00:16:19.170><c> now</c><00:16:19.410><c> my</c><00:16:19.740><c> var</c>

00:16:20.030 --> 00:16:20.040 align:start position:0%
the minus minus operator so now my var
 

00:16:20.040 --> 00:16:24.490 align:start position:0%
the minus minus operator so now my var
still<00:16:20.399><c> equals</c><00:16:20.700><c> ten</c>

00:16:24.490 --> 00:16:24.500 align:start position:0%
 
 

00:16:24.500 --> 00:16:27.040 align:start position:0%
 
we<00:16:25.190><c> can</c><00:16:25.310><c> also</c><00:16:25.460><c> create</c><00:16:25.700><c> decimal</c><00:16:26.330><c> numbers</c><00:16:26.780><c> with</c>

00:16:27.040 --> 00:16:27.050 align:start position:0%
we can also create decimal numbers with
 

00:16:27.050 --> 00:16:29.140 align:start position:0%
we can also create decimal numbers with
JavaScript<00:16:27.800><c> these</c><00:16:28.340><c> are</c><00:16:28.490><c> sometimes</c><00:16:28.730><c> referred</c>

00:16:29.140 --> 00:16:29.150 align:start position:0%
JavaScript these are sometimes referred
 

00:16:29.150 --> 00:16:32.110 align:start position:0%
JavaScript these are sometimes referred
to<00:16:29.630><c> as</c><00:16:29.870><c> floating-point</c><00:16:30.650><c> numbers</c><00:16:31.310><c> or</c><00:16:31.490><c> floats</c>

00:16:32.110 --> 00:16:32.120 align:start position:0%
to as floating-point numbers or floats
 

00:16:32.120 --> 00:16:34.720 align:start position:0%
to as floating-point numbers or floats
you<00:16:32.720><c> can</c><00:16:32.930><c> see</c><00:16:33.110><c> this</c><00:16:33.290><c> is</c><00:16:33.440><c> one</c><00:16:33.620><c> here</c><00:16:33.860><c> five</c><00:16:34.250><c> point</c>

00:16:34.720 --> 00:16:34.730 align:start position:0%
you can see this is one here five point
 

00:16:34.730 --> 00:16:36.760 align:start position:0%
you can see this is one here five point
seven<00:16:35.000><c> it</c><00:16:35.600><c> can</c><00:16:35.780><c> be</c><00:16:35.900><c> anything</c><00:16:36.110><c> I'm</c><00:16:36.560><c> going</c><00:16:36.710><c> to</c>

00:16:36.760 --> 00:16:36.770 align:start position:0%
seven it can be anything I'm going to
 

00:16:36.770 --> 00:16:39.220 align:start position:0%
seven it can be anything I'm going to
make<00:16:36.950><c> one</c><00:16:37.100><c> called</c><00:16:37.340><c> my</c><00:16:37.550><c> decimal</c><00:16:38.180><c> and</c><00:16:38.420><c> then</c><00:16:39.050><c> I'm</c>

00:16:39.220 --> 00:16:39.230 align:start position:0%
make one called my decimal and then I'm
 

00:16:39.230 --> 00:16:41.860 align:start position:0%
make one called my decimal and then I'm
going<00:16:39.410><c> to</c><00:16:39.470><c> the</c><00:16:39.890><c> store</c><00:16:40.400><c> as</c><00:16:40.640><c> zero</c><00:16:41.030><c> point</c><00:16:41.570><c> zero</c>

00:16:41.860 --> 00:16:41.870 align:start position:0%
going to the store as zero point zero
 

00:16:41.870 --> 00:16:45.760 align:start position:0%
going to the store as zero point zero
zero<00:16:42.320><c> nine</c><00:16:43.420><c> anything</c><00:16:44.420><c> that</c><00:16:44.810><c> has</c><00:16:44.990><c> a</c><00:16:45.260><c> decimal</c>

00:16:45.760 --> 00:16:45.770 align:start position:0%
zero nine anything that has a decimal
 

00:16:45.770 --> 00:16:51.279 align:start position:0%
zero nine anything that has a decimal
point<00:16:46.100><c> in</c><00:16:46.250><c> it</c><00:16:46.280><c> is</c><00:16:46.460><c> a</c><00:16:46.490><c> decimal</c><00:16:46.880><c> point</c><00:16:47.000><c> number</c>

00:16:51.279 --> 00:16:51.289 align:start position:0%
 
 

00:16:51.289 --> 00:16:53.269 align:start position:0%
 
multiplying<00:16:52.289><c> decimal</c><00:16:52.769><c> point</c><00:16:53.039><c> or</c>

00:16:53.269 --> 00:16:53.279 align:start position:0%
multiplying decimal point or
 

00:16:53.279 --> 00:16:55.189 align:start position:0%
multiplying decimal point or
floating-point<00:16:53.759><c> numbers</c><00:16:54.299><c> is</c><00:16:54.509><c> the</c><00:16:54.689><c> same</c><00:16:54.959><c> as</c>

00:16:55.189 --> 00:16:55.199 align:start position:0%
floating-point numbers is the same as
 

00:16:55.199 --> 00:16:57.769 align:start position:0%
floating-point numbers is the same as
multiplying<00:16:55.829><c> integers</c><00:16:56.429><c> so</c><00:16:57.359><c> we</c><00:16:57.509><c> have</c><00:16:57.599><c> two</c>

00:16:57.769 --> 00:16:57.779 align:start position:0%
multiplying integers so we have two
 

00:16:57.779 --> 00:17:00.739 align:start position:0%
multiplying integers so we have two
point<00:16:58.019><c> zero</c><00:16:58.079><c> times</c><00:16:58.859><c> zero</c><00:16:59.219><c> point</c><00:16:59.699><c> zero</c><00:16:59.849><c> if</c><00:17:00.659><c> I</c>

00:17:00.739 --> 00:17:00.749 align:start position:0%
point zero times zero point zero if I
 

00:17:00.749 --> 00:17:03.679 align:start position:0%
point zero times zero point zero if I
just<00:17:01.019><c> change</c><00:17:01.319><c> this</c><00:17:01.589><c> to</c><00:17:01.649><c> two</c><00:17:02.219><c> point</c><00:17:02.489><c> five</c><00:17:02.699><c> now</c>

00:17:03.679 --> 00:17:03.689 align:start position:0%
just change this to two point five now
 

00:17:03.689 --> 00:17:05.869 align:start position:0%
just change this to two point five now
the<00:17:04.259><c> answer</c><00:17:04.709><c> to</c><00:17:04.919><c> the</c><00:17:04.980><c> product</c><00:17:05.490><c> is</c><00:17:05.579><c> gonna</c><00:17:05.759><c> be</c>

00:17:05.869 --> 00:17:05.879 align:start position:0%
the answer to the product is gonna be
 

00:17:05.879 --> 00:17:09.199 align:start position:0%
the answer to the product is gonna be
five<00:17:06.179><c> and</c><00:17:06.899><c> I</c><00:17:06.990><c> can</c><00:17:07.230><c> console</c><00:17:07.919><c> dot</c><00:17:08.189><c> log</c><00:17:08.249><c> that</c><00:17:08.970><c> so</c>

00:17:09.199 --> 00:17:09.209 align:start position:0%
five and I can console dot log that so
 

00:17:09.209 --> 00:17:13.579 align:start position:0%
five and I can console dot log that so
you<00:17:09.299><c> can</c><00:17:09.449><c> see</c><00:17:09.749><c> if</c><00:17:10.319><c> I</c><00:17:10.529><c> just</c><00:17:10.799><c> put</c><00:17:11.069><c> product</c><00:17:11.730><c> and</c><00:17:12.659><c> if</c>

00:17:13.579 --> 00:17:13.589 align:start position:0%
you can see if I just put product and if
 

00:17:13.589 --> 00:17:15.649 align:start position:0%
you can see if I just put product and if
we<00:17:13.740><c> do</c><00:17:13.860><c> the</c><00:17:14.009><c> browser</c><00:17:14.220><c> here</c><00:17:14.639><c> you'll</c><00:17:15.240><c> see</c><00:17:15.480><c> that</c>

00:17:15.649 --> 00:17:15.659 align:start position:0%
we do the browser here you'll see that
 

00:17:15.659 --> 00:17:20.630 align:start position:0%
we do the browser here you'll see that
the<00:17:15.839><c> answer</c><00:17:16.199><c> is</c><00:17:16.350><c> five</c>

00:17:20.630 --> 00:17:20.640 align:start position:0%
 
 

00:17:20.640 --> 00:17:22.880 align:start position:0%
 
you<00:17:21.360><c> can</c><00:17:21.570><c> also</c><00:17:21.720><c> divide</c><00:17:22.200><c> decimal</c><00:17:22.680><c> point</c>

00:17:22.880 --> 00:17:22.890 align:start position:0%
you can also divide decimal point
 

00:17:22.890 --> 00:17:25.069 align:start position:0%
you can also divide decimal point
numbers<00:17:23.280><c> so</c><00:17:23.880><c> in</c><00:17:24.180><c> this</c><00:17:24.300><c> case</c><00:17:24.600><c> I'm</c><00:17:24.839><c> going</c><00:17:25.020><c> to</c>

00:17:25.069 --> 00:17:25.079 align:start position:0%
numbers so in this case I'm going to
 

00:17:25.079 --> 00:17:27.440 align:start position:0%
numbers so in this case I'm going to
change<00:17:25.380><c> this</c><00:17:25.620><c> to</c><00:17:25.860><c> four</c><00:17:26.160><c> point</c><00:17:26.370><c> four</c><00:17:26.730><c> so</c><00:17:27.420><c> now</c>

00:17:27.440 --> 00:17:27.450 align:start position:0%
change this to four point four so now
 

00:17:27.450 --> 00:17:30.020 align:start position:0%
change this to four point four so now
the<00:17:27.750><c> answer</c><00:17:28.380><c> to</c><00:17:28.410><c> quotient</c><00:17:29.040><c> is</c><00:17:29.190><c> two</c><00:17:29.520><c> point</c><00:17:29.820><c> two</c>

00:17:30.020 --> 00:17:30.030 align:start position:0%
the answer to quotient is two point two
 

00:17:30.030 --> 00:17:35.370 align:start position:0%
the answer to quotient is two point two
quotient<00:17:30.600><c> equals</c><00:17:30.900><c> two</c><00:17:31.200><c> point</c><00:17:31.440><c> two</c>

00:17:35.370 --> 00:17:35.380 align:start position:0%
 
 

00:17:35.380 --> 00:17:38.580 align:start position:0%
 
the<00:17:36.100><c> remainder</c><00:17:36.730><c> operator</c><00:17:36.970><c> looks</c><00:17:37.570><c> like</c><00:17:37.720><c> a</c><00:17:37.750><c> %</c>

00:17:38.580 --> 00:17:38.590 align:start position:0%
the remainder operator looks like a %
 

00:17:38.590 --> 00:17:40.860 align:start position:0%
the remainder operator looks like a %
and<00:17:39.009><c> it</c><00:17:39.399><c> gives</c><00:17:39.639><c> the</c><00:17:39.820><c> remainder</c><00:17:40.419><c> of</c><00:17:40.450><c> the</c>

00:17:40.860 --> 00:17:40.870 align:start position:0%
and it gives the remainder of the
 

00:17:40.870 --> 00:17:44.759 align:start position:0%
and it gives the remainder of the
division<00:17:41.049><c> of</c><00:17:41.529><c> two</c><00:17:42.220><c> numbers</c><00:17:42.659><c> so</c><00:17:43.659><c> for</c><00:17:43.960><c> instance</c>

00:17:44.759 --> 00:17:44.769 align:start position:0%
division of two numbers so for instance
 

00:17:44.769 --> 00:17:46.950 align:start position:0%
division of two numbers so for instance
vana<00:17:45.009><c> find</c><00:17:45.399><c> out</c><00:17:45.669><c> the</c><00:17:45.880><c> remainder</c><00:17:46.389><c> of</c><00:17:46.419><c> 11</c>

00:17:46.950 --> 00:17:46.960 align:start position:0%
vana find out the remainder of 11
 

00:17:46.960 --> 00:17:52.399 align:start position:0%
vana find out the remainder of 11
divided<00:17:47.289><c> by</c><00:17:47.470><c> 3</c><00:17:47.830><c> I</c><00:17:48.100><c> can</c><00:17:48.730><c> do</c><00:17:49.019><c> remainder</c><00:17:50.019><c> equals</c>

00:17:52.399 --> 00:17:52.409 align:start position:0%
 
 

00:17:52.409 --> 00:17:55.680 align:start position:0%
 
11<00:17:53.409><c> and</c><00:17:53.679><c> then</c><00:17:53.830><c> I'm</c><00:17:53.889><c> gonna</c><00:17:53.980><c> put</c><00:17:54.190><c> the</c><00:17:54.220><c> %</c><00:17:55.029><c> which</c><00:17:55.539><c> is</c>

00:17:55.680 --> 00:17:55.690 align:start position:0%
11 and then I'm gonna put the % which is
 

00:17:55.690 --> 00:18:00.060 align:start position:0%
11 and then I'm gonna put the % which is
the<00:17:55.840><c> remainder</c><00:17:56.259><c> operator</c><00:17:56.519><c> 3</c><00:17:57.519><c> +</c><00:17:58.710><c> 11</c><00:17:59.710><c> divided</c><00:18:00.039><c> by</c>

00:18:00.060 --> 00:18:00.070 align:start position:0%
the remainder operator 3 + 11 divided by
 

00:18:00.070 --> 00:18:04.980 align:start position:0%
the remainder operator 3 + 11 divided by
3<00:18:00.580><c> is</c><00:18:00.759><c> 9</c><00:18:01.019><c> 11</c><00:18:02.019><c> minus</c><00:18:02.289><c> 9</c><00:18:02.500><c> is</c><00:18:02.649><c> 2</c><00:18:03.039><c> so</c><00:18:03.820><c> the</c><00:18:04.419><c> remainder</c>

00:18:04.980 --> 00:18:04.990 align:start position:0%
3 is 9 11 minus 9 is 2 so the remainder
 

00:18:04.990 --> 00:18:09.090 align:start position:0%
3 is 9 11 minus 9 is 2 so the remainder
is<00:18:05.080><c> going</c><00:18:05.200><c> to</c><00:18:05.259><c> be</c><00:18:05.409><c> 2</c><00:18:05.740><c> 11</c><00:18:06.580><c> remainder</c><00:18:07.029><c> 3</c><00:18:07.360><c> is</c><00:18:07.600><c> 2</c><00:18:08.230><c> the</c>

00:18:09.090 --> 00:18:09.100 align:start position:0%
is going to be 2 11 remainder 3 is 2 the
 

00:18:09.100 --> 00:18:11.399 align:start position:0%
is going to be 2 11 remainder 3 is 2 the
remainder<00:18:09.700><c> operator</c><00:18:09.879><c> is</c><00:18:10.360><c> often</c><00:18:10.840><c> used</c><00:18:11.110><c> to</c>

00:18:11.399 --> 00:18:11.409 align:start position:0%
remainder operator is often used to
 

00:18:11.409 --> 00:18:14.549 align:start position:0%
remainder operator is often used to
determine<00:18:11.649><c> if</c><00:18:12.220><c> a</c><00:18:12.549><c> number</c><00:18:12.940><c> is</c><00:18:12.970><c> even</c><00:18:13.269><c> or</c><00:18:13.659><c> odd</c><00:18:14.019><c> if</c>

00:18:14.549 --> 00:18:14.559 align:start position:0%
determine if a number is even or odd if
 

00:18:14.559 --> 00:18:17.669 align:start position:0%
determine if a number is even or odd if
you<00:18:15.490><c> can</c><00:18:15.700><c> divide</c><00:18:15.970><c> a</c><00:18:16.029><c> number</c><00:18:16.330><c> by</c><00:18:16.539><c> 2</c><00:18:16.750><c> and</c><00:18:17.409><c> the</c>

00:18:17.669 --> 00:18:17.679 align:start position:0%
you can divide a number by 2 and the
 

00:18:17.679 --> 00:18:20.850 align:start position:0%
you can divide a number by 2 and the
remainder<00:18:17.830><c> is</c><00:18:18.399><c> 0</c><00:18:19.149><c> that</c><00:18:19.809><c> means</c><00:18:19.870><c> the</c><00:18:20.289><c> number</c><00:18:20.500><c> is</c>

00:18:20.850 --> 00:18:20.860 align:start position:0%
remainder is 0 that means the number is
 

00:18:20.860 --> 00:18:25.050 align:start position:0%
remainder is 0 that means the number is
even

00:18:25.050 --> 00:18:25.060 align:start position:0%
 
 

00:18:25.060 --> 00:18:27.540 align:start position:0%
 
it's<00:18:25.840><c> common</c><00:18:26.350><c> to</c><00:18:26.470><c> want</c><00:18:26.650><c> to</c><00:18:26.710><c> add</c><00:18:26.920><c> a</c><00:18:26.950><c> number</c><00:18:27.250><c> to</c><00:18:27.400><c> a</c>

00:18:27.540 --> 00:18:27.550 align:start position:0%
it's common to want to add a number to a
 

00:18:27.550 --> 00:18:30.150 align:start position:0%
it's common to want to add a number to a
variable<00:18:27.970><c> like</c><00:18:28.210><c> this</c><00:18:28.240><c> the</c><00:18:28.660><c> a</c><00:18:28.690><c> equals</c><00:18:28.930><c> a</c><00:18:29.740><c> plus</c>

00:18:30.150 --> 00:18:30.160 align:start position:0%
variable like this the a equals a plus
 

00:18:30.160 --> 00:18:34.260 align:start position:0%
variable like this the a equals a plus
12<00:18:30.580><c> well</c><00:18:31.480><c> ace</c><00:18:31.690><c> are</c><00:18:31.900><c> three</c><00:18:32.380><c> plus</c><00:18:32.770><c> 12</c><00:18:33.070><c> is</c><00:18:33.190><c> 15</c><00:18:33.430><c> so</c>

00:18:34.260 --> 00:18:34.270 align:start position:0%
12 well ace are three plus 12 is 15 so
 

00:18:34.270 --> 00:18:36.750 align:start position:0%
12 well ace are three plus 12 is 15 so
just<00:18:34.450><c> adding</c><00:18:34.720><c> 12</c><00:18:35.170><c> to</c><00:18:35.320><c> whatever</c><00:18:35.470><c> a</c><00:18:35.710><c> is</c><00:18:35.950><c> here</c>

00:18:36.750 --> 00:18:36.760 align:start position:0%
just adding 12 to whatever a is here
 

00:18:36.760 --> 00:18:38.520 align:start position:0%
just adding 12 to whatever a is here
we're<00:18:36.970><c> adding</c><00:18:37.240><c> 9</c><00:18:37.480><c> to</c><00:18:37.510><c> whatever</c><00:18:37.840><c> it</c><00:18:38.020><c> B</c><00:18:38.140><c> is</c><00:18:38.290><c> he</c>

00:18:38.520 --> 00:18:38.530 align:start position:0%
we're adding 9 to whatever it B is he
 

00:18:38.530 --> 00:18:41.760 align:start position:0%
we're adding 9 to whatever it B is he
were<00:18:38.650><c> adding</c><00:18:39.070><c> 7</c><00:18:39.610><c> to</c><00:18:39.940><c> whatever</c><00:18:40.090><c> C</c><00:18:40.450><c> is</c><00:18:40.600><c> this</c><00:18:41.560><c> is</c>

00:18:41.760 --> 00:18:41.770 align:start position:0%
were adding 7 to whatever C is this is
 

00:18:41.770 --> 00:18:43.620 align:start position:0%
were adding 7 to whatever C is this is
such<00:18:42.040><c> a</c><00:18:42.070><c> common</c><00:18:42.430><c> pattern</c><00:18:42.880><c> that</c><00:18:43.360><c> there's</c><00:18:43.570><c> a</c>

00:18:43.620 --> 00:18:43.630 align:start position:0%
such a common pattern that there's a
 

00:18:43.630 --> 00:18:46.830 align:start position:0%
such a common pattern that there's a
shortcut<00:18:44.560><c> to</c><00:18:44.740><c> do</c><00:18:44.860><c> the</c><00:18:45.040><c> same</c><00:18:45.280><c> thing</c><00:18:45.670><c> it's</c><00:18:46.480><c> the</c>

00:18:46.830 --> 00:18:46.840 align:start position:0%
shortcut to do the same thing it's the
 

00:18:46.840 --> 00:18:49.740 align:start position:0%
shortcut to do the same thing it's the
plus<00:18:47.230><c> equals</c><00:18:47.770><c> operator</c><00:18:48.310><c> so</c><00:18:49.150><c> instead</c><00:18:49.480><c> of</c><00:18:49.540><c> a</c>

00:18:49.740 --> 00:18:49.750 align:start position:0%
plus equals operator so instead of a
 

00:18:49.750 --> 00:18:54.630 align:start position:0%
plus equals operator so instead of a
equals<00:18:50.590><c> a</c><00:18:50.830><c> plus</c><00:18:51.100><c> 12</c><00:18:51.540><c> we</c><00:18:52.540><c> can</c><00:18:52.780><c> do</c><00:18:52.990><c> a</c><00:18:53.230><c> plus</c><00:18:54.010><c> equals</c>

00:18:54.630 --> 00:18:54.640 align:start position:0%
equals a plus 12 we can do a plus equals
 

00:18:54.640 --> 00:18:58.110 align:start position:0%
equals a plus 12 we can do a plus equals
12<00:18:55.260><c> so</c><00:18:56.260><c> this</c><00:18:56.740><c> equals</c><00:18:57.100><c> the</c><00:18:57.250><c> same</c><00:18:57.460><c> thing</c><00:18:57.790><c> so</c>

00:18:58.110 --> 00:18:58.120 align:start position:0%
12 so this equals the same thing so
 

00:18:58.120 --> 00:19:02.600 align:start position:0%
12 so this equals the same thing so
instead<00:18:58.420><c> of</c><00:18:58.570><c> B</c><00:18:58.870><c> equals</c><00:18:59.380><c> 9</c><00:18:59.770><c> plus</c><00:18:59.800><c> B</c><00:19:00.580><c> we</c><00:19:01.300><c> can</c><00:19:01.510><c> do</c><00:19:01.780><c> B</c>

00:19:02.600 --> 00:19:02.610 align:start position:0%
instead of B equals 9 plus B we can do B
 

00:19:02.610 --> 00:19:09.000 align:start position:0%
instead of B equals 9 plus B we can do B
plus<00:19:03.610><c> equals</c><00:19:04.830><c> 9</c><00:19:05.830><c> so</c><00:19:06.820><c> now</c><00:19:07.270><c> we're</c><00:19:07.540><c> adding</c><00:19:08.010><c> the</c>

00:19:09.000 --> 00:19:09.010 align:start position:0%
plus equals 9 so now we're adding the
 

00:19:09.010 --> 00:19:13.170 align:start position:0%
plus equals 9 so now we're adding the
value<00:19:09.940><c> to</c><00:19:10.930><c> the</c><00:19:11.290><c> variable</c><00:19:11.470><c> and</c><00:19:12.130><c> assigning</c><00:19:12.670><c> the</c>

00:19:13.170 --> 00:19:13.180 align:start position:0%
value to the variable and assigning the
 

00:19:13.180 --> 00:19:16.230 align:start position:0%
value to the variable and assigning the
answer<00:19:13.630><c> to</c><00:19:13.930><c> that</c><00:19:13.960><c> variable</c><00:19:14.800><c> so</c><00:19:15.370><c> again</c><00:19:15.670><c> here</c><00:19:16.060><c> we</c>

00:19:16.230 --> 00:19:16.240 align:start position:0%
answer to that variable so again here we
 

00:19:16.240 --> 00:19:20.490 align:start position:0%
answer to that variable so again here we
can<00:19:16.450><c> do</c><00:19:16.630><c> plus</c><00:19:17.260><c> equal</c><00:19:18.010><c> 7</c><00:19:18.850><c> so</c><00:19:19.690><c> that's</c><00:19:20.020><c> just</c><00:19:20.320><c> a</c>

00:19:20.490 --> 00:19:20.500 align:start position:0%
can do plus equal 7 so that's just a
 

00:19:20.500 --> 00:19:25.019 align:start position:0%
can do plus equal 7 so that's just a
shortcut

00:19:25.019 --> 00:19:25.029 align:start position:0%
 
 

00:19:25.029 --> 00:19:27.850 align:start position:0%
 
previously<00:19:26.029><c> we</c><00:19:26.210><c> learned</c><00:19:26.419><c> about</c><00:19:26.659><c> plus</c><00:19:27.260><c> equals</c>

00:19:27.850 --> 00:19:27.860 align:start position:0%
previously we learned about plus equals
 

00:19:27.860 --> 00:19:30.970 align:start position:0%
previously we learned about plus equals
well<00:19:28.549><c> minus</c><00:19:29.090><c> equals</c><00:19:29.570><c> does</c><00:19:30.169><c> the</c><00:19:30.380><c> same</c><00:19:30.650><c> thing</c>

00:19:30.970 --> 00:19:30.980 align:start position:0%
well minus equals does the same thing
 

00:19:30.980 --> 00:19:33.850 align:start position:0%
well minus equals does the same thing
but<00:19:31.010><c> subtracting</c><00:19:31.970><c> so</c><00:19:32.539><c> this</c><00:19:32.720><c> says</c><00:19:32.900><c> a</c><00:19:33.169><c> equals</c><00:19:33.679><c> a</c>

00:19:33.850 --> 00:19:33.860 align:start position:0%
but subtracting so this says a equals a
 

00:19:33.860 --> 00:19:38.500 align:start position:0%
but subtracting so this says a equals a
minus<00:19:34.460><c> 6</c><00:19:35.059><c> we</c><00:19:35.570><c> started</c><00:19:35.990><c> at</c><00:19:36.110><c> 11</c><00:19:36.760><c> minus</c><00:19:37.760><c> 6</c><00:19:38.150><c> is</c>

00:19:38.500 --> 00:19:38.510 align:start position:0%
minus 6 we started at 11 minus 6 is
 

00:19:38.510 --> 00:19:42.100 align:start position:0%
minus 6 we started at 11 minus 6 is
going<00:19:38.900><c> to</c><00:19:39.020><c> be</c><00:19:39.110><c> 5</c><00:19:39.500><c> so</c><00:19:40.370><c> the</c><00:19:40.820><c> new</c><00:19:41.059><c> a</c><00:19:41.090><c> is</c><00:19:41.539><c> gonna</c><00:19:41.720><c> be</c><00:19:41.840><c> 5</c>

00:19:42.100 --> 00:19:42.110 align:start position:0%
going to be 5 so the new a is gonna be 5
 

00:19:42.110 --> 00:19:44.409 align:start position:0%
going to be 5 so the new a is gonna be 5
but<00:19:42.799><c> we</c><00:19:42.890><c> can</c><00:19:43.070><c> shorten</c><00:19:43.549><c> that</c><00:19:43.610><c> instead</c><00:19:44.210><c> of</c><00:19:44.270><c> a</c>

00:19:44.409 --> 00:19:44.419 align:start position:0%
but we can shorten that instead of a
 

00:19:44.419 --> 00:19:49.779 align:start position:0%
but we can shorten that instead of a
equals<00:19:44.929><c> a</c><00:19:45.080><c> minus</c><00:19:45.440><c> 6</c><00:19:46.010><c> we</c><00:19:46.610><c> can</c><00:19:46.640><c> do</c><00:19:47.049><c> -</c><00:19:48.049><c> equals</c><00:19:48.789><c> this</c>

00:19:49.779 --> 00:19:49.789 align:start position:0%
equals a minus 6 we can do - equals this
 

00:19:49.789 --> 00:19:51.970 align:start position:0%
equals a minus 6 we can do - equals this
is<00:19:49.850><c> just</c><00:19:50.240><c> a</c><00:19:50.360><c> shortcut</c><00:19:50.750><c> that</c><00:19:51.110><c> JavaScript</c><00:19:51.770><c> has</c>

00:19:51.970 --> 00:19:51.980 align:start position:0%
is just a shortcut that JavaScript has
 

00:19:51.980 --> 00:19:53.710 align:start position:0%
is just a shortcut that JavaScript has
that<00:19:52.460><c> means</c><00:19:52.669><c> the</c><00:19:52.880><c> same</c><00:19:53.120><c> thing</c>

00:19:53.710 --> 00:19:53.720 align:start position:0%
that means the same thing
 

00:19:53.720 --> 00:19:58.000 align:start position:0%
that means the same thing
that<00:19:54.350><c> means</c><00:19:55.010><c> a</c><00:19:55.340><c> equals</c><00:19:56.059><c> a</c><00:19:56.299><c> minus</c><00:19:56.690><c> 6</c><00:19:57.200><c> but</c><00:19:57.890><c> it's</c>

00:19:58.000 --> 00:19:58.010 align:start position:0%
that means a equals a minus 6 but it's
 

00:19:58.010 --> 00:20:00.430 align:start position:0%
that means a equals a minus 6 but it's
just<00:19:58.190><c> shortened</c><00:19:58.789><c> same</c><00:19:59.630><c> here</c><00:19:59.929><c> so</c><00:20:00.080><c> we</c><00:20:00.169><c> can</c><00:20:00.320><c> do</c>

00:20:00.430 --> 00:20:00.440 align:start position:0%
just shortened same here so we can do
 

00:20:00.440 --> 00:20:05.500 align:start position:0%
just shortened same here so we can do
minus<00:20:00.919><c> equals</c><00:20:01.370><c> 15</c><00:20:02.020><c> C</c><00:20:03.020><c> equals</c><00:20:03.620><c> C</c><00:20:04.070><c> minus</c><00:20:04.100><c> 1</c><00:20:04.850><c> we</c>

00:20:05.500 --> 00:20:05.510 align:start position:0%
minus equals 15 C equals C minus 1 we
 

00:20:05.510 --> 00:20:09.700 align:start position:0%
minus equals 15 C equals C minus 1 we
can<00:20:05.720><c> do</c><00:20:05.870><c> C</c><00:20:06.370><c> minus</c><00:20:07.370><c> equals</c><00:20:08.029><c> 1</c><00:20:08.480><c> so</c><00:20:09.289><c> it</c><00:20:09.500><c> just</c>

00:20:09.700 --> 00:20:09.710 align:start position:0%
can do C minus equals 1 so it just
 

00:20:09.710 --> 00:20:12.669 align:start position:0%
can do C minus equals 1 so it just
subtracts<00:20:10.490><c> the</c><00:20:10.549><c> number</c><00:20:11.090><c> from</c><00:20:11.929><c> the</c><00:20:12.230><c> original</c>

00:20:12.669 --> 00:20:12.679 align:start position:0%
subtracts the number from the original
 

00:20:12.679 --> 00:20:16.180 align:start position:0%
subtracts the number from the original
value<00:20:12.860><c> and</c><00:20:13.159><c> then</c><00:20:13.549><c> assigns</c><00:20:14.000><c> that</c><00:20:14.360><c> new</c><00:20:14.690><c> value</c><00:20:15.470><c> to</c>

00:20:16.180 --> 00:20:16.190 align:start position:0%
value and then assigns that new value to
 

00:20:16.190 --> 00:20:20.610 align:start position:0%
value and then assigns that new value to
the<00:20:16.220><c> variable</c>

00:20:20.610 --> 00:20:20.620 align:start position:0%
 
 

00:20:20.620 --> 00:20:24.720 align:start position:0%
 
here<00:20:21.490><c> we</c><00:20:21.640><c> have</c><00:20:21.760><c> a</c><00:20:21.880><c> equals</c><00:20:22.420><c> a</c><00:20:22.570><c> times</c><00:20:23.260><c> five</c><00:20:23.740><c> well</c>

00:20:24.720 --> 00:20:24.730 align:start position:0%
here we have a equals a times five well
 

00:20:24.730 --> 00:20:26.549 align:start position:0%
here we have a equals a times five well
we<00:20:24.910><c> can</c><00:20:25.059><c> do</c><00:20:25.180><c> the</c><00:20:25.330><c> same</c><00:20:25.540><c> thing</c><00:20:25.809><c> as</c><00:20:25.900><c> before</c><00:20:26.050><c> we</c>

00:20:26.549 --> 00:20:26.559 align:start position:0%
we can do the same thing as before we
 

00:20:26.559 --> 00:20:32.370 align:start position:0%
we can do the same thing as before we
can<00:20:26.770><c> shorten</c><00:20:27.250><c> this</c><00:20:27.460><c> to</c><00:20:28.120><c> a</c><00:20:29.550><c> x</c><00:20:30.550><c> equals</c><00:20:31.360><c> five</c><00:20:31.870><c> so</c>

00:20:32.370 --> 00:20:32.380 align:start position:0%
can shorten this to a x equals five so
 

00:20:32.380 --> 00:20:35.400 align:start position:0%
can shorten this to a x equals five so
that<00:20:32.890><c> means</c><00:20:33.100><c> the</c><00:20:33.220><c> same</c><00:20:33.460><c> thing</c><00:20:33.760><c> here</c><00:20:34.600><c> we</c><00:20:35.020><c> can</c><00:20:35.260><c> do</c>

00:20:35.400 --> 00:20:35.410 align:start position:0%
that means the same thing here we can do
 

00:20:35.410 --> 00:20:41.130 align:start position:0%
that means the same thing here we can do
a<00:20:35.760><c> x</c><00:20:36.760><c> equals</c><00:20:38.160><c> three</c><00:20:39.160><c> and</c><00:20:39.460><c> then</c><00:20:40.180><c> C</c><00:20:40.600><c> equals</c><00:20:40.870><c> C</c>

00:20:41.130 --> 00:20:41.140 align:start position:0%
a x equals three and then C equals C
 

00:20:41.140 --> 00:20:45.630 align:start position:0%
a x equals three and then C equals C
times<00:20:41.440><c> ten</c><00:20:41.860><c> we</c><00:20:42.160><c> can</c><00:20:42.370><c> shorten</c><00:20:42.880><c> this</c><00:20:43.090><c> to</c><00:20:43.600><c> C</c><00:20:44.640><c> times</c>

00:20:45.630 --> 00:20:45.640 align:start position:0%
times ten we can shorten this to C times
 

00:20:45.640 --> 00:20:49.200 align:start position:0%
times ten we can shorten this to C times
equal<00:20:46.360><c> 10</c><00:20:46.930><c> and</c><00:20:47.200><c> that's</c><00:20:47.830><c> another</c><00:20:48.190><c> shortcut</c><00:20:48.880><c> for</c>

00:20:49.200 --> 00:20:49.210 align:start position:0%
equal 10 and that's another shortcut for
 

00:20:49.210 --> 00:20:53.410 align:start position:0%
equal 10 and that's another shortcut for
JavaScript

00:20:53.410 --> 00:20:53.420 align:start position:0%
 
 

00:20:53.420 --> 00:20:56.800 align:start position:0%
 
and<00:20:53.860><c> there's</c><00:20:54.860><c> also</c><00:20:55.040><c> divide</c><00:20:55.580><c> equal</c><00:20:56.090><c> so</c><00:20:56.570><c> a</c>

00:20:56.800 --> 00:20:56.810 align:start position:0%
and there's also divide equal so a
 

00:20:56.810 --> 00:21:00.810 align:start position:0%
and there's also divide equal so a
equals<00:20:57.560><c> a</c><00:20:57.770><c> divided</c><00:20:58.250><c> by</c><00:20:58.430><c> 12</c><00:20:58.820><c> we</c><00:20:59.630><c> can</c><00:20:59.660><c> do</c><00:21:00.050><c> a</c>

00:21:00.810 --> 00:21:00.820 align:start position:0%
equals a divided by 12 we can do a
 

00:21:00.820 --> 00:21:05.320 align:start position:0%
equals a divided by 12 we can do a
divided<00:21:01.820><c> by</c><00:21:01.850><c> equal</c><00:21:02.540><c> 12</c><00:21:03.080><c> and</c><00:21:03.970><c> here</c><00:21:04.970><c> we</c><00:21:05.150><c> can</c><00:21:05.300><c> just</c>

00:21:05.320 --> 00:21:05.330 align:start position:0%
divided by equal 12 and here we can just
 

00:21:05.330 --> 00:21:09.340 align:start position:0%
divided by equal 12 and here we can just
do<00:21:05.650><c> divided</c><00:21:06.650><c> by</c><00:21:06.770><c> equal</c><00:21:07.310><c> 4</c><00:21:07.760><c> or</c><00:21:08.570><c> divided</c><00:21:09.320><c> by</c>

00:21:09.340 --> 00:21:09.350 align:start position:0%
do divided by equal 4 or divided by
 

00:21:09.350 --> 00:21:13.720 align:start position:0%
do divided by equal 4 or divided by
equal<00:21:09.980><c> 11</c><00:21:10.750><c> so</c><00:21:11.750><c> another</c><00:21:12.500><c> way</c><00:21:12.740><c> of</c><00:21:12.770><c> just</c><00:21:13.100><c> dividing</c>

00:21:13.720 --> 00:21:13.730 align:start position:0%
equal 11 so another way of just dividing
 

00:21:13.730 --> 00:21:15.580 align:start position:0%
equal 11 so another way of just dividing
the<00:21:13.970><c> variable</c><00:21:14.480><c> by</c><00:21:14.780><c> a</c><00:21:14.810><c> new</c><00:21:15.050><c> number</c><00:21:15.290><c> and</c>

00:21:15.580 --> 00:21:15.590 align:start position:0%
the variable by a new number and
 

00:21:15.590 --> 00:21:21.860 align:start position:0%
the variable by a new number and
assigning<00:21:15.980><c> that</c><00:21:16.430><c> answer</c><00:21:16.910><c> to</c><00:21:17.240><c> the</c><00:21:17.420><c> variable</c>

00:21:21.860 --> 00:21:21.870 align:start position:0%
 
 

00:21:21.870 --> 00:21:24.200 align:start position:0%
 
we've<00:21:22.650><c> already</c><00:21:22.890><c> mentioned</c><00:21:23.430><c> strings</c><00:21:24.030><c> a</c><00:21:24.180><c> little</c>

00:21:24.200 --> 00:21:24.210 align:start position:0%
we've already mentioned strings a little
 

00:21:24.210 --> 00:21:27.110 align:start position:0%
we've already mentioned strings a little
bit<00:21:24.630><c> but</c><00:21:25.170><c> anytime</c><00:21:25.380><c> you</c><00:21:25.860><c> have</c><00:21:26.130><c> some</c><00:21:26.550><c> character</c>

00:21:27.110 --> 00:21:27.120 align:start position:0%
bit but anytime you have some character
 

00:21:27.120 --> 00:21:29.690 align:start position:0%
bit but anytime you have some character
surrounded<00:21:27.690><c> by</c><00:21:27.810><c> quotation</c><00:21:28.350><c> marks</c><00:21:28.920><c> they</c><00:21:29.490><c> can</c>

00:21:29.690 --> 00:21:29.700 align:start position:0%
surrounded by quotation marks they can
 

00:21:29.700 --> 00:21:32.150 align:start position:0%
surrounded by quotation marks they can
either<00:21:29.820><c> be</c><00:21:29.910><c> single</c><00:21:30.570><c> quotation</c><00:21:31.140><c> marks</c><00:21:31.530><c> double</c>

00:21:32.150 --> 00:21:32.160 align:start position:0%
either be single quotation marks double
 

00:21:32.160 --> 00:21:35.120 align:start position:0%
either be single quotation marks double
quotation<00:21:32.670><c> marks</c><00:21:32.940><c> or</c><00:21:33.320><c> backticks</c><00:21:34.320><c> it's</c><00:21:34.920><c> a</c>

00:21:35.120 --> 00:21:35.130 align:start position:0%
quotation marks or backticks it's a
 

00:21:35.130 --> 00:21:37.430 align:start position:0%
quotation marks or backticks it's a
string<00:21:35.550><c> these</c><00:21:36.120><c> are</c><00:21:36.180><c> called</c><00:21:36.480><c> string</c><00:21:36.900><c> literals</c>

00:21:37.430 --> 00:21:37.440 align:start position:0%
string these are called string literals
 

00:21:37.440 --> 00:21:40.820 align:start position:0%
string these are called string literals
and<00:21:38.090><c> you</c><00:21:39.090><c> can</c><00:21:39.360><c> create</c><00:21:39.780><c> them</c><00:21:39.930><c> just</c><00:21:40.620><c> like</c><00:21:40.770><c> you</c>

00:21:40.820 --> 00:21:40.830 align:start position:0%
and you can create them just like you
 

00:21:40.830 --> 00:21:42.800 align:start position:0%
and you can create them just like you
see<00:21:41.130><c> above</c><00:21:41.430><c> I'm</c><00:21:41.730><c> going</c><00:21:41.760><c> to</c><00:21:41.880><c> do</c><00:21:42.030><c> a</c><00:21:42.060><c> few</c><00:21:42.390><c> more</c><00:21:42.540><c> so</c>

00:21:42.800 --> 00:21:42.810 align:start position:0%
see above I'm going to do a few more so
 

00:21:42.810 --> 00:21:51.550 align:start position:0%
see above I'm going to do a few more so
far<00:21:43.170><c> my</c><00:21:43.620><c> first</c><00:21:44.840><c> aim</c><00:21:46.250><c> equals</c><00:21:47.330><c> bow</c><00:21:48.330><c> and</c><00:21:49.790><c> VAR</c><00:21:50.790><c> my</c>

00:21:51.550 --> 00:21:51.560 align:start position:0%
far my first aim equals bow and VAR my
 

00:21:51.560 --> 00:21:58.100 align:start position:0%
far my first aim equals bow and VAR my
last<00:21:52.560><c> name</c><00:21:54.020><c> equals</c><00:21:55.040><c> Karns</c><00:21:56.630><c> so</c><00:21:57.630><c> that's</c><00:21:57.870><c> how</c><00:21:58.050><c> you</c>

00:21:58.100 --> 00:21:58.110 align:start position:0%
last name equals Karns so that's how you
 

00:21:58.110 --> 00:22:04.390 align:start position:0%
last name equals Karns so that's how you
create<00:21:58.410><c> a</c><00:21:58.860><c> string</c><00:21:59.340><c> in</c><00:21:59.550><c> JavaScript</c>

00:22:04.390 --> 00:22:04.400 align:start position:0%
 
 

00:22:04.400 --> 00:22:07.160 align:start position:0%
 
sometimes<00:22:05.400><c> your</c><00:22:05.610><c> strain</c><00:22:06.090><c> contains</c><00:22:06.690><c> the</c><00:22:06.990><c> quote</c>

00:22:07.160 --> 00:22:07.170 align:start position:0%
sometimes your strain contains the quote
 

00:22:07.170 --> 00:22:10.940 align:start position:0%
sometimes your strain contains the quote
symbol<00:22:07.770><c> now</c><00:22:08.430><c> normally</c><00:22:08.820><c> the</c><00:22:08.910><c> quotes</c><00:22:09.950><c> identify</c>

00:22:10.940 --> 00:22:10.950 align:start position:0%
symbol now normally the quotes identify
 

00:22:10.950 --> 00:22:12.380 align:start position:0%
symbol now normally the quotes identify
the<00:22:11.010><c> beginning</c><00:22:11.520><c> and</c><00:22:11.730><c> the</c><00:22:11.790><c> ending</c><00:22:12.150><c> of</c><00:22:12.270><c> the</c>

00:22:12.380 --> 00:22:12.390 align:start position:0%
the beginning and the ending of the
 

00:22:12.390 --> 00:22:13.910 align:start position:0%
the beginning and the ending of the
string<00:22:12.750><c> but</c><00:22:13.320><c> what</c><00:22:13.470><c> if</c><00:22:13.590><c> you</c><00:22:13.680><c> have</c><00:22:13.770><c> something</c>

00:22:13.910 --> 00:22:13.920 align:start position:0%
string but what if you have something
 

00:22:13.920 --> 00:22:21.370 align:start position:0%
string but what if you have something
like<00:22:14.040><c> this</c><00:22:14.370><c> I</c><00:22:14.610><c> am</c><00:22:15.270><c> a</c><00:22:16.220><c> double</c><00:22:17.570><c> quoted</c><00:22:19.670><c> spring</c>

00:22:21.370 --> 00:22:21.380 align:start position:0%
like this I am a double quoted spring
 

00:22:21.380 --> 00:22:29.060 align:start position:0%
like this I am a double quoted spring
inside<00:22:23.900><c> double</c><00:22:25.280><c> quotes</c><00:22:27.230><c> so</c><00:22:28.230><c> I'm</c><00:22:28.770><c> actually</c>

00:22:29.060 --> 00:22:29.070 align:start position:0%
inside double quotes so I'm actually
 

00:22:29.070 --> 00:22:33.890 align:start position:0%
inside double quotes so I'm actually
trying<00:22:29.550><c> to</c><00:22:30.110><c> use</c><00:22:31.110><c> these</c><00:22:31.440><c> quotes</c><00:22:32.070><c> right</c><00:22:32.970><c> inside</c>

00:22:33.890 --> 00:22:33.900 align:start position:0%
trying to use these quotes right inside
 

00:22:33.900 --> 00:22:37.460 align:start position:0%
trying to use these quotes right inside
the<00:22:34.230><c> string</c><00:22:34.680><c> but</c><00:22:35.750><c> the</c><00:22:36.750><c> JavaScript</c><00:22:37.320><c> doesn't</c>

00:22:37.460 --> 00:22:37.470 align:start position:0%
the string but the JavaScript doesn't
 

00:22:37.470 --> 00:22:38.660 align:start position:0%
the string but the JavaScript doesn't
know<00:22:37.650><c> what</c><00:22:37.800><c> to</c><00:22:37.830><c> do</c><00:22:38.040><c> about</c><00:22:38.190><c> it</c>

00:22:38.660 --> 00:22:38.670 align:start position:0%
know what to do about it
 

00:22:38.670 --> 00:22:40.400 align:start position:0%
know what to do about it
it<00:22:38.880><c> thinks</c><00:22:39.270><c> that</c><00:22:39.300><c> this</c><00:22:39.570><c> is</c><00:22:39.630><c> that</c><00:22:40.110><c> it</c><00:22:40.230><c> thinks</c>

00:22:40.400 --> 00:22:40.410 align:start position:0%
it thinks that this is that it thinks
 

00:22:40.410 --> 00:22:42.560 align:start position:0%
it thinks that this is that it thinks
that<00:22:40.590><c> this</c><00:22:40.860><c> is</c><00:22:40.920><c> the</c><00:22:41.040><c> whole</c><00:22:41.340><c> string</c><00:22:41.850><c> when</c><00:22:42.450><c> it</c>

00:22:42.560 --> 00:22:42.570 align:start position:0%
that this is the whole string when it
 

00:22:42.570 --> 00:22:45.200 align:start position:0%
that this is the whole string when it
sees<00:22:42.870><c> the</c><00:22:43.170><c> first</c><00:22:43.440><c> quote</c><00:22:43.920><c> inside</c><00:22:44.460><c> the</c><00:22:44.820><c> string</c>

00:22:45.200 --> 00:22:45.210 align:start position:0%
sees the first quote inside the string
 

00:22:45.210 --> 00:22:48.320 align:start position:0%
sees the first quote inside the string
it<00:22:45.600><c> thinks</c><00:22:46.110><c> R</c><00:22:46.140><c> at</c><00:22:46.290><c> the</c><00:22:46.470><c> end</c><00:22:46.710><c> of</c><00:22:46.950><c> the</c><00:22:47.070><c> string</c><00:22:47.430><c> so</c>

00:22:48.320 --> 00:22:48.330 align:start position:0%
it thinks R at the end of the string so
 

00:22:48.330 --> 00:22:50.510 align:start position:0%
it thinks R at the end of the string so
there's<00:22:48.540><c> something</c><00:22:48.810><c> called</c><00:22:49.320><c> an</c><00:22:49.710><c> escape</c>

00:22:50.510 --> 00:22:50.520 align:start position:0%
there's something called an escape
 

00:22:50.520 --> 00:22:53.630 align:start position:0%
there's something called an escape
character<00:22:51.020><c> so</c><00:22:52.020><c> if</c><00:22:52.260><c> you</c><00:22:52.470><c> want</c><00:22:52.710><c> to</c><00:22:52.770><c> escape</c><00:22:53.370><c> a</c>

00:22:53.630 --> 00:22:53.640 align:start position:0%
character so if you want to escape a
 

00:22:53.640 --> 00:22:57.020 align:start position:0%
character so if you want to escape a
quote<00:22:54.330><c> that</c><00:22:54.720><c> means</c><00:22:55.470><c> it</c><00:22:55.860><c> will</c><00:22:56.310><c> no</c><00:22:56.550><c> longer</c><00:22:56.580><c> be</c>

00:22:57.020 --> 00:22:57.030 align:start position:0%
quote that means it will no longer be
 

00:22:57.030 --> 00:22:59.450 align:start position:0%
quote that means it will no longer be
considered<00:22:57.390><c> the</c><00:22:57.960><c> end</c><00:22:58.140><c> of</c><00:22:58.380><c> the</c><00:22:58.500><c> string</c><00:22:58.920><c> I'm</c>

00:22:59.450 --> 00:22:59.460 align:start position:0%
considered the end of the string I'm
 

00:22:59.460 --> 00:23:02.680 align:start position:0%
considered the end of the string I'm
going<00:22:59.730><c> to</c><00:22:59.790><c> put</c><00:23:00.000><c> a</c><00:23:00.150><c> backslash</c><00:23:00.950><c> so</c><00:23:01.950><c> if</c><00:23:02.130><c> I</c><00:23:02.250><c> put</c><00:23:02.460><c> a</c>

00:23:02.680 --> 00:23:02.690 align:start position:0%
going to put a backslash so if I put a
 

00:23:02.690 --> 00:23:06.260 align:start position:0%
going to put a backslash so if I put a
backslash<00:23:03.690><c> before</c><00:23:04.380><c> each</c><00:23:04.860><c> of</c><00:23:05.130><c> these</c><00:23:05.280><c> quotation</c>

00:23:06.260 --> 00:23:06.270 align:start position:0%
backslash before each of these quotation
 

00:23:06.270 --> 00:23:09.830 align:start position:0%
backslash before each of these quotation
marks<00:23:07.280><c> JavaScript</c><00:23:08.280><c> no</c><00:23:08.580><c> longer</c><00:23:09.030><c> interprets</c><00:23:09.660><c> it</c>

00:23:09.830 --> 00:23:09.840 align:start position:0%
marks JavaScript no longer interprets it
 

00:23:09.840 --> 00:23:12.560 align:start position:0%
marks JavaScript no longer interprets it
as<00:23:10.020><c> being</c><00:23:10.680><c> the</c><00:23:11.010><c> last</c><00:23:11.390><c> character</c><00:23:12.390><c> in</c><00:23:12.540><c> the</c>

00:23:12.560 --> 00:23:12.570 align:start position:0%
as being the last character in the
 

00:23:12.570 --> 00:23:16.910 align:start position:0%
as being the last character in the
string<00:23:13.070><c> so</c><00:23:14.070><c> now</c><00:23:14.430><c> you</c><00:23:15.060><c> can</c><00:23:15.240><c> see</c><00:23:15.510><c> this</c><00:23:16.170><c> is</c><00:23:16.380><c> a</c><00:23:16.410><c> full</c>

00:23:16.910 --> 00:23:16.920 align:start position:0%
string so now you can see this is a full
 

00:23:16.920 --> 00:23:19.940 align:start position:0%
string so now you can see this is a full
string<00:23:17.640><c> and</c><00:23:18.000><c> then</c><00:23:18.720><c> if</c><00:23:18.870><c> I</c><00:23:19.050><c> log</c><00:23:19.470><c> this</c><00:23:19.740><c> out</c>

00:23:19.940 --> 00:23:19.950 align:start position:0%
string and then if I log this out
 

00:23:19.950 --> 00:23:24.080 align:start position:0%
string and then if I log this out
console<00:23:20.700><c> dot</c><00:23:20.910><c> log</c><00:23:20.990><c> and</c><00:23:21.990><c> I</c><00:23:22.410><c> put</c><00:23:22.740><c> my</c><00:23:23.160><c> string</c>

00:23:24.080 --> 00:23:24.090 align:start position:0%
console dot log and I put my string
 

00:23:24.090 --> 00:23:26.180 align:start position:0%
console dot log and I put my string
you'll<00:23:25.020><c> see</c><00:23:25.200><c> that</c><00:23:25.320><c> it's</c><00:23:25.470><c> not</c><00:23:25.620><c> going</c><00:23:25.800><c> to</c><00:23:25.890><c> show</c>

00:23:26.180 --> 00:23:26.190 align:start position:0%
you'll see that it's not going to show
 

00:23:26.190 --> 00:23:29.600 align:start position:0%
you'll see that it's not going to show
the<00:23:26.460><c> quotation</c><00:23:27.180><c> marks</c><00:23:27.350><c> so</c><00:23:28.350><c> I</c><00:23:28.770><c> mean</c><00:23:29.370><c> it's</c><00:23:29.550><c> not</c>

00:23:29.600 --> 00:23:29.610 align:start position:0%
the quotation marks so I mean it's not
 

00:23:29.610 --> 00:23:31.880 align:start position:0%
the quotation marks so I mean it's not
going<00:23:29.880><c> to</c><00:23:29.970><c> show</c><00:23:30.270><c> the</c><00:23:30.600><c> slash</c><00:23:30.930><c> the</c><00:23:31.290><c> back</c><00:23:31.500><c> slashes</c>

00:23:31.880 --> 00:23:31.890 align:start position:0%
going to show the slash the back slashes
 

00:23:31.890 --> 00:23:34.400 align:start position:0%
going to show the slash the back slashes
it<00:23:32.310><c> shows</c><00:23:32.790><c> the</c><00:23:33.030><c> quotation</c><00:23:33.660><c> marks</c><00:23:33.690><c> without</c><00:23:34.050><c> the</c>

00:23:34.400 --> 00:23:34.410 align:start position:0%
it shows the quotation marks without the
 

00:23:34.410 --> 00:23:36.890 align:start position:0%
it shows the quotation marks without the
back<00:23:34.620><c> slashes</c><00:23:34.980><c> because</c><00:23:35.730><c> when</c><00:23:36.390><c> we</c><00:23:36.570><c> put</c>

00:23:36.890 --> 00:23:36.900 align:start position:0%
back slashes because when we put
 

00:23:36.900 --> 00:23:39.320 align:start position:0%
back slashes because when we put
backslash<00:23:37.590><c> quotation</c><00:23:38.280><c> mark</c><00:23:38.490><c> javascript</c>

00:23:39.320 --> 00:23:39.330 align:start position:0%
backslash quotation mark javascript
 

00:23:39.330 --> 00:23:41.450 align:start position:0%
backslash quotation mark javascript
knows<00:23:39.600><c> that</c><00:23:39.870><c> this</c><00:23:40.260><c> should</c><00:23:40.650><c> just</c><00:23:40.680><c> mean</c><00:23:41.220><c> a</c>

00:23:41.450 --> 00:23:41.460 align:start position:0%
knows that this should just mean a
 

00:23:41.460 --> 00:23:46.550 align:start position:0%
knows that this should just mean a
quotation<00:23:42.090><c> mark</c>

00:23:46.550 --> 00:23:46.560 align:start position:0%
 
 

00:23:46.560 --> 00:23:49.100 align:start position:0%
 
we<00:23:47.190><c> talked</c><00:23:47.550><c> about</c><00:23:47.730><c> escaping</c><00:23:48.720><c> a</c><00:23:48.810><c> quote</c>

00:23:49.100 --> 00:23:49.110 align:start position:0%
we talked about escaping a quote
 

00:23:49.110 --> 00:23:50.900 align:start position:0%
we talked about escaping a quote
character<00:23:49.620><c> like</c><00:23:49.770><c> this</c><00:23:50.040><c> where</c><00:23:50.580><c> you</c><00:23:50.700><c> put</c><00:23:50.880><c> a</c>

00:23:50.900 --> 00:23:50.910 align:start position:0%
character like this where you put a
 

00:23:50.910 --> 00:23:53.510 align:start position:0%
character like this where you put a
backslash<00:23:51.270><c> before</c><00:23:51.990><c> the</c><00:23:52.080><c> quote</c><00:23:52.350><c> character</c><00:23:52.920><c> so</c>

00:23:53.510 --> 00:23:53.520 align:start position:0%
backslash before the quote character so
 

00:23:53.520 --> 00:23:55.670 align:start position:0%
backslash before the quote character so
javascript<00:23:54.300><c> knows</c><00:23:54.600><c> that</c><00:23:54.930><c> this</c><00:23:55.230><c> is</c><00:23:55.440><c> supposed</c>

00:23:55.670 --> 00:23:55.680 align:start position:0%
javascript knows that this is supposed
 

00:23:55.680 --> 00:23:58.280 align:start position:0%
javascript knows that this is supposed
to<00:23:55.950><c> be</c><00:23:56.130><c> a</c><00:23:56.160><c> literal</c><00:23:56.730><c> quote</c><00:23:57.030><c> character</c><00:23:57.600><c> inside</c>

00:23:58.280 --> 00:23:58.290 align:start position:0%
to be a literal quote character inside
 

00:23:58.290 --> 00:24:00.740 align:start position:0%
to be a literal quote character inside
the<00:23:58.590><c> string</c><00:23:59.030><c> however</c><00:24:00.030><c> you're</c><00:24:00.360><c> not</c><00:24:00.390><c> going</c><00:24:00.690><c> to</c>

00:24:00.740 --> 00:24:00.750 align:start position:0%
the string however you're not going to
 

00:24:00.750 --> 00:24:02.750 align:start position:0%
the string however you're not going to
have<00:24:00.870><c> to</c><00:24:00.990><c> escape</c><00:24:01.230><c> quote</c><00:24:02.070><c> characters</c><00:24:02.520><c> very</c>

00:24:02.750 --> 00:24:02.760 align:start position:0%
have to escape quote characters very
 

00:24:02.760 --> 00:24:04.760 align:start position:0%
have to escape quote characters very
often<00:24:03.150><c> because</c><00:24:03.450><c> there</c><00:24:03.660><c> are</c><00:24:03.780><c> other</c><00:24:03.990><c> methods</c><00:24:04.410><c> of</c>

00:24:04.760 --> 00:24:04.770 align:start position:0%
often because there are other methods of
 

00:24:04.770 --> 00:24:07.100 align:start position:0%
often because there are other methods of
accomplishing<00:24:05.670><c> the</c><00:24:05.850><c> same</c><00:24:05.970><c> thing</c><00:24:06.450><c> of</c><00:24:06.660><c> having</c><00:24:07.020><c> a</c>

00:24:07.100 --> 00:24:07.110 align:start position:0%
accomplishing the same thing of having a
 

00:24:07.110 --> 00:24:10.460 align:start position:0%
accomplishing the same thing of having a
quote<00:24:07.500><c> character</c><00:24:08.340><c> within</c><00:24:08.520><c> a</c><00:24:09.000><c> string</c><00:24:09.540><c> so</c><00:24:10.440><c> a</c>

00:24:10.460 --> 00:24:10.470 align:start position:0%
quote character within a string so a
 

00:24:10.470 --> 00:24:13.820 align:start position:0%
quote character within a string so a
common<00:24:11.280><c> way</c><00:24:11.430><c> is</c><00:24:11.700><c> to</c><00:24:11.730><c> use</c><00:24:12.170><c> instead</c><00:24:13.170><c> of</c><00:24:13.350><c> having</c>

00:24:13.820 --> 00:24:13.830 align:start position:0%
common way is to use instead of having
 

00:24:13.830 --> 00:24:15.460 align:start position:0%
common way is to use instead of having
your<00:24:14.070><c> strings</c><00:24:14.400><c> start</c><00:24:14.730><c> with</c><00:24:14.910><c> double</c><00:24:15.330><c> quotes</c>

00:24:15.460 --> 00:24:15.470 align:start position:0%
your strings start with double quotes
 

00:24:15.470 --> 00:24:19.250 align:start position:0%
your strings start with double quotes
have<00:24:16.470><c> it</c><00:24:16.650><c> start</c><00:24:16.980><c> with</c><00:24:17.160><c> a</c><00:24:17.190><c> single</c><00:24:17.760><c> quote</c><00:24:17.970><c> so</c><00:24:18.930><c> a</c>

00:24:19.250 --> 00:24:19.260 align:start position:0%
have it start with a single quote so a
 

00:24:19.260 --> 00:24:21.980 align:start position:0%
have it start with a single quote so a
string<00:24:19.920><c> can</c><00:24:20.670><c> either</c><00:24:21.000><c> be</c><00:24:21.360><c> surrounded</c><00:24:21.960><c> by</c>

00:24:21.980 --> 00:24:21.990 align:start position:0%
string can either be surrounded by
 

00:24:21.990 --> 00:24:26.330 align:start position:0%
string can either be surrounded by
single<00:24:22.800><c> quotes</c><00:24:23.100><c> or</c><00:24:23.370><c> double</c><00:24:23.460><c> quotes</c><00:24:24.590><c> so</c><00:24:25.590><c> this</c>

00:24:26.330 --> 00:24:26.340 align:start position:0%
single quotes or double quotes so this
 

00:24:26.340 --> 00:24:28.280 align:start position:0%
single quotes or double quotes so this
time<00:24:26.580><c> we're</c><00:24:26.700><c> just</c><00:24:26.730><c> going</c><00:24:27.060><c> to</c><00:24:27.210><c> have</c><00:24:27.600><c> single</c>

00:24:28.280 --> 00:24:28.290 align:start position:0%
time we're just going to have single
 

00:24:28.290 --> 00:24:32.810 align:start position:0%
time we're just going to have single
quotes<00:24:28.590><c> and</c><00:24:30.050><c> now</c><00:24:31.050><c> I</c><00:24:31.080><c> can</c><00:24:31.710><c> remove</c><00:24:32.070><c> all</c><00:24:32.370><c> these</c>

00:24:32.810 --> 00:24:32.820 align:start position:0%
quotes and now I can remove all these
 

00:24:32.820 --> 00:24:36.890 align:start position:0%
quotes and now I can remove all these
escape<00:24:33.570><c> characters</c><00:24:34.290><c> from</c><00:24:35.250><c> inside</c><00:24:35.910><c> the</c><00:24:36.540><c> string</c>

00:24:36.890 --> 00:24:36.900 align:start position:0%
escape characters from inside the string
 

00:24:36.900 --> 00:24:44.150 align:start position:0%
escape characters from inside the string
here<00:24:41.390><c> okay</c><00:24:42.390><c> so</c><00:24:42.450><c> now</c><00:24:42.900><c> you</c><00:24:43.410><c> can</c><00:24:43.620><c> see</c><00:24:43.890><c> that</c>

00:24:44.150 --> 00:24:44.160 align:start position:0%
here okay so now you can see that
 

00:24:44.160 --> 00:24:46.580 align:start position:0%
here okay so now you can see that
JavaScript<00:24:44.760><c> still</c><00:24:45.120><c> knows</c><00:24:45.480><c> it</c><00:24:45.810><c> knows</c><00:24:46.380><c> that</c>

00:24:46.580 --> 00:24:46.590 align:start position:0%
JavaScript still knows it knows that
 

00:24:46.590 --> 00:24:49.010 align:start position:0%
JavaScript still knows it knows that
this<00:24:46.800><c> is</c><00:24:46.950><c> a</c><00:24:47.070><c> string</c><00:24:47.520><c> even</c><00:24:48.150><c> though</c><00:24:48.570><c> it</c><00:24:48.780><c> has</c>

00:24:49.010 --> 00:24:49.020 align:start position:0%
this is a string even though it has
 

00:24:49.020 --> 00:24:52.820 align:start position:0%
this is a string even though it has
these<00:24:49.380><c> double</c><00:24:49.890><c> quotes</c><00:24:50.220><c> inside</c><00:24:50.790><c> an</c><00:24:51.830><c> additional</c>

00:24:52.820 --> 00:24:52.830 align:start position:0%
these double quotes inside an additional
 

00:24:52.830 --> 00:24:56.090 align:start position:0%
these double quotes inside an additional
thing<00:24:53.100><c> you</c><00:24:53.250><c> could</c><00:24:53.460><c> do</c><00:24:53.640><c> is</c><00:24:53.940><c> use</c><00:24:54.570><c> backticks</c><00:24:55.440><c> so</c>

00:24:56.090 --> 00:24:56.100 align:start position:0%
thing you could do is use backticks so
 

00:24:56.100 --> 00:25:00.170 align:start position:0%
thing you could do is use backticks so
if<00:24:56.670><c> I</c><00:24:57.000><c> put</c><00:24:57.270><c> a</c><00:24:57.300><c> back</c><00:24:57.660><c> ticks</c><00:24:58.080><c> before</c><00:24:59.070><c> at</c><00:25:00.030><c> the</c>

00:25:00.170 --> 00:25:00.180 align:start position:0%
if I put a back ticks before at the
 

00:25:00.180 --> 00:25:01.730 align:start position:0%
if I put a back ticks before at the
beginning<00:25:00.540><c> of</c><00:25:00.720><c> the</c><00:25:00.810><c> end</c><00:25:00.900><c> of</c><00:25:00.990><c> the</c><00:25:01.110><c> string</c>

00:25:01.730 --> 00:25:01.740 align:start position:0%
beginning of the end of the string
 

00:25:01.740 --> 00:25:05.390 align:start position:0%
beginning of the end of the string
now<00:25:02.580><c> I</c><00:25:02.970><c> actually</c><00:25:03.480><c> can</c><00:25:03.930><c> use</c><00:25:04.140><c> single</c><00:25:04.740><c> quotes</c><00:25:04.800><c> and</c>

00:25:05.390 --> 00:25:05.400 align:start position:0%
now I actually can use single quotes and
 

00:25:05.400 --> 00:25:08.990 align:start position:0%
now I actually can use single quotes and
double<00:25:06.210><c> quotes</c><00:25:06.390><c> both</c><00:25:07.080><c> within</c><00:25:07.440><c> the</c><00:25:07.740><c> string</c><00:25:08.100><c> but</c>

00:25:08.990 --> 00:25:09.000 align:start position:0%
double quotes both within the string but
 

00:25:09.000 --> 00:25:10.820 align:start position:0%
double quotes both within the string but
right<00:25:09.270><c> now</c><00:25:09.540><c> I'm</c><00:25:09.900><c> just</c><00:25:10.050><c> gonna</c><00:25:10.170><c> focus</c><00:25:10.530><c> on</c>

00:25:10.820 --> 00:25:10.830 align:start position:0%
right now I'm just gonna focus on
 

00:25:10.830 --> 00:25:13.340 align:start position:0%
right now I'm just gonna focus on
showing<00:25:11.220><c> you</c><00:25:11.580><c> the</c><00:25:12.270><c> double</c><00:25:12.750><c> quotes</c><00:25:13.080><c> or</c><00:25:13.260><c> the</c>

00:25:13.340 --> 00:25:13.350 align:start position:0%
showing you the double quotes or the
 

00:25:13.350 --> 00:25:16.370 align:start position:0%
showing you the double quotes or the
single<00:25:13.620><c> quotes</c><00:25:14.630><c> with</c><00:25:15.630><c> the</c><00:25:15.840><c> double</c><00:25:16.110><c> quotes</c>

00:25:16.370 --> 00:25:16.380 align:start position:0%
single quotes with the double quotes
 

00:25:16.380 --> 00:25:20.790 align:start position:0%
single quotes with the double quotes
inside

00:25:20.790 --> 00:25:20.800 align:start position:0%
 
 

00:25:20.800 --> 00:25:23.880 align:start position:0%
 
we<00:25:21.790><c> talked</c><00:25:22.090><c> about</c><00:25:22.270><c> escaping</c><00:25:22.900><c> a</c><00:25:23.170><c> double</c><00:25:23.559><c> quote</c>

00:25:23.880 --> 00:25:23.890 align:start position:0%
we talked about escaping a double quote
 

00:25:23.890 --> 00:25:26.340 align:start position:0%
we talked about escaping a double quote
character<00:25:24.460><c> by</c><00:25:24.670><c> using</c><00:25:24.970><c> the</c><00:25:25.179><c> backslash</c><00:25:25.750><c> before</c>

00:25:26.340 --> 00:25:26.350 align:start position:0%
character by using the backslash before
 

00:25:26.350 --> 00:25:28.590 align:start position:0%
character by using the backslash before
the<00:25:26.500><c> double</c><00:25:26.800><c> quote</c><00:25:27.130><c> there's</c><00:25:28.030><c> actually</c><00:25:28.450><c> quite</c>

00:25:28.590 --> 00:25:28.600 align:start position:0%
the double quote there's actually quite
 

00:25:28.600 --> 00:25:30.390 align:start position:0%
the double quote there's actually quite
a<00:25:28.720><c> few</c><00:25:28.900><c> other</c><00:25:29.020><c> things</c><00:25:29.080><c> you</c><00:25:29.380><c> can</c><00:25:29.679><c> escape</c><00:25:30.160><c> out</c>

00:25:30.390 --> 00:25:30.400 align:start position:0%
a few other things you can escape out
 

00:25:30.400 --> 00:25:32.640 align:start position:0%
a few other things you can escape out
you<00:25:30.970><c> can</c><00:25:31.150><c> escape</c><00:25:31.360><c> out</c><00:25:31.690><c> a</c><00:25:31.720><c> single</c><00:25:32.440><c> quote</c>

00:25:32.640 --> 00:25:32.650 align:start position:0%
you can escape out a single quote
 

00:25:32.650 --> 00:25:35.640 align:start position:0%
you can escape out a single quote
character<00:25:33.250><c> you</c><00:25:33.940><c> can</c><00:25:34.120><c> escape</c><00:25:34.540><c> out</c><00:25:34.780><c> a</c><00:25:34.929><c> backslash</c>

00:25:35.640 --> 00:25:35.650 align:start position:0%
character you can escape out a backslash
 

00:25:35.650 --> 00:25:37.710 align:start position:0%
character you can escape out a backslash
in<00:25:36.070><c> fact</c><00:25:36.700><c> anytime</c><00:25:37.150><c> you're</c><00:25:37.300><c> gonna</c><00:25:37.420><c> use</c><00:25:37.690><c> a</c>

00:25:37.710 --> 00:25:37.720 align:start position:0%
in fact anytime you're gonna use a
 

00:25:37.720 --> 00:25:39.750 align:start position:0%
in fact anytime you're gonna use a
backslash<00:25:38.080><c> you're</c><00:25:38.740><c> gonna</c><00:25:38.830><c> have</c><00:25:39.040><c> to</c><00:25:39.160><c> put</c><00:25:39.340><c> two</c>

00:25:39.750 --> 00:25:39.760 align:start position:0%
backslash you're gonna have to put two
 

00:25:39.760 --> 00:25:43.590 align:start position:0%
backslash you're gonna have to put two
backslashes<00:25:40.440><c> so</c><00:25:41.440><c> the</c><00:25:42.010><c> JavaScript</c><00:25:42.400><c> knows</c><00:25:43.270><c> that</c>

00:25:43.590 --> 00:25:43.600 align:start position:0%
backslashes so the JavaScript knows that
 

00:25:43.600 --> 00:25:46.140 align:start position:0%
backslashes so the JavaScript knows that
you're<00:25:43.809><c> not</c><00:25:44.080><c> trying</c><00:25:44.500><c> to</c><00:25:44.590><c> escape</c><00:25:44.860><c> a</c><00:25:45.460><c> character</c>

00:25:46.140 --> 00:25:46.150 align:start position:0%
you're not trying to escape a character
 

00:25:46.150 --> 00:25:50.220 align:start position:0%
you're not trying to escape a character
you<00:25:47.020><c> can</c><00:25:47.230><c> also</c><00:25:47.640><c> add</c><00:25:48.640><c> a</c><00:25:48.700><c> new</c><00:25:49.120><c> line</c><00:25:49.330><c> character</c><00:25:49.390><c> or</c>

00:25:50.220 --> 00:25:50.230 align:start position:0%
you can also add a new line character or
 

00:25:50.230 --> 00:25:55.220 align:start position:0%
you can also add a new line character or
a<00:25:50.260><c> carriage</c><00:25:51.220><c> return</c><00:25:51.370><c> a</c><00:25:52.030><c> tab</c><00:25:52.840><c> a</c><00:25:53.730><c> backspace</c><00:25:54.730><c> or</c><00:25:55.059><c> a</c>

00:25:55.220 --> 00:25:55.230 align:start position:0%
a carriage return a tab a backspace or a
 

00:25:55.230 --> 00:25:59.520 align:start position:0%
a carriage return a tab a backspace or a
form<00:25:56.230><c> feed</c><00:25:56.650><c> all</c><00:25:56.980><c> with</c><00:25:57.670><c> doing</c><00:25:58.330><c> a</c><00:25:58.420><c> slash</c><00:25:58.840><c> in</c><00:25:59.200><c> the</c>

00:25:59.520 --> 00:25:59.530 align:start position:0%
form feed all with doing a slash in the
 

00:25:59.530 --> 00:26:02.280 align:start position:0%
form feed all with doing a slash in the
corresponding<00:26:00.340><c> letter</c><00:26:00.610><c> here</c><00:26:01.150><c> so</c><00:26:01.750><c> let</c><00:26:01.960><c> me</c><00:26:02.080><c> show</c>

00:26:02.280 --> 00:26:02.290 align:start position:0%
corresponding letter here so let me show
 

00:26:02.290 --> 00:26:04.860 align:start position:0%
corresponding letter here so let me show
you<00:26:02.350><c> an</c><00:26:02.559><c> example</c><00:26:02.650><c> I'm</c><00:26:03.610><c> going</c><00:26:03.850><c> to</c><00:26:03.910><c> put</c><00:26:04.059><c> a</c><00:26:04.090><c> var</c><00:26:04.390><c> my</c>

00:26:04.860 --> 00:26:04.870 align:start position:0%
you an example I'm going to put a var my
 

00:26:04.870 --> 00:26:08.940 align:start position:0%
you an example I'm going to put a var my
string<00:26:05.610><c> equals</c><00:26:06.610><c> and</c><00:26:07.059><c> we're</c><00:26:07.960><c> gonna</c><00:26:08.110><c> make</c><00:26:08.679><c> a</c>

00:26:08.940 --> 00:26:08.950 align:start position:0%
string equals and we're gonna make a
 

00:26:08.950 --> 00:26:10.860 align:start position:0%
string equals and we're gonna make a
multi-line<00:26:09.610><c> string</c><00:26:10.150><c> so</c><00:26:10.420><c> we're</c><00:26:10.570><c> gonna</c><00:26:10.660><c> have</c>

00:26:10.860 --> 00:26:10.870 align:start position:0%
multi-line string so we're gonna have
 

00:26:10.870 --> 00:26:14.070 align:start position:0%
multi-line string so we're gonna have
the<00:26:11.080><c> first</c><00:26:11.410><c> line</c><00:26:11.740><c> and</c><00:26:12.190><c> now</c><00:26:12.910><c> I'm</c><00:26:13.300><c> going</c><00:26:13.630><c> to</c><00:26:13.780><c> put</c>

00:26:14.070 --> 00:26:14.080 align:start position:0%
the first line and now I'm going to put
 

00:26:14.080 --> 00:26:18.750 align:start position:0%
the first line and now I'm going to put
backslash<00:26:14.860><c> in</c><00:26:15.160><c> to</c><00:26:16.000><c> add</c><00:26:16.179><c> a</c><00:26:16.210><c> a</c><00:26:17.100><c> second</c><00:26:18.100><c> line</c><00:26:18.340><c> and</c>

00:26:18.750 --> 00:26:18.760 align:start position:0%
backslash in to add a a second line and
 

00:26:18.760 --> 00:26:21.720 align:start position:0%
backslash in to add a a second line and
then<00:26:19.300><c> I'm</c><00:26:19.390><c> going</c><00:26:19.510><c> to</c><00:26:19.540><c> put</c><00:26:19.780><c> a</c><00:26:19.840><c> tab</c><00:26:20.230><c> so</c><00:26:20.920><c> backslash</c>

00:26:21.720 --> 00:26:21.730 align:start position:0%
then I'm going to put a tab so backslash
 

00:26:21.730 --> 00:26:25.770 align:start position:0%
then I'm going to put a tab so backslash
T<00:26:22.240><c> for</c><00:26:22.480><c> the</c><00:26:22.570><c> tab</c><00:26:22.900><c> and</c><00:26:23.550><c> backslash</c><00:26:24.550><c> backslash</c><00:26:25.090><c> to</c>

00:26:25.770 --> 00:26:25.780 align:start position:0%
T for the tab and backslash backslash to
 

00:26:25.780 --> 00:26:28.140 align:start position:0%
T for the tab and backslash backslash to
add<00:26:25.900><c> a</c><00:26:25.929><c> backslash</c><00:26:26.770><c> now</c><00:26:27.610><c> it's</c><00:26:27.760><c> going</c><00:26:27.910><c> to</c><00:26:28.000><c> say</c>

00:26:28.140 --> 00:26:28.150 align:start position:0%
add a backslash now it's going to say
 

00:26:28.150 --> 00:26:31.980 align:start position:0%
add a backslash now it's going to say
second<00:26:28.809><c> line</c><00:26:29.250><c> now</c><00:26:30.250><c> I'll</c><00:26:30.460><c> do</c><00:26:30.730><c> backslash</c><00:26:31.570><c> and</c>

00:26:31.980 --> 00:26:31.990 align:start position:0%
second line now I'll do backslash and
 

00:26:31.990 --> 00:26:35.760 align:start position:0%
second line now I'll do backslash and
then<00:26:32.290><c> I'll</c><00:26:32.410><c> just</c><00:26:32.650><c> say</c><00:26:32.890><c> third</c><00:26:33.610><c> line</c><00:26:34.480><c> and</c><00:26:34.960><c> if</c><00:26:35.620><c> I</c>

00:26:35.760 --> 00:26:35.770 align:start position:0%
then I'll just say third line and if I
 

00:26:35.770 --> 00:26:38.340 align:start position:0%
then I'll just say third line and if I
were<00:26:35.920><c> able</c><00:26:36.100><c> to</c><00:26:36.490><c> log</c><00:26:36.820><c> out</c><00:26:37.030><c> all</c><00:26:37.270><c> that</c><00:26:37.600><c> you</c><00:26:38.170><c> would</c>

00:26:38.340 --> 00:26:38.350 align:start position:0%
were able to log out all that you would
 

00:26:38.350 --> 00:26:41.340 align:start position:0%
were able to log out all that you would
see<00:26:38.620><c> three</c><00:26:39.070><c> different</c><00:26:39.309><c> lines</c><00:26:39.790><c> and</c><00:26:40.330><c> you</c><00:26:41.200><c> would</c>

00:26:41.340 --> 00:26:41.350 align:start position:0%
see three different lines and you would
 

00:26:41.350 --> 00:26:43.919 align:start position:0%
see three different lines and you would
see<00:26:41.650><c> the</c><00:26:41.980><c> tab</c><00:26:42.309><c> and</c><00:26:42.760><c> then</c><00:26:43.210><c> the</c><00:26:43.240><c> backslash</c>

00:26:43.919 --> 00:26:43.929 align:start position:0%
see the tab and then the backslash
 

00:26:43.929 --> 00:26:48.640 align:start position:0%
see the tab and then the backslash
character

00:26:48.640 --> 00:26:48.650 align:start position:0%
 
 

00:26:48.650 --> 00:26:51.640 align:start position:0%
 
you<00:26:49.190><c> can</c><00:26:49.460><c> concatenate</c><00:26:50.000><c> strings</c><00:26:50.870><c> with</c><00:26:51.260><c> the</c>

00:26:51.640 --> 00:26:51.650 align:start position:0%
you can concatenate strings with the
 

00:26:51.650 --> 00:26:54.250 align:start position:0%
you can concatenate strings with the
plus<00:26:52.039><c> operator</c><00:26:52.669><c> you</c><00:26:53.390><c> can</c><00:26:53.600><c> see</c><00:26:53.779><c> here</c><00:26:54.049><c> that</c><00:26:54.080><c> we</c>

00:26:54.250 --> 00:26:54.260 align:start position:0%
plus operator you can see here that we
 

00:26:54.260 --> 00:26:57.580 align:start position:0%
plus operator you can see here that we
have<00:26:54.350><c> two</c><00:26:54.529><c> strings</c><00:26:54.919><c> I</c><00:26:55.279><c> come</c><00:26:55.850><c> first</c><00:26:56.210><c> and</c><00:26:56.539><c> I</c><00:26:57.140><c> come</c>

00:26:57.580 --> 00:26:57.590 align:start position:0%
have two strings I come first and I come
 

00:26:57.590 --> 00:27:00.640 align:start position:0%
have two strings I come first and I come
second<00:26:58.190><c> they've</c><00:26:58.850><c> been</c><00:26:59.270><c> added</c><00:26:59.900><c> together</c><00:27:00.110><c> or</c>

00:27:00.640 --> 00:27:00.650 align:start position:0%
second they've been added together or
 

00:27:00.650 --> 00:27:04.630 align:start position:0%
second they've been added together or
concatenated<00:27:01.610><c> with</c><00:27:01.850><c> this</c><00:27:02.299><c> so</c><00:27:02.900><c> the</c><00:27:03.230><c> are</c><00:27:03.640><c> STR</c>

00:27:04.630 --> 00:27:04.640 align:start position:0%
concatenated with this so the are STR
 

00:27:04.640 --> 00:27:08.409 align:start position:0%
concatenated with this so the are STR
our<00:27:04.940><c> string</c><00:27:05.480><c> is</c><00:27:05.779><c> now</c><00:27:06.350><c> one</c><00:27:06.860><c> long</c><00:27:07.549><c> string</c><00:27:08.120><c> that</c>

00:27:08.409 --> 00:27:08.419 align:start position:0%
our string is now one long string that
 

00:27:08.419 --> 00:27:12.430 align:start position:0%
our string is now one long string that
says<00:27:08.960><c> I</c><00:27:09.169><c> come</c><00:27:09.650><c> first</c><00:27:10.010><c> I</c><00:27:10.429><c> come</c><00:27:11.120><c> second</c><00:27:11.690><c> I'll</c>

00:27:12.430 --> 00:27:12.440 align:start position:0%
says I come first I come second I'll
 

00:27:12.440 --> 00:27:14.680 align:start position:0%
says I come first I come second I'll
give<00:27:12.679><c> you</c><00:27:12.770><c> another</c><00:27:12.919><c> example</c><00:27:13.490><c> here</c><00:27:13.850><c> so</c><00:27:14.360><c> we</c><00:27:14.510><c> can</c>

00:27:14.680 --> 00:27:14.690 align:start position:0%
give you another example here so we can
 

00:27:14.690 --> 00:27:20.260 align:start position:0%
give you another example here so we can
say<00:27:14.960><c> my</c><00:27:15.440><c> string</c><00:27:15.919><c> equals</c><00:27:17.980><c> this</c><00:27:18.980><c> is</c><00:27:19.279><c> the</c><00:27:19.789><c> start</c>

00:27:20.260 --> 00:27:20.270 align:start position:0%
say my string equals this is the start
 

00:27:20.270 --> 00:27:23.139 align:start position:0%
say my string equals this is the start
and<00:27:20.600><c> then</c><00:27:21.409><c> I'm</c><00:27:21.500><c> going</c><00:27:21.620><c> to</c><00:27:21.679><c> put</c><00:27:21.950><c> a</c><00:27:22.159><c> space</c><00:27:22.700><c> before</c>

00:27:23.139 --> 00:27:23.149 align:start position:0%
and then I'm going to put a space before
 

00:27:23.149 --> 00:27:25.750 align:start position:0%
and then I'm going to put a space before
the<00:27:23.450><c> in</c><00:27:23.690><c> quotation</c><00:27:24.380><c> mark</c><00:27:24.620><c> because</c><00:27:25.159><c> when</c><00:27:25.640><c> these</c>

00:27:25.750 --> 00:27:25.760 align:start position:0%
the in quotation mark because when these
 

00:27:25.760 --> 00:27:27.940 align:start position:0%
the in quotation mark because when these
get<00:27:25.970><c> concatenated</c><00:27:26.840><c> together</c><00:27:26.990><c> we</c><00:27:27.500><c> want</c><00:27:27.799><c> there</c>

00:27:27.940 --> 00:27:27.950 align:start position:0%
get concatenated together we want there
 

00:27:27.950 --> 00:27:29.620 align:start position:0%
get concatenated together we want there
to<00:27:27.980><c> be</c><00:27:28.100><c> a</c><00:27:28.190><c> space</c><00:27:28.549><c> between</c><00:27:29.090><c> these</c><00:27:29.360><c> two</c>

00:27:29.620 --> 00:27:29.630 align:start position:0%
to be a space between these two
 

00:27:29.630 --> 00:27:33.060 align:start position:0%
to be a space between these two
sentences<00:27:30.080><c> and</c><00:27:30.649><c> I'll</c><00:27:31.130><c> say</c><00:27:31.370><c> this</c><00:27:31.730><c> is</c><00:27:32.000><c> the</c><00:27:32.539><c> end</c>

00:27:33.060 --> 00:27:33.070 align:start position:0%
sentences and I'll say this is the end
 

00:27:33.070 --> 00:27:35.350 align:start position:0%
sentences and I'll say this is the end
now<00:27:34.070><c> let's</c><00:27:34.340><c> just</c><00:27:34.490><c> see</c><00:27:34.700><c> what</c><00:27:34.850><c> that</c><00:27:35.000><c> looks</c><00:27:35.270><c> like</c>

00:27:35.350 --> 00:27:35.360 align:start position:0%
now let's just see what that looks like
 

00:27:35.360 --> 00:27:39.190 align:start position:0%
now let's just see what that looks like
I'll<00:27:35.779><c> do</c><00:27:35.899><c> a</c><00:27:35.960><c> consult</c><00:27:36.620><c> out</c><00:27:36.860><c> log</c><00:27:37.220><c> and</c><00:27:37.850><c> do</c><00:27:38.750><c> a</c><00:27:38.779><c> my</c>

00:27:39.190 --> 00:27:39.200 align:start position:0%
I'll do a consult out log and do a my
 

00:27:39.200 --> 00:27:43.899 align:start position:0%
I'll do a consult out log and do a my
string<00:27:39.620><c> and</c><00:27:40.330><c> let's</c><00:27:41.330><c> see</c><00:27:41.690><c> if</c><00:27:41.899><c> I</c><00:27:42.460><c> run</c><00:27:43.460><c> this</c><00:27:43.669><c> we</c>

00:27:43.899 --> 00:27:43.909 align:start position:0%
string and let's see if I run this we
 

00:27:43.909 --> 00:27:45.789 align:start position:0%
string and let's see if I run this we
can<00:27:44.059><c> see</c><00:27:44.240><c> this</c><00:27:44.480><c> is</c><00:27:44.690><c> the</c><00:27:44.870><c> start</c><00:27:45.140><c> this</c><00:27:45.470><c> is</c><00:27:45.529><c> the</c>

00:27:45.789 --> 00:27:45.799 align:start position:0%
can see this is the start this is the
 

00:27:45.799 --> 00:27:51.460 align:start position:0%
can see this is the start this is the
end<00:27:46.039><c> just</c><00:27:46.669><c> one</c><00:27:46.940><c> long</c><00:27:47.240><c> string</c>

00:27:51.460 --> 00:27:51.470 align:start position:0%
 
 

00:27:51.470 --> 00:27:54.580 align:start position:0%
 
you<00:27:52.190><c> could</c><00:27:52.370><c> also</c><00:27:52.580><c> concatenate</c><00:27:53.480><c> strings</c><00:27:53.929><c> using</c>

00:27:54.580 --> 00:27:54.590 align:start position:0%
you could also concatenate strings using
 

00:27:54.590 --> 00:27:57.639 align:start position:0%
you could also concatenate strings using
the<00:27:54.710><c> plus</c><00:27:55.070><c> equal</c><00:27:55.549><c> operator</c><00:27:56.210><c> you</c><00:27:56.960><c> can</c><00:27:56.990><c> see</c><00:27:57.350><c> here</c>

00:27:57.639 --> 00:27:57.649 align:start position:0%
the plus equal operator you can see here
 

00:27:57.649 --> 00:27:59.950 align:start position:0%
the plus equal operator you can see here
in<00:27:57.710><c> this</c><00:27:57.799><c> example</c><00:27:57.860><c> we</c><00:27:58.850><c> have</c><00:27:59.029><c> the</c><00:27:59.210><c> AR</c><00:27:59.419><c> string</c>

00:27:59.950 --> 00:27:59.960 align:start position:0%
in this example we have the AR string
 

00:27:59.960 --> 00:28:03.909 align:start position:0%
in this example we have the AR string
equals<00:28:00.440><c> I</c><00:28:01.190><c> come</c><00:28:01.789><c> first</c><00:28:02.210><c> and</c><00:28:02.659><c> then</c><00:28:03.559><c> we</c><00:28:03.740><c> have</c><00:28:03.830><c> the</c>

00:28:03.909 --> 00:28:03.919 align:start position:0%
equals I come first and then we have the
 

00:28:03.919 --> 00:28:07.570 align:start position:0%
equals I come first and then we have the
AR<00:28:04.129><c> string</c><00:28:04.519><c> plus</c><00:28:05.120><c> equals</c><00:28:05.809><c> I</c><00:28:06.169><c> comes</c><00:28:06.830><c> second</c>

00:28:07.570 --> 00:28:07.580 align:start position:0%
AR string plus equals I comes second
 

00:28:07.580 --> 00:28:10.269 align:start position:0%
AR string plus equals I comes second
so<00:28:07.970><c> remember</c><00:28:08.720><c> just</c><00:28:08.750><c> like</c><00:28:09.139><c> in</c><00:28:09.440><c> when</c><00:28:10.159><c> you're</c>

00:28:10.269 --> 00:28:10.279 align:start position:0%
so remember just like in when you're
 

00:28:10.279 --> 00:28:13.119 align:start position:0%
so remember just like in when you're
using<00:28:10.460><c> numbers</c><00:28:11.029><c> plus</c><00:28:11.659><c> equals</c><00:28:12.230><c> means</c><00:28:12.830><c> that</c><00:28:13.039><c> you</c>

00:28:13.119 --> 00:28:13.129 align:start position:0%
using numbers plus equals means that you
 

00:28:13.129 --> 00:28:15.730 align:start position:0%
using numbers plus equals means that you
take<00:28:13.159><c> whatever</c><00:28:13.940><c> is</c><00:28:14.120><c> on</c><00:28:14.299><c> the</c><00:28:14.779><c> end</c><00:28:14.960><c> here</c><00:28:15.320><c> and</c><00:28:15.379><c> add</c>

00:28:15.730 --> 00:28:15.740 align:start position:0%
take whatever is on the end here and add
 

00:28:15.740 --> 00:28:20.169 align:start position:0%
take whatever is on the end here and add
it<00:28:16.129><c> to</c><00:28:16.570><c> the</c><00:28:17.570><c> variable</c><00:28:18.110><c> so</c><00:28:18.889><c> we've</c><00:28:19.190><c> just</c><00:28:19.220><c> added</c><00:28:19.970><c> I</c>

00:28:20.169 --> 00:28:20.179 align:start position:0%
it to the variable so we've just added I
 

00:28:20.179 --> 00:28:22.509 align:start position:0%
it to the variable so we've just added I
come<00:28:20.480><c> second</c><00:28:21.019><c> on</c><00:28:21.139><c> to</c><00:28:21.440><c> the</c><00:28:21.529><c> end</c><00:28:21.740><c> of</c><00:28:21.980><c> I</c><00:28:22.129><c> come</c>

00:28:22.509 --> 00:28:22.519 align:start position:0%
come second on to the end of I come
 

00:28:22.519 --> 00:28:25.299 align:start position:0%
come second on to the end of I come
first<00:28:22.879><c> let's</c><00:28:23.779><c> do</c><00:28:23.929><c> another</c><00:28:24.019><c> example</c><00:28:24.230><c> down</c><00:28:24.860><c> here</c>

00:28:25.299 --> 00:28:25.309 align:start position:0%
first let's do another example down here
 

00:28:25.309 --> 00:28:30.159 align:start position:0%
first let's do another example down here
my<00:28:25.909><c> string</c><00:28:26.389><c> equals</c><00:28:27.460><c> this</c><00:28:28.460><c> is</c><00:28:28.789><c> the</c><00:28:29.509><c> first</c>

00:28:30.159 --> 00:28:30.169 align:start position:0%
my string equals this is the first
 

00:28:30.169 --> 00:28:33.399 align:start position:0%
my string equals this is the first
sentence<00:28:31.039><c> and</c><00:28:31.509><c> then</c><00:28:32.509><c> I'll</c><00:28:32.570><c> put</c><00:28:32.720><c> a</c><00:28:32.779><c> space</c><00:28:33.169><c> at</c>

00:28:33.399 --> 00:28:33.409 align:start position:0%
sentence and then I'll put a space at
 

00:28:33.409 --> 00:28:35.740 align:start position:0%
sentence and then I'll put a space at
the<00:28:33.440><c> end</c><00:28:33.590><c> because</c><00:28:34.100><c> we're</c><00:28:34.490><c> gonna</c><00:28:34.580><c> do</c><00:28:34.759><c> my</c><00:28:35.149><c> string</c>

00:28:35.740 --> 00:28:35.750 align:start position:0%
the end because we're gonna do my string
 

00:28:35.750 --> 00:28:39.090 align:start position:0%
the end because we're gonna do my string
and<00:28:36.049><c> I'll</c><00:28:36.620><c> hear</c><00:28:36.860><c> oh</c><00:28:36.889><c> I'll</c><00:28:37.129><c> do</c><00:28:37.309><c> the</c><00:28:37.490><c> plus</c><00:28:37.879><c> equals</c>

00:28:39.090 --> 00:28:39.100 align:start position:0%
and I'll hear oh I'll do the plus equals
 

00:28:39.100 --> 00:28:45.759 align:start position:0%
and I'll hear oh I'll do the plus equals
this<00:28:40.100><c> is</c><00:28:40.460><c> the</c><00:28:41.450><c> second</c><00:28:42.580><c> sentence</c><00:28:44.289><c> now</c><00:28:45.289><c> if</c><00:28:45.620><c> I</c>

00:28:45.759 --> 00:28:45.769 align:start position:0%
this is the second sentence now if I
 

00:28:45.769 --> 00:28:50.049 align:start position:0%
this is the second sentence now if I
just<00:28:45.830><c> do</c><00:28:46.279><c> a</c><00:28:46.309><c> console</c><00:28:46.940><c> that</c><00:28:47.059><c> log</c><00:28:47.360><c> here</c><00:28:47.840><c> of</c><00:28:49.059><c> my</c>

00:28:50.049 --> 00:28:50.059 align:start position:0%
just do a console that log here of my
 

00:28:50.059 --> 00:28:52.749 align:start position:0%
just do a console that log here of my
string<00:28:50.480><c> we</c><00:28:51.259><c> should</c><00:28:51.649><c> see</c><00:28:52.129><c> that</c><00:28:52.549><c> those</c>

00:28:52.749 --> 00:28:52.759 align:start position:0%
string we should see that those
 

00:28:52.759 --> 00:28:55.389 align:start position:0%
string we should see that those
sentences<00:28:53.389><c> have</c><00:28:53.629><c> gone</c><00:28:53.840><c> together</c><00:28:54.080><c> this</c><00:28:55.009><c> is</c><00:28:55.220><c> the</c>

00:28:55.389 --> 00:28:55.399 align:start position:0%
sentences have gone together this is the
 

00:28:55.399 --> 00:28:57.999 align:start position:0%
sentences have gone together this is the
first<00:28:55.669><c> sentence</c><00:28:56.149><c> this</c><00:28:56.690><c> is</c><00:28:56.929><c> the</c><00:28:57.470><c> second</c>

00:28:57.999 --> 00:28:58.009 align:start position:0%
first sentence this is the second
 

00:28:58.009 --> 00:29:03.730 align:start position:0%
first sentence this is the second
sentence<00:28:58.580><c> good</c>

00:29:03.730 --> 00:29:03.740 align:start position:0%
 
 

00:29:03.740 --> 00:29:06.250 align:start position:0%
 
you<00:29:04.520><c> can</c><00:29:04.700><c> concatenate</c><00:29:05.120><c> strings</c><00:29:05.870><c> together</c>

00:29:06.250 --> 00:29:06.260 align:start position:0%
you can concatenate strings together
 

00:29:06.260 --> 00:29:09.220 align:start position:0%
you can concatenate strings together
with<00:29:06.710><c> variables</c><00:29:07.370><c> you</c><00:29:07.940><c> can</c><00:29:08.059><c> see</c><00:29:08.300><c> here</c><00:29:08.690><c> our</c><00:29:08.809><c> name</c>

00:29:09.220 --> 00:29:09.230 align:start position:0%
with variables you can see here our name
 

00:29:09.230 --> 00:29:12.040 align:start position:0%
with variables you can see here our name
freako<00:29:09.920><c> camp</c><00:29:10.309><c> hello</c><00:29:11.000><c> our</c><00:29:11.179><c> name</c><00:29:11.450><c> is</c><00:29:11.750><c> and</c><00:29:12.020><c> then</c>

00:29:12.040 --> 00:29:12.050 align:start position:0%
freako camp hello our name is and then
 

00:29:12.050 --> 00:29:15.010 align:start position:0%
freako camp hello our name is and then
we<00:29:12.800><c> add</c><00:29:13.280><c> this</c><00:29:13.790><c> variable</c><00:29:14.450><c> the</c><00:29:14.630><c> our</c><00:29:14.809><c> name</c>

00:29:15.010 --> 00:29:15.020 align:start position:0%
we add this variable the our name
 

00:29:15.020 --> 00:29:17.830 align:start position:0%
we add this variable the our name
variable<00:29:15.559><c> which</c><00:29:15.890><c> is</c><00:29:16.040><c> freako</c><00:29:16.520><c> camp</c><00:29:16.910><c> hello</c><00:29:17.690><c> our</c>

00:29:17.830 --> 00:29:17.840 align:start position:0%
variable which is freako camp hello our
 

00:29:17.840 --> 00:29:20.650 align:start position:0%
variable which is freako camp hello our
name<00:29:18.020><c> is</c><00:29:18.170><c> freako</c><00:29:18.620><c> camp</c><00:29:18.980><c> how</c><00:29:19.220><c> are</c><00:29:19.429><c> you</c><00:29:19.730><c> well</c>

00:29:20.650 --> 00:29:20.660 align:start position:0%
name is freako camp how are you well
 

00:29:20.660 --> 00:29:22.000 align:start position:0%
name is freako camp how are you well
we're<00:29:20.900><c> gonna</c><00:29:20.990><c> do</c><00:29:21.140><c> the</c><00:29:21.260><c> same</c><00:29:21.440><c> thing</c><00:29:21.500><c> down</c><00:29:21.950><c> here</c>

00:29:22.000 --> 00:29:22.010 align:start position:0%
we're gonna do the same thing down here
 

00:29:22.010 --> 00:29:27.540 align:start position:0%
we're gonna do the same thing down here
so<00:29:23.000><c> I'm</c><00:29:23.390><c> gonna</c><00:29:23.570><c> do</c><00:29:23.750><c> my</c><00:29:24.020><c> name</c><00:29:24.500><c> equals</c><00:29:25.220><c> o</c><00:29:25.840><c> and</c>

00:29:27.540 --> 00:29:27.550 align:start position:0%
so I'm gonna do my name equals o and
 

00:29:27.550 --> 00:29:33.010 align:start position:0%
so I'm gonna do my name equals o and
then<00:29:28.550><c> my</c><00:29:28.850><c> string</c><00:29:29.420><c> is</c><00:29:29.720><c> going</c><00:29:30.470><c> to</c><00:29:30.590><c> equal</c><00:29:32.020><c> mine</c>

00:29:33.010 --> 00:29:33.020 align:start position:0%
then my string is going to equal mine
 

00:29:33.020 --> 00:29:37.000 align:start position:0%
then my string is going to equal mine
name<00:29:33.980><c> is</c><00:29:34.429><c> and</c><00:29:35.150><c> then</c><00:29:35.900><c> I'm</c><00:29:36.080><c> going</c><00:29:36.260><c> to</c><00:29:36.320><c> add</c><00:29:36.620><c> the</c>

00:29:37.000 --> 00:29:37.010 align:start position:0%
name is and then I'm going to add the
 

00:29:37.010 --> 00:29:41.410 align:start position:0%
name is and then I'm going to add the
variable<00:29:37.490><c> name</c><00:29:37.730><c> which</c><00:29:38.330><c> is</c><00:29:38.570><c> myname</c><00:29:38.990><c> and</c><00:29:40.420><c> then</c>

00:29:41.410 --> 00:29:41.420 align:start position:0%
variable name which is myname and then
 

00:29:41.420 --> 00:29:43.570 align:start position:0%
variable name which is myname and then
I'll<00:29:41.600><c> continue</c><00:29:42.110><c> the</c><00:29:42.410><c> string</c><00:29:42.740><c> here</c><00:29:43.100><c> hopes</c><00:29:43.400><c> that</c>

00:29:43.570 --> 00:29:43.580 align:start position:0%
I'll continue the string here hopes that
 

00:29:43.580 --> 00:29:51.090 align:start position:0%
I'll continue the string here hopes that
supposed<00:29:43.790><c> to</c><00:29:43.820><c> be</c><00:29:43.880><c> a</c><00:29:43.940><c> plus</c><00:29:44.330><c> here</c><00:29:45.340><c> and</c><00:29:47.290><c> I</c><00:29:48.290><c> am</c><00:29:49.010><c> well</c>

00:29:51.090 --> 00:29:51.100 align:start position:0%
supposed to be a plus here and I am well
 

00:29:51.100 --> 00:29:54.520 align:start position:0%
supposed to be a plus here and I am well
see<00:29:52.100><c> that</c><00:29:52.280><c> I</c><00:29:52.309><c> put</c><00:29:52.670><c> a</c><00:29:52.820><c> space</c><00:29:53.300><c> here</c><00:29:53.809><c> and</c><00:29:54.020><c> here</c>

00:29:54.520 --> 00:29:54.530 align:start position:0%
see that I put a space here and here
 

00:29:54.530 --> 00:29:56.080 align:start position:0%
see that I put a space here and here
because<00:29:54.650><c> you</c><00:29:54.860><c> have</c><00:29:55.010><c> to</c><00:29:55.040><c> make</c><00:29:55.429><c> sure</c><00:29:55.460><c> you</c><00:29:55.850><c> put</c>

00:29:56.080 --> 00:29:56.090 align:start position:0%
because you have to make sure you put
 

00:29:56.090 --> 00:29:59.110 align:start position:0%
because you have to make sure you put
appropriate<00:29:56.840><c> spaces</c><00:29:57.440><c> in</c><00:29:57.650><c> and</c><00:29:58.100><c> let's</c><00:29:58.910><c> see</c><00:29:59.000><c> what</c>

00:29:59.110 --> 00:29:59.120 align:start position:0%
appropriate spaces in and let's see what
 

00:29:59.120 --> 00:30:01.270 align:start position:0%
appropriate spaces in and let's see what
that<00:29:59.150><c> looks</c><00:29:59.300><c> like</c><00:29:59.600><c> I'll</c><00:29:59.960><c> do</c><00:30:00.110><c> a</c><00:30:00.140><c> consult</c><00:30:01.100><c> out</c>

00:30:01.270 --> 00:30:01.280 align:start position:0%
that looks like I'll do a consult out
 

00:30:01.280 --> 00:30:07.360 align:start position:0%
that looks like I'll do a consult out
log<00:30:03.309><c> and</c><00:30:04.309><c> I'll</c><00:30:04.400><c> just</c><00:30:04.550><c> put</c><00:30:04.820><c> my</c><00:30:05.000><c> string</c><00:30:05.750><c> here</c><00:30:06.370><c> if</c>

00:30:07.360 --> 00:30:07.370 align:start position:0%
log and I'll just put my string here if
 

00:30:07.370 --> 00:30:11.799 align:start position:0%
log and I'll just put my string here if
I<00:30:07.940><c> show</c><00:30:08.600><c> that</c><00:30:08.870><c> my</c><00:30:09.590><c> name</c><00:30:09.860><c> is</c><00:30:10.070><c> Bo</c><00:30:10.309><c> and</c><00:30:10.640><c> I</c><00:30:11.210><c> am</c><00:30:11.510><c> well</c>

00:30:11.799 --> 00:30:11.809 align:start position:0%
I show that my name is Bo and I am well
 

00:30:11.809 --> 00:30:16.770 align:start position:0%
I show that my name is Bo and I am well
looks<00:30:12.770><c> good</c>

00:30:16.770 --> 00:30:16.780 align:start position:0%
 
 

00:30:16.780 --> 00:30:19.800 align:start position:0%
 
you<00:30:17.650><c> can</c><00:30:17.830><c> append</c><00:30:18.220><c> variables</c><00:30:18.880><c> to</c><00:30:19.060><c> strings</c><00:30:19.510><c> with</c>

00:30:19.800 --> 00:30:19.810 align:start position:0%
you can append variables to strings with
 

00:30:19.810 --> 00:30:22.620 align:start position:0%
you can append variables to strings with
this<00:30:20.080><c> plus</c><00:30:20.470><c> equals</c><00:30:21.010><c> operator</c><00:30:21.640><c> you</c><00:30:22.300><c> can</c><00:30:22.480><c> see</c>

00:30:22.620 --> 00:30:22.630 align:start position:0%
this plus equals operator you can see
 

00:30:22.630 --> 00:30:24.510 align:start position:0%
this plus equals operator you can see
with<00:30:22.780><c> this</c><00:30:22.930><c> variable</c><00:30:23.290><c> and</c><00:30:23.590><c> adjective</c><00:30:24.220><c> which</c>

00:30:24.510 --> 00:30:24.520 align:start position:0%
with this variable and adjective which
 

00:30:24.520 --> 00:30:27.150 align:start position:0%
with this variable and adjective which
is<00:30:24.730><c> set</c><00:30:25.000><c> to</c><00:30:25.030><c> the</c><00:30:25.360><c> word</c><00:30:25.570><c> awesome</c><00:30:26.170><c> and</c><00:30:26.380><c> then</c><00:30:27.070><c> we</c>

00:30:27.150 --> 00:30:27.160 align:start position:0%
is set to the word awesome and then we
 

00:30:27.160 --> 00:30:30.270 align:start position:0%
is set to the word awesome and then we
have<00:30:27.280><c> another</c><00:30:27.550><c> variable</c><00:30:28.260><c> freako</c><00:30:29.260><c> camp</c><00:30:29.560><c> is</c><00:30:29.770><c> and</c>

00:30:30.270 --> 00:30:30.280 align:start position:0%
have another variable freako camp is and
 

00:30:30.280 --> 00:30:33.120 align:start position:0%
have another variable freako camp is and
we<00:30:30.940><c> have</c><00:30:31.210><c> the</c><00:30:31.390><c> our</c><00:30:31.630><c> string</c><00:30:32.080><c> variable</c><00:30:32.680><c> plus</c>

00:30:33.120 --> 00:30:33.130 align:start position:0%
we have the our string variable plus
 

00:30:33.130 --> 00:30:36.720 align:start position:0%
we have the our string variable plus
equal<00:30:33.610><c> an</c><00:30:33.880><c> adjective</c><00:30:34.480><c> so</c><00:30:35.380><c> now</c><00:30:35.680><c> our</c><00:30:35.710><c> string</c><00:30:36.490><c> is</c>

00:30:36.720 --> 00:30:36.730 align:start position:0%
equal an adjective so now our string is
 

00:30:36.730 --> 00:30:41.130 align:start position:0%
equal an adjective so now our string is
going<00:30:36.940><c> to</c><00:30:37.090><c> equal</c><00:30:37.920><c> freako</c><00:30:38.920><c> camp</c><00:30:39.250><c> is</c><00:30:39.490><c> awesome</c><00:30:40.420><c> so</c>

00:30:41.130 --> 00:30:41.140 align:start position:0%
going to equal freako camp is awesome so
 

00:30:41.140 --> 00:30:44.460 align:start position:0%
going to equal freako camp is awesome so
let<00:30:41.530><c> me</c><00:30:41.620><c> show</c><00:30:41.770><c> you</c><00:30:41.860><c> another</c><00:30:41.980><c> example</c><00:30:43.470><c> we're</c>

00:30:44.460 --> 00:30:44.470 align:start position:0%
let me show you another example we're
 

00:30:44.470 --> 00:30:49.640 align:start position:0%
let me show you another example we're
going<00:30:44.620><c> to</c><00:30:44.710><c> say</c><00:30:44.950><c> some</c><00:30:45.490><c> adjective</c><00:30:46.060><c> equals</c><00:30:47.910><c> worth</c>

00:30:49.640 --> 00:30:49.650 align:start position:0%
going to say some adjective equals worth
 

00:30:49.650 --> 00:30:54.000 align:start position:0%
going to say some adjective equals worth
while<00:30:50.650><c> and</c><00:30:51.540><c> now</c><00:30:52.540><c> I'm</c><00:30:52.900><c> going</c><00:30:53.290><c> to</c><00:30:53.350><c> use</c><00:30:53.560><c> the</c><00:30:53.770><c> plus</c>

00:30:54.000 --> 00:30:54.010 align:start position:0%
while and now I'm going to use the plus
 

00:30:54.010 --> 00:30:58.890 align:start position:0%
while and now I'm going to use the plus
equal<00:30:54.430><c> so</c><00:30:54.640><c> my</c><00:30:55.000><c> STR</c><00:30:56.040><c> plus</c><00:30:57.040><c> equals</c><00:30:57.730><c> and</c><00:30:58.090><c> then</c><00:30:58.750><c> I</c>

00:30:58.890 --> 00:30:58.900 align:start position:0%
equal so my STR plus equals and then I
 

00:30:58.900 --> 00:31:02.700 align:start position:0%
equal so my STR plus equals and then I
can<00:30:59.080><c> put</c><00:30:59.320><c> some</c><00:30:59.710><c> adjectives</c><00:31:00.520><c> so</c><00:31:01.180><c> now</c><00:31:01.570><c> after</c><00:31:02.560><c> we</c>

00:31:02.700 --> 00:31:02.710 align:start position:0%
can put some adjectives so now after we
 

00:31:02.710 --> 00:31:04.680 align:start position:0%
can put some adjectives so now after we
do<00:31:02.950><c> the</c><00:31:03.190><c> my</c><00:31:03.400><c> string</c><00:31:03.850><c> plus</c><00:31:04.180><c> equals</c><00:31:04.480><c> some</c>

00:31:04.680 --> 00:31:04.690 align:start position:0%
do the my string plus equals some
 

00:31:04.690 --> 00:31:07.440 align:start position:0%
do the my string plus equals some
adjective<00:31:05.380><c> my</c><00:31:06.010><c> string</c><00:31:06.460><c> is</c><00:31:06.700><c> going</c><00:31:07.030><c> to</c><00:31:07.210><c> say</c>

00:31:07.440 --> 00:31:07.450 align:start position:0%
adjective my string is going to say
 

00:31:07.450 --> 00:31:13.930 align:start position:0%
adjective my string is going to say
learning<00:31:08.320><c> to</c><00:31:08.530><c> code</c><00:31:08.800><c> is</c><00:31:09.100><c> worthwhile</c>

00:31:13.930 --> 00:31:13.940 align:start position:0%
 
 

00:31:13.940 --> 00:31:16.120 align:start position:0%
 
sometimes<00:31:14.870><c> you</c><00:31:14.960><c> want</c><00:31:15.110><c> to</c><00:31:15.170><c> find</c><00:31:15.380><c> the</c><00:31:15.560><c> length</c><00:31:15.860><c> of</c>

00:31:16.120 --> 00:31:16.130 align:start position:0%
sometimes you want to find the length of
 

00:31:16.130 --> 00:31:19.450 align:start position:0%
sometimes you want to find the length of
a<00:31:16.250><c> string</c><00:31:16.900><c> javascript</c><00:31:17.900><c> makes</c><00:31:18.140><c> this</c><00:31:18.350><c> easy</c><00:31:18.650><c> so</c>

00:31:19.450 --> 00:31:19.460 align:start position:0%
a string javascript makes this easy so
 

00:31:19.460 --> 00:31:21.160 align:start position:0%
a string javascript makes this easy so
we<00:31:19.580><c> have</c><00:31:19.670><c> the</c><00:31:19.820><c> first</c><00:31:20.090><c> name</c><00:31:20.390><c> is</c><00:31:20.630><c> set</c><00:31:20.840><c> to</c><00:31:20.870><c> a</c><00:31:21.020><c> de</c>

00:31:21.160 --> 00:31:21.170 align:start position:0%
we have the first name is set to a de
 

00:31:21.170 --> 00:31:24.520 align:start position:0%
we have the first name is set to a de
but<00:31:22.160><c> we</c><00:31:22.370><c> just</c><00:31:22.550><c> use</c><00:31:22.670><c> the</c><00:31:23.090><c> dot</c><00:31:23.390><c> length</c><00:31:23.810><c> property</c>

00:31:24.520 --> 00:31:24.530 align:start position:0%
but we just use the dot length property
 

00:31:24.530 --> 00:31:27.490 align:start position:0%
but we just use the dot length property
to<00:31:24.920><c> find</c><00:31:25.100><c> the</c><00:31:25.280><c> length</c><00:31:25.550><c> so</c><00:31:26.120><c> first</c><00:31:26.720><c> name</c><00:31:26.840><c> dot</c>

00:31:27.490 --> 00:31:27.500 align:start position:0%
to find the length so first name dot
 

00:31:27.500 --> 00:31:29.620 align:start position:0%
to find the length so first name dot
length<00:31:27.860><c> remember</c><00:31:28.460><c> our</c><00:31:28.670><c> first</c><00:31:28.940><c> name</c><00:31:29.240><c> is</c><00:31:29.390><c> Ana</c>

00:31:29.620 --> 00:31:29.630 align:start position:0%
length remember our first name is Ana
 

00:31:29.630 --> 00:31:32.320 align:start position:0%
length remember our first name is Ana
here<00:31:30.080><c> and</c><00:31:30.260><c> then</c><00:31:30.590><c> dot</c><00:31:30.830><c> length</c><00:31:31.160><c> will</c><00:31:31.550><c> return</c><00:31:31.970><c> an</c>

00:31:32.320 --> 00:31:32.330 align:start position:0%
here and then dot length will return an
 

00:31:32.330 --> 00:31:34.420 align:start position:0%
here and then dot length will return an
integer<00:31:32.660><c> a</c><00:31:32.870><c> number</c><00:31:33.410><c> that</c><00:31:33.650><c> has</c><00:31:33.710><c> the</c><00:31:34.070><c> number</c><00:31:34.340><c> of</c>

00:31:34.420 --> 00:31:34.430 align:start position:0%
integer a number that has the number of
 

00:31:34.430 --> 00:31:36.610 align:start position:0%
integer a number that has the number of
characters<00:31:34.940><c> in</c><00:31:34.970><c> the</c><00:31:35.360><c> string</c><00:31:35.390><c> so</c><00:31:36.200><c> that</c><00:31:36.230><c> will</c><00:31:36.470><c> be</c>

00:31:36.610 --> 00:31:36.620 align:start position:0%
characters in the string so that will be
 

00:31:36.620 --> 00:31:39.250 align:start position:0%
characters in the string so that will be
three<00:31:37.010><c> so</c><00:31:37.820><c> let's</c><00:31:38.210><c> try</c><00:31:38.420><c> this</c><00:31:38.480><c> again</c><00:31:38.900><c> here's</c>

00:31:39.250 --> 00:31:39.260 align:start position:0%
three so let's try this again here's
 

00:31:39.260 --> 00:31:40.150 align:start position:0%
three so let's try this again here's
another<00:31:39.320><c> example</c>

00:31:40.150 --> 00:31:40.160 align:start position:0%
another example
 

00:31:40.160 --> 00:31:42.940 align:start position:0%
another example
last<00:31:40.610><c> name</c><00:31:40.880><c> length</c><00:31:41.180><c> equals</c><00:31:41.660><c> last</c><00:31:42.020><c> name</c><00:31:42.380><c> we</c>

00:31:42.940 --> 00:31:42.950 align:start position:0%
last name length equals last name we
 

00:31:42.950 --> 00:31:46.510 align:start position:0%
last name length equals last name we
just<00:31:42.980><c> have</c><00:31:43.280><c> to</c><00:31:43.400><c> type</c><00:31:43.640><c> in</c><00:31:43.880><c> dot</c><00:31:44.390><c> length</c><00:31:44.870><c> and</c><00:31:45.520><c> just</c>

00:31:46.510 --> 00:31:46.520 align:start position:0%
just have to type in dot length and just
 

00:31:46.520 --> 00:31:48.700 align:start position:0%
just have to type in dot length and just
to<00:31:46.670><c> show</c><00:31:46.880><c> you</c><00:31:46.940><c> let</c><00:31:47.270><c> me</c><00:31:47.540><c> console</c><00:31:48.050><c> that</c><00:31:48.170><c> log</c><00:31:48.410><c> that</c>

00:31:48.700 --> 00:31:48.710 align:start position:0%
to show you let me console that log that
 

00:31:48.710 --> 00:31:51.520 align:start position:0%
to show you let me console that log that
and<00:31:49.070><c> you'll</c><00:31:50.000><c> be</c><00:31:50.120><c> able</c><00:31:50.180><c> to</c><00:31:50.300><c> see</c><00:31:50.600><c> if</c><00:31:50.810><c> I</c><00:31:50.990><c> put</c><00:31:51.440><c> in</c>

00:31:51.520 --> 00:31:51.530 align:start position:0%
and you'll be able to see if I put in
 

00:31:51.530 --> 00:31:55.120 align:start position:0%
and you'll be able to see if I put in
last<00:31:51.800><c> name</c><00:31:52.160><c> length</c><00:31:52.660><c> and</c><00:31:53.660><c> if</c><00:31:53.960><c> I</c><00:31:54.170><c> run</c><00:31:55.100><c> that</c>

00:31:55.120 --> 00:31:55.130 align:start position:0%
last name length and if I run that
 

00:31:55.130 --> 00:31:57.610 align:start position:0%
last name length and if I run that
you'll<00:31:55.580><c> see</c><00:31:55.790><c> eight</c><00:31:56.080><c> because</c><00:31:57.080><c> there</c><00:31:57.290><c> are</c><00:31:57.410><c> eight</c>

00:31:57.610 --> 00:31:57.620 align:start position:0%
you'll see eight because there are eight
 

00:31:57.620 --> 00:32:04.030 align:start position:0%
you'll see eight because there are eight
characters<00:31:58.250><c> in</c><00:31:58.490><c> the</c><00:31:58.910><c> word</c><00:31:59.150><c> Lovelace</c>

00:32:04.030 --> 00:32:04.040 align:start position:0%
 
 

00:32:04.040 --> 00:32:06.770 align:start position:0%
 
bracket<00:32:05.040><c> notation</c><00:32:05.190><c> is</c><00:32:05.850><c> a</c><00:32:05.880><c> way</c><00:32:06.180><c> to</c><00:32:06.240><c> get</c><00:32:06.600><c> a</c>

00:32:06.770 --> 00:32:06.780 align:start position:0%
bracket notation is a way to get a
 

00:32:06.780 --> 00:32:09.170 align:start position:0%
bracket notation is a way to get a
character<00:32:07.440><c> at</c><00:32:07.620><c> a</c><00:32:07.650><c> specific</c><00:32:07.980><c> index</c><00:32:08.730><c> within</c><00:32:09.000><c> a</c>

00:32:09.170 --> 00:32:09.180 align:start position:0%
character at a specific index within a
 

00:32:09.180 --> 00:32:11.090 align:start position:0%
character at a specific index within a
string<00:32:09.540><c> so</c><00:32:10.320><c> you</c><00:32:10.350><c> can</c><00:32:10.530><c> see</c><00:32:10.650><c> right</c><00:32:10.770><c> here</c><00:32:10.830><c> we</c><00:32:11.070><c> have</c>

00:32:11.090 --> 00:32:11.100 align:start position:0%
string so you can see right here we have
 

00:32:11.100 --> 00:32:13.460 align:start position:0%
string so you can see right here we have
the<00:32:11.280><c> first</c><00:32:11.490><c> name</c><00:32:11.820><c> adda</c><00:32:12.120><c> and</c><00:32:12.510><c> right</c><00:32:13.110><c> here</c><00:32:13.320><c> we</c>

00:32:13.460 --> 00:32:13.470 align:start position:0%
the first name adda and right here we
 

00:32:13.470 --> 00:32:15.650 align:start position:0%
the first name adda and right here we
have<00:32:13.620><c> first</c><00:32:14.010><c> name</c><00:32:14.400><c> and</c><00:32:14.760><c> then</c><00:32:15.180><c> here's</c><00:32:15.480><c> the</c>

00:32:15.650 --> 00:32:15.660 align:start position:0%
have first name and then here's the
 

00:32:15.660 --> 00:32:17.810 align:start position:0%
have first name and then here's the
bracken<00:32:16.200><c> notation</c><00:32:16.800><c> you</c><00:32:17.280><c> can</c><00:32:17.460><c> see</c><00:32:17.610><c> there's</c>

00:32:17.810 --> 00:32:17.820 align:start position:0%
bracken notation you can see there's
 

00:32:17.820 --> 00:32:21.200 align:start position:0%
bracken notation you can see there's
brackets<00:32:18.330><c> with</c><00:32:18.510><c> a</c><00:32:18.540><c> number</c><00:32:19.020><c> inside</c><00:32:19.430><c> so</c><00:32:20.430><c> most</c>

00:32:21.200 --> 00:32:21.210 align:start position:0%
brackets with a number inside so most
 

00:32:21.210 --> 00:32:23.120 align:start position:0%
brackets with a number inside so most
modern<00:32:21.630><c> programming</c><00:32:21.930><c> languages</c><00:32:22.920><c> like</c>

00:32:23.120 --> 00:32:23.130 align:start position:0%
modern programming languages like
 

00:32:23.130 --> 00:32:26.300 align:start position:0%
modern programming languages like
JavaScript<00:32:24.060><c> don't</c><00:32:24.810><c> start</c><00:32:25.290><c> counting</c><00:32:25.620><c> at</c><00:32:26.010><c> one</c>

00:32:26.300 --> 00:32:26.310 align:start position:0%
JavaScript don't start counting at one
 

00:32:26.310 --> 00:32:29.630 align:start position:0%
JavaScript don't start counting at one
like<00:32:26.760><c> humans</c><00:32:27.240><c> do</c><00:32:27.450><c> they</c><00:32:28.110><c> start</c><00:32:28.500><c> at</c><00:32:28.590><c> zero</c><00:32:28.980><c> which</c>

00:32:29.630 --> 00:32:29.640 align:start position:0%
like humans do they start at zero which
 

00:32:29.640 --> 00:32:32.690 align:start position:0%
like humans do they start at zero which
is<00:32:29.820><c> called</c><00:32:30.090><c> zero-based</c><00:32:30.960><c> indexing</c><00:32:31.400><c> so</c><00:32:32.400><c> with</c>

00:32:32.690 --> 00:32:32.700 align:start position:0%
is called zero-based indexing so with
 

00:32:32.700 --> 00:32:35.570 align:start position:0%
is called zero-based indexing so with
the<00:32:32.880><c> number</c><00:32:33.270><c> zero</c><00:32:33.810><c> that</c><00:32:34.470><c> refers</c><00:32:34.920><c> to</c><00:32:34.950><c> the</c><00:32:35.400><c> in</c>

00:32:35.570 --> 00:32:35.580 align:start position:0%
the number zero that refers to the in
 

00:32:35.580 --> 00:32:38.300 align:start position:0%
the number zero that refers to the in
the<00:32:35.940><c> first</c><00:32:36.270><c> index</c><00:32:36.870><c> of</c><00:32:37.110><c> this</c><00:32:37.590><c> string</c><00:32:38.010><c> which</c>

00:32:38.300 --> 00:32:38.310 align:start position:0%
the first index of this string which
 

00:32:38.310 --> 00:32:41.570 align:start position:0%
the first index of this string which
would<00:32:38.490><c> be</c><00:32:38.580><c> the</c><00:32:38.730><c> a</c><00:32:38.760><c> so</c><00:32:39.660><c> the</c><00:32:39.930><c> a</c><00:32:40.110><c> would</c><00:32:40.380><c> be</c><00:32:40.530><c> zero</c><00:32:40.890><c> D</c>

00:32:41.570 --> 00:32:41.580 align:start position:0%
would be the a so the a would be zero D
 

00:32:41.580 --> 00:32:45.710 align:start position:0%
would be the a so the a would be zero D
is<00:32:41.760><c> one</c><00:32:42.120><c> and</c><00:32:42.510><c> then</c><00:32:42.960><c> a</c><00:32:43.110><c> is</c><00:32:43.530><c> two</c><00:32:44.040><c> so</c><00:32:44.790><c> this</c><00:32:45.360><c> first</c>

00:32:45.710 --> 00:32:45.720 align:start position:0%
is one and then a is two so this first
 

00:32:45.720 --> 00:32:48.590 align:start position:0%
is one and then a is two so this first
letter<00:32:46.110><c> of</c><00:32:46.200><c> first</c><00:32:46.590><c> name</c><00:32:46.950><c> if</c><00:32:47.310><c> we</c><00:32:47.790><c> do</c><00:32:47.940><c> first</c><00:32:48.300><c> name</c>

00:32:48.590 --> 00:32:48.600 align:start position:0%
letter of first name if we do first name
 

00:32:48.600 --> 00:32:50.840 align:start position:0%
letter of first name if we do first name
with<00:32:48.960><c> the</c><00:32:49.290><c> bracket</c><00:32:49.770><c> notation</c><00:32:49.890><c> with</c><00:32:50.400><c> a</c><00:32:50.430><c> zero</c>

00:32:50.840 --> 00:32:50.850 align:start position:0%
with the bracket notation with a zero
 

00:32:50.850 --> 00:32:54.530 align:start position:0%
with the bracket notation with a zero
that's<00:32:51.540><c> gonna</c><00:32:51.750><c> equal</c><00:32:52.020><c> a</c><00:32:52.820><c> so</c><00:32:53.820><c> let</c><00:32:54.180><c> me</c><00:32:54.270><c> show</c><00:32:54.480><c> you</c>

00:32:54.530 --> 00:32:54.540 align:start position:0%
that's gonna equal a so let me show you
 

00:32:54.540 --> 00:32:57.410 align:start position:0%
that's gonna equal a so let me show you
another<00:32:54.750><c> example</c><00:32:55.220><c> let's</c><00:32:56.220><c> say</c><00:32:56.430><c> we</c><00:32:56.580><c> want</c><00:32:56.850><c> to</c><00:32:56.910><c> get</c>

00:32:57.410 --> 00:32:57.420 align:start position:0%
another example let's say we want to get
 

00:32:57.420 --> 00:33:01.490 align:start position:0%
another example let's say we want to get
the<00:32:58.230><c> first</c><00:32:59.100><c> letter</c><00:32:59.460><c> of</c><00:32:59.700><c> the</c><00:32:59.790><c> last</c><00:33:00.630><c> name</c><00:33:00.960><c> again</c>

00:33:01.490 --> 00:33:01.500 align:start position:0%
the first letter of the last name again
 

00:33:01.500 --> 00:33:03.260 align:start position:0%
the first letter of the last name again
I'm<00:33:02.010><c> just</c><00:33:02.220><c> gonna</c><00:33:02.310><c> do</c><00:33:02.640><c> the</c><00:33:02.790><c> bracket</c><00:33:03.180><c> notation</c>

00:33:03.260 --> 00:33:03.270 align:start position:0%
I'm just gonna do the bracket notation
 

00:33:03.270 --> 00:33:06.830 align:start position:0%
I'm just gonna do the bracket notation
and<00:33:03.900><c> put</c><00:33:04.200><c> a</c><00:33:04.470><c> zero</c><00:33:05.040><c> here</c><00:33:05.130><c> if</c><00:33:05.730><c> I</c><00:33:06.300><c> wanted</c><00:33:06.630><c> the</c>

00:33:06.830 --> 00:33:06.840 align:start position:0%
and put a zero here if I wanted the
 

00:33:06.840 --> 00:33:10.340 align:start position:0%
and put a zero here if I wanted the
second<00:33:07.500><c> letter</c><00:33:07.770><c> the</c><00:33:08.310><c> oh</c><00:33:08.610><c> I</c><00:33:08.940><c> will</c><00:33:09.330><c> put</c><00:33:09.540><c> a</c><00:33:09.570><c> 1</c><00:33:09.630><c> here</c>

00:33:10.340 --> 00:33:10.350 align:start position:0%
second letter the oh I will put a 1 here
 

00:33:10.350 --> 00:33:13.910 align:start position:0%
second letter the oh I will put a 1 here
so<00:33:10.530><c> if</c><00:33:11.310><c> I</c><00:33:11.430><c> console</c><00:33:12.150><c> that</c><00:33:12.270><c> log</c><00:33:12.570><c> we</c><00:33:12.900><c> can</c><00:33:13.080><c> see</c><00:33:13.350><c> what</c>

00:33:13.910 --> 00:33:13.920 align:start position:0%
so if I console that log we can see what
 

00:33:13.920 --> 00:33:16.570 align:start position:0%
so if I console that log we can see what
it<00:33:14.040><c> came</c><00:33:14.370><c> up</c><00:33:14.550><c> with</c><00:33:14.760><c> so</c><00:33:14.940><c> console</c><00:33:15.390><c> that</c><00:33:15.540><c> log</c>

00:33:16.570 --> 00:33:16.580 align:start position:0%
it came up with so console that log
 

00:33:16.580 --> 00:33:20.960 align:start position:0%
it came up with so console that log
first<00:33:17.580><c> letter</c><00:33:18.360><c> of</c><00:33:18.660><c> last</c><00:33:18.990><c> name</c><00:33:19.410><c> and</c><00:33:19.920><c> if</c><00:33:20.550><c> we</c><00:33:20.670><c> look</c>

00:33:20.960 --> 00:33:20.970 align:start position:0%
first letter of last name and if we look
 

00:33:20.970 --> 00:33:23.660 align:start position:0%
first letter of last name and if we look
in<00:33:21.210><c> the</c><00:33:21.360><c> console</c><00:33:21.930><c> l</c><00:33:22.500><c> because</c><00:33:23.220><c> the</c><00:33:23.400><c> first</c>

00:33:23.660 --> 00:33:23.670 align:start position:0%
in the console l because the first
 

00:33:23.670 --> 00:33:29.789 align:start position:0%
in the console l because the first
letter<00:33:23.910><c> of</c><00:33:23.970><c> the</c><00:33:24.090><c> last</c><00:33:24.240><c> name</c><00:33:24.540><c> is</c><00:33:25.020><c> L</c>

00:33:29.789 --> 00:33:29.799 align:start position:0%
 
 

00:33:29.799 --> 00:33:32.710 align:start position:0%
 
strings<00:33:30.799><c> are</c><00:33:31.100><c> immutable</c><00:33:31.570><c> meaning</c><00:33:32.570><c> they</c>

00:33:32.710 --> 00:33:32.720 align:start position:0%
strings are immutable meaning they
 

00:33:32.720 --> 00:33:36.609 align:start position:0%
strings are immutable meaning they
cannot<00:33:33.200><c> be</c><00:33:33.409><c> altered</c><00:33:33.980><c> once</c><00:33:34.610><c> created</c><00:33:35.320><c> this</c><00:33:36.320><c> does</c>

00:33:36.609 --> 00:33:36.619 align:start position:0%
cannot be altered once created this does
 

00:33:36.619 --> 00:33:38.440 align:start position:0%
cannot be altered once created this does
not<00:33:36.799><c> mean</c><00:33:37.159><c> that</c><00:33:37.190><c> they</c><00:33:37.879><c> cannot</c><00:33:38.210><c> be</c><00:33:38.419><c> changed</c>

00:33:38.440 --> 00:33:38.450 align:start position:0%
not mean that they cannot be changed
 

00:33:38.450 --> 00:33:41.529 align:start position:0%
not mean that they cannot be changed
just<00:33:39.440><c> that</c><00:33:39.919><c> the</c><00:33:40.039><c> individual</c><00:33:40.700><c> characters</c><00:33:41.299><c> of</c><00:33:41.450><c> a</c>

00:33:41.529 --> 00:33:41.539 align:start position:0%
just that the individual characters of a
 

00:33:41.539 --> 00:33:44.289 align:start position:0%
just that the individual characters of a
string<00:33:41.570><c> literal</c><00:33:42.230><c> cannot</c><00:33:42.830><c> be</c><00:33:42.980><c> changed</c><00:33:43.279><c> so</c><00:33:44.090><c> look</c>

00:33:44.289 --> 00:33:44.299 align:start position:0%
string literal cannot be changed so look
 

00:33:44.299 --> 00:33:46.659 align:start position:0%
string literal cannot be changed so look
at<00:33:44.419><c> this</c><00:33:44.570><c> example</c><00:33:44.960><c> my</c><00:33:45.649><c> string</c><00:33:46.070><c> and</c><00:33:46.279><c> then</c><00:33:46.399><c> we're</c>

00:33:46.659 --> 00:33:46.669 align:start position:0%
at this example my string and then we're
 

00:33:46.669 --> 00:33:48.999 align:start position:0%
at this example my string and then we're
going<00:33:46.879><c> to</c><00:33:47.149><c> use</c><00:33:47.360><c> bracket</c><00:33:47.960><c> notation</c><00:33:48.110><c> to</c><00:33:48.739><c> choose</c>

00:33:48.999 --> 00:33:49.009 align:start position:0%
going to use bracket notation to choose
 

00:33:49.009 --> 00:33:51.519 align:start position:0%
going to use bracket notation to choose
the<00:33:49.220><c> first</c><00:33:49.519><c> letter</c><00:33:49.820><c> so</c><00:33:50.600><c> it</c><00:33:50.869><c> currently</c><00:33:51.320><c> says</c>

00:33:51.519 --> 00:33:51.529 align:start position:0%
the first letter so it currently says
 

00:33:51.529 --> 00:33:53.889 align:start position:0%
the first letter so it currently says
jello<00:33:52.129><c> world</c><00:33:52.399><c> we</c><00:33:52.999><c> want</c><00:33:53.239><c> the</c><00:33:53.360><c> first</c><00:33:53.600><c> letter</c><00:33:53.809><c> to</c>

00:33:53.889 --> 00:33:53.899 align:start position:0%
jello world we want the first letter to
 

00:33:53.899 --> 00:33:57.159 align:start position:0%
jello world we want the first letter to
change<00:33:54.320><c> to</c><00:33:54.559><c> an</c><00:33:54.679><c> H</c><00:33:54.919><c> to</c><00:33:55.489><c> say</c><00:33:55.669><c> hello</c><00:33:56.029><c> world</c><00:33:56.360><c> but</c><00:33:57.080><c> if</c>

00:33:57.159 --> 00:33:57.169 align:start position:0%
change to an H to say hello world but if
 

00:33:57.169 --> 00:33:59.169 align:start position:0%
change to an H to say hello world but if
I<00:33:57.259><c> run</c><00:33:57.529><c> that</c><00:33:57.590><c> there's</c><00:33:58.070><c> going</c><00:33:58.340><c> to</c><00:33:58.429><c> be</c><00:33:58.549><c> an</c><00:33:58.730><c> error</c>

00:33:59.169 --> 00:33:59.179 align:start position:0%
I run that there's going to be an error
 

00:33:59.179 --> 00:34:02.039 align:start position:0%
I run that there's going to be an error
because<00:34:00.110><c> of</c><00:34:00.289><c> the</c><00:34:00.440><c> immutability</c><00:34:01.070><c> of</c><00:34:01.369><c> strings</c>

00:34:02.039 --> 00:34:02.049 align:start position:0%
because of the immutability of strings
 

00:34:02.049 --> 00:34:04.659 align:start position:0%
because of the immutability of strings
now<00:34:03.049><c> we</c><00:34:03.109><c> can</c><00:34:03.409><c> still</c><00:34:03.649><c> change</c><00:34:04.039><c> this</c><00:34:04.429><c> to</c><00:34:04.639><c> hello</c>

00:34:04.659 --> 00:34:04.669 align:start position:0%
now we can still change this to hello
 

00:34:04.669 --> 00:34:06.789 align:start position:0%
now we can still change this to hello
world<00:34:04.940><c> but</c><00:34:05.749><c> we</c><00:34:05.809><c> can't</c><00:34:06.109><c> just</c><00:34:06.320><c> change</c><00:34:06.590><c> an</c>

00:34:06.789 --> 00:34:06.799 align:start position:0%
world but we can't just change an
 

00:34:06.799 --> 00:34:09.399 align:start position:0%
world but we can't just change an
individual<00:34:07.549><c> letter</c><00:34:07.970><c> like</c><00:34:08.210><c> that</c><00:34:08.240><c> so</c><00:34:09.139><c> we're</c>

00:34:09.399 --> 00:34:09.409 align:start position:0%
individual letter like that so we're
 

00:34:09.409 --> 00:34:12.309 align:start position:0%
individual letter like that so we're
gonna<00:34:09.559><c> have</c><00:34:09.859><c> to</c><00:34:10.010><c> do</c><00:34:10.159><c> my</c><00:34:10.520><c> string</c><00:34:11.020><c> equals</c><00:34:12.020><c> and</c>

00:34:12.309 --> 00:34:12.319 align:start position:0%
gonna have to do my string equals and
 

00:34:12.319 --> 00:34:13.809 align:start position:0%
gonna have to do my string equals and
I'm<00:34:12.649><c> just</c><00:34:12.799><c> gonna</c><00:34:12.980><c> have</c><00:34:13.099><c> to</c><00:34:13.159><c> type</c><00:34:13.369><c> in</c><00:34:13.549><c> the</c><00:34:13.579><c> whole</c>

00:34:13.809 --> 00:34:13.819 align:start position:0%
I'm just gonna have to type in the whole
 

00:34:13.819 --> 00:34:19.240 align:start position:0%
I'm just gonna have to type in the whole
thing<00:34:14.149><c> which</c><00:34:14.990><c> is</c><00:34:15.200><c> hello</c><00:34:15.950><c> world</c><00:34:16.609><c> and</c><00:34:17.169><c> now</c><00:34:18.169><c> it</c><00:34:18.919><c> we</c>

00:34:19.240 --> 00:34:19.250 align:start position:0%
thing which is hello world and now it we
 

00:34:19.250 --> 00:34:25.680 align:start position:0%
thing which is hello world and now it we
will<00:34:20.210><c> change</c><00:34:20.629><c> to</c><00:34:20.929><c> the</c><00:34:21.020><c> word</c><00:34:21.169><c> hello</c><00:34:21.470><c> world</c>

00:34:25.680 --> 00:34:25.690 align:start position:0%
 
 

00:34:25.690 --> 00:34:29.020 align:start position:0%
 
you<00:34:26.690><c> can</c><00:34:26.870><c> use</c><00:34:27.020><c> bracket</c><00:34:27.560><c> notation</c><00:34:27.679><c> to</c><00:34:28.490><c> get</c><00:34:28.790><c> any</c>

00:34:29.020 --> 00:34:29.030 align:start position:0%
you can use bracket notation to get any
 

00:34:29.030 --> 00:34:31.540 align:start position:0%
you can use bracket notation to get any
character<00:34:29.630><c> position</c><00:34:29.990><c> in</c><00:34:30.320><c> a</c><00:34:30.440><c> string</c><00:34:30.800><c> so</c>

00:34:31.540 --> 00:34:31.550 align:start position:0%
character position in a string so
 

00:34:31.550 --> 00:34:33.909 align:start position:0%
character position in a string so
earlier<00:34:32.060><c> we</c><00:34:32.300><c> did</c><00:34:32.540><c> the</c><00:34:32.690><c> first</c><00:34:32.990><c> position</c><00:34:33.679><c> but</c>

00:34:33.909 --> 00:34:33.919 align:start position:0%
earlier we did the first position but
 

00:34:33.919 --> 00:34:35.800 align:start position:0%
earlier we did the first position but
here's<00:34:34.520><c> how</c><00:34:34.700><c> you</c><00:34:34.760><c> would</c><00:34:34.940><c> get</c><00:34:35.120><c> the</c><00:34:35.300><c> second</c>

00:34:35.800 --> 00:34:35.810 align:start position:0%
here's how you would get the second
 

00:34:35.810 --> 00:34:36.490 align:start position:0%
here's how you would get the second
position

00:34:36.490 --> 00:34:36.500 align:start position:0%
position
 

00:34:36.500 --> 00:34:39.130 align:start position:0%
position
remember<00:34:36.980><c> the</c><00:34:37.130><c> zero</c><00:34:37.429><c> index</c><00:34:37.730><c> so</c><00:34:38.330><c> one</c><00:34:38.780><c> is</c><00:34:38.990><c> the</c>

00:34:39.130 --> 00:34:39.140 align:start position:0%
remember the zero index so one is the
 

00:34:39.140 --> 00:34:40.990 align:start position:0%
remember the zero index so one is the
second<00:34:39.530><c> position</c><00:34:40.010><c> zero</c><00:34:40.370><c> is</c><00:34:40.580><c> the</c><00:34:40.700><c> first</c>

00:34:40.990 --> 00:34:41.000 align:start position:0%
second position zero is the first
 

00:34:41.000 --> 00:34:43.690 align:start position:0%
second position zero is the first
position<00:34:41.240><c> we</c><00:34:42.169><c> can</c><00:34:42.380><c> also</c><00:34:42.620><c> get</c><00:34:42.980><c> the</c><00:34:43.220><c> third</c>

00:34:43.690 --> 00:34:43.700 align:start position:0%
position we can also get the third
 

00:34:43.700 --> 00:34:45.790 align:start position:0%
position we can also get the third
letter<00:34:44.060><c> of</c><00:34:44.240><c> the</c><00:34:44.360><c> last</c><00:34:44.570><c> name</c><00:34:44.929><c> using</c><00:34:45.649><c> the</c>

00:34:45.790 --> 00:34:45.800 align:start position:0%
letter of the last name using the
 

00:34:45.800 --> 00:34:47.680 align:start position:0%
letter of the last name using the
brackets<00:34:46.399><c> we'll</c><00:34:46.700><c> just</c><00:34:46.880><c> put</c><00:34:47.060><c> two</c><00:34:47.390><c> in</c><00:34:47.570><c> the</c>

00:34:47.680 --> 00:34:47.690 align:start position:0%
brackets we'll just put two in the
 

00:34:47.690 --> 00:34:49.930 align:start position:0%
brackets we'll just put two in the
brackets<00:34:48.140><c> to</c><00:34:48.590><c> get</c><00:34:48.770><c> the</c><00:34:49.010><c> third</c><00:34:49.340><c> letter</c><00:34:49.610><c> of</c><00:34:49.700><c> the</c>

00:34:49.930 --> 00:34:49.940 align:start position:0%
brackets to get the third letter of the
 

00:34:49.940 --> 00:34:54.050 align:start position:0%
brackets to get the third letter of the
last<00:34:50.120><c> name</c>

00:34:54.050 --> 00:34:54.060 align:start position:0%
 
 

00:34:54.060 --> 00:34:56.600 align:start position:0%
 
you<00:34:54.840><c> can</c><00:34:55.020><c> also</c><00:34:55.200><c> use</c><00:34:55.440><c> bracket</c><00:34:55.890><c> notation</c><00:34:56.010><c> to</c>

00:34:56.600 --> 00:34:56.610 align:start position:0%
you can also use bracket notation to
 

00:34:56.610 --> 00:34:59.360 align:start position:0%
you can also use bracket notation to
find<00:34:56.880><c> the</c><00:34:57.090><c> last</c><00:34:57.420><c> letter</c><00:34:57.840><c> in</c><00:34:57.990><c> a</c><00:34:58.080><c> string</c><00:34:58.410><c> even</c><00:34:59.040><c> if</c>

00:34:59.360 --> 00:34:59.370 align:start position:0%
find the last letter in a string even if
 

00:34:59.370 --> 00:35:01.160 align:start position:0%
find the last letter in a string even if
you<00:34:59.490><c> don't</c><00:34:59.700><c> know</c><00:34:59.880><c> how</c><00:35:00.120><c> many</c><00:35:00.180><c> letters</c><00:35:00.840><c> are</c><00:35:01.110><c> on</c>

00:35:01.160 --> 00:35:01.170 align:start position:0%
you don't know how many letters are on
 

00:35:01.170 --> 00:35:04.160 align:start position:0%
you don't know how many letters are on
the<00:35:01.350><c> string</c><00:35:01.710><c> you</c><00:35:02.010><c> do</c><00:35:02.700><c> it</c><00:35:02.880><c> based</c><00:35:03.240><c> on</c><00:35:03.510><c> the</c><00:35:03.570><c> length</c>

00:35:04.160 --> 00:35:04.170 align:start position:0%
the string you do it based on the length
 

00:35:04.170 --> 00:35:06.530 align:start position:0%
the string you do it based on the length
so<00:35:04.860><c> if</c><00:35:04.980><c> you</c><00:35:05.070><c> look</c><00:35:05.310><c> right</c><00:35:05.460><c> here</c><00:35:05.520><c> in</c><00:35:06.000><c> the</c>

00:35:06.530 --> 00:35:06.540 align:start position:0%
so if you look right here in the
 

00:35:06.540 --> 00:35:09.170 align:start position:0%
so if you look right here in the
brackets<00:35:07.170><c> we</c><00:35:07.380><c> have</c><00:35:07.410><c> a</c><00:35:08.040><c> expression</c><00:35:08.850><c> to</c><00:35:09.150><c> be</c>

00:35:09.170 --> 00:35:09.180 align:start position:0%
brackets we have a expression to be
 

00:35:09.180 --> 00:35:12.680 align:start position:0%
brackets we have a expression to be
evaluated<00:35:09.740><c> first</c><00:35:10.740><c> name</c><00:35:11.040><c> dot</c><00:35:11.280><c> length</c><00:35:11.690><c> minus</c>

00:35:12.680 --> 00:35:12.690 align:start position:0%
evaluated first name dot length minus
 

00:35:12.690 --> 00:35:17.590 align:start position:0%
evaluated first name dot length minus
one<00:35:13.110><c> so</c><00:35:13.830><c> the</c><00:35:14.040><c> length</c><00:35:14.340><c> is</c><00:35:14.550><c> 3</c><00:35:14.840><c> 3</c><00:35:15.840><c> minus</c><00:35:16.560><c> 1</c><00:35:16.920><c> is</c><00:35:17.220><c> 2</c>

00:35:17.590 --> 00:35:17.600 align:start position:0%
one so the length is 3 3 minus 1 is 2
 

00:35:17.600 --> 00:35:20.330 align:start position:0%
one so the length is 3 3 minus 1 is 2
the<00:35:18.600><c> reason</c><00:35:18.930><c> why</c><00:35:19.020><c> we're</c><00:35:19.170><c> doing</c><00:35:19.200><c> a</c><00:35:19.440><c> minus</c><00:35:19.740><c> 1</c><00:35:20.070><c> is</c>

00:35:20.330 --> 00:35:20.340 align:start position:0%
the reason why we're doing a minus 1 is
 

00:35:20.340 --> 00:35:22.760 align:start position:0%
the reason why we're doing a minus 1 is
because<00:35:20.610><c> remember</c><00:35:20.910><c> we</c><00:35:21.390><c> count</c><00:35:21.750><c> starting</c><00:35:22.230><c> at</c><00:35:22.380><c> 0</c>

00:35:22.760 --> 00:35:22.770 align:start position:0%
because remember we count starting at 0
 

00:35:22.770 --> 00:35:25.820 align:start position:0%
because remember we count starting at 0
so<00:35:23.460><c> the</c><00:35:23.760><c> length</c><00:35:24.060><c> minus</c><00:35:24.300><c> 1</c><00:35:24.780><c> is</c><00:35:24.990><c> going</c><00:35:25.140><c> to</c><00:35:25.290><c> be</c><00:35:25.440><c> the</c>

00:35:25.820 --> 00:35:25.830 align:start position:0%
so the length minus 1 is going to be the
 

00:35:25.830 --> 00:35:28.970 align:start position:0%
so the length minus 1 is going to be the
last<00:35:26.160><c> index</c><00:35:26.820><c> of</c><00:35:27.060><c> the</c><00:35:27.510><c> name</c><00:35:27.780><c> so</c><00:35:28.470><c> we</c><00:35:28.500><c> can</c><00:35:28.620><c> do</c><00:35:28.830><c> that</c>

00:35:28.970 --> 00:35:28.980 align:start position:0%
last index of the name so we can do that
 

00:35:28.980 --> 00:35:31.550 align:start position:0%
last index of the name so we can do that
same<00:35:29.250><c> thing</c><00:35:29.640><c> here</c><00:35:30.150><c> to</c><00:35:30.720><c> get</c><00:35:30.900><c> the</c><00:35:31.020><c> last</c><00:35:31.230><c> letter</c>

00:35:31.550 --> 00:35:31.560 align:start position:0%
same thing here to get the last letter
 

00:35:31.560 --> 00:35:36.610 align:start position:0%
same thing here to get the last letter
of<00:35:31.680><c> the</c><00:35:31.860><c> last</c><00:35:32.250><c> name</c><00:35:32.640><c> I</c><00:35:32.940><c> can</c><00:35:33.540><c> just</c><00:35:33.750><c> do</c><00:35:34.020><c> last</c><00:35:34.830><c> name</c>

00:35:36.610 --> 00:35:36.620 align:start position:0%
of the last name I can just do last name
 

00:35:36.620 --> 00:35:43.730 align:start position:0%
of the last name I can just do last name
dot<00:35:37.620><c> length</c><00:35:39.530><c> minus</c><00:35:40.530><c> 1</c><00:35:41.370><c> and</c><00:35:42.260><c> that's</c><00:35:43.260><c> going</c><00:35:43.620><c> to</c>

00:35:43.730 --> 00:35:43.740 align:start position:0%
dot length minus 1 and that's going to
 

00:35:43.740 --> 00:35:45.770 align:start position:0%
dot length minus 1 and that's going to
get<00:35:43.890><c> the</c><00:35:44.100><c> last</c><00:35:44.400><c> letter</c><00:35:45.000><c> of</c><00:35:45.120><c> the</c><00:35:45.210><c> last</c><00:35:45.450><c> name</c>

00:35:45.770 --> 00:35:45.780 align:start position:0%
get the last letter of the last name
 

00:35:45.780 --> 00:35:51.070 align:start position:0%
get the last letter of the last name
which<00:35:46.020><c> is</c><00:35:46.200><c> the</c><00:35:46.380><c> e</c><00:35:46.410><c> right</c><00:35:46.830><c> here</c>

00:35:51.070 --> 00:35:51.080 align:start position:0%
 
 

00:35:51.080 --> 00:35:53.800 align:start position:0%
 
we<00:35:51.830><c> saw</c><00:35:52.040><c> how</c><00:35:52.250><c> to</c><00:35:52.280><c> use</c><00:35:52.430><c> bracket</c><00:35:53.030><c> notation</c><00:35:53.150><c> to</c>

00:35:53.800 --> 00:35:53.810 align:start position:0%
we saw how to use bracket notation to
 

00:35:53.810 --> 00:35:56.050 align:start position:0%
we saw how to use bracket notation to
get<00:35:53.990><c> the</c><00:35:54.200><c> last</c><00:35:54.470><c> letter</c><00:35:54.830><c> of</c><00:35:54.920><c> a</c><00:35:55.010><c> string</c><00:35:55.370><c> you</c><00:35:56.030><c> can</c>

00:35:56.050 --> 00:35:56.060 align:start position:0%
get the last letter of a string you can
 

00:35:56.060 --> 00:35:58.420 align:start position:0%
get the last letter of a string you can
also<00:35:56.330><c> do</c><00:35:56.780><c> the</c><00:35:57.230><c> third</c><00:35:57.530><c> to</c><00:35:57.710><c> last</c><00:35:57.740><c> letter</c><00:35:58.190><c> or</c>

00:35:58.420 --> 00:35:58.430 align:start position:0%
also do the third to last letter or
 

00:35:58.430 --> 00:35:59.950 align:start position:0%
also do the third to last letter or
fourth<00:35:58.940><c> to</c><00:35:59.150><c> last</c><00:35:59.360><c> letter</c>

00:35:59.950 --> 00:35:59.960 align:start position:0%
fourth to last letter
 

00:35:59.960 --> 00:36:02.530 align:start position:0%
fourth to last letter
so<00:36:00.380><c> you</c><00:36:00.440><c> just</c><00:36:00.890><c> subtract</c><00:36:01.580><c> however</c><00:36:02.150><c> much</c><00:36:02.390><c> you</c>

00:36:02.530 --> 00:36:02.540 align:start position:0%
so you just subtract however much you
 

00:36:02.540 --> 00:36:05.080 align:start position:0%
so you just subtract however much you
want<00:36:02.840><c> from</c><00:36:03.230><c> the</c><00:36:03.530><c> for</c><00:36:03.980><c> the</c><00:36:04.190><c> the</c><00:36:04.550><c> length</c><00:36:04.790><c> of</c><00:36:05.000><c> the</c>

00:36:05.080 --> 00:36:05.090 align:start position:0%
want from the for the the length of the
 

00:36:05.090 --> 00:36:07.420 align:start position:0%
want from the for the the length of the
string<00:36:05.420><c> so</c><00:36:06.140><c> we</c><00:36:06.800><c> have</c><00:36:06.920><c> the</c><00:36:07.040><c> bracket</c><00:36:07.400><c> notation</c>

00:36:07.420 --> 00:36:07.430 align:start position:0%
string so we have the bracket notation
 

00:36:07.430 --> 00:36:09.880 align:start position:0%
string so we have the bracket notation
first<00:36:08.210><c> name</c><00:36:08.390><c> that</c><00:36:08.420><c> length</c><00:36:08.870><c> minus</c><00:36:09.470><c> three</c>

00:36:09.880 --> 00:36:09.890 align:start position:0%
first name that length minus three
 

00:36:09.890 --> 00:36:12.070 align:start position:0%
first name that length minus three
that's<00:36:10.460><c> going</c><00:36:10.790><c> to</c><00:36:10.850><c> get</c><00:36:11.060><c> the</c><00:36:11.270><c> third</c><00:36:11.630><c> to</c><00:36:11.870><c> last</c>

00:36:12.070 --> 00:36:12.080 align:start position:0%
that's going to get the third to last
 

00:36:12.080 --> 00:36:14.830 align:start position:0%
that's going to get the third to last
letter<00:36:12.410><c> so</c><00:36:13.070><c> we</c><00:36:13.340><c> want</c><00:36:13.610><c> the</c><00:36:13.840><c> second-to-last</c>

00:36:14.830 --> 00:36:14.840 align:start position:0%
letter so we want the second-to-last
 

00:36:14.840 --> 00:36:17.800 align:start position:0%
letter so we want the second-to-last
letter<00:36:15.410><c> into</c><00:36:15.950><c> this</c><00:36:16.070><c> variable</c><00:36:16.460><c> here</c><00:36:16.970><c> we</c><00:36:17.570><c> do</c>

00:36:17.800 --> 00:36:17.810 align:start position:0%
letter into this variable here we do
 

00:36:17.810 --> 00:36:20.410 align:start position:0%
letter into this variable here we do
something<00:36:18.110><c> similar</c><00:36:18.410><c> we</c><00:36:19.070><c> just</c><00:36:19.370><c> do</c><00:36:19.550><c> last</c><00:36:19.940><c> name</c>

00:36:20.410 --> 00:36:20.420 align:start position:0%
something similar we just do last name
 

00:36:20.420 --> 00:36:23.770 align:start position:0%
something similar we just do last name
dot<00:36:20.870><c> length</c><00:36:21.290><c> and</c><00:36:21.680><c> then</c><00:36:22.640><c> we're</c><00:36:22.880><c> gonna</c><00:36:23.060><c> subtract</c>

00:36:23.770 --> 00:36:23.780 align:start position:0%
dot length and then we're gonna subtract
 

00:36:23.780 --> 00:36:27.100 align:start position:0%
dot length and then we're gonna subtract
two<00:36:24.260><c> to</c><00:36:24.530><c> get</c><00:36:24.650><c> the</c><00:36:24.800><c> second</c><00:36:25.370><c> to</c><00:36:25.610><c> last</c><00:36:26.110><c> character</c>

00:36:27.100 --> 00:36:27.110 align:start position:0%
two to get the second to last character
 

00:36:27.110 --> 00:36:31.260 align:start position:0%
two to get the second to last character
of<00:36:27.140><c> the</c><00:36:27.230><c> string</c>

00:36:31.260 --> 00:36:31.270 align:start position:0%
 
 

00:36:31.270 --> 00:36:33.780 align:start position:0%
 
we<00:36:32.140><c> are</c><00:36:32.260><c> going</c><00:36:32.530><c> to</c><00:36:32.650><c> use</c><00:36:32.950><c> our</c><00:36:33.160><c> knowledge</c><00:36:33.400><c> of</c>

00:36:33.780 --> 00:36:33.790 align:start position:0%
we are going to use our knowledge of
 

00:36:33.790 --> 00:36:36.900 align:start position:0%
we are going to use our knowledge of
strings<00:36:34.300><c> to</c><00:36:34.660><c> build</c><00:36:35.080><c> a</c><00:36:35.230><c> mad</c><00:36:35.619><c> libs</c><00:36:35.980><c> style</c><00:36:36.550><c> word</c>

00:36:36.900 --> 00:36:36.910 align:start position:0%
strings to build a mad libs style word
 

00:36:36.910 --> 00:36:39.750 align:start position:0%
strings to build a mad libs style word
game<00:36:37.210><c> in</c><00:36:37.510><c> a</c><00:36:38.109><c> mad</c><00:36:38.320><c> lib</c><00:36:38.530><c> game</c><00:36:38.770><c> you</c><00:36:39.130><c> are</c><00:36:39.280><c> provided</c>

00:36:39.750 --> 00:36:39.760 align:start position:0%
game in a mad lib game you are provided
 

00:36:39.760 --> 00:36:42.359 align:start position:0%
game in a mad lib game you are provided
sentences<00:36:40.390><c> with</c><00:36:40.599><c> some</c><00:36:40.900><c> missing</c><00:36:41.290><c> words</c><00:36:41.619><c> like</c>

00:36:42.359 --> 00:36:42.369 align:start position:0%
sentences with some missing words like
 

00:36:42.369 --> 00:36:45.329 align:start position:0%
sentences with some missing words like
nouns<00:36:42.820><c> verbs</c><00:36:43.260><c> adjectives</c><00:36:44.260><c> and</c><00:36:44.470><c> adverbs</c><00:36:44.619><c> and</c>

00:36:45.329 --> 00:36:45.339 align:start position:0%
nouns verbs adjectives and adverbs and
 

00:36:45.339 --> 00:36:47.700 align:start position:0%
nouns verbs adjectives and adverbs and
then<00:36:45.910><c> you</c><00:36:46.000><c> fill</c><00:36:46.330><c> in</c><00:36:46.510><c> the</c><00:36:46.540><c> missing</c><00:36:46.810><c> pieces</c><00:36:47.230><c> with</c>

00:36:47.700 --> 00:36:47.710 align:start position:0%
then you fill in the missing pieces with
 

00:36:47.710 --> 00:36:50.460 align:start position:0%
then you fill in the missing pieces with
words<00:36:47.980><c> of</c><00:36:48.099><c> your</c><00:36:48.220><c> choice</c><00:36:48.550><c> to</c><00:36:49.270><c> make</c><00:36:49.300><c> a</c><00:36:49.869><c> sentence</c>

00:36:50.460 --> 00:36:50.470 align:start position:0%
words of your choice to make a sentence
 

00:36:50.470 --> 00:36:52.320 align:start position:0%
words of your choice to make a sentence
that<00:36:50.589><c> could</c><00:36:50.920><c> be</c><00:36:51.040><c> funny</c><00:36:51.339><c> and</c><00:36:51.580><c> hopefully</c><00:36:52.119><c> makes</c>

00:36:52.320 --> 00:36:52.330 align:start position:0%
that could be funny and hopefully makes
 

00:36:52.330 --> 00:36:55.020 align:start position:0%
that could be funny and hopefully makes
a<00:36:52.450><c> little</c><00:36:52.690><c> bit</c><00:36:52.839><c> of</c><00:36:52.930><c> sense</c><00:36:53.200><c> so</c><00:36:54.070><c> let</c><00:36:54.730><c> me</c><00:36:54.820><c> show</c><00:36:55.000><c> you</c>

00:36:55.020 --> 00:36:55.030 align:start position:0%
a little bit of sense so let me show you
 

00:36:55.030 --> 00:36:56.220 align:start position:0%
a little bit of sense so let me show you
how<00:36:55.240><c> you</c><00:36:55.300><c> do</c><00:36:55.510><c> this</c>

00:36:56.220 --> 00:36:56.230 align:start position:0%
how you do this
 

00:36:56.230 --> 00:36:59.970 align:start position:0%
how you do this
um<00:36:56.440><c> this</c><00:36:57.040><c> also</c><00:36:57.339><c> uses</c><00:36:57.880><c> a</c><00:36:58.270><c> function</c><00:36:58.930><c> now</c><00:36:59.920><c> we</c>

00:36:59.970 --> 00:36:59.980 align:start position:0%
um this also uses a function now we
 

00:36:59.980 --> 00:37:02.640 align:start position:0%
um this also uses a function now we
haven't<00:37:00.460><c> talked</c><00:37:01.060><c> about</c><00:37:01.210><c> functions</c><00:37:02.020><c> yet</c><00:37:02.320><c> I'm</c>

00:37:02.640 --> 00:37:02.650 align:start position:0%
haven't talked about functions yet I'm
 

00:37:02.650 --> 00:37:05.790 align:start position:0%
haven't talked about functions yet I'm
gonna<00:37:03.190><c> explain</c><00:37:03.730><c> those</c><00:37:04.089><c> more</c><00:37:05.020><c> later</c><00:37:05.410><c> but</c>

00:37:05.790 --> 00:37:05.800 align:start position:0%
gonna explain those more later but
 

00:37:05.800 --> 00:37:07.740 align:start position:0%
gonna explain those more later but
format<00:37:06.460><c> for</c><00:37:06.700><c> now</c><00:37:06.820><c> just</c><00:37:07.000><c> go</c><00:37:07.270><c> with</c><00:37:07.450><c> it</c><00:37:07.480><c> because</c>

00:37:07.740 --> 00:37:07.750 align:start position:0%
format for now just go with it because
 

00:37:07.750 --> 00:37:09.599 align:start position:0%
format for now just go with it because
that's<00:37:07.960><c> not</c><00:37:08.109><c> the</c><00:37:08.380><c> point</c><00:37:08.589><c> of</c><00:37:08.800><c> this</c><00:37:08.950><c> lesson</c><00:37:09.220><c> for</c>

00:37:09.599 --> 00:37:09.609 align:start position:0%
that's not the point of this lesson for
 

00:37:09.609 --> 00:37:12.900 align:start position:0%
that's not the point of this lesson for
now<00:37:09.790><c> but</c><00:37:10.510><c> this</c><00:37:10.900><c> function</c><00:37:11.589><c> called</c><00:37:11.920><c> word</c><00:37:12.280><c> blanks</c>

00:37:12.900 --> 00:37:12.910 align:start position:0%
now but this function called word blanks
 

00:37:12.910 --> 00:37:15.750 align:start position:0%
now but this function called word blanks
you<00:37:13.540><c> can</c><00:37:13.869><c> call</c><00:37:14.200><c> the</c><00:37:14.440><c> function</c><00:37:14.980><c> and</c><00:37:15.160><c> you</c><00:37:15.550><c> have</c>

00:37:15.750 --> 00:37:15.760 align:start position:0%
you can call the function and you have
 

00:37:15.760 --> 00:37:18.780 align:start position:0%
you can call the function and you have
to<00:37:15.910><c> pass</c><00:37:16.240><c> in</c><00:37:16.630><c> certain</c><00:37:17.260><c> types</c><00:37:17.589><c> of</c><00:37:17.800><c> words</c><00:37:18.130><c> you</c>

00:37:18.780 --> 00:37:18.790 align:start position:0%
to pass in certain types of words you
 

00:37:18.790 --> 00:37:22.380 align:start position:0%
to pass in certain types of words you
pass<00:37:19.119><c> in</c><00:37:19.359><c> a</c><00:37:19.450><c> noun</c><00:37:19.750><c> an</c><00:37:20.109><c> adjective</c><00:37:20.710><c> a</c><00:37:21.400><c> verb</c><00:37:22.180><c> and</c>

00:37:22.380 --> 00:37:22.390 align:start position:0%
pass in a noun an adjective a verb and
 

00:37:22.390 --> 00:37:26.910 align:start position:0%
pass in a noun an adjective a verb and
an<00:37:22.900><c> adverb</c><00:37:23.740><c> so</c><00:37:24.520><c> down</c><00:37:24.940><c> here</c><00:37:25.630><c> you</c><00:37:25.839><c> can</c><00:37:26.320><c> see</c><00:37:26.349><c> that</c>

00:37:26.910 --> 00:37:26.920 align:start position:0%
an adverb so down here you can see that
 

00:37:26.920 --> 00:37:29.640 align:start position:0%
an adverb so down here you can see that
we're<00:37:27.099><c> calling</c><00:37:27.790><c> the</c><00:37:27.940><c> function</c><00:37:28.349><c> called</c><00:37:29.349><c> word</c>

00:37:29.640 --> 00:37:29.650 align:start position:0%
we're calling the function called word
 

00:37:29.650 --> 00:37:31.680 align:start position:0%
we're calling the function called word
blanks<00:37:30.190><c> that's</c><00:37:30.430><c> the</c><00:37:30.609><c> function</c><00:37:31.030><c> name</c><00:37:31.180><c> here</c><00:37:31.570><c> and</c>

00:37:31.680 --> 00:37:31.690 align:start position:0%
blanks that's the function name here and
 

00:37:31.690 --> 00:37:35.010 align:start position:0%
blanks that's the function name here and
we're<00:37:32.200><c> passing</c><00:37:32.680><c> on</c><00:37:32.800><c> a</c><00:37:32.859><c> noun</c><00:37:33.430><c> an</c><00:37:33.760><c> adjective</c><00:37:34.330><c> a</c>

00:37:35.010 --> 00:37:35.020 align:start position:0%
we're passing on a noun an adjective a
 

00:37:35.020 --> 00:37:39.270 align:start position:0%
we're passing on a noun an adjective a
verb<00:37:35.890><c> and</c><00:37:36.160><c> an</c><00:37:36.460><c> adverb</c><00:37:37.150><c> so</c><00:37:37.900><c> the</c><00:37:38.200><c> point</c><00:37:38.589><c> is</c><00:37:38.830><c> that</c>

00:37:39.270 --> 00:37:39.280 align:start position:0%
verb and an adverb so the point is that
 

00:37:39.280 --> 00:37:42.270 align:start position:0%
verb and an adverb so the point is that
we<00:37:39.550><c> are</c><00:37:39.580><c> going</c><00:37:40.000><c> to</c><00:37:40.359><c> use</c><00:37:41.109><c> all</c><00:37:41.530><c> these</c><00:37:41.740><c> words</c><00:37:42.099><c> that</c>

00:37:42.270 --> 00:37:42.280 align:start position:0%
we are going to use all these words that
 

00:37:42.280 --> 00:37:46.230 align:start position:0%
we are going to use all these words that
are<00:37:42.400><c> passed</c><00:37:42.760><c> in</c><00:37:43.060><c> to</c><00:37:43.660><c> make</c><00:37:43.900><c> a</c><00:37:44.170><c> sentence</c><00:37:44.859><c> so</c><00:37:45.790><c> we</c>

00:37:46.230 --> 00:37:46.240 align:start position:0%
are passed in to make a sentence so we
 

00:37:46.240 --> 00:37:49.020 align:start position:0%
are passed in to make a sentence so we
know<00:37:46.450><c> that</c><00:37:46.480><c> var</c><00:37:47.170><c> result</c><00:37:47.740><c> equals</c><00:37:48.310><c> an</c><00:37:48.580><c> empty</c>

00:37:49.020 --> 00:37:49.030 align:start position:0%
know that var result equals an empty
 

00:37:49.030 --> 00:37:52.230 align:start position:0%
know that var result equals an empty
string<00:37:49.390><c> at</c><00:37:49.599><c> first</c><00:37:50.050><c> and</c><00:37:50.500><c> then</c><00:37:51.070><c> we</c><00:37:51.310><c> have</c><00:37:51.609><c> to</c><00:37:51.880><c> use</c>

00:37:52.230 --> 00:37:52.240 align:start position:0%
string at first and then we have to use
 

00:37:52.240 --> 00:37:55.109 align:start position:0%
string at first and then we have to use
all<00:37:52.630><c> these</c><00:37:52.869><c> words</c><00:37:53.200><c> and</c><00:37:53.470><c> result</c><00:37:54.190><c> and</c><00:37:54.460><c> then</c><00:37:54.970><c> the</c>

00:37:55.109 --> 00:37:55.119 align:start position:0%
all these words and result and then the
 

00:37:55.119 --> 00:37:58.050 align:start position:0%
all these words and result and then the
result<00:37:55.480><c> is</c><00:37:55.599><c> going</c><00:37:55.869><c> to</c><00:37:55.990><c> be</c><00:37:56.109><c> returned</c><00:37:56.890><c> from</c><00:37:57.880><c> this</c>

00:37:58.050 --> 00:37:58.060 align:start position:0%
result is going to be returned from this
 

00:37:58.060 --> 00:38:00.180 align:start position:0%
result is going to be returned from this
function<00:37:58.359><c> and</c><00:37:58.780><c> eventually</c><00:37:59.619><c> we'll</c><00:37:59.710><c> be</c><00:37:59.740><c> logged</c>

00:38:00.180 --> 00:38:00.190 align:start position:0%
function and eventually we'll be logged
 

00:38:00.190 --> 00:38:02.190 align:start position:0%
function and eventually we'll be logged
out<00:38:00.460><c> onto</c><00:38:00.849><c> the</c><00:38:00.970><c> screen</c><00:38:01.240><c> with</c><00:38:01.599><c> this</c><00:38:01.720><c> console</c>

00:38:02.190 --> 00:38:02.200 align:start position:0%
out onto the screen with this console
 

00:38:02.200 --> 00:38:06.620 align:start position:0%
out onto the screen with this console
dot<00:38:02.349><c> log</c><00:38:02.580><c> so</c><00:38:03.580><c> what</c><00:38:04.000><c> I'm</c><00:38:04.089><c> gonna</c><00:38:04.240><c> do</c><00:38:04.510><c> here</c><00:38:04.930><c> is</c><00:38:05.050><c> do</c>

00:38:06.620 --> 00:38:06.630 align:start position:0%
dot log so what I'm gonna do here is do
 

00:38:06.630 --> 00:38:11.820 align:start position:0%
dot log so what I'm gonna do here is do
result<00:38:08.250><c> plus</c><00:38:09.250><c> M</c><00:38:09.940><c> equals</c><00:38:10.500><c> we're</c><00:38:11.500><c> gonna</c><00:38:11.619><c> use</c><00:38:11.710><c> the</c>

00:38:11.820 --> 00:38:11.830 align:start position:0%
result plus M equals we're gonna use the
 

00:38:11.830 --> 00:38:14.339 align:start position:0%
result plus M equals we're gonna use the
plus<00:38:12.040><c> equals</c><00:38:12.520><c> to</c><00:38:12.849><c> add</c><00:38:13.180><c> something</c><00:38:13.660><c> to</c><00:38:14.140><c> this</c>

00:38:14.339 --> 00:38:14.349 align:start position:0%
plus equals to add something to this
 

00:38:14.349 --> 00:38:17.070 align:start position:0%
plus equals to add something to this
result<00:38:14.770><c> using</c><00:38:15.220><c> all</c><00:38:15.609><c> the</c><00:38:16.089><c> noun</c><00:38:16.300><c> the</c><00:38:16.540><c> adjective</c>

00:38:17.070 --> 00:38:17.080 align:start position:0%
result using all the noun the adjective
 

00:38:17.080 --> 00:38:20.520 align:start position:0%
result using all the noun the adjective
the<00:38:17.200><c> verb</c><00:38:17.680><c> and</c><00:38:18.010><c> the</c><00:38:18.070><c> adverb</c><00:38:18.700><c> so</c><00:38:19.599><c> let's</c><00:38:20.260><c> see</c>

00:38:20.520 --> 00:38:20.530 align:start position:0%
the verb and the adverb so let's see
 

00:38:20.530 --> 00:38:24.570 align:start position:0%
the verb and the adverb so let's see
it's<00:38:20.710><c> gonna</c><00:38:20.830><c> say</c><00:38:21.190><c> the</c><00:38:21.910><c> and</c><00:38:23.250><c> we'll</c><00:38:24.250><c> use</c><00:38:24.280><c> the</c>

00:38:24.570 --> 00:38:24.580 align:start position:0%
it's gonna say the and we'll use the
 

00:38:24.580 --> 00:38:31.620 align:start position:0%
it's gonna say the and we'll use the
adjective<00:38:25.240><c> I</c><00:38:27.300><c> adjective</c><00:38:30.030><c> this</c><00:38:31.030><c> case</c><00:38:31.330><c> will</c><00:38:31.510><c> be</c>

00:38:31.620 --> 00:38:31.630 align:start position:0%
adjective I adjective this case will be
 

00:38:31.630 --> 00:38:36.390 align:start position:0%
adjective I adjective this case will be
the<00:38:31.869><c> big</c><00:38:32.200><c> a</c><00:38:33.960><c> big</c><00:38:34.960><c> and</c><00:38:35.320><c> then</c><00:38:35.680><c> let's</c><00:38:35.980><c> put</c><00:38:36.339><c> the</c>

00:38:36.390 --> 00:38:36.400 align:start position:0%
the big a big and then let's put the
 

00:38:36.400 --> 00:38:40.890 align:start position:0%
the big a big and then let's put the
noun<00:38:37.470><c> my</c><00:38:38.470><c> noun</c><00:38:39.160><c> because</c><00:38:39.910><c> adjectives</c><00:38:40.690><c> are</c>

00:38:40.890 --> 00:38:40.900 align:start position:0%
noun my noun because adjectives are
 

00:38:40.900 --> 00:38:45.290 align:start position:0%
noun my noun because adjectives are
words<00:38:40.930><c> that</c><00:38:41.349><c> describe</c><00:38:41.770><c> nouns</c><00:38:42.040><c> a</c><00:38:42.900><c> big</c>

00:38:45.290 --> 00:38:45.300 align:start position:0%
words that describe nouns a big
 

00:38:45.300 --> 00:38:47.930 align:start position:0%
words that describe nouns a big
and<00:38:45.470><c> then</c><00:38:46.470><c> we're</c><00:38:46.680><c> gonna</c><00:38:46.770><c> say</c><00:38:47.100><c> what</c><00:38:47.460><c> this</c><00:38:47.700><c> now</c>

00:38:47.930 --> 00:38:47.940 align:start position:0%
and then we're gonna say what this now
 

00:38:47.940 --> 00:38:53.590 align:start position:0%
and then we're gonna say what this now
is<00:38:48.180><c> doing</c><00:38:48.570><c> the</c><00:38:48.780><c> verb</c><00:38:49.140><c> my</c><00:38:49.770><c> verb</c><00:38:51.380><c> the</c><00:38:52.380><c> big</c><00:38:52.770><c> dog</c>

00:38:53.590 --> 00:38:53.600 align:start position:0%
is doing the verb my verb the big dog
 

00:38:53.600 --> 00:38:58.480 align:start position:0%
is doing the verb my verb the big dog
ran<00:38:54.600><c> and</c><00:38:55.490><c> then</c><00:38:56.490><c> what</c><00:38:56.910><c> where</c><00:38:57.270><c> does</c><00:38:57.480><c> he</c><00:38:57.690><c> run</c><00:38:57.960><c> to</c>

00:38:58.480 --> 00:38:58.490 align:start position:0%
ran and then what where does he run to
 

00:38:58.490 --> 00:39:03.230 align:start position:0%
ran and then what where does he run to
to<00:38:59.490><c> the</c><00:39:00.270><c> store</c><00:39:00.780><c> and</c><00:39:01.310><c> then</c><00:39:02.310><c> we're</c><00:39:02.550><c> going</c><00:39:02.790><c> to</c><00:39:02.850><c> add</c>

00:39:03.230 --> 00:39:03.240 align:start position:0%
to the store and then we're going to add
 

00:39:03.240 --> 00:39:06.200 align:start position:0%
to the store and then we're going to add
oh<00:39:03.720><c> we</c><00:39:04.050><c> need</c><00:39:04.200><c> a</c><00:39:04.290><c> space</c><00:39:04.530><c> here</c><00:39:04.970><c> so</c><00:39:05.970><c> there's</c><00:39:06.150><c> a</c>

00:39:06.200 --> 00:39:06.210 align:start position:0%
oh we need a space here so there's a
 

00:39:06.210 --> 00:39:08.750 align:start position:0%
oh we need a space here so there's a
space<00:39:06.480><c> between</c><00:39:06.870><c> this</c><00:39:07.440><c> to</c><00:39:07.980><c> the</c><00:39:08.100><c> store</c><00:39:08.430><c> and</c><00:39:08.640><c> then</c>

00:39:08.750 --> 00:39:08.760 align:start position:0%
space between this to the store and then
 

00:39:08.760 --> 00:39:14.630 align:start position:0%
space between this to the store and then
we're<00:39:08.910><c> going</c><00:39:09.030><c> to</c><00:39:09.060><c> add</c><00:39:09.330><c> the</c><00:39:09.660><c> final</c><00:39:11.450><c> adverb</c><00:39:13.640><c> so</c>

00:39:14.630 --> 00:39:14.640 align:start position:0%
we're going to add the final adverb so
 

00:39:14.640 --> 00:39:20.120 align:start position:0%
we're going to add the final adverb so
now<00:39:15.390><c> we</c><00:39:15.930><c> have</c><00:39:16.110><c> to</c><00:39:16.230><c> add</c><00:39:16.440><c> a</c><00:39:16.860><c> period</c><00:39:17.580><c> and</c><00:39:19.130><c> there's</c>

00:39:20.120 --> 00:39:20.130 align:start position:0%
now we have to add a period and there's
 

00:39:20.130 --> 00:39:22.250 align:start position:0%
now we have to add a period and there's
one<00:39:20.490><c> more</c><00:39:20.700><c> thing</c><00:39:21.060><c> we</c><00:39:21.240><c> have</c><00:39:21.270><c> to</c><00:39:21.480><c> add</c><00:39:21.630><c> or</c><00:39:21.810><c> a</c><00:39:21.900><c> few</c>

00:39:22.250 --> 00:39:22.260 align:start position:0%
one more thing we have to add or a few
 

00:39:22.260 --> 00:39:25.400 align:start position:0%
one more thing we have to add or a few
more<00:39:22.440><c> things</c><00:39:22.770><c> so</c><00:39:23.670><c> right</c><00:39:24.000><c> now</c><00:39:24.270><c> it's</c><00:39:24.930><c> my</c>

00:39:25.400 --> 00:39:25.410 align:start position:0%
more things so right now it's my
 

00:39:25.410 --> 00:39:28.010 align:start position:0%
more things so right now it's my
adjective<00:39:26.010><c> my</c><00:39:26.280><c> noun</c><00:39:26.550><c> my</c><00:39:26.880><c> verb</c><00:39:27.330><c> and</c><00:39:27.600><c> there's</c><00:39:27.810><c> no</c>

00:39:28.010 --> 00:39:28.020 align:start position:0%
adjective my noun my verb and there's no
 

00:39:28.020 --> 00:39:30.620 align:start position:0%
adjective my noun my verb and there's no
spaces<00:39:28.650><c> in</c><00:39:28.770><c> between</c><00:39:28.800><c> those</c><00:39:29.400><c> so</c><00:39:30.090><c> if</c><00:39:30.180><c> I</c><00:39:30.300><c> run</c><00:39:30.600><c> that</c>

00:39:30.620 --> 00:39:30.630 align:start position:0%
spaces in between those so if I run that
 

00:39:30.630 --> 00:39:32.120 align:start position:0%
spaces in between those so if I run that
you<00:39:31.080><c> can</c><00:39:31.200><c> see</c><00:39:31.380><c> what</c><00:39:31.530><c> that's</c><00:39:31.620><c> gonna</c><00:39:31.830><c> look</c><00:39:31.920><c> like</c>

00:39:32.120 --> 00:39:32.130 align:start position:0%
you can see what that's gonna look like
 

00:39:32.130 --> 00:39:35.690 align:start position:0%
you can see what that's gonna look like
in<00:39:32.460><c> the</c><00:39:32.580><c> console</c><00:39:33.210><c> it</c><00:39:33.480><c> just</c><00:39:33.990><c> said</c><00:39:34.260><c> big</c><00:39:35.040><c> Don</c><00:39:35.250><c> big</c>

00:39:35.690 --> 00:39:35.700 align:start position:0%
in the console it just said big Don big
 

00:39:35.700 --> 00:39:38.240 align:start position:0%
in the console it just said big Don big
dog<00:39:35.880><c> ran</c><00:39:36.210><c> with</c><00:39:36.870><c> no</c><00:39:37.050><c> spaces</c><00:39:37.380><c> so</c><00:39:37.980><c> we're</c><00:39:38.130><c> gonna</c>

00:39:38.240 --> 00:39:38.250 align:start position:0%
dog ran with no spaces so we're gonna
 

00:39:38.250 --> 00:39:41.920 align:start position:0%
dog ran with no spaces so we're gonna
have<00:39:38.490><c> to</c><00:39:38.640><c> add</c><00:39:38.790><c> some</c><00:39:38.820><c> spaces</c><00:39:39.660><c> in</c><00:39:39.810><c> here</c><00:39:39.840><c> also</c>

00:39:41.920 --> 00:39:41.930 align:start position:0%
have to add some spaces in here also
 

00:39:41.930 --> 00:39:52.340 align:start position:0%
have to add some spaces in here also
let's<00:39:42.930><c> do</c><00:39:43.110><c> that</c><00:39:49.940><c> now</c><00:39:50.940><c> it's</c><00:39:51.270><c> going</c><00:39:51.570><c> to</c><00:39:51.600><c> take</c><00:39:52.020><c> in</c>

00:39:52.340 --> 00:39:52.350 align:start position:0%
let's do that now it's going to take in
 

00:39:52.350 --> 00:39:55.160 align:start position:0%
let's do that now it's going to take in
the<00:39:52.680><c> noun</c><00:39:52.950><c> adjective</c><00:39:53.490><c> verb</c><00:39:54.060><c> an</c><00:39:54.300><c> adverb</c><00:39:54.630><c> and</c>

00:39:55.160 --> 00:39:55.170 align:start position:0%
the noun adjective verb an adverb and
 

00:39:55.170 --> 00:39:59.480 align:start position:0%
the noun adjective verb an adverb and
then<00:39:55.710><c> put</c><00:39:56.010><c> it</c><00:39:56.100><c> into</c><00:39:56.310><c> that</c><00:39:56.700><c> sentence</c><00:39:57.650><c> so</c><00:39:58.650><c> one</c>

00:39:59.480 --> 00:39:59.490 align:start position:0%
then put it into that sentence so one
 

00:39:59.490 --> 00:40:02.300 align:start position:0%
then put it into that sentence so one
cool<00:39:59.760><c> thing</c><00:40:00.090><c> is</c><00:40:00.270><c> we</c><00:40:00.480><c> can</c><00:40:00.690><c> actually</c><00:40:01.100><c> pass</c><00:40:02.100><c> in</c>

00:40:02.300 --> 00:40:02.310 align:start position:0%
cool thing is we can actually pass in
 

00:40:02.310 --> 00:40:04.370 align:start position:0%
cool thing is we can actually pass in
some<00:40:02.460><c> different</c><00:40:02.850><c> words</c><00:40:03.090><c> so</c><00:40:03.480><c> like</c><00:40:04.050><c> friends</c>

00:40:04.370 --> 00:40:04.380 align:start position:0%
some different words so like friends
 

00:40:04.380 --> 00:40:06.500 align:start position:0%
some different words so like friends
let's<00:40:04.530><c> if</c><00:40:04.620><c> I</c><00:40:04.740><c> copy</c><00:40:05.070><c> this</c><00:40:05.550><c> I'm</c><00:40:05.910><c> going</c><00:40:06.060><c> to</c><00:40:06.150><c> paste</c>

00:40:06.500 --> 00:40:06.510 align:start position:0%
let's if I copy this I'm going to paste
 

00:40:06.510 --> 00:40:10.040 align:start position:0%
let's if I copy this I'm going to paste
it<00:40:06.810><c> instead</c><00:40:07.680><c> of</c><00:40:07.800><c> dog</c><00:40:08.160><c> I</c><00:40:08.580><c> will</c><00:40:09.150><c> put</c><00:40:09.510><c> for</c><00:40:09.900><c> the</c>

00:40:10.040 --> 00:40:10.050 align:start position:0%
it instead of dog I will put for the
 

00:40:10.050 --> 00:40:15.290 align:start position:0%
it instead of dog I will put for the
noun<00:40:11.720><c> bike</c><00:40:12.720><c> and</c><00:40:13.400><c> an</c><00:40:14.400><c> adjective</c>

00:40:15.290 --> 00:40:15.300 align:start position:0%
noun bike and an adjective
 

00:40:15.300 --> 00:40:23.300 align:start position:0%
noun bike and an adjective
I'll<00:40:15.810><c> put</c><00:40:16.400><c> slow</c><00:40:18.800><c> and</c><00:40:20.450><c> then</c><00:40:21.450><c> for</c><00:40:21.840><c> the</c><00:40:21.990><c> verb</c><00:40:22.470><c> I'll</c>

00:40:23.300 --> 00:40:23.310 align:start position:0%
I'll put slow and then for the verb I'll
 

00:40:23.310 --> 00:40:31.730 align:start position:0%
I'll put slow and then for the verb I'll
put<00:40:24.090><c> flew</c><00:40:24.840><c> and</c><00:40:27.500><c> the</c><00:40:28.500><c> adverb</c><00:40:29.400><c> I'll</c><00:40:30.270><c> put</c><00:40:30.990><c> slowly</c>

00:40:31.730 --> 00:40:31.740 align:start position:0%
put flew and the adverb I'll put slowly
 

00:40:31.740 --> 00:40:35.930 align:start position:0%
put flew and the adverb I'll put slowly
and<00:40:32.630><c> now</c><00:40:33.630><c> if</c><00:40:34.020><c> we</c><00:40:34.740><c> look</c><00:40:34.980><c> in</c><00:40:35.160><c> the</c><00:40:35.280><c> console</c><00:40:35.790><c> we</c>

00:40:35.930 --> 00:40:35.940 align:start position:0%
and now if we look in the console we
 

00:40:35.940 --> 00:40:38.540 align:start position:0%
and now if we look in the console we
have<00:40:36.030><c> to</c><00:40:36.240><c> work</c><00:40:36.480><c> two</c><00:40:36.780><c> sentences</c><00:40:37.320><c> the</c><00:40:38.070><c> big</c><00:40:38.310><c> dog</c>

00:40:38.540 --> 00:40:38.550 align:start position:0%
have to work two sentences the big dog
 

00:40:38.550 --> 00:40:41.120 align:start position:0%
have to work two sentences the big dog
ran<00:40:38.880><c> to</c><00:40:39.090><c> the</c><00:40:39.180><c> store</c><00:40:39.420><c> quickly</c><00:40:39.660><c> the</c><00:40:40.440><c> slow</c><00:40:40.800><c> bike</c>

00:40:41.120 --> 00:40:41.130 align:start position:0%
ran to the store quickly the slow bike
 

00:40:41.130 --> 00:40:47.660 align:start position:0%
ran to the store quickly the slow bike
flew<00:40:41.700><c> to</c><00:40:41.940><c> the</c><00:40:42.060><c> store</c><00:40:42.330><c> slowly</c>

00:40:47.660 --> 00:40:47.670 align:start position:0%
 
 

00:40:47.670 --> 00:40:50.819 align:start position:0%
 
arrays<00:40:48.670><c> allow</c><00:40:49.089><c> you</c><00:40:49.329><c> to</c><00:40:49.660><c> store</c><00:40:49.959><c> several</c><00:40:50.619><c> pieces</c>

00:40:50.819 --> 00:40:50.829 align:start position:0%
arrays allow you to store several pieces
 

00:40:50.829 --> 00:40:53.670 align:start position:0%
arrays allow you to store several pieces
of<00:40:51.069><c> data</c><00:40:51.369><c> in</c><00:40:51.640><c> one</c><00:40:51.670><c> place</c><00:40:52.359><c> so</c><00:40:53.229><c> look</c><00:40:53.440><c> at</c><00:40:53.559><c> this</c>

00:40:53.670 --> 00:40:53.680 align:start position:0%
of data in one place so look at this
 

00:40:53.680 --> 00:40:56.609 align:start position:0%
of data in one place so look at this
example<00:40:54.009><c> our</c><00:40:54.369><c> array</c><00:40:54.789><c> now</c><00:40:55.479><c> arrays</c><00:40:56.019><c> always</c>

00:40:56.609 --> 00:40:56.619 align:start position:0%
example our array now arrays always
 

00:40:56.619 --> 00:40:58.799 align:start position:0%
example our array now arrays always
start<00:40:57.009><c> with</c><00:40:57.130><c> a</c><00:40:57.190><c> bracket</c><00:40:57.819><c> and</c><00:40:58.029><c> then</c><00:40:58.299><c> end</c><00:40:58.569><c> with</c><00:40:58.690><c> a</c>

00:40:58.799 --> 00:40:58.809 align:start position:0%
start with a bracket and then end with a
 

00:40:58.809 --> 00:41:00.749 align:start position:0%
start with a bracket and then end with a
bracket<00:40:59.380><c> to</c><00:40:59.410><c> show</c><00:40:59.739><c> the</c><00:40:59.920><c> beginning</c><00:41:00.069><c> and</c><00:41:00.430><c> ending</c>

00:41:00.749 --> 00:41:00.759 align:start position:0%
bracket to show the beginning and ending
 

00:41:00.759 --> 00:41:03.329 align:start position:0%
bracket to show the beginning and ending
of<00:41:00.940><c> the</c><00:41:00.999><c> array</c><00:41:01.420><c> and</c><00:41:01.719><c> every</c><00:41:02.529><c> element</c><00:41:02.799><c> in</c><00:41:03.190><c> the</c>

00:41:03.329 --> 00:41:03.339 align:start position:0%
of the array and every element in the
 

00:41:03.339 --> 00:41:06.150 align:start position:0%
of the array and every element in the
array<00:41:03.400><c> is</c><00:41:04.109><c> separated</c><00:41:05.109><c> by</c><00:41:05.289><c> a</c><00:41:05.319><c> comma</c>

00:41:06.150 --> 00:41:06.160 align:start position:0%
array is separated by a comma
 

00:41:06.160 --> 00:41:08.519 align:start position:0%
array is separated by a comma
so<00:41:06.519><c> you</c><00:41:06.640><c> can</c><00:41:06.849><c> see</c><00:41:07.029><c> here</c><00:41:07.329><c> we</c><00:41:07.539><c> the</c><00:41:07.749><c> first</c><00:41:08.019><c> element</c>

00:41:08.519 --> 00:41:08.529 align:start position:0%
so you can see here we the first element
 

00:41:08.529 --> 00:41:10.979 align:start position:0%
so you can see here we the first element
is<00:41:08.619><c> a</c><00:41:08.650><c> string</c><00:41:09.130><c> the</c><00:41:09.640><c> second</c><00:41:10.150><c> element</c><00:41:10.269><c> is</c><00:41:10.599><c> a</c>

00:41:10.979 --> 00:41:10.989 align:start position:0%
is a string the second element is a
 

00:41:10.989 --> 00:41:13.349 align:start position:0%
is a string the second element is a
number<00:41:11.469><c> and</c><00:41:11.709><c> you</c><00:41:12.309><c> can</c><00:41:12.459><c> have</c><00:41:12.729><c> more</c><00:41:13.119><c> and</c><00:41:13.209><c> more</c>

00:41:13.349 --> 00:41:13.359 align:start position:0%
number and you can have more and more
 

00:41:13.359 --> 00:41:15.479 align:start position:0%
number and you can have more and more
elements<00:41:13.599><c> you</c><00:41:14.049><c> just</c><00:41:14.259><c> put</c><00:41:14.440><c> comma</c><00:41:14.769><c> and</c><00:41:15.099><c> you</c><00:41:15.249><c> can</c>

00:41:15.479 --> 00:41:15.489 align:start position:0%
elements you just put comma and you can
 

00:41:15.489 --> 00:41:18.089 align:start position:0%
elements you just put comma and you can
keep<00:41:15.849><c> adding</c><00:41:16.089><c> elements</c><00:41:16.539><c> and</c><00:41:17.109><c> the</c><00:41:17.650><c> elements</c>

00:41:18.089 --> 00:41:18.099 align:start position:0%
keep adding elements and the elements
 

00:41:18.099 --> 00:41:20.759 align:start position:0%
keep adding elements and the elements
can<00:41:18.309><c> be</c><00:41:18.339><c> any</c><00:41:18.729><c> data</c><00:41:19.119><c> type</c><00:41:19.450><c> you</c><00:41:19.930><c> can</c><00:41:20.109><c> see</c><00:41:20.289><c> here</c><00:41:20.619><c> we</c>

00:41:20.759 --> 00:41:20.769 align:start position:0%
can be any data type you can see here we
 

00:41:20.769 --> 00:41:24.180 align:start position:0%
can be any data type you can see here we
have<00:41:21.039><c> a</c><00:41:21.959><c> string</c><00:41:22.959><c> and</c><00:41:23.259><c> a</c><00:41:23.349><c> number</c><00:41:23.559><c> but</c><00:41:23.979><c> you</c><00:41:24.039><c> can</c>

00:41:24.180 --> 00:41:24.190 align:start position:0%
have a string and a number but you can
 

00:41:24.190 --> 00:41:27.029 align:start position:0%
have a string and a number but you can
always<00:41:24.309><c> also</c><00:41:24.640><c> use</c><00:41:24.940><c> arrays</c><00:41:25.450><c> or</c><00:41:26.039><c> floating</c>

00:41:27.029 --> 00:41:27.039 align:start position:0%
always also use arrays or floating
 

00:41:27.039 --> 00:41:29.819 align:start position:0%
always also use arrays or floating
numbers<00:41:27.339><c> or</c><00:41:27.849><c> really</c><00:41:28.450><c> any</c><00:41:28.660><c> sort</c><00:41:29.079><c> of</c><00:41:29.170><c> other</c><00:41:29.349><c> data</c>

00:41:29.819 --> 00:41:29.829 align:start position:0%
numbers or really any sort of other data
 

00:41:29.829 --> 00:41:32.430 align:start position:0%
numbers or really any sort of other data
type<00:41:30.130><c> in</c><00:41:30.339><c> your</c><00:41:30.489><c> array</c><00:41:30.849><c> so</c><00:41:31.509><c> let's</c><00:41:31.869><c> see</c><00:41:32.289><c> another</c>

00:41:32.430 --> 00:41:32.440 align:start position:0%
type in your array so let's see another
 

00:41:32.440 --> 00:41:36.660 align:start position:0%
type in your array so let's see another
example<00:41:32.910><c> so</c><00:41:33.910><c> let's</c><00:41:34.299><c> do</c><00:41:34.539><c> my</c><00:41:34.900><c> array</c><00:41:35.289><c> Quincy</c><00:41:36.249><c> and</c>

00:41:36.660 --> 00:41:36.670 align:start position:0%
example so let's do my array Quincy and
 

00:41:36.670 --> 00:41:40.440 align:start position:0%
example so let's do my array Quincy and
then<00:41:37.390><c> for</c><00:41:37.690><c> a</c><00:41:37.719><c> number</c><00:41:38.229><c> we'll</c><00:41:38.920><c> do</c><00:41:39.160><c> one</c><00:41:39.940><c> because</c>

00:41:40.440 --> 00:41:40.450 align:start position:0%
then for a number we'll do one because
 

00:41:40.450 --> 00:41:46.020 align:start position:0%
then for a number we'll do one because
Quincy<00:41:41.140><c> is</c><00:41:41.380><c> number</c><00:41:41.920><c> one</c>

00:41:46.020 --> 00:41:46.030 align:start position:0%
 
 

00:41:46.030 --> 00:41:48.690 align:start position:0%
 
when<00:41:46.840><c> one</c><00:41:47.050><c> of</c><00:41:47.140><c> the</c><00:41:47.230><c> elements</c><00:41:47.770><c> in</c><00:41:47.890><c> an</c><00:41:48.070><c> array</c><00:41:48.190><c> is</c>

00:41:48.690 --> 00:41:48.700 align:start position:0%
when one of the elements in an array is
 

00:41:48.700 --> 00:41:51.420 align:start position:0%
when one of the elements in an array is
another<00:41:49.390><c> array</c><00:41:49.930><c> that's</c><00:41:50.619><c> called</c><00:41:50.859><c> a</c><00:41:50.920><c> nested</c>

00:41:51.420 --> 00:41:51.430 align:start position:0%
another array that's called a nested
 

00:41:51.430 --> 00:41:54.720 align:start position:0%
another array that's called a nested
array<00:41:51.730><c> or</c><00:41:52.030><c> a</c><00:41:52.619><c> multi-dimensional</c><00:41:53.619><c> array</c><00:41:54.010><c> you</c>

00:41:54.720 --> 00:41:54.730 align:start position:0%
array or a multi-dimensional array you
 

00:41:54.730 --> 00:41:56.220 align:start position:0%
array or a multi-dimensional array you
can<00:41:54.760><c> see</c><00:41:55.180><c> here's</c><00:41:55.510><c> the</c><00:41:55.630><c> beginning</c><00:41:55.780><c> of</c><00:41:56.140><c> the</c>

00:41:56.220 --> 00:41:56.230 align:start position:0%
can see here's the beginning of the
 

00:41:56.230 --> 00:41:58.320 align:start position:0%
can see here's the beginning of the
array<00:41:56.470><c> and</c><00:41:56.710><c> here's</c><00:41:56.950><c> end</c><00:41:57.250><c> of</c><00:41:57.430><c> the</c><00:41:57.520><c> array</c><00:41:57.790><c> but</c>

00:41:58.320 --> 00:41:58.330 align:start position:0%
array and here's end of the array but
 

00:41:58.330 --> 00:42:00.599 align:start position:0%
array and here's end of the array but
the<00:41:58.480><c> first</c><00:41:58.840><c> element</c><00:41:59.500><c> in</c><00:41:59.650><c> this</c><00:41:59.950><c> array</c><00:42:00.010><c> is</c>

00:42:00.599 --> 00:42:00.609 align:start position:0%
the first element in this array is
 

00:42:00.609 --> 00:42:03.270 align:start position:0%
the first element in this array is
another<00:42:01.510><c> array</c><00:42:01.960><c> with</c><00:42:02.290><c> two</c><00:42:02.320><c> elements</c><00:42:03.040><c> of</c><00:42:03.130><c> its</c>

00:42:03.270 --> 00:42:03.280 align:start position:0%
another array with two elements of its
 

00:42:03.280 --> 00:42:05.430 align:start position:0%
another array with two elements of its
own<00:42:03.490><c> same</c><00:42:04.150><c> with</c><00:42:04.270><c> here</c><00:42:04.420><c> the</c><00:42:04.540><c> second</c><00:42:04.990><c> element</c><00:42:05.140><c> is</c>

00:42:05.430 --> 00:42:05.440 align:start position:0%
own same with here the second element is
 

00:42:05.440 --> 00:42:08.550 align:start position:0%
own same with here the second element is
an<00:42:05.650><c> array</c><00:42:05.920><c> so</c><00:42:06.490><c> this</c><00:42:06.760><c> is</c><00:42:06.940><c> two</c><00:42:07.270><c> arrays</c><00:42:07.780><c> within</c>

00:42:08.550 --> 00:42:08.560 align:start position:0%
an array so this is two arrays within
 

00:42:08.560 --> 00:42:11.339 align:start position:0%
an array so this is two arrays within
another<00:42:08.950><c> array</c><00:42:09.369><c> so</c><00:42:10.359><c> we</c><00:42:10.390><c> can</c><00:42:10.810><c> do</c><00:42:10.930><c> that</c><00:42:11.080><c> here</c>

00:42:11.339 --> 00:42:11.349 align:start position:0%
another array so we can do that here
 

00:42:11.349 --> 00:42:12.510 align:start position:0%
another array so we can do that here
here's<00:42:11.650><c> another</c><00:42:11.890><c> example</c>

00:42:12.510 --> 00:42:12.520 align:start position:0%
here's another example
 

00:42:12.520 --> 00:42:15.120 align:start position:0%
here's another example
so<00:42:13.060><c> let's</c><00:42:13.869><c> our</c><00:42:14.140><c> first</c><00:42:14.440><c> element</c><00:42:14.920><c> in</c><00:42:14.980><c> the</c><00:42:15.010><c> array</c>

00:42:15.120 --> 00:42:15.130 align:start position:0%
so let's our first element in the array
 

00:42:15.130 --> 00:42:19.740 align:start position:0%
so let's our first element in the array
will<00:42:15.910><c> be</c><00:42:15.940><c> an</c><00:42:16.300><c> array</c><00:42:16.650><c> with</c><00:42:17.650><c> a</c><00:42:17.680><c> string</c><00:42:18.460><c> and</c><00:42:18.790><c> a</c>

00:42:19.740 --> 00:42:19.750 align:start position:0%
will be an array with a string and a
 

00:42:19.750 --> 00:42:23.099 align:start position:0%
will be an array with a string and a
number<00:42:20.320><c> and</c><00:42:20.530><c> then</c><00:42:21.460><c> I'll</c><00:42:21.820><c> put</c><00:42:22.359><c> a</c><00:42:22.390><c> comma</c><00:42:22.750><c> that</c>

00:42:23.099 --> 00:42:23.109 align:start position:0%
number and then I'll put a comma that
 

00:42:23.109 --> 00:42:24.839 align:start position:0%
number and then I'll put a comma that
put<00:42:23.349><c> the</c><00:42:23.470><c> second</c><00:42:23.920><c> element</c><00:42:24.130><c> of</c><00:42:24.430><c> the</c><00:42:24.609><c> array</c>

00:42:24.839 --> 00:42:24.849 align:start position:0%
put the second element of the array
 

00:42:24.849 --> 00:42:28.710 align:start position:0%
put the second element of the array
which<00:42:25.090><c> will</c><00:42:25.240><c> be</c><00:42:25.330><c> another</c><00:42:25.599><c> array</c><00:42:27.690><c> with</c><00:42:28.690><c> a</c>

00:42:28.710 --> 00:42:28.720 align:start position:0%
which will be another array with a
 

00:42:28.720 --> 00:42:36.150 align:start position:0%
which will be another array with a
string<00:42:29.230><c> and</c><00:42:29.500><c> a</c><00:42:30.430><c> number</c>

00:42:36.150 --> 00:42:36.160 align:start position:0%
 
 

00:42:36.160 --> 00:42:38.520 align:start position:0%
 
earlier<00:42:37.060><c> we</c><00:42:37.300><c> learned</c><00:42:37.540><c> how</c><00:42:37.780><c> to</c><00:42:37.840><c> use</c><00:42:37.990><c> bracket</c>

00:42:38.520 --> 00:42:38.530 align:start position:0%
earlier we learned how to use bracket
 

00:42:38.530 --> 00:42:40.590 align:start position:0%
earlier we learned how to use bracket
notation<00:42:38.680><c> to</c><00:42:39.160><c> find</c><00:42:39.370><c> a</c><00:42:39.490><c> specific</c><00:42:39.940><c> index</c><00:42:40.360><c> in</c><00:42:40.510><c> a</c>

00:42:40.590 --> 00:42:40.600 align:start position:0%
notation to find a specific index in a
 

00:42:40.600 --> 00:42:43.050 align:start position:0%
notation to find a specific index in a
string<00:42:41.020><c> you</c><00:42:41.740><c> can</c><00:42:41.770><c> do</c><00:42:42.040><c> the</c><00:42:42.190><c> same</c><00:42:42.430><c> thing</c><00:42:42.820><c> with</c>

00:42:43.050 --> 00:42:43.060 align:start position:0%
string you can do the same thing with
 

00:42:43.060 --> 00:42:46.140 align:start position:0%
string you can do the same thing with
arrays<00:42:43.570><c> so</c><00:42:43.990><c> look</c><00:42:44.500><c> at</c><00:42:44.620><c> this</c><00:42:44.740><c> array</c><00:42:45.340><c> our</c><00:42:45.640><c> array</c>

00:42:46.140 --> 00:42:46.150 align:start position:0%
arrays so look at this array our array
 

00:42:46.150 --> 00:42:49.800 align:start position:0%
arrays so look at this array our array
we<00:42:46.780><c> have</c><00:42:46.930><c> three</c><00:42:47.290><c> elements</c><00:42:47.770><c> 50</c><00:42:48.310><c> 60</c><00:42:48.910><c> 70</c><00:42:49.540><c> and</c>

00:42:49.800 --> 00:42:49.810 align:start position:0%
we have three elements 50 60 70 and
 

00:42:49.810 --> 00:42:55.290 align:start position:0%
we have three elements 50 60 70 and
these<00:42:50.710><c> have</c><00:42:50.950><c> the</c><00:42:51.070><c> indexes</c><00:42:51.880><c> 0</c><00:42:52.600><c> 1</c><00:42:53.230><c> 2</c><00:42:53.920><c> so</c><00:42:54.300><c> with</c>

00:42:55.290 --> 00:42:55.300 align:start position:0%
these have the indexes 0 1 2 so with
 

00:42:55.300 --> 00:42:57.360 align:start position:0%
these have the indexes 0 1 2 so with
this<00:42:55.480><c> our</c><00:42:55.660><c> array</c><00:42:56.170><c> with</c><00:42:56.620><c> the</c><00:42:56.650><c> bracket</c><00:42:57.340><c> notation</c>

00:42:57.360 --> 00:42:57.370 align:start position:0%
this our array with the bracket notation
 

00:42:57.370 --> 00:43:00.030 align:start position:0%
this our array with the bracket notation
in<00:42:58.030><c> the</c><00:42:58.180><c> 0</c><00:42:58.570><c> that's</c><00:42:58.990><c> going</c><00:42:59.140><c> to</c><00:42:59.230><c> be</c><00:42:59.290><c> index</c><00:42:59.710><c> 1</c>

00:43:00.030 --> 00:43:00.040 align:start position:0%
in the 0 that's going to be index 1
 

00:43:00.040 --> 00:43:02.640 align:start position:0%
in the 0 that's going to be index 1
which<00:43:00.310><c> is</c><00:43:00.460><c> going</c><00:43:00.550><c> to</c><00:43:00.640><c> equal</c><00:43:00.850><c> 50</c><00:43:01.600><c> so</c><00:43:02.290><c> we</c><00:43:02.320><c> can</c><00:43:02.530><c> do</c>

00:43:02.640 --> 00:43:02.650 align:start position:0%
which is going to equal 50 so we can do
 

00:43:02.650 --> 00:43:05.220 align:start position:0%
which is going to equal 50 so we can do
the<00:43:02.710><c> same</c><00:43:02.890><c> thing</c><00:43:03.190><c> here</c><00:43:03.550><c> my</c><00:43:04.000><c> array</c><00:43:04.420><c> equals</c><00:43:04.750><c> 50</c>

00:43:05.220 --> 00:43:05.230 align:start position:0%
the same thing here my array equals 50
 

00:43:05.230 --> 00:43:08.730 align:start position:0%
the same thing here my array equals 50
60<00:43:05.920><c> 70</c><00:43:06.670><c> so</c><00:43:07.300><c> let's</c><00:43:07.570><c> try</c><00:43:07.810><c> to</c><00:43:07.840><c> find</c><00:43:08.110><c> the</c><00:43:08.410><c> first</c>

00:43:08.730 --> 00:43:08.740 align:start position:0%
60 70 so let's try to find the first
 

00:43:08.740 --> 00:43:15.500 align:start position:0%
60 70 so let's try to find the first
element<00:43:08.920><c> that</c><00:43:09.310><c> array</c><00:43:09.580><c> so</c><00:43:10.450><c> var</c><00:43:11.380><c> are</c><00:43:12.480><c> my</c><00:43:13.480><c> data</c>

00:43:15.500 --> 00:43:15.510 align:start position:0%
element that array so var are my data
 

00:43:15.510 --> 00:43:19.470 align:start position:0%
element that array so var are my data
equals<00:43:16.510><c> my</c><00:43:17.170><c> array</c><00:43:17.890><c> and</c><00:43:18.310><c> then</c><00:43:19.060><c> I'm</c><00:43:19.150><c> going</c><00:43:19.300><c> to</c><00:43:19.330><c> do</c>

00:43:19.470 --> 00:43:19.480 align:start position:0%
equals my array and then I'm going to do
 

00:43:19.480 --> 00:43:22.770 align:start position:0%
equals my array and then I'm going to do
index<00:43:19.990><c> 0</c><00:43:20.320><c> I</c><00:43:20.620><c> could</c><00:43:20.800><c> do</c><00:43:20.980><c> index</c><00:43:21.280><c> 1</c><00:43:21.550><c> index</c><00:43:22.090><c> 2</c><00:43:22.480><c> and</c>

00:43:22.770 --> 00:43:22.780 align:start position:0%
index 0 I could do index 1 index 2 and
 

00:43:22.780 --> 00:43:25.860 align:start position:0%
index 0 I could do index 1 index 2 and
then<00:43:23.440><c> if</c><00:43:23.530><c> we</c><00:43:23.680><c> console</c><00:43:24.280><c> dot</c><00:43:24.430><c> log</c><00:43:24.490><c> that</c><00:43:25.120><c> we</c><00:43:25.690><c> can</c>

00:43:25.860 --> 00:43:25.870 align:start position:0%
then if we console dot log that we can
 

00:43:25.870 --> 00:43:28.440 align:start position:0%
then if we console dot log that we can
see<00:43:26.050><c> for</c><00:43:26.230><c> sure</c><00:43:26.260><c> what</c><00:43:26.680><c> that</c><00:43:26.710><c> is</c><00:43:27.010><c> so</c><00:43:27.820><c> if</c><00:43:27.880><c> I</c><00:43:27.970><c> put</c><00:43:28.210><c> my</c>

00:43:28.440 --> 00:43:28.450 align:start position:0%
see for sure what that is so if I put my
 

00:43:28.450 --> 00:43:32.150 align:start position:0%
see for sure what that is so if I put my
data<00:43:28.870><c> and</c><00:43:29.830><c> we</c><00:43:30.370><c> can</c><00:43:30.520><c> see</c><00:43:30.820><c> in</c><00:43:31.030><c> the</c><00:43:31.210><c> console</c><00:43:31.750><c> it's</c>

00:43:32.150 --> 00:43:32.160 align:start position:0%
data and we can see in the console it's
 

00:43:32.160 --> 00:43:37.380 align:start position:0%
data and we can see in the console it's
50

00:43:37.380 --> 00:43:37.390 align:start position:0%
 
 

00:43:37.390 --> 00:43:40.770 align:start position:0%
 
you<00:43:38.020><c> can</c><00:43:38.230><c> use</c><00:43:38.410><c> array</c><00:43:38.920><c> indexes</c><00:43:39.730><c> to</c><00:43:40.060><c> modify</c>

00:43:40.770 --> 00:43:40.780 align:start position:0%
you can use array indexes to modify
 

00:43:40.780 --> 00:43:43.680 align:start position:0%
you can use array indexes to modify
arrays<00:43:41.320><c> now</c><00:43:42.250><c> we</c><00:43:42.310><c> try</c><00:43:42.700><c> to</c><00:43:42.730><c> do</c><00:43:42.940><c> this</c><00:43:43.120><c> earlier</c>

00:43:43.680 --> 00:43:43.690 align:start position:0%
arrays now we try to do this earlier
 

00:43:43.690 --> 00:43:46.230 align:start position:0%
arrays now we try to do this earlier
with<00:43:43.870><c> strings</c><00:43:44.410><c> using</c><00:43:44.890><c> bracket</c><00:43:45.430><c> notation</c><00:43:45.580><c> and</c>

00:43:46.230 --> 00:43:46.240 align:start position:0%
with strings using bracket notation and
 

00:43:46.240 --> 00:43:49.290 align:start position:0%
with strings using bracket notation and
we<00:43:46.810><c> were</c><00:43:46.990><c> not</c><00:43:47.200><c> able</c><00:43:47.500><c> to</c><00:43:47.710><c> modify</c><00:43:48.280><c> a</c><00:43:48.460><c> string</c>

00:43:49.290 --> 00:43:49.300 align:start position:0%
we were not able to modify a string
 

00:43:49.300 --> 00:43:51.810 align:start position:0%
we were not able to modify a string
using<00:43:49.630><c> bracket</c><00:43:50.140><c> notation</c><00:43:50.230><c> but</c><00:43:51.220><c> with</c><00:43:51.370><c> arrays</c>

00:43:51.810 --> 00:43:51.820 align:start position:0%
using bracket notation but with arrays
 

00:43:51.820 --> 00:43:56.430 align:start position:0%
using bracket notation but with arrays
you<00:43:52.300><c> can</c><00:43:52.690><c> so</c><00:43:53.380><c> the</c><00:43:53.710><c> original</c><00:43:54.130><c> array</c><00:43:54.370><c> is</c><00:43:54.810><c> 1864</c><00:43:55.810><c> 99</c>

00:43:56.430 --> 00:43:56.440 align:start position:0%
you can so the original array is 1864 99
 

00:43:56.440 --> 00:43:58.980 align:start position:0%
you can so the original array is 1864 99
and<00:43:56.800><c> then</c><00:43:57.490><c> we're</c><00:43:57.670><c> gonna</c><00:43:57.760><c> use</c><00:43:57.880><c> the</c><00:43:58.210><c> array</c><00:43:58.720><c> index</c>

00:43:58.980 --> 00:43:58.990 align:start position:0%
and then we're gonna use the array index
 

00:43:58.990 --> 00:44:02.520 align:start position:0%
and then we're gonna use the array index
of<00:43:59.350><c> 1</c><00:43:59.680><c> now</c><00:44:00.250><c> 1</c><00:44:00.610><c> is</c><00:44:00.850><c> going</c><00:44:01.060><c> to</c><00:44:01.180><c> be</c><00:44:01.450><c> the</c><00:44:01.900><c> second</c>

00:44:02.520 --> 00:44:02.530 align:start position:0%
of 1 now 1 is going to be the second
 

00:44:02.530 --> 00:44:07.020 align:start position:0%
of 1 now 1 is going to be the second
number<00:44:02.890><c> or</c><00:44:03.100><c> 0</c><00:44:03.580><c> 1</c><00:44:04.180><c> 2</c><00:44:04.930><c> and</c><00:44:05.260><c> this</c><00:44:05.800><c> number</c><00:44:06.040><c> 64</c><00:44:06.820><c> is</c>

00:44:07.020 --> 00:44:07.030 align:start position:0%
number or 0 1 2 and this number 64 is
 

00:44:07.030 --> 00:44:09.720 align:start position:0%
number or 0 1 2 and this number 64 is
going<00:44:07.180><c> to</c><00:44:07.240><c> be</c><00:44:07.300><c> set</c><00:44:07.510><c> to</c><00:44:07.540><c> 45</c><00:44:08.020><c> so</c><00:44:08.920><c> the</c><00:44:09.160><c> new</c><00:44:09.400><c> array</c>

00:44:09.720 --> 00:44:09.730 align:start position:0%
going to be set to 45 so the new array
 

00:44:09.730 --> 00:44:14.310 align:start position:0%
going to be set to 45 so the new array
is<00:44:09.910><c> gonna</c><00:44:10.090><c> be</c><00:44:10.830><c> 1845</c><00:44:11.880><c> 99</c><00:44:12.930><c> let's</c><00:44:13.930><c> try</c><00:44:14.140><c> it</c><00:44:14.200><c> again</c>

00:44:14.310 --> 00:44:14.320 align:start position:0%
is gonna be 1845 99 let's try it again
 

00:44:14.320 --> 00:44:19.800 align:start position:0%
is gonna be 1845 99 let's try it again
with<00:44:14.800><c> this</c><00:44:15.420><c> 1864</c><00:44:16.420><c> 99</c><00:44:16.930><c> so</c><00:44:17.890><c> let's</c><00:44:18.580><c> do</c><00:44:18.820><c> my</c><00:44:19.210><c> array</c>

00:44:19.800 --> 00:44:19.810 align:start position:0%
with this 1864 99 so let's do my array
 

00:44:19.810 --> 00:44:23.730 align:start position:0%
with this 1864 99 so let's do my array
and<00:44:20.640><c> then</c><00:44:21.640><c> instead</c><00:44:22.210><c> of</c><00:44:22.300><c> doing</c><00:44:22.450><c> the</c><00:44:22.570><c> first</c><00:44:22.990><c> the</c>

00:44:23.730 --> 00:44:23.740 align:start position:0%
and then instead of doing the first the
 

00:44:23.740 --> 00:44:25.050 align:start position:0%
and then instead of doing the first the
second<00:44:24.190><c> digit</c><00:44:24.430><c> I'm</c><00:44:24.700><c> gonna</c><00:44:24.820><c> do</c><00:44:24.910><c> the</c><00:44:25.030><c> first</c>

00:44:25.050 --> 00:44:25.060 align:start position:0%
second digit I'm gonna do the first
 

00:44:25.060 --> 00:44:27.390 align:start position:0%
second digit I'm gonna do the first
digit<00:44:25.810><c> and</c><00:44:25.960><c> the</c><00:44:26.260><c> array</c><00:44:26.500><c> the</c><00:44:26.650><c> first</c><00:44:26.680><c> index</c>

00:44:27.390 --> 00:44:27.400 align:start position:0%
digit and the array the first index
 

00:44:27.400 --> 00:44:31.080 align:start position:0%
digit and the array the first index
which<00:44:27.640><c> would</c><00:44:27.850><c> be</c><00:44:27.970><c> index</c><00:44:28.450><c> 0</c><00:44:28.960><c> and</c><00:44:29.460><c> I</c><00:44:30.460><c> will</c><00:44:30.670><c> say</c>

00:44:31.080 --> 00:44:31.090 align:start position:0%
which would be index 0 and I will say
 

00:44:31.090 --> 00:44:35.520 align:start position:0%
which would be index 0 and I will say
equals<00:44:32.250><c> 45</c><00:44:33.270><c> so</c><00:44:34.270><c> now</c><00:44:34.600><c> this</c><00:44:34.870><c> array</c><00:44:35.230><c> has</c><00:44:35.380><c> been</c>

00:44:35.520 --> 00:44:35.530 align:start position:0%
equals 45 so now this array has been
 

00:44:35.530 --> 00:44:38.730 align:start position:0%
equals 45 so now this array has been
updated<00:44:36.100><c> so</c><00:44:36.520><c> if</c><00:44:36.610><c> I</c><00:44:36.700><c> do</c><00:44:36.760><c> console</c><00:44:37.390><c> that</c><00:44:37.510><c> log</c><00:44:37.900><c> and</c>

00:44:38.730 --> 00:44:38.740 align:start position:0%
updated so if I do console that log and
 

00:44:38.740 --> 00:44:42.090 align:start position:0%
updated so if I do console that log and
then<00:44:39.370><c> through</c><00:44:39.610><c> my</c><00:44:39.640><c> array</c><00:44:40.480><c> will</c><00:44:41.320><c> see</c><00:44:41.680><c> that</c><00:44:41.950><c> the</c>

00:44:42.090 --> 00:44:42.100 align:start position:0%
then through my array will see that the
 

00:44:42.100 --> 00:44:50.930 align:start position:0%
then through my array will see that the
array<00:44:42.400><c> is</c><00:44:42.430><c> now</c><00:44:42.940><c> 45</c><00:44:43.950><c> 64</c><00:44:44.950><c> 99</c>

00:44:50.930 --> 00:44:50.940 align:start position:0%
 
 

00:44:50.940 --> 00:44:53.790 align:start position:0%
 
you<00:44:51.940><c> can</c><00:44:52.120><c> also</c><00:44:52.270><c> use</c><00:44:52.570><c> bracket</c><00:44:53.050><c> notation</c><00:44:53.170><c> to</c>

00:44:53.790 --> 00:44:53.800 align:start position:0%
you can also use bracket notation to
 

00:44:53.800 --> 00:44:56.040 align:start position:0%
you can also use bracket notation to
select<00:44:54.220><c> an</c><00:44:54.460><c> element</c><00:44:55.000><c> in</c><00:44:55.150><c> a</c><00:44:55.330><c> multi-dimensional</c>

00:44:56.040 --> 00:44:56.050 align:start position:0%
select an element in a multi-dimensional
 

00:44:56.050 --> 00:45:00.420 align:start position:0%
select an element in a multi-dimensional
or<00:44:56.830><c> array</c><00:44:57.790><c> of</c><00:44:58.120><c> arrays</c><00:44:58.500><c> so</c><00:44:59.500><c> you</c><00:44:59.590><c> can</c><00:44:59.860><c> see</c><00:45:00.100><c> this</c>

00:45:00.420 --> 00:45:00.430 align:start position:0%
or array of arrays so you can see this
 

00:45:00.430 --> 00:45:02.850 align:start position:0%
or array of arrays so you can see this
array<00:45:00.760><c> here</c><00:45:01.060><c> we</c><00:45:01.300><c> have</c><00:45:01.450><c> our</c><00:45:01.600><c> outer</c><00:45:01.930><c> array</c><00:45:02.350><c> but</c>

00:45:02.850 --> 00:45:02.860 align:start position:0%
array here we have our outer array but
 

00:45:02.860 --> 00:45:05.550 align:start position:0%
array here we have our outer array but
inside<00:45:03.310><c> that</c><00:45:03.340><c> array</c><00:45:03.910><c> are</c><00:45:04.240><c> more</c><00:45:04.990><c> arrays</c><00:45:05.290><c> the</c>

00:45:05.550 --> 00:45:05.560 align:start position:0%
inside that array are more arrays the
 

00:45:05.560 --> 00:45:07.530 align:start position:0%
inside that array are more arrays the
elements<00:45:06.100><c> of</c><00:45:06.220><c> the</c><00:45:06.580><c> array</c><00:45:06.790><c> or</c><00:45:06.970><c> other</c><00:45:07.150><c> arrays</c>

00:45:07.530 --> 00:45:07.540 align:start position:0%
elements of the array or other arrays
 

00:45:07.540 --> 00:45:10.470 align:start position:0%
elements of the array or other arrays
and<00:45:07.900><c> the</c><00:45:08.740><c> last</c><00:45:09.040><c> element</c><00:45:09.550><c> of</c><00:45:09.880><c> the</c><00:45:10.150><c> array</c>

00:45:10.470 --> 00:45:10.480 align:start position:0%
and the last element of the array
 

00:45:10.480 --> 00:45:13.740 align:start position:0%
and the last element of the array
actually<00:45:10.810><c> has</c><00:45:11.350><c> an</c><00:45:11.740><c> array</c><00:45:12.190><c> in</c><00:45:12.550><c> this</c><00:45:13.300><c> so</c><00:45:13.540><c> this</c><00:45:13.690><c> is</c>

00:45:13.740 --> 00:45:13.750 align:start position:0%
actually has an array in this so this is
 

00:45:13.750 --> 00:45:17.370 align:start position:0%
actually has an array in this so this is
a<00:45:13.900><c> three-layer</c><00:45:14.770><c> deep</c><00:45:15.220><c> array</c><00:45:15.700><c> right</c><00:45:16.030><c> here</c><00:45:16.420><c> so</c>

00:45:17.370 --> 00:45:17.380 align:start position:0%
a three-layer deep array right here so
 

00:45:17.380 --> 00:45:20.700 align:start position:0%
a three-layer deep array right here so
to<00:45:18.130><c> access</c><00:45:18.400><c> an</c><00:45:18.970><c> array</c><00:45:19.270><c> of</c><00:45:19.840><c> arrays</c><00:45:20.020><c> or</c><00:45:20.530><c> an</c>

00:45:20.700 --> 00:45:20.710 align:start position:0%
to access an array of arrays or an
 

00:45:20.710 --> 00:45:23.010 align:start position:0%
to access an array of arrays or an
element<00:45:21.160><c> within</c><00:45:21.370><c> an</c><00:45:22.000><c> array</c><00:45:22.360><c> that's</c><00:45:22.570><c> within</c><00:45:22.810><c> an</c>

00:45:23.010 --> 00:45:23.020 align:start position:0%
element within an array that's within an
 

00:45:23.020 --> 00:45:25.500 align:start position:0%
element within an array that's within an
array<00:45:23.320><c> you</c><00:45:23.920><c> use</c><00:45:24.190><c> a</c><00:45:24.550><c> double</c><00:45:25.000><c> bracket</c><00:45:25.390><c> notation</c>

00:45:25.500 --> 00:45:25.510 align:start position:0%
array you use a double bracket notation
 

00:45:25.510 --> 00:45:28.680 align:start position:0%
array you use a double bracket notation
so<00:45:26.410><c> if</c><00:45:26.500><c> you</c><00:45:26.590><c> see</c><00:45:26.770><c> this</c><00:45:26.920><c> example</c><00:45:27.130><c> here</c><00:45:27.760><c> my</c><00:45:28.330><c> array</c>

00:45:28.680 --> 00:45:28.690 align:start position:0%
so if you see this example here my array
 

00:45:28.690 --> 00:45:31.950 align:start position:0%
so if you see this example here my array
the<00:45:29.200><c> first</c><00:45:29.250><c> bracket</c><00:45:30.250><c> is</c><00:45:30.400><c> 0</c><00:45:30.850><c> that's</c><00:45:31.510><c> gonna</c><00:45:31.720><c> get</c>

00:45:31.950 --> 00:45:31.960 align:start position:0%
the first bracket is 0 that's gonna get
 

00:45:31.960 --> 00:45:34.380 align:start position:0%
the first bracket is 0 that's gonna get
the<00:45:32.170><c> first</c><00:45:32.590><c> element</c><00:45:32.860><c> in</c><00:45:33.370><c> the</c><00:45:33.400><c> array</c><00:45:33.580><c> which</c>

00:45:34.380 --> 00:45:34.390 align:start position:0%
the first element in the array which
 

00:45:34.390 --> 00:45:37.260 align:start position:0%
the first element in the array which
would<00:45:34.570><c> be</c><00:45:34.690><c> right</c><00:45:34.900><c> here</c><00:45:35.380><c> and</c><00:45:35.560><c> then</c><00:45:36.550><c> that</c>

00:45:37.260 --> 00:45:37.270 align:start position:0%
would be right here and then that
 

00:45:37.270 --> 00:45:39.930 align:start position:0%
would be right here and then that
element<00:45:37.540><c> is</c><00:45:37.840><c> an</c><00:45:37.990><c> array</c><00:45:38.260><c> so</c><00:45:38.950><c> the</c><00:45:39.250><c> second</c>

00:45:39.930 --> 00:45:39.940 align:start position:0%
element is an array so the second
 

00:45:39.940 --> 00:45:42.810 align:start position:0%
element is an array so the second
bracket<00:45:40.240><c> would</c><00:45:41.020><c> be</c><00:45:41.260><c> the</c><00:45:41.500><c> index</c><00:45:42.100><c> of</c><00:45:42.400><c> the</c><00:45:42.790><c> array</c>

00:45:42.810 --> 00:45:42.820 align:start position:0%
bracket would be the index of the array
 

00:45:42.820 --> 00:45:46.110 align:start position:0%
bracket would be the index of the array
within<00:45:43.390><c> the</c><00:45:43.630><c> array</c><00:45:43.930><c> so</c><00:45:44.470><c> this</c><00:45:44.500><c> 0</c><00:45:45.160><c> will</c><00:45:45.640><c> point</c><00:45:45.940><c> to</c>

00:45:46.110 --> 00:45:46.120 align:start position:0%
within the array so this 0 will point to
 

00:45:46.120 --> 00:45:48.810 align:start position:0%
within the array so this 0 will point to
here<00:45:46.510><c> so</c><00:45:47.290><c> let's</c><00:45:47.560><c> try</c><00:45:47.770><c> to</c><00:45:47.830><c> figure</c><00:45:48.160><c> out</c><00:45:48.340><c> how</c><00:45:48.760><c> we</c>

00:45:48.810 --> 00:45:48.820 align:start position:0%
here so let's try to figure out how we
 

00:45:48.820 --> 00:45:52.770 align:start position:0%
here so let's try to figure out how we
can<00:45:49.210><c> select</c><00:45:49.750><c> a</c><00:45:50.020><c> value</c><00:45:50.260><c> equal</c><00:45:51.040><c> to</c><00:45:51.070><c> 8</c><00:45:51.540><c> well</c><00:45:52.540><c> let's</c>

00:45:52.770 --> 00:45:52.780 align:start position:0%
can select a value equal to 8 well let's
 

00:45:52.780 --> 00:45:55.440 align:start position:0%
can select a value equal to 8 well let's
see<00:45:53.080><c> I</c><00:45:53.260><c> see</c><00:45:53.740><c> an</c><00:45:53.950><c> eight</c><00:45:54.220><c> right</c><00:45:54.520><c> here</c><00:45:54.580><c> so</c><00:45:55.420><c> let's</c>

00:45:55.440 --> 00:45:55.450 align:start position:0%
see I see an eight right here so let's
 

00:45:55.450 --> 00:45:57.210 align:start position:0%
see I see an eight right here so let's
figure<00:45:55.810><c> out</c><00:45:55.900><c> what</c><00:45:56.080><c> this</c><00:45:56.230><c> first</c><00:45:56.620><c> number</c><00:45:56.890><c> should</c>

00:45:57.210 --> 00:45:57.220 align:start position:0%
figure out what this first number should
 

00:45:57.220 --> 00:46:03.870 align:start position:0%
figure out what this first number should
be<00:45:57.250><c> well</c><00:45:58.060><c> let's</c><00:45:58.330><c> count</c><00:45:58.600><c> 0</c><00:45:59.490><c> 1</c><00:46:01.650><c> 2</c><00:46:02.650><c> so</c><00:46:03.070><c> the</c><00:46:03.580><c> third</c>

00:46:03.870 --> 00:46:03.880 align:start position:0%
be well let's count 0 1 2 so the third
 

00:46:03.880 --> 00:46:08.640 align:start position:0%
be well let's count 0 1 2 so the third
array<00:46:04.180><c> would</c><00:46:04.510><c> be</c><00:46:04.620><c> index</c><00:46:05.620><c> 2</c><00:46:06.690><c> now</c><00:46:07.690><c> when</c><00:46:08.410><c> you</c><00:46:08.500><c> want</c>

00:46:08.640 --> 00:46:08.650 align:start position:0%
array would be index 2 now when you want
 

00:46:08.650 --> 00:46:12.780 align:start position:0%
array would be index 2 now when you want
to<00:46:08.800><c> go</c><00:46:08.950><c> 0</c><00:46:09.640><c> 1</c><00:46:10.600><c> now</c><00:46:11.170><c> if</c><00:46:11.320><c> you</c><00:46:11.470><c> index</c><00:46:12.010><c> 1</c><00:46:12.340><c> to</c><00:46:12.520><c> get</c><00:46:12.640><c> the</c>

00:46:12.780 --> 00:46:12.790 align:start position:0%
to go 0 1 now if you index 1 to get the
 

00:46:12.790 --> 00:46:16.350 align:start position:0%
to go 0 1 now if you index 1 to get the
second<00:46:13.300><c> number</c><00:46:13.720><c> in</c><00:46:13.870><c> the</c><00:46:13.930><c> third</c><00:46:14.890><c> array</c><00:46:15.400><c> so</c>

00:46:16.350 --> 00:46:16.360 align:start position:0%
second number in the third array so
 

00:46:16.360 --> 00:46:19.350 align:start position:0%
second number in the third array so
let's<00:46:16.750><c> test</c><00:46:17.230><c> to</c><00:46:17.470><c> see</c><00:46:17.680><c> if</c><00:46:17.710><c> that</c><00:46:17.920><c> equals</c><00:46:18.100><c> 8</c><00:46:18.610><c> so</c>

00:46:19.350 --> 00:46:19.360 align:start position:0%
let's test to see if that equals 8 so
 

00:46:19.360 --> 00:46:22.590 align:start position:0%
let's test to see if that equals 8 so
I'll<00:46:19.690><c> do</c><00:46:19.840><c> a</c><00:46:19.870><c> consult</c><00:46:20.470><c> out</c><00:46:20.710><c> log</c><00:46:21.100><c> and</c><00:46:21.550><c> then</c><00:46:22.180><c> do</c><00:46:22.360><c> my</c>

00:46:22.590 --> 00:46:22.600 align:start position:0%
I'll do a consult out log and then do my
 

00:46:22.600 --> 00:46:27.110 align:start position:0%
I'll do a consult out log and then do my
data<00:46:22.930><c> here</c><00:46:23.670><c> and</c><00:46:24.670><c> we'll</c><00:46:25.120><c> see</c><00:46:25.330><c> if</c><00:46:25.420><c> that</c><00:46:25.480><c> equals</c><00:46:25.690><c> 8</c>

00:46:27.110 --> 00:46:27.120 align:start position:0%
data here and we'll see if that equals 8
 

00:46:27.120 --> 00:46:33.260 align:start position:0%
data here and we'll see if that equals 8
that<00:46:28.120><c> does</c><00:46:28.420><c> we</c><00:46:29.050><c> did</c><00:46:29.230><c> it</c>

00:46:33.260 --> 00:46:33.270 align:start position:0%
 
 

00:46:33.270 --> 00:46:36.410 align:start position:0%
 
you<00:46:34.230><c> can</c><00:46:34.380><c> append</c><00:46:34.770><c> data</c><00:46:34.950><c> to</c><00:46:35.670><c> the</c><00:46:35.820><c> end</c><00:46:36.030><c> of</c><00:46:36.300><c> an</c>

00:46:36.410 --> 00:46:36.420 align:start position:0%
you can append data to the end of an
 

00:46:36.420 --> 00:46:39.320 align:start position:0%
you can append data to the end of an
array<00:46:36.660><c> with</c><00:46:37.080><c> the</c><00:46:37.290><c> push</c><00:46:37.620><c> function</c><00:46:37.890><c> so</c><00:46:38.760><c> see</c><00:46:39.150><c> an</c>

00:46:39.320 --> 00:46:39.330 align:start position:0%
array with the push function so see an
 

00:46:39.330 --> 00:46:41.200 align:start position:0%
array with the push function so see an
array<00:46:39.600><c> has</c><00:46:39.750><c> been</c><00:46:39.900><c> set</c><00:46:40.140><c> up</c><00:46:40.170><c> here</c><00:46:40.260><c> our</c><00:46:40.680><c> array</c>

00:46:41.200 --> 00:46:41.210 align:start position:0%
array has been set up here our array
 

00:46:41.210 --> 00:46:45.560 align:start position:0%
array has been set up here our array
Stimpson<00:46:42.210><c> J</c><00:46:42.390><c> cat</c><00:46:43.320><c> and</c><00:46:43.680><c> then</c><00:46:44.610><c> we</c><00:46:45.090><c> take</c><00:46:45.390><c> our</c>

00:46:45.560 --> 00:46:45.570 align:start position:0%
Stimpson J cat and then we take our
 

00:46:45.570 --> 00:46:47.540 align:start position:0%
Stimpson J cat and then we take our
array<00:46:45.960><c> right</c><00:46:46.200><c> here</c><00:46:46.620><c> and</c><00:46:46.800><c> use</c><00:46:46.950><c> the</c><00:46:47.130><c> push</c>

00:46:47.540 --> 00:46:47.550 align:start position:0%
array right here and use the push
 

00:46:47.550 --> 00:46:50.990 align:start position:0%
array right here and use the push
function<00:46:47.880><c> to</c><00:46:48.720><c> push</c><00:46:49.140><c> into</c><00:46:49.980><c> the</c><00:46:50.100><c> next</c><00:46:50.520><c> Elm</c><00:46:50.700><c> in</c>

00:46:50.990 --> 00:46:51.000 align:start position:0%
function to push into the next Elm in
 

00:46:51.000 --> 00:46:54.590 align:start position:0%
function to push into the next Elm in
the<00:46:51.180><c> array</c><00:46:51.450><c> another</c><00:46:52.350><c> array</c><00:46:52.800><c> here</c><00:46:53.190><c> so</c><00:46:53.700><c> now</c><00:46:53.970><c> it's</c>

00:46:54.590 --> 00:46:54.600 align:start position:0%
the array another array here so now it's
 

00:46:54.600 --> 00:46:56.750 align:start position:0%
the array another array here so now it's
going<00:46:54.840><c> to</c><00:46:54.960><c> look</c><00:46:55.140><c> like</c><00:46:55.320><c> this</c><00:46:55.680><c> we</c><00:46:56.280><c> can</c><00:46:56.460><c> see</c><00:46:56.670><c> at</c>

00:46:56.750 --> 00:46:56.760 align:start position:0%
going to look like this we can see at
 

00:46:56.760 --> 00:46:58.430 align:start position:0%
going to look like this we can see at
the<00:46:56.790><c> end</c><00:46:56.910><c> of</c><00:46:57.240><c> the</c><00:46:57.360><c> original</c><00:46:57.810><c> array</c><00:46:58.080><c> we've</c>

00:46:58.430 --> 00:46:58.440 align:start position:0%
the end of the original array we've
 

00:46:58.440 --> 00:47:01.310 align:start position:0%
the end of the original array we've
pushed<00:46:58.830><c> this</c><00:46:59.100><c> other</c><00:46:59.400><c> array</c><00:46:59.910><c> at</c><00:47:00.090><c> the</c><00:47:00.120><c> end</c><00:47:00.420><c> so</c>

00:47:01.310 --> 00:47:01.320 align:start position:0%
pushed this other array at the end so
 

00:47:01.320 --> 00:47:04.100 align:start position:0%
pushed this other array at the end so
let's<00:47:01.350><c> try</c><00:47:02.040><c> it</c><00:47:02.100><c> again</c><00:47:02.280><c> down</c><00:47:02.700><c> here</c><00:47:02.730><c> we</c><00:47:03.630><c> have</c><00:47:03.810><c> my</c>

00:47:04.100 --> 00:47:04.110 align:start position:0%
let's try it again down here we have my
 

00:47:04.110 --> 00:47:06.410 align:start position:0%
let's try it again down here we have my
array<00:47:04.470><c> and</c><00:47:04.800><c> you</c><00:47:05.190><c> can</c><00:47:05.340><c> see</c><00:47:05.550><c> what</c><00:47:06.000><c> we</c><00:47:06.180><c> have</c>

00:47:06.410 --> 00:47:06.420 align:start position:0%
array and you can see what we have
 

00:47:06.420 --> 00:47:08.720 align:start position:0%
array and you can see what we have
each<00:47:06.690><c> Elm</c><00:47:07.050><c> in</c><00:47:07.290><c> the</c><00:47:07.440><c> array</c><00:47:07.650><c> is</c><00:47:07.890><c> another</c><00:47:08.310><c> array</c>

00:47:08.720 --> 00:47:08.730 align:start position:0%
each Elm in the array is another array
 

00:47:08.730 --> 00:47:14.090 align:start position:0%
each Elm in the array is another array
so<00:47:09.720><c> I</c><00:47:09.990><c> am</c><00:47:10.470><c> going</c><00:47:10.860><c> to</c><00:47:11.070><c> do</c><00:47:11.400><c> my</c><00:47:12.270><c> array</c><00:47:12.930><c> dot</c><00:47:13.470><c> push</c>

00:47:14.090 --> 00:47:14.100 align:start position:0%
so I am going to do my array dot push
 

00:47:14.100 --> 00:47:16.460 align:start position:0%
so I am going to do my array dot push
and<00:47:14.460><c> then</c><00:47:15.090><c> I</c><00:47:15.120><c> can</c><00:47:15.360><c> push</c><00:47:15.660><c> something</c><00:47:15.900><c> on</c><00:47:16.170><c> the</c><00:47:16.320><c> end</c>

00:47:16.460 --> 00:47:16.470 align:start position:0%
and then I can push something on the end
 

00:47:16.470 --> 00:47:18.800 align:start position:0%
and then I can push something on the end
here<00:47:16.710><c> which</c><00:47:17.130><c> will</c><00:47:17.370><c> be</c><00:47:17.550><c> like</c><00:47:18.090><c> above</c><00:47:18.420><c> another</c>

00:47:18.800 --> 00:47:18.810 align:start position:0%
here which will be like above another
 

00:47:18.810 --> 00:47:23.690 align:start position:0%
here which will be like above another
array<00:47:19.170><c> so</c><00:47:19.980><c> this</c><00:47:20.340><c> is</c><00:47:20.700><c> gonna</c><00:47:20.850><c> say</c><00:47:21.120><c> dog</c><00:47:21.980><c> I'm</c><00:47:22.980><c> a</c><00:47:23.040><c> 3</c>

00:47:23.690 --> 00:47:23.700 align:start position:0%
array so this is gonna say dog I'm a 3
 

00:47:23.700 --> 00:47:27.470 align:start position:0%
array so this is gonna say dog I'm a 3
and<00:47:24.170><c> now</c><00:47:25.170><c> we've</c><00:47:25.770><c> pushed</c><00:47:26.220><c> this</c><00:47:26.550><c> on</c><00:47:26.820><c> to</c><00:47:27.270><c> the</c>

00:47:27.470 --> 00:47:27.480 align:start position:0%
and now we've pushed this on to the
 

00:47:27.480 --> 00:47:31.790 align:start position:0%
and now we've pushed this on to the
array

00:47:31.790 --> 00:47:31.800 align:start position:0%
 
 

00:47:31.800 --> 00:47:34.850 align:start position:0%
 
we<00:47:32.760><c> can</c><00:47:32.940><c> remove</c><00:47:33.330><c> an</c><00:47:33.510><c> item</c><00:47:33.690><c> from</c><00:47:34.230><c> an</c><00:47:34.380><c> array</c><00:47:34.620><c> with</c>

00:47:34.850 --> 00:47:34.860 align:start position:0%
we can remove an item from an array with
 

00:47:34.860 --> 00:47:37.820 align:start position:0%
we can remove an item from an array with
the<00:47:35.070><c> pop</c><00:47:35.430><c> function</c><00:47:36.240><c> here</c><00:47:36.660><c> so</c><00:47:36.810><c> see</c><00:47:37.320><c> this</c><00:47:37.500><c> pop</c>

00:47:37.820 --> 00:47:37.830 align:start position:0%
the pop function here so see this pop
 

00:47:37.830 --> 00:47:39.440 align:start position:0%
the pop function here so see this pop
here<00:47:38.190><c> and</c><00:47:38.370><c> then</c><00:47:38.820><c> we</c><00:47:38.880><c> know</c><00:47:39.000><c> it's</c><00:47:39.120><c> a</c><00:47:39.180><c> function</c>

00:47:39.440 --> 00:47:39.450 align:start position:0%
here and then we know it's a function
 

00:47:39.450 --> 00:47:41.420 align:start position:0%
here and then we know it's a function
because<00:47:39.750><c> of</c><00:47:39.900><c> the</c><00:47:40.050><c> parentheses</c><00:47:40.830><c> at</c><00:47:41.010><c> the</c><00:47:41.040><c> end</c><00:47:41.160><c> of</c>

00:47:41.420 --> 00:47:41.430 align:start position:0%
because of the parentheses at the end of
 

00:47:41.430 --> 00:47:43.970 align:start position:0%
because of the parentheses at the end of
the<00:47:41.520><c> word</c><00:47:41.670><c> pop</c><00:47:42.030><c> so</c><00:47:42.690><c> the</c><00:47:42.840><c> array</c><00:47:43.140><c> starts</c><00:47:43.770><c> with</c>

00:47:43.970 --> 00:47:43.980 align:start position:0%
the word pop so the array starts with
 

00:47:43.980 --> 00:47:47.090 align:start position:0%
the word pop so the array starts with
one<00:47:44.370><c> two</c><00:47:44.730><c> three</c><00:47:45.150><c> so</c><00:47:45.870><c> now</c><00:47:46.380><c> we</c><00:47:46.440><c> do</c><00:47:46.740><c> this</c><00:47:46.890><c> our</c>

00:47:47.090 --> 00:47:47.100 align:start position:0%
one two three so now we do this our
 

00:47:47.100 --> 00:47:49.640 align:start position:0%
one two three so now we do this our
array<00:47:47.430><c> dot</c><00:47:47.730><c> pop</c><00:47:48.120><c> and</c><00:47:48.540><c> it's</c><00:47:49.020><c> going</c><00:47:49.170><c> to</c><00:47:49.260><c> return</c>

00:47:49.640 --> 00:47:49.650 align:start position:0%
array dot pop and it's going to return
 

00:47:49.650 --> 00:47:51.710 align:start position:0%
array dot pop and it's going to return
the<00:47:49.890><c> it's</c><00:47:50.400><c> going</c><00:47:50.700><c> to</c><00:47:50.820><c> remove</c><00:47:51.240><c> the</c><00:47:51.510><c> last</c>

00:47:51.710 --> 00:47:51.720 align:start position:0%
the it's going to remove the last
 

00:47:51.720 --> 00:47:54.320 align:start position:0%
the it's going to remove the last
element<00:47:52.260><c> which</c><00:47:52.500><c> is</c><00:47:52.530><c> the</c><00:47:52.830><c> three</c><00:47:53.220><c> and</c><00:47:53.520><c> then</c><00:47:54.210><c> it's</c>

00:47:54.320 --> 00:47:54.330 align:start position:0%
element which is the three and then it's
 

00:47:54.330 --> 00:47:56.630 align:start position:0%
element which is the three and then it's
gonna<00:47:54.510><c> put</c><00:47:54.840><c> it</c><00:47:54.960><c> right</c><00:47:55.080><c> into</c><00:47:55.710><c> this</c><00:47:55.860><c> variable</c>

00:47:56.630 --> 00:47:56.640 align:start position:0%
gonna put it right into this variable
 

00:47:56.640 --> 00:47:59.540 align:start position:0%
gonna put it right into this variable
here<00:47:57.090><c> so</c><00:47:57.780><c> now</c><00:47:58.140><c> as</c><00:47:58.980><c> you</c><00:47:59.040><c> can</c><00:47:59.130><c> see</c><00:47:59.250><c> down</c><00:47:59.520><c> here</c>

00:47:59.540 --> 00:47:59.550 align:start position:0%
here so now as you can see down here
 

00:47:59.550 --> 00:48:02.150 align:start position:0%
here so now as you can see down here
remove<00:48:00.540><c> from</c><00:48:00.780><c> our</c><00:48:00.900><c> array</c><00:48:01.200><c> now</c><00:48:01.470><c> equals</c><00:48:01.830><c> three</c>

00:48:02.150 --> 00:48:02.160 align:start position:0%
remove from our array now equals three
 

00:48:02.160 --> 00:48:04.820 align:start position:0%
remove from our array now equals three
and<00:48:02.430><c> then</c><00:48:02.940><c> our</c><00:48:03.180><c> array</c><00:48:03.540><c> is</c><00:48:03.810><c> gonna</c><00:48:04.050><c> equal</c><00:48:04.200><c> one</c>

00:48:04.820 --> 00:48:04.830 align:start position:0%
and then our array is gonna equal one
 

00:48:04.830 --> 00:48:06.800 align:start position:0%
and then our array is gonna equal one
two<00:48:05.220><c> because</c><00:48:05.820><c> the</c><00:48:06.000><c> three</c><00:48:06.270><c> has</c><00:48:06.360><c> been</c><00:48:06.540><c> popped</c>

00:48:06.800 --> 00:48:06.810 align:start position:0%
two because the three has been popped
 

00:48:06.810 --> 00:48:09.770 align:start position:0%
two because the three has been popped
off<00:48:07.110><c> so</c><00:48:07.950><c> we</c><00:48:08.070><c> can</c><00:48:08.280><c> do</c><00:48:08.400><c> the</c><00:48:08.520><c> same</c><00:48:08.760><c> thing</c><00:48:09.150><c> here</c><00:48:09.630><c> so</c>

00:48:09.770 --> 00:48:09.780 align:start position:0%
off so we can do the same thing here so
 

00:48:09.780 --> 00:48:13.160 align:start position:0%
off so we can do the same thing here so
remove<00:48:10.740><c> from</c><00:48:11.010><c> my</c><00:48:11.190><c> array</c><00:48:11.600><c> equals</c><00:48:12.600><c> and</c><00:48:13.050><c> I'm</c>

00:48:13.160 --> 00:48:13.170 align:start position:0%
remove from my array equals and I'm
 

00:48:13.170 --> 00:48:17.030 align:start position:0%
remove from my array equals and I'm
going<00:48:13.320><c> to</c><00:48:13.350><c> do</c><00:48:13.440><c> my</c><00:48:13.890><c> array</c><00:48:14.400><c> dot</c><00:48:14.970><c> pop</c><00:48:15.480><c> and</c><00:48:15.990><c> we</c><00:48:16.830><c> can</c>

00:48:17.030 --> 00:48:17.040 align:start position:0%
going to do my array dot pop and we can
 

00:48:17.040 --> 00:48:19.250 align:start position:0%
going to do my array dot pop and we can
see<00:48:17.310><c> what</c><00:48:17.520><c> the</c><00:48:17.730><c> array</c><00:48:18.030><c> is</c><00:48:18.270><c> gonna</c><00:48:18.420><c> equal</c><00:48:18.630><c> now</c><00:48:18.990><c> if</c>

00:48:19.250 --> 00:48:19.260 align:start position:0%
see what the array is gonna equal now if
 

00:48:19.260 --> 00:48:24.710 align:start position:0%
see what the array is gonna equal now if
I<00:48:19.620><c> just</c><00:48:19.830><c> do</c><00:48:20.010><c> console</c><00:48:20.670><c> dot</c><00:48:20.880><c> log</c><00:48:20.940><c> I</c><00:48:22.670><c> array</c><00:48:23.670><c> and</c><00:48:24.240><c> if</c>

00:48:24.710 --> 00:48:24.720 align:start position:0%
I just do console dot log I array and if
 

00:48:24.720 --> 00:48:27.650 align:start position:0%
I just do console dot log I array and if
you<00:48:24.870><c> do</c><00:48:25.440><c> this</c><00:48:25.680><c> we</c><00:48:26.250><c> can</c><00:48:26.460><c> see</c><00:48:26.700><c> that</c><00:48:26.940><c> the</c><00:48:27.180><c> array</c>

00:48:27.650 --> 00:48:27.660 align:start position:0%
you do this we can see that the array
 

00:48:27.660 --> 00:48:30.110 align:start position:0%
you do this we can see that the array
only<00:48:27.930><c> has</c><00:48:28.290><c> the</c><00:48:28.590><c> one</c><00:48:28.860><c> item</c><00:48:29.160><c> the</c><00:48:29.610><c> one</c><00:48:29.820><c> array</c>

00:48:30.110 --> 00:48:30.120 align:start position:0%
only has the one item the one array
 

00:48:30.120 --> 00:48:35.410 align:start position:0%
only has the one item the one array
instead<00:48:30.660><c> of</c><00:48:30.810><c> the</c><00:48:30.960><c> two</c><00:48:31.170><c> arrays</c>

00:48:35.410 --> 00:48:35.420 align:start position:0%
 
 

00:48:35.420 --> 00:48:38.240 align:start position:0%
 
the<00:48:36.420><c> shift</c><00:48:36.810><c> function</c><00:48:37.170><c> is</c><00:48:37.590><c> very</c><00:48:37.770><c> similar</c><00:48:37.860><c> to</c>

00:48:38.240 --> 00:48:38.250 align:start position:0%
the shift function is very similar to
 

00:48:38.250 --> 00:48:41.000 align:start position:0%
the shift function is very similar to
the<00:48:38.430><c> pop</c><00:48:38.640><c> function</c><00:48:39.240><c> except</c><00:48:40.050><c> it</c><00:48:40.230><c> removes</c><00:48:40.740><c> the</c>

00:48:41.000 --> 00:48:41.010 align:start position:0%
the pop function except it removes the
 

00:48:41.010 --> 00:48:43.070 align:start position:0%
the pop function except it removes the
first<00:48:41.370><c> element</c><00:48:41.970><c> of</c><00:48:42.060><c> the</c><00:48:42.150><c> array</c><00:48:42.660><c> instead</c><00:48:42.810><c> of</c>

00:48:43.070 --> 00:48:43.080 align:start position:0%
first element of the array instead of
 

00:48:43.080 --> 00:48:45.620 align:start position:0%
first element of the array instead of
the<00:48:43.200><c> final</c><00:48:43.650><c> element</c><00:48:44.100><c> so</c><00:48:44.700><c> we</c><00:48:44.730><c> see</c><00:48:45.150><c> the</c><00:48:45.300><c> shift</c>

00:48:45.620 --> 00:48:45.630 align:start position:0%
the final element so we see the shift
 

00:48:45.630 --> 00:48:47.420 align:start position:0%
the final element so we see the shift
function<00:48:46.200><c> on</c><00:48:46.380><c> the</c><00:48:46.560><c> end</c><00:48:46.680><c> of</c><00:48:46.740><c> the</c><00:48:46.860><c> array</c><00:48:47.100><c> here</c>

00:48:47.420 --> 00:48:47.430 align:start position:0%
function on the end of the array here
 

00:48:47.430 --> 00:48:50.300 align:start position:0%
function on the end of the array here
and<00:48:47.670><c> the</c><00:48:48.360><c> array</c><00:48:48.600><c> is</c><00:48:48.660><c> the</c><00:48:48.810><c> same</c><00:48:49.110><c> as</c><00:48:49.260><c> before</c><00:48:49.440><c> but</c>

00:48:50.300 --> 00:48:50.310 align:start position:0%
and the array is the same as before but
 

00:48:50.310 --> 00:48:53.510 align:start position:0%
and the array is the same as before but
now<00:48:50.670><c> the</c><00:48:50.730><c> first</c><00:48:51.420><c> element</c><00:48:51.990><c> Stimpson</c><00:48:52.650><c> is</c><00:48:53.070><c> being</c>

00:48:53.510 --> 00:48:53.520 align:start position:0%
now the first element Stimpson is being
 

00:48:53.520 --> 00:48:56.480 align:start position:0%
now the first element Stimpson is being
removed<00:48:54.090><c> as</c><00:48:54.540><c> we</c><00:48:55.200><c> shift</c><00:48:55.620><c> off</c><00:48:55.890><c> the</c><00:48:56.220><c> first</c>

00:48:56.480 --> 00:48:56.490 align:start position:0%
removed as we shift off the first
 

00:48:56.490 --> 00:48:59.000 align:start position:0%
removed as we shift off the first
element<00:48:57.000><c> the</c><00:48:57.480><c> array</c><00:48:57.720><c> is</c><00:48:57.780><c> going</c><00:48:57.990><c> to</c><00:48:58.140><c> equal</c><00:48:58.350><c> J</c>

00:48:59.000 --> 00:48:59.010 align:start position:0%
element the array is going to equal J
 

00:48:59.010 --> 00:49:01.880 align:start position:0%
element the array is going to equal J
cat<00:48:59.430><c> and</c><00:48:59.820><c> the</c><00:49:00.570><c> removed</c><00:49:00.960><c> from</c><00:49:01.140><c> our</c><00:49:01.320><c> array</c><00:49:01.620><c> is</c>

00:49:01.880 --> 00:49:01.890 align:start position:0%
cat and the removed from our array is
 

00:49:01.890 --> 00:49:04.370 align:start position:0%
cat and the removed from our array is
gonna<00:49:02.130><c> equal</c><00:49:02.280><c> Stimpson</c><00:49:02.940><c> so</c><00:49:03.810><c> let's</c><00:49:04.020><c> do</c><00:49:04.200><c> another</c>

00:49:04.370 --> 00:49:04.380 align:start position:0%
gonna equal Stimpson so let's do another
 

00:49:04.380 --> 00:49:07.160 align:start position:0%
gonna equal Stimpson so let's do another
example<00:49:04.770><c> down</c><00:49:05.370><c> here</c><00:49:05.400><c> we're</c><00:49:06.330><c> gonna</c><00:49:06.510><c> do</c><00:49:06.690><c> a</c><00:49:06.720><c> shift</c>

00:49:07.160 --> 00:49:07.170 align:start position:0%
example down here we're gonna do a shift
 

00:49:07.170 --> 00:49:10.090 align:start position:0%
example down here we're gonna do a shift
again<00:49:07.500><c> so</c><00:49:07.650><c> I'm</c><00:49:07.740><c> gonna</c><00:49:07.830><c> do</c><00:49:07.950><c> equals</c><00:49:08.550><c> my</c><00:49:09.240><c> array</c>

00:49:10.090 --> 00:49:10.100 align:start position:0%
again so I'm gonna do equals my array
 

00:49:10.100 --> 00:49:15.650 align:start position:0%
again so I'm gonna do equals my array
shift<00:49:11.100><c> and</c><00:49:12.200><c> now</c><00:49:13.790><c> my</c><00:49:14.790><c> array</c><00:49:15.090><c> is</c><00:49:15.300><c> just</c><00:49:15.480><c> going</c><00:49:15.600><c> to</c>

00:49:15.650 --> 00:49:15.660 align:start position:0%
shift and now my array is just going to
 

00:49:15.660 --> 00:49:19.130 align:start position:0%
shift and now my array is just going to
equal<00:49:15.720><c> dog</c><00:49:16.500><c> 3</c><00:49:17.130><c> and</c><00:49:17.370><c> the</c><00:49:18.000><c> remove</c><00:49:18.420><c> from</c><00:49:18.720><c> my</c><00:49:18.840><c> array</c>

00:49:19.130 --> 00:49:19.140 align:start position:0%
equal dog 3 and the remove from my array
 

00:49:19.140 --> 00:49:25.430 align:start position:0%
equal dog 3 and the remove from my array
is<00:49:19.350><c> going</c><00:49:19.830><c> to</c><00:49:19.890><c> equal</c><00:49:20.070><c> John</c><00:49:20.760><c> 23</c>

00:49:25.430 --> 00:49:25.440 align:start position:0%
 
 

00:49:25.440 --> 00:49:28.880 align:start position:0%
 
the<00:49:26.280><c> unshifted</c><00:49:26.820><c> is</c><00:49:27.600><c> similar</c><00:49:28.080><c> to</c><00:49:28.350><c> the</c><00:49:28.560><c> push</c>

00:49:28.880 --> 00:49:28.890 align:start position:0%
the unshifted is similar to the push
 

00:49:28.890 --> 00:49:31.550 align:start position:0%
the unshifted is similar to the push
array<00:49:29.400><c> function</c><00:49:29.940><c> while</c><00:49:30.570><c> push</c><00:49:30.990><c> adds</c><00:49:31.350><c> an</c>

00:49:31.550 --> 00:49:31.560 align:start position:0%
array function while push adds an
 

00:49:31.560 --> 00:49:34.310 align:start position:0%
array function while push adds an
element<00:49:31.860><c> to</c><00:49:32.010><c> the</c><00:49:32.130><c> end</c><00:49:32.250><c> of</c><00:49:32.520><c> the</c><00:49:32.670><c> array</c><00:49:32.970><c> on</c><00:49:33.330><c> shift</c>

00:49:34.310 --> 00:49:34.320 align:start position:0%
element to the end of the array on shift
 

00:49:34.320 --> 00:49:36.650 align:start position:0%
element to the end of the array on shift
adds<00:49:34.680><c> an</c><00:49:34.920><c> element</c><00:49:35.220><c> to</c><00:49:35.670><c> the</c><00:49:35.820><c> beginning</c><00:49:36.240><c> of</c><00:49:36.480><c> the</c>

00:49:36.650 --> 00:49:36.660 align:start position:0%
adds an element to the beginning of the
 

00:49:36.660 --> 00:49:38.780 align:start position:0%
adds an element to the beginning of the
array<00:49:36.990><c> so</c><00:49:37.620><c> let's</c><00:49:37.830><c> look</c><00:49:38.070><c> through</c><00:49:38.280><c> this</c><00:49:38.430><c> example</c>

00:49:38.780 --> 00:49:38.790 align:start position:0%
array so let's look through this example
 

00:49:38.790 --> 00:49:42.110 align:start position:0%
array so let's look through this example
code<00:49:39.330><c> we</c><00:49:39.900><c> have</c><00:49:40.110><c> the</c><00:49:40.320><c> array</c><00:49:40.590><c> Stimpson</c><00:49:41.490><c> J</c><00:49:41.640><c> cat</c>

00:49:42.110 --> 00:49:42.120 align:start position:0%
code we have the array Stimpson J cat
 

00:49:42.120 --> 00:49:44.480 align:start position:0%
code we have the array Stimpson J cat
we're<00:49:42.690><c> going</c><00:49:42.870><c> to</c><00:49:42.990><c> shift</c><00:49:43.410><c> off</c><00:49:43.710><c> the</c><00:49:44.130><c> first</c>

00:49:44.480 --> 00:49:44.490 align:start position:0%
we're going to shift off the first
 

00:49:44.490 --> 00:49:47.420 align:start position:0%
we're going to shift off the first
element<00:49:45.090><c> remove</c><00:49:45.810><c> the</c><00:49:46.050><c> first</c><00:49:46.230><c> element</c><00:49:46.770><c> so</c><00:49:47.280><c> our</c>

00:49:47.420 --> 00:49:47.430 align:start position:0%
element remove the first element so our
 

00:49:47.430 --> 00:49:51.100 align:start position:0%
element remove the first element so our
array<00:49:47.850><c> is</c><00:49:48.090><c> J</c><00:49:48.510><c> cat</c><00:49:48.980><c> now</c><00:49:49.980><c> we're</c><00:49:50.130><c> gonna</c><00:49:50.250><c> unshifted</c>

00:49:51.100 --> 00:49:51.110 align:start position:0%
array is J cat now we're gonna unshifted
 

00:49:51.110 --> 00:49:54.200 align:start position:0%
array is J cat now we're gonna unshifted
an<00:49:52.110><c> element</c><00:49:52.590><c> at</c><00:49:52.650><c> the</c><00:49:52.710><c> beginning</c><00:49:53.220><c> which</c><00:49:53.820><c> is</c><00:49:53.850><c> the</c>

00:49:54.200 --> 00:49:54.210 align:start position:0%
an element at the beginning which is the
 

00:49:54.210 --> 00:49:57.440 align:start position:0%
an element at the beginning which is the
string<00:49:54.570><c> happy</c><00:49:55.110><c> so</c><00:49:55.950><c> the</c><00:49:56.190><c> array</c><00:49:56.490><c> will</c><00:49:56.970><c> now</c><00:49:57.210><c> be</c>

00:49:57.440 --> 00:49:57.450 align:start position:0%
string happy so the array will now be
 

00:49:57.450 --> 00:49:58.280 align:start position:0%
string happy so the array will now be
happy

00:49:58.280 --> 00:49:58.290 align:start position:0%
happy
 

00:49:58.290 --> 00:50:03.350 align:start position:0%
happy
J<00:49:58.710><c> can't</c><00:49:59.270><c> so</c><00:50:00.270><c> let's</c><00:50:00.480><c> try</c><00:50:00.780><c> again</c><00:50:01.610><c> this</c><00:50:02.610><c> time</c><00:50:02.670><c> the</c>

00:50:03.350 --> 00:50:03.360 align:start position:0%
J can't so let's try again this time the
 

00:50:03.360 --> 00:50:07.340 align:start position:0%
J can't so let's try again this time the
array<00:50:03.600><c> is</c><00:50:03.780><c> john</c><00:50:04.230><c> xxiii</c><00:50:04.920><c> dog</c><00:50:05.550><c> 3</c><00:50:06.080><c> because</c><00:50:07.080><c> of</c><00:50:07.200><c> the</c>

00:50:07.340 --> 00:50:07.350 align:start position:0%
array is john xxiii dog 3 because of the
 

00:50:07.350 --> 00:50:11.480 align:start position:0%
array is john xxiii dog 3 because of the
shift<00:50:07.770><c> we've</c><00:50:08.400><c> shifted</c><00:50:08.910><c> off</c><00:50:09.450><c> the</c><00:50:10.020><c> John</c><00:50:10.350><c> 23</c><00:50:11.190><c> and</c>

00:50:11.480 --> 00:50:11.490 align:start position:0%
shift we've shifted off the John 23 and
 

00:50:11.490 --> 00:50:20.120 align:start position:0%
shift we've shifted off the John 23 and
now<00:50:12.060><c> I'm</c><00:50:12.180><c> going</c><00:50:12.450><c> to</c><00:50:12.600><c> unshifted</c><00:50:16.940><c> on</c><00:50:17.940><c> shift</c><00:50:19.130><c> now</c>

00:50:20.120 --> 00:50:20.130 align:start position:0%
now I'm going to unshifted on shift now
 

00:50:20.130 --> 00:50:22.700 align:start position:0%
now I'm going to unshifted on shift now
we're<00:50:20.340><c> going</c><00:50:20.550><c> to</c><00:50:20.960><c> add</c><00:50:21.960><c> something</c><00:50:22.350><c> to</c><00:50:22.620><c> the</c>

00:50:22.700 --> 00:50:22.710 align:start position:0%
we're going to add something to the
 

00:50:22.710 --> 00:50:27.910 align:start position:0%
we're going to add something to the
beginning<00:50:23.040><c> of</c><00:50:23.190><c> the</c><00:50:23.310><c> array</c><00:50:23.580><c> we'll</c><00:50:24.420><c> do</c><00:50:24.690><c> Paul</c>

00:50:27.910 --> 00:50:27.920 align:start position:0%
 
 

00:50:27.920 --> 00:50:31.850 align:start position:0%
 
35<00:50:29.240><c> so</c><00:50:30.240><c> now</c><00:50:30.480><c> the</c><00:50:30.540><c> array</c><00:50:30.990><c> is</c><00:50:31.260><c> this</c><00:50:31.560><c> going</c><00:50:31.740><c> to</c><00:50:31.800><c> be</c>

00:50:31.850 --> 00:50:31.860 align:start position:0%
35 so now the array is this going to be
 

00:50:31.860 --> 00:50:39.180 align:start position:0%
35 so now the array is this going to be
Paul<00:50:32.220><c> 35</c><00:50:33.140><c> dog</c><00:50:34.140><c> 3</c>

00:50:39.180 --> 00:50:39.190 align:start position:0%
 
 

00:50:39.190 --> 00:50:41.160 align:start position:0%
 
let<00:50:39.850><c> me</c><00:50:39.940><c> give</c><00:50:40.150><c> you</c><00:50:40.240><c> another</c><00:50:40.270><c> example</c><00:50:41.020><c> of</c>

00:50:41.160 --> 00:50:41.170 align:start position:0%
let me give you another example of
 

00:50:41.170 --> 00:50:44.070 align:start position:0%
let me give you another example of
nested<00:50:41.800><c> arrays</c><00:50:42.180><c> this</c><00:50:43.180><c> will</c><00:50:43.390><c> be</c><00:50:43.510><c> a</c><00:50:43.540><c> shopping</c>

00:50:44.070 --> 00:50:44.080 align:start position:0%
nested arrays this will be a shopping
 

00:50:44.080 --> 00:50:46.680 align:start position:0%
nested arrays this will be a shopping
list<00:50:44.110><c> so</c><00:50:45.010><c> inside</c><00:50:45.640><c> this</c><00:50:45.910><c> array</c><00:50:46.240><c> we're</c><00:50:46.510><c> going</c><00:50:46.540><c> to</c>

00:50:46.680 --> 00:50:46.690 align:start position:0%
list so inside this array we're going to
 

00:50:46.690 --> 00:50:48.690 align:start position:0%
list so inside this array we're going to
have<00:50:46.810><c> another</c><00:50:47.080><c> array</c><00:50:47.410><c> and</c><00:50:47.770><c> we're</c><00:50:48.400><c> gonna</c><00:50:48.490><c> have</c>

00:50:48.690 --> 00:50:48.700 align:start position:0%
have another array and we're gonna have
 

00:50:48.700 --> 00:50:53.510 align:start position:0%
have another array and we're gonna have
items<00:50:49.830><c> cereal</c><00:50:50.830><c> how</c><00:50:51.730><c> many</c><00:50:51.910><c> boxes</c><00:50:52.150><c> three</c><00:50:52.810><c> boxes</c>

00:50:53.510 --> 00:50:53.520 align:start position:0%
items cereal how many boxes three boxes
 

00:50:53.520 --> 00:51:00.390 align:start position:0%
items cereal how many boxes three boxes
we<00:50:54.520><c> also</c><00:50:54.820><c> need</c><00:50:55.570><c> some</c><00:50:56.490><c> milk</c><00:50:58.080><c> let's</c><00:50:59.080><c> get</c><00:50:59.410><c> two</c>

00:51:00.390 --> 00:51:00.400 align:start position:0%
we also need some milk let's get two
 

00:51:00.400 --> 00:51:09.350 align:start position:0%
we also need some milk let's get two
cartons<00:51:01.000><c> of</c><00:51:01.090><c> milk</c><00:51:02.610><c> let's</c><00:51:03.610><c> get</c><00:51:03.910><c> some</c><00:51:04.410><c> bananas</c>

00:51:09.350 --> 00:51:09.360 align:start position:0%
 
 

00:51:09.360 --> 00:51:13.860 align:start position:0%
 
three<00:51:10.360><c> bunches</c><00:51:10.900><c> of</c><00:51:11.050><c> three</c><00:51:11.530><c> bananas</c><00:51:12.870><c> we'll</c>

00:51:13.860 --> 00:51:13.870 align:start position:0%
three bunches of three bananas we'll
 

00:51:13.870 --> 00:51:22.440 align:start position:0%
three bunches of three bananas we'll
also<00:51:14.170><c> get</c><00:51:15.810><c> some</c><00:51:16.950><c> juice</c><00:51:20.580><c> two</c><00:51:21.580><c> containers</c><00:51:22.240><c> of</c>

00:51:22.440 --> 00:51:22.450 align:start position:0%
also get some juice two containers of
 

00:51:22.450 --> 00:51:29.270 align:start position:0%
also get some juice two containers of
juice<00:51:22.840><c> and</c><00:51:23.730><c> finally</c><00:51:24.900><c> we</c><00:51:25.900><c> will</c><00:51:26.110><c> get</c><00:51:26.380><c> some</c><00:51:26.800><c> eggs</c>

00:51:29.270 --> 00:51:29.280 align:start position:0%
juice and finally we will get some eggs
 

00:51:29.280 --> 00:51:35.790 align:start position:0%
juice and finally we will get some eggs
we'll<00:51:30.280><c> get</c><00:51:32.160><c> 12</c><00:51:33.160><c> eggs</c><00:51:33.520><c> and</c><00:51:34.180><c> now</c><00:51:34.990><c> we've</c><00:51:35.470><c> created</c>

00:51:35.790 --> 00:51:35.800 align:start position:0%
we'll get 12 eggs and now we've created
 

00:51:35.800 --> 00:51:39.360 align:start position:0%
we'll get 12 eggs and now we've created
an<00:51:36.310><c> array</c><00:51:36.850><c> of</c><00:51:36.880><c> arrays</c><00:51:37.780><c> which</c><00:51:38.710><c> is</c><00:51:38.920><c> our</c><00:51:39.070><c> shopping</c>

00:51:39.360 --> 00:51:39.370 align:start position:0%
an array of arrays which is our shopping
 

00:51:39.370 --> 00:51:43.960 align:start position:0%
an array of arrays which is our shopping
list

00:51:43.960 --> 00:51:43.970 align:start position:0%
 
 

00:51:43.970 --> 00:51:46.700 align:start position:0%
 
functions<00:51:44.970><c> allow</c><00:51:45.270><c> us</c><00:51:45.450><c> to</c><00:51:45.630><c> create</c><00:51:45.930><c> reusable</c>

00:51:46.700 --> 00:51:46.710 align:start position:0%
functions allow us to create reusable
 

00:51:46.710 --> 00:51:49.460 align:start position:0%
functions allow us to create reusable
code<00:51:47.070><c> in</c><00:51:47.430><c> JavaScript</c><00:51:48.330><c> this</c><00:51:49.140><c> is</c><00:51:49.290><c> how</c><00:51:49.440><c> a</c>

00:51:49.460 --> 00:51:49.470 align:start position:0%
code in JavaScript this is how a
 

00:51:49.470 --> 00:51:52.130 align:start position:0%
code in JavaScript this is how a
function<00:51:50.040><c> is</c><00:51:50.190><c> set</c><00:51:50.490><c> up</c><00:51:50.700><c> we</c><00:51:51.540><c> have</c><00:51:51.720><c> the</c><00:51:51.900><c> word</c>

00:51:52.130 --> 00:51:52.140 align:start position:0%
function is set up we have the word
 

00:51:52.140 --> 00:51:55.490 align:start position:0%
function is set up we have the word
function<00:51:53.040><c> then</c><00:51:54.030><c> we</c><00:51:54.240><c> have</c><00:51:54.450><c> the</c><00:51:54.690><c> function</c><00:51:55.200><c> name</c>

00:51:55.490 --> 00:51:55.500 align:start position:0%
function then we have the function name
 

00:51:55.500 --> 00:51:59.000 align:start position:0%
function then we have the function name
there's<00:51:56.340><c> always</c><00:51:56.580><c> parentheses</c><00:51:57.510><c> here</c><00:51:57.930><c> and</c><00:51:58.110><c> you</c>

00:51:59.000 --> 00:51:59.010 align:start position:0%
there's always parentheses here and you
 

00:51:59.010 --> 00:52:01.040 align:start position:0%
there's always parentheses here and you
can<00:51:59.310><c> pass</c><00:51:59.760><c> information</c><00:52:00.030><c> into</c><00:52:00.930><c> the</c>

00:52:01.040 --> 00:52:01.050 align:start position:0%
can pass information into the
 

00:52:01.050 --> 00:52:03.320 align:start position:0%
can pass information into the
parentheses<00:52:01.650><c> we'll</c><00:52:02.640><c> talk</c><00:52:02.850><c> about</c><00:52:02.970><c> that</c><00:52:03.270><c> later</c>

00:52:03.320 --> 00:52:03.330 align:start position:0%
parentheses we'll talk about that later
 

00:52:03.330 --> 00:52:06.890 align:start position:0%
parentheses we'll talk about that later
and<00:52:03.870><c> then</c><00:52:04.710><c> we</c><00:52:04.860><c> have</c><00:52:05.010><c> these</c><00:52:05.220><c> curly</c><00:52:05.700><c> brackets</c><00:52:06.210><c> so</c>

00:52:06.890 --> 00:52:06.900 align:start position:0%
and then we have these curly brackets so
 

00:52:06.900 --> 00:52:09.020 align:start position:0%
and then we have these curly brackets so
that<00:52:06.930><c> this</c><00:52:07.590><c> is</c><00:52:07.770><c> the</c><00:52:07.890><c> opening</c><00:52:08.340><c> curly</c><00:52:08.610><c> bracket</c>

00:52:09.020 --> 00:52:09.030 align:start position:0%
that this is the opening curly bracket
 

00:52:09.030 --> 00:52:11.390 align:start position:0%
that this is the opening curly bracket
and<00:52:09.420><c> then</c><00:52:10.290><c> we</c><00:52:10.440><c> have</c><00:52:10.560><c> the</c><00:52:10.680><c> closing</c><00:52:11.220><c> curly</c>

00:52:11.390 --> 00:52:11.400 align:start position:0%
and then we have the closing curly
 

00:52:11.400 --> 00:52:15.890 align:start position:0%
and then we have the closing curly
bracket<00:52:12.060><c> and</c><00:52:12.740><c> everything</c><00:52:13.740><c> inside</c><00:52:14.330><c> the</c><00:52:15.330><c> curly</c>

00:52:15.890 --> 00:52:15.900 align:start position:0%
bracket and everything inside the curly
 

00:52:15.900 --> 00:52:19.820 align:start position:0%
bracket and everything inside the curly
bracket<00:52:16.470><c> is</c><00:52:16.680><c> run</c><00:52:17.720><c> anytime</c><00:52:18.720><c> the</c><00:52:19.080><c> function</c><00:52:19.620><c> is</c>

00:52:19.820 --> 00:52:19.830 align:start position:0%
bracket is run anytime the function is
 

00:52:19.830 --> 00:52:23.930 align:start position:0%
bracket is run anytime the function is
called<00:52:20.400><c> or</c><00:52:20.820><c> invoked</c><00:52:21.780><c> so</c><00:52:22.650><c> here</c><00:52:23.250><c> the</c><00:52:23.490><c> function</c>

00:52:23.930 --> 00:52:23.940 align:start position:0%
called or invoked so here the function
 

00:52:23.940 --> 00:52:26.090 align:start position:0%
called or invoked so here the function
is<00:52:24.000><c> being</c><00:52:24.300><c> called</c><00:52:24.660><c> by</c><00:52:25.320><c> just</c><00:52:25.650><c> putting</c><00:52:25.830><c> the</c>

00:52:26.090 --> 00:52:26.100 align:start position:0%
is being called by just putting the
 

00:52:26.100 --> 00:52:29.900 align:start position:0%
is being called by just putting the
function<00:52:26.700><c> name</c><00:52:26.940><c> with</c><00:52:28.190><c> parentheses</c><00:52:29.190><c> after</c><00:52:29.460><c> the</c>

00:52:29.900 --> 00:52:29.910 align:start position:0%
function name with parentheses after the
 

00:52:29.910 --> 00:52:33.710 align:start position:0%
function name with parentheses after the
name<00:52:30.150><c> so</c><00:52:31.020><c> every</c><00:52:31.830><c> time</c><00:52:32.190><c> this</c><00:52:33.000><c> function</c><00:52:33.600><c> is</c>

00:52:33.710 --> 00:52:33.720 align:start position:0%
name so every time this function is
 

00:52:33.720 --> 00:52:36.170 align:start position:0%
name so every time this function is
called<00:52:34.020><c> just</c><00:52:34.320><c> like</c><00:52:34.530><c> this</c><00:52:34.890><c> the</c><00:52:35.400><c> console</c><00:52:36.060><c> is</c>

00:52:36.170 --> 00:52:36.180 align:start position:0%
called just like this the console is
 

00:52:36.180 --> 00:52:39.380 align:start position:0%
called just like this the console is
gonna<00:52:36.360><c> say</c><00:52:36.660><c> hey</c><00:52:37.350><c> a</c><00:52:37.380><c> world</c><00:52:37.770><c> so</c><00:52:38.520><c> if</c><00:52:38.640><c> we</c><00:52:38.790><c> load</c><00:52:39.240><c> the</c>

00:52:39.380 --> 00:52:39.390 align:start position:0%
gonna say hey a world so if we load the
 

00:52:39.390 --> 00:52:41.240 align:start position:0%
gonna say hey a world so if we load the
console<00:52:39.870><c> right</c><00:52:40.050><c> now</c><00:52:40.260><c> you</c><00:52:40.740><c> can</c><00:52:40.890><c> see</c><00:52:41.010><c> it</c><00:52:41.100><c> says</c>

00:52:41.240 --> 00:52:41.250 align:start position:0%
console right now you can see it says
 

00:52:41.250 --> 00:52:44.800 align:start position:0%
console right now you can see it says
hey<00:52:41.730><c> a</c><00:52:41.760><c> world</c><00:52:42.120><c> and</c><00:52:42.720><c> if</c><00:52:43.200><c> I</c><00:52:43.320><c> just</c><00:52:43.350><c> copy</c><00:52:43.890><c> this</c><00:52:44.310><c> and</c>

00:52:44.800 --> 00:52:44.810 align:start position:0%
hey a world and if I just copy this and
 

00:52:44.810 --> 00:52:48.710 align:start position:0%
hey a world and if I just copy this and
paste<00:52:45.810><c> a</c><00:52:46.170><c> few</c><00:52:46.410><c> times</c><00:52:46.880><c> we'll</c><00:52:47.880><c> see</c><00:52:48.180><c> that</c><00:52:48.450><c> it's</c>

00:52:48.710 --> 00:52:48.720 align:start position:0%
paste a few times we'll see that it's
 

00:52:48.720 --> 00:52:50.540 align:start position:0%
paste a few times we'll see that it's
going<00:52:48.930><c> to</c><00:52:49.020><c> say</c><00:52:49.200><c> hey</c><00:52:49.440><c> world</c><00:52:49.710><c> hey</c><00:52:50.010><c> world</c><00:52:50.250><c> hey</c>

00:52:50.540 --> 00:52:50.550 align:start position:0%
going to say hey world hey world hey
 

00:52:50.550 --> 00:52:53.690 align:start position:0%
going to say hey world hey world hey
world<00:52:50.850><c> in</c><00:52:51.150><c> the</c><00:52:51.480><c> console</c><00:52:52.080><c> since</c><00:52:52.740><c> we</c><00:52:53.010><c> have</c><00:52:53.430><c> run</c>

00:52:53.690 --> 00:52:53.700 align:start position:0%
world in the console since we have run
 

00:52:53.700 --> 00:52:56.090 align:start position:0%
world in the console since we have run
the<00:52:53.850><c> function</c><00:52:54.060><c> three</c><00:52:54.480><c> times</c><00:52:54.780><c> we</c><00:52:55.590><c> see</c><00:52:55.890><c> the</c>

00:52:56.090 --> 00:52:56.100 align:start position:0%
the function three times we see the
 

00:52:56.100 --> 00:52:59.450 align:start position:0%
the function three times we see the
words<00:52:56.280><c> hey</c><00:52:56.580><c> a</c><00:52:56.610><c> world</c><00:52:56.970><c> three</c><00:52:57.780><c> times</c><00:52:58.050><c> so</c><00:52:58.980><c> now</c><00:52:59.010><c> I'm</c>

00:52:59.450 --> 00:52:59.460 align:start position:0%
words hey a world three times so now I'm
 

00:52:59.460 --> 00:53:01.670 align:start position:0%
words hey a world three times so now I'm
going<00:53:00.120><c> to</c><00:53:00.210><c> create</c><00:53:00.630><c> my</c><00:53:00.750><c> own</c><00:53:00.780><c> function</c><00:53:01.500><c> that's</c>

00:53:01.670 --> 00:53:01.680 align:start position:0%
going to create my own function that's
 

00:53:01.680 --> 00:53:03.260 align:start position:0%
going to create my own function that's
going<00:53:01.800><c> to</c><00:53:02.040><c> be</c><00:53:02.130><c> very</c><00:53:02.580><c> similar</c>

00:53:03.260 --> 00:53:03.270 align:start position:0%
going to be very similar
 

00:53:03.270 --> 00:53:11.110 align:start position:0%
going to be very similar
so<00:53:03.870><c> the</c><00:53:04.200><c> function</c><00:53:05.540><c> be</c><00:53:07.130><c> usable</c><00:53:08.420><c> function</c><00:53:09.420><c> and</c>

00:53:11.110 --> 00:53:11.120 align:start position:0%
so the function be usable function and
 

00:53:11.120 --> 00:53:13.460 align:start position:0%
so the function be usable function and
this<00:53:12.120><c> time</c><00:53:12.420><c> it's</c><00:53:12.720><c> gonna</c><00:53:12.870><c> say</c><00:53:13.080><c> something</c>

00:53:13.460 --> 00:53:13.470 align:start position:0%
this time it's gonna say something
 

00:53:13.470 --> 00:53:18.590 align:start position:0%
this time it's gonna say something
slightly<00:53:13.860><c> different</c><00:53:15.170><c> it's</c><00:53:16.170><c> going</c><00:53:16.590><c> to</c><00:53:16.800><c> say</c><00:53:17.600><c> hi</c>

00:53:18.590 --> 00:53:18.600 align:start position:0%
slightly different it's going to say hi
 

00:53:18.600 --> 00:53:20.170 align:start position:0%
slightly different it's going to say hi
world

00:53:20.170 --> 00:53:20.180 align:start position:0%
world
 

00:53:20.180 --> 00:53:27.110 align:start position:0%
world
it's<00:53:21.180><c> the</c><00:53:21.450><c> heya</c><00:53:22.020><c> world</c><00:53:22.880><c> and</c><00:53:24.500><c> now</c><00:53:25.500><c> I</c><00:53:25.830><c> can</c><00:53:26.670><c> call</c>

00:53:27.110 --> 00:53:27.120 align:start position:0%
it's the heya world and now I can call
 

00:53:27.120 --> 00:53:28.870 align:start position:0%
it's the heya world and now I can call
the<00:53:27.330><c> function</c><00:53:27.510><c> down</c><00:53:27.930><c> here</c><00:53:28.290><c> just</c><00:53:28.440><c> like</c><00:53:28.590><c> this</c>

00:53:28.870 --> 00:53:28.880 align:start position:0%
the function down here just like this
 

00:53:28.880 --> 00:53:33.110 align:start position:0%
the function down here just like this
reusable<00:53:29.880><c> function</c><00:53:30.720><c> oh</c><00:53:31.370><c> forgot</c><00:53:32.370><c> to</c><00:53:32.610><c> put</c><00:53:32.880><c> the</c>

00:53:33.110 --> 00:53:33.120 align:start position:0%
reusable function oh forgot to put the
 

00:53:33.120 --> 00:53:35.590 align:start position:0%
reusable function oh forgot to put the
parenthesis<00:53:33.900><c> that's</c><00:53:34.320><c> important</c>

00:53:35.590 --> 00:53:35.600 align:start position:0%
parenthesis that's important
 

00:53:35.600 --> 00:53:39.380 align:start position:0%
parenthesis that's important
nice<00:53:36.600><c> hey</c><00:53:37.200><c> world</c><00:53:37.470><c> and</c><00:53:37.770><c> hi</c><00:53:38.220><c> world</c><00:53:38.550><c> in</c><00:53:38.880><c> the</c>

00:53:39.380 --> 00:53:39.390 align:start position:0%
nice hey world and hi world in the
 

00:53:39.390 --> 00:53:44.390 align:start position:0%
nice hey world and hi world in the
console

00:53:44.390 --> 00:53:44.400 align:start position:0%
 
 

00:53:44.400 --> 00:53:47.160 align:start position:0%
 
parameters<00:53:45.400><c> are</c><00:53:45.700><c> variables</c><00:53:46.390><c> that</c><00:53:46.510><c> act</c><00:53:46.839><c> as</c>

00:53:47.160 --> 00:53:47.170 align:start position:0%
parameters are variables that act as
 

00:53:47.170 --> 00:53:49.470 align:start position:0%
parameters are variables that act as
placeholders<00:53:47.710><c> for</c><00:53:48.549><c> the</c><00:53:48.640><c> values</c><00:53:49.089><c> that</c><00:53:49.119><c> are</c><00:53:49.450><c> to</c>

00:53:49.470 --> 00:53:49.480 align:start position:0%
placeholders for the values that are to
 

00:53:49.480 --> 00:53:52.289 align:start position:0%
placeholders for the values that are to
be<00:53:49.779><c> input</c><00:53:50.319><c> to</c><00:53:50.529><c> a</c><00:53:50.559><c> function</c><00:53:51.130><c> when</c><00:53:51.700><c> it</c><00:53:51.880><c> is</c><00:53:51.940><c> called</c>

00:53:52.289 --> 00:53:52.299 align:start position:0%
be input to a function when it is called
 

00:53:52.299 --> 00:53:55.710 align:start position:0%
be input to a function when it is called
so<00:53:53.200><c> we</c><00:53:53.980><c> have</c><00:53:54.130><c> defined</c><00:53:54.640><c> a</c><00:53:54.789><c> function</c><00:53:55.270><c> right</c><00:53:55.450><c> here</c>

00:53:55.710 --> 00:53:55.720 align:start position:0%
so we have defined a function right here
 

00:53:55.720 --> 00:53:59.039 align:start position:0%
so we have defined a function right here
called<00:53:56.049><c> our</c><00:53:56.289><c> function</c><00:53:56.680><c> with</c><00:53:57.069><c> arms</c><00:53:57.520><c> and</c><00:53:58.049><c> inside</c>

00:53:59.039 --> 00:53:59.049 align:start position:0%
called our function with arms and inside
 

00:53:59.049 --> 00:54:01.589 align:start position:0%
called our function with arms and inside
the<00:53:59.319><c> parenthesis</c><00:54:00.010><c> we</c><00:54:00.039><c> see</c><00:54:00.579><c> the</c><00:54:00.760><c> letters</c><00:54:01.029><c> A</c><00:54:01.210><c> and</c>

00:54:01.589 --> 00:54:01.599 align:start position:0%
the parenthesis we see the letters A and
 

00:54:01.599 --> 00:54:05.430 align:start position:0%
the parenthesis we see the letters A and
B<00:54:02.109><c> now</c><00:54:03.069><c> these</c><00:54:03.460><c> can</c><00:54:03.819><c> be</c><00:54:03.880><c> any</c><00:54:04.299><c> name</c><00:54:04.930><c> that</c><00:54:04.990><c> we</c>

00:54:05.430 --> 00:54:05.440 align:start position:0%
B now these can be any name that we
 

00:54:05.440 --> 00:54:07.500 align:start position:0%
B now these can be any name that we
could<00:54:05.859><c> call</c><00:54:06.069><c> these</c><00:54:06.250><c> anything</c><00:54:06.700><c> not</c><00:54:06.970><c> just</c><00:54:07.000><c> a</c><00:54:07.270><c> and</c>

00:54:07.500 --> 00:54:07.510 align:start position:0%
could call these anything not just a and
 

00:54:07.510 --> 00:54:09.180 align:start position:0%
could call these anything not just a and
B<00:54:07.660><c> they</c><00:54:07.839><c> could</c><00:54:07.990><c> really</c><00:54:08.289><c> be</c><00:54:08.440><c> any</c><00:54:08.619><c> words</c><00:54:08.950><c> up</c><00:54:09.160><c> here</c>

00:54:09.180 --> 00:54:09.190 align:start position:0%
B they could really be any words up here
 

00:54:09.190 --> 00:54:13.380 align:start position:0%
B they could really be any words up here
and<00:54:10.619><c> that</c><00:54:11.619><c> means</c><00:54:11.859><c> that</c><00:54:12.279><c> when</c><00:54:12.849><c> this</c><00:54:13.059><c> function</c>

00:54:13.380 --> 00:54:13.390 align:start position:0%
and that means that when this function
 

00:54:13.390 --> 00:54:18.120 align:start position:0%
and that means that when this function
is<00:54:13.720><c> called</c><00:54:13.869><c> we're</c><00:54:14.799><c> going</c><00:54:15.099><c> to</c><00:54:15.250><c> pass</c><00:54:16.289><c> data</c><00:54:17.289><c> into</c>

00:54:18.120 --> 00:54:18.130 align:start position:0%
is called we're going to pass data into
 

00:54:18.130 --> 00:54:20.430 align:start position:0%
is called we're going to pass data into
the<00:54:18.250><c> function</c><00:54:18.760><c> or</c><00:54:18.940><c> input</c><00:54:19.599><c> data</c><00:54:19.900><c> into</c><00:54:20.230><c> the</c>

00:54:20.430 --> 00:54:20.440 align:start position:0%
the function or input data into the
 

00:54:20.440 --> 00:54:23.430 align:start position:0%
the function or input data into the
function<00:54:20.920><c> so</c><00:54:21.609><c> you</c><00:54:21.640><c> can</c><00:54:21.940><c> see</c><00:54:22.210><c> the</c><00:54:22.390><c> example</c><00:54:22.930><c> here</c>

00:54:23.430 --> 00:54:23.440 align:start position:0%
function so you can see the example here
 

00:54:23.440 --> 00:54:25.880 align:start position:0%
function so you can see the example here
where<00:54:23.799><c> we're</c><00:54:23.980><c> calling</c><00:54:24.430><c> the</c><00:54:24.579><c> function</c><00:54:24.849><c> and</c>

00:54:25.880 --> 00:54:25.890 align:start position:0%
where we're calling the function and
 

00:54:25.890 --> 00:54:28.019 align:start position:0%
where we're calling the function and
instead<00:54:26.890><c> of</c><00:54:27.010><c> saying</c><00:54:27.250><c> a</c><00:54:27.400><c> and</c><00:54:27.700><c> B</c><00:54:27.880><c> in</c><00:54:28.000><c> the</c>

00:54:28.019 --> 00:54:28.029 align:start position:0%
instead of saying a and B in the
 

00:54:28.029 --> 00:54:30.120 align:start position:0%
instead of saying a and B in the
parenthesis<00:54:28.690><c> we're</c><00:54:29.170><c> actually</c><00:54:29.500><c> passing</c><00:54:30.010><c> the</c>

00:54:30.120 --> 00:54:30.130 align:start position:0%
parenthesis we're actually passing the
 

00:54:30.130 --> 00:54:33.359 align:start position:0%
parenthesis we're actually passing the
values<00:54:30.549><c> 10</c><00:54:31.000><c> and</c><00:54:31.329><c> 5</c><00:54:31.720><c> so</c><00:54:32.619><c> when</c><00:54:32.950><c> the</c><00:54:33.069><c> function</c>

00:54:33.359 --> 00:54:33.369 align:start position:0%
values 10 and 5 so when the function
 

00:54:33.369 --> 00:54:36.720 align:start position:0%
values 10 and 5 so when the function
runs<00:54:34.029><c> it</c><00:54:34.450><c> can</c><00:54:35.049><c> use</c><00:54:35.529><c> the</c><00:54:35.890><c> information</c><00:54:36.220><c> that's</c>

00:54:36.720 --> 00:54:36.730 align:start position:0%
runs it can use the information that's
 

00:54:36.730 --> 00:54:39.420 align:start position:0%
runs it can use the information that's
passed<00:54:37.150><c> into</c><00:54:37.480><c> the</c><00:54:37.750><c> function</c><00:54:37.859><c> so</c><00:54:38.859><c> in</c><00:54:38.980><c> this</c><00:54:39.130><c> case</c>

00:54:39.420 --> 00:54:39.430 align:start position:0%
passed into the function so in this case
 

00:54:39.430 --> 00:54:42.990 align:start position:0%
passed into the function so in this case
it<00:54:39.760><c> says</c><00:54:40.119><c> console</c><00:54:40.690><c> dot</c><00:54:40.809><c> log</c><00:54:40.869><c> a</c><00:54:41.319><c> minus</c><00:54:41.380><c> B</c><00:54:42.309><c> well</c>

00:54:42.990 --> 00:54:43.000 align:start position:0%
it says console dot log a minus B well
 

00:54:43.000 --> 00:54:45.839 align:start position:0%
it says console dot log a minus B well
that's<00:54:43.240><c> going</c><00:54:43.420><c> to</c><00:54:43.480><c> be</c><00:54:43.569><c> 10</c><00:54:44.049><c> minus</c><00:54:44.619><c> 5</c><00:54:44.920><c> because</c>

00:54:45.839 --> 00:54:45.849 align:start position:0%
that's going to be 10 minus 5 because
 

00:54:45.849 --> 00:54:48.120 align:start position:0%
that's going to be 10 minus 5 because
the<00:54:46.059><c> numbers</c><00:54:46.390><c> 10</c><00:54:46.720><c> and</c><00:54:46.750><c> 5</c><00:54:47.049><c> have</c><00:54:47.619><c> been</c><00:54:47.799><c> passed</c>

00:54:48.120 --> 00:54:48.130 align:start position:0%
the numbers 10 and 5 have been passed
 

00:54:48.130 --> 00:54:50.549 align:start position:0%
the numbers 10 and 5 have been passed
into<00:54:48.460><c> the</c><00:54:48.760><c> function</c><00:54:48.789><c> and</c><00:54:49.390><c> that's</c><00:54:50.109><c> going</c><00:54:50.440><c> to</c>

00:54:50.549 --> 00:54:50.559 align:start position:0%
into the function and that's going to
 

00:54:50.559 --> 00:54:53.789 align:start position:0%
into the function and that's going to
output<00:54:51.160><c> 5</c><00:54:51.670><c> so</c><00:54:52.510><c> I'm</c><00:54:52.960><c> going</c><00:54:53.349><c> to</c><00:54:53.410><c> create</c><00:54:53.710><c> a</c>

00:54:53.789 --> 00:54:53.799 align:start position:0%
output 5 so I'm going to create a
 

00:54:53.799 --> 00:54:56.099 align:start position:0%
output 5 so I'm going to create a
function<00:54:54.220><c> that's</c><00:54:54.640><c> very</c><00:54:55.059><c> similar</c><00:54:55.450><c> to</c><00:54:55.930><c> that</c>

00:54:56.099 --> 00:54:56.109 align:start position:0%
function that's very similar to that
 

00:54:56.109 --> 00:54:58.910 align:start position:0%
function that's very similar to that
function<00:54:56.440><c> this</c><00:54:57.400><c> one</c><00:54:57.640><c> is</c><00:54:57.760><c> going</c><00:54:57.970><c> to</c><00:54:58.150><c> be</c><00:54:58.210><c> called</c>

00:54:58.910 --> 00:54:58.920 align:start position:0%
function this one is going to be called
 

00:54:58.920 --> 00:55:01.829 align:start position:0%
function this one is going to be called
function<00:55:00.059><c> with</c><00:55:01.059><c> Arg</c>

00:55:01.829 --> 00:55:01.839 align:start position:0%
function with Arg
 

00:55:01.839 --> 00:55:05.609 align:start position:0%
function with Arg
and<00:55:02.400><c> it's</c><00:55:03.400><c> also</c><00:55:03.730><c> going</c><00:55:04.119><c> to</c><00:55:04.210><c> accept</c><00:55:04.900><c> an</c><00:55:05.020><c> A</c><00:55:05.140><c> and</c><00:55:05.410><c> B</c>

00:55:05.609 --> 00:55:05.619 align:start position:0%
and it's also going to accept an A and B
 

00:55:05.619 --> 00:55:07.950 align:start position:0%
and it's also going to accept an A and B
but<00:55:05.890><c> we</c><00:55:06.460><c> could</c><00:55:06.700><c> call</c><00:55:06.940><c> that</c><00:55:06.970><c> anything</c><00:55:07.480><c> we</c><00:55:07.630><c> want</c>

00:55:07.950 --> 00:55:07.960 align:start position:0%
but we could call that anything we want
 

00:55:07.960 --> 00:55:12.890 align:start position:0%
but we could call that anything we want
and<00:55:08.730><c> inside</c><00:55:10.380><c> instead</c><00:55:11.380><c> of</c><00:55:11.619><c> subtracting</c><00:55:12.369><c> a</c>

00:55:12.890 --> 00:55:12.900 align:start position:0%
and inside instead of subtracting a
 

00:55:12.900 --> 00:55:20.130 align:start position:0%
and inside instead of subtracting a
minus<00:55:13.900><c> B</c><00:55:14.230><c> we're</c><00:55:14.799><c> going</c><00:55:14.829><c> to</c><00:55:15.069><c> do</c><00:55:15.250><c> a</c><00:55:15.900><c> plus</c><00:55:16.900><c> B</c><00:55:19.140><c> now</c>

00:55:20.130 --> 00:55:20.140 align:start position:0%
minus B we're going to do a plus B now
 

00:55:20.140 --> 00:55:24.380 align:start position:0%
minus B we're going to do a plus B now
I'm<00:55:20.650><c> just</c><00:55:21.069><c> going</c><00:55:21.369><c> to</c><00:55:21.720><c> call</c><00:55:22.720><c> this</c><00:55:22.930><c> function</c>

00:55:24.380 --> 00:55:24.390 align:start position:0%
I'm just going to call this function
 

00:55:24.390 --> 00:55:31.319 align:start position:0%
I'm just going to call this function
function<00:55:25.799><c> with</c><00:55:26.849><c> our</c><00:55:27.849><c> and</c><00:55:28.450><c> I'll</c><00:55:29.079><c> pass</c><00:55:29.500><c> in</c><00:55:30.329><c> 10</c>

00:55:31.319 --> 00:55:31.329 align:start position:0%
function with our and I'll pass in 10
 

00:55:31.329 --> 00:55:35.549 align:start position:0%
function with our and I'll pass in 10
and<00:55:32.339><c> 5</c><00:55:33.339><c> and</c><00:55:34.059><c> let's</c><00:55:34.690><c> see</c><00:55:34.960><c> what</c><00:55:35.140><c> that</c><00:55:35.260><c> looks</c><00:55:35.470><c> like</c>

00:55:35.549 --> 00:55:35.559 align:start position:0%
and 5 and let's see what that looks like
 

00:55:35.559 --> 00:55:39.000 align:start position:0%
and 5 and let's see what that looks like
in<00:55:35.799><c> the</c><00:55:35.890><c> console</c><00:55:36.430><c> so</c><00:55:36.970><c> first</c><00:55:37.420><c> it</c><00:55:37.900><c> output</c><00:55:38.380><c> 5</c><00:55:38.680><c> for</c>

00:55:39.000 --> 00:55:39.010 align:start position:0%
in the console so first it output 5 for
 

00:55:39.010 --> 00:55:41.640 align:start position:0%
in the console so first it output 5 for
this<00:55:39.190><c> one</c><00:55:39.400><c> then</c><00:55:40.119><c> an</c><00:55:40.240><c> output</c><00:55:40.510><c> a</c><00:55:40.569><c> 10</c><00:55:40.990><c> for</c><00:55:41.529><c> this</c>

00:55:41.640 --> 00:55:41.650 align:start position:0%
this one then an output a 10 for this
 

00:55:41.650 --> 00:55:46.340 align:start position:0%
this one then an output a 10 for this
one

00:55:46.340 --> 00:55:46.350 align:start position:0%
 
 

00:55:46.350 --> 00:55:49.280 align:start position:0%
 
scope<00:55:47.190><c> refers</c><00:55:47.850><c> to</c><00:55:47.880><c> the</c><00:55:48.330><c> visibility</c><00:55:49.110><c> of</c>

00:55:49.280 --> 00:55:49.290 align:start position:0%
scope refers to the visibility of
 

00:55:49.290 --> 00:55:52.250 align:start position:0%
scope refers to the visibility of
variables<00:55:50.540><c> variables</c><00:55:51.540><c> which</c><00:55:51.720><c> are</c><00:55:51.870><c> defined</c>

00:55:52.250 --> 00:55:52.260 align:start position:0%
variables variables which are defined
 

00:55:52.260 --> 00:55:54.740 align:start position:0%
variables variables which are defined
outside<00:55:52.560><c> of</c><00:55:52.920><c> a</c><00:55:52.980><c> function</c><00:55:53.400><c> block</c><00:55:53.640><c> have</c><00:55:54.060><c> global</c>

00:55:54.740 --> 00:55:54.750 align:start position:0%
outside of a function block have global
 

00:55:54.750 --> 00:55:57.140 align:start position:0%
outside of a function block have global
scope<00:55:55.130><c> global</c><00:55:56.130><c> scope</c><00:55:56.400><c> means</c><00:55:56.730><c> they</c><00:55:56.880><c> can</c><00:55:57.120><c> be</c>

00:55:57.140 --> 00:55:57.150 align:start position:0%
scope global scope means they can be
 

00:55:57.150 --> 00:55:59.620 align:start position:0%
scope global scope means they can be
seen<00:55:57.570><c> everywhere</c><00:55:58.080><c> in</c><00:55:58.440><c> your</c><00:55:58.740><c> JavaScript</c><00:55:59.490><c> code</c>

00:55:59.620 --> 00:55:59.630 align:start position:0%
seen everywhere in your JavaScript code
 

00:55:59.630 --> 00:56:01.850 align:start position:0%
seen everywhere in your JavaScript code
for<00:56:00.630><c> instance</c><00:56:00.960><c> I'm</c><00:56:01.170><c> going</c><00:56:01.200><c> to</c><00:56:01.470><c> declare</c><00:56:01.830><c> a</c>

00:56:01.850 --> 00:56:01.860 align:start position:0%
for instance I'm going to declare a
 

00:56:01.860 --> 00:56:04.810 align:start position:0%
for instance I'm going to declare a
variable<00:56:02.670><c> right</c><00:56:03.450><c> here</c><00:56:03.750><c> called</c><00:56:03.990><c> my</c><00:56:04.260><c> global</c>

00:56:04.810 --> 00:56:04.820 align:start position:0%
variable right here called my global
 

00:56:04.820 --> 00:56:09.380 align:start position:0%
variable right here called my global
I'll<00:56:05.820><c> set</c><00:56:06.180><c> it</c><00:56:06.300><c> to</c><00:56:06.510><c> 10</c><00:56:06.960><c> now</c><00:56:07.950><c> since</c><00:56:08.430><c> this</c><00:56:08.730><c> is</c><00:56:08.790><c> set</c>

00:56:09.380 --> 00:56:09.390 align:start position:0%
I'll set it to 10 now since this is set
 

00:56:09.390 --> 00:56:12.680 align:start position:0%
I'll set it to 10 now since this is set
outside<00:56:09.750><c> of</c><00:56:10.320><c> a</c><00:56:10.350><c> function</c><00:56:10.920><c> we</c><00:56:11.580><c> can</c><00:56:11.970><c> see</c><00:56:12.300><c> it</c>

00:56:12.680 --> 00:56:12.690 align:start position:0%
outside of a function we can see it
 

00:56:12.690 --> 00:56:15.440 align:start position:0%
outside of a function we can see it
anywhere<00:56:13.230><c> in</c><00:56:13.350><c> the</c><00:56:13.410><c> whole</c><00:56:13.650><c> code</c><00:56:14.010><c> even</c><00:56:14.850><c> in</c><00:56:15.060><c> this</c>

00:56:15.440 --> 00:56:15.450 align:start position:0%
anywhere in the whole code even in this
 

00:56:15.450 --> 00:56:18.770 align:start position:0%
anywhere in the whole code even in this
function<00:56:15.930><c> right</c><00:56:16.080><c> here</c><00:56:16.140><c> called</c><00:56:17.100><c> fun</c><00:56:17.490><c> too</c><00:56:18.060><c> we</c>

00:56:18.770 --> 00:56:18.780 align:start position:0%
function right here called fun too we
 

00:56:18.780 --> 00:56:20.980 align:start position:0%
function right here called fun too we
can<00:56:18.960><c> see</c><00:56:19.170><c> that</c><00:56:19.380><c> we</c><00:56:19.590><c> reference</c><00:56:20.070><c> it</c><00:56:20.250><c> here</c><00:56:20.700><c> and</c>

00:56:20.980 --> 00:56:20.990 align:start position:0%
can see that we reference it here and
 

00:56:20.990 --> 00:56:23.900 align:start position:0%
can see that we reference it here and
here<00:56:21.990><c> and</c><00:56:22.170><c> what</c><00:56:23.040><c> we're</c><00:56:23.310><c> gonna</c><00:56:23.400><c> be</c><00:56:23.550><c> able</c><00:56:23.610><c> to</c><00:56:23.700><c> see</c>

00:56:23.900 --> 00:56:23.910 align:start position:0%
here and what we're gonna be able to see
 

00:56:23.910 --> 00:56:27.560 align:start position:0%
here and what we're gonna be able to see
it<00:56:24.030><c> now</c><00:56:24.870><c> this</c><00:56:25.380><c> is</c><00:56:25.530><c> an</c><00:56:25.680><c> if</c><00:56:26.010><c> statement</c><00:56:26.280><c> which</c><00:56:27.270><c> we</c>

00:56:27.560 --> 00:56:27.570 align:start position:0%
it now this is an if statement which we
 

00:56:27.570 --> 00:56:30.020 align:start position:0%
it now this is an if statement which we
will<00:56:27.780><c> talk</c><00:56:28.170><c> more</c><00:56:28.200><c> about</c><00:56:28.560><c> later</c><00:56:28.790><c> but</c><00:56:29.790><c> we're</c>

00:56:30.020 --> 00:56:30.030 align:start position:0%
will talk more about later but we're
 

00:56:30.030 --> 00:56:34.850 align:start position:0%
will talk more about later but we're
checking<00:56:30.480><c> if</c><00:56:31.160><c> the</c><00:56:32.160><c> type</c><00:56:32.640><c> of</c><00:56:32.670><c> my</c><00:56:33.420><c> global</c><00:56:33.870><c> does</c>

00:56:34.850 --> 00:56:34.860 align:start position:0%
checking if the type of my global does
 

00:56:34.860 --> 00:56:40.430 align:start position:0%
checking if the type of my global does
not<00:56:35.340><c> equal</c><00:56:36.350><c> undefined</c><00:56:37.490><c> so</c><00:56:38.490><c> it</c><00:56:38.910><c> will</c><00:56:39.270><c> not</c><00:56:39.780><c> equal</c>

00:56:40.430 --> 00:56:40.440 align:start position:0%
not equal undefined so it will not equal
 

00:56:40.440 --> 00:56:44.330 align:start position:0%
not equal undefined so it will not equal
undefined<00:56:41.160><c> if</c><00:56:41.730><c> it</c><00:56:42.510><c> has</c><00:56:42.900><c> been</c><00:56:43.230><c> defined</c><00:56:43.770><c> and</c><00:56:44.160><c> the</c>

00:56:44.330 --> 00:56:44.340 align:start position:0%
undefined if it has been defined and the
 

00:56:44.340 --> 00:56:47.750 align:start position:0%
undefined if it has been defined and the
program<00:56:44.850><c> knows</c><00:56:45.270><c> about</c><00:56:45.690><c> the</c><00:56:45.990><c> variable</c><00:56:46.760><c> since</c>

00:56:47.750 --> 00:56:47.760 align:start position:0%
program knows about the variable since
 

00:56:47.760 --> 00:56:51.320 align:start position:0%
program knows about the variable since
this<00:56:48.090><c> is</c><00:56:48.300><c> global</c><00:56:48.870><c> scope</c><00:56:49.260><c> it</c><00:56:49.950><c> does</c><00:56:50.550><c> not</c><00:56:50.880><c> equal</c>

00:56:51.320 --> 00:56:51.330 align:start position:0%
this is global scope it does not equal
 

00:56:51.330 --> 00:56:53.960 align:start position:0%
this is global scope it does not equal
undefined<00:56:51.930><c> equals</c><00:56:52.380><c> 10</c><00:56:52.770><c> the</c><00:56:53.250><c> program</c><00:56:53.760><c> knows</c>

00:56:53.960 --> 00:56:53.970 align:start position:0%
undefined equals 10 the program knows
 

00:56:53.970 --> 00:56:55.670 align:start position:0%
undefined equals 10 the program knows
about<00:56:54.150><c> the</c><00:56:54.330><c> variable</c><00:56:54.840><c> because</c><00:56:55.170><c> this</c><00:56:55.380><c> is</c><00:56:55.530><c> in</c>

00:56:55.670 --> 00:56:55.680 align:start position:0%
about the variable because this is in
 

00:56:55.680 --> 00:56:59.930 align:start position:0%
about the variable because this is in
global<00:56:56.250><c> scope</c><00:56:56.610><c> so</c><00:56:57.270><c> since</c><00:56:57.660><c> this</c><00:56:57.950><c> function</c><00:56:58.950><c> can</c>

00:56:59.930 --> 00:56:59.940 align:start position:0%
global scope so since this function can
 

00:56:59.940 --> 00:57:03.260 align:start position:0%
global scope so since this function can
access<00:57:00.510><c> the</c><00:57:00.720><c> my</c><00:57:00.930><c> global</c><00:57:01.410><c> variable</c><00:57:01.950><c> will</c><00:57:02.910><c> run</c>

00:57:03.260 --> 00:57:03.270 align:start position:0%
access the my global variable will run
 

00:57:03.270 --> 00:57:06.110 align:start position:0%
access the my global variable will run
what's<00:57:03.540><c> in</c><00:57:03.750><c> this</c><00:57:04.140><c> if</c><00:57:04.440><c> statement</c><00:57:04.910><c> where</c><00:57:05.910><c> we</c>

00:57:06.110 --> 00:57:06.120 align:start position:0%
what's in this if statement where we
 

00:57:06.120 --> 00:57:09.770 align:start position:0%
what's in this if statement where we
just<00:57:06.390><c> add</c><00:57:06.570><c> to</c><00:57:07.320><c> this</c><00:57:07.440><c> output</c><00:57:07.710><c> variable</c><00:57:08.780><c> my</c>

00:57:09.770 --> 00:57:09.780 align:start position:0%
just add to this output variable my
 

00:57:09.780 --> 00:57:12.080 align:start position:0%
just add to this output variable my
global<00:57:10.230><c> and</c><00:57:10.680><c> then</c><00:57:11.070><c> we</c><00:57:11.190><c> put</c><00:57:11.460><c> with</c><00:57:11.610><c> the</c><00:57:11.730><c> value</c><00:57:12.000><c> of</c>

00:57:12.080 --> 00:57:12.090 align:start position:0%
global and then we put with the value of
 

00:57:12.090 --> 00:57:15.140 align:start position:0%
global and then we put with the value of
my<00:57:12.210><c> global</c><00:57:12.540><c> which</c><00:57:12.840><c> is</c><00:57:13.020><c> 10</c><00:57:13.430><c> now</c><00:57:14.430><c> here's</c><00:57:15.030><c> another</c>

00:57:15.140 --> 00:57:15.150 align:start position:0%
my global which is 10 now here's another
 

00:57:15.150 --> 00:57:18.890 align:start position:0%
my global which is 10 now here's another
example<00:57:16.040><c> where</c><00:57:17.040><c> we're</c><00:57:17.250><c> gonna</c><00:57:17.310><c> see</c><00:57:17.580><c> if</c><00:57:17.700><c> if</c><00:57:18.330><c> the</c>

00:57:18.890 --> 00:57:18.900 align:start position:0%
example where we're gonna see if if the
 

00:57:18.900 --> 00:57:21.910 align:start position:0%
example where we're gonna see if if the
type<00:57:19.320><c> of</c><00:57:19.350><c> oops</c><00:57:19.980><c> global</c><00:57:20.790><c> equals</c><00:57:21.570><c> undefined</c>

00:57:21.910 --> 00:57:21.920 align:start position:0%
type of oops global equals undefined
 

00:57:21.920 --> 00:57:25.490 align:start position:0%
type of oops global equals undefined
well<00:57:22.920><c> we're</c><00:57:23.070><c> gonna</c><00:57:23.190><c> set</c><00:57:23.550><c> that</c><00:57:23.580><c> here</c><00:57:24.240><c> so</c><00:57:24.840><c> it</c><00:57:25.230><c> is</c>

00:57:25.490 --> 00:57:25.500 align:start position:0%
well we're gonna set that here so it is
 

00:57:25.500 --> 00:57:30.680 align:start position:0%
well we're gonna set that here so it is
possible<00:57:26.310><c> to</c><00:57:26.340><c> set</c><00:57:27.210><c> a</c><00:57:28.100><c> variable</c><00:57:29.100><c> without</c><00:57:30.090><c> using</c>

00:57:30.680 --> 00:57:30.690 align:start position:0%
possible to set a variable without using
 

00:57:30.690 --> 00:57:34.910 align:start position:0%
possible to set a variable without using
the<00:57:30.870><c> VAR</c><00:57:31.230><c> keyword</c><00:57:32.870><c> so</c><00:57:33.870><c> I'm</c><00:57:34.110><c> gonna</c><00:57:34.260><c> set</c><00:57:34.500><c> this</c><00:57:34.680><c> to</c>

00:57:34.910 --> 00:57:34.920 align:start position:0%
the VAR keyword so I'm gonna set this to
 

00:57:34.920 --> 00:57:41.090 align:start position:0%
the VAR keyword so I'm gonna set this to
loop<00:57:35.340><c> global</c><00:57:36.860><c> equals</c><00:57:37.860><c> 5</c><00:57:38.810><c> so</c><00:57:39.810><c> you</c><00:57:40.200><c> can</c><00:57:40.380><c> see</c><00:57:40.680><c> here</c>

00:57:41.090 --> 00:57:41.100 align:start position:0%
loop global equals 5 so you can see here
 

00:57:41.100 --> 00:57:46.430 align:start position:0%
loop global equals 5 so you can see here
that<00:57:41.310><c> there</c><00:57:41.610><c> is</c><00:57:41.640><c> no</c><00:57:41.960><c> var</c><00:57:42.960><c> keyword</c><00:57:44.450><c> so</c><00:57:45.450><c> normally</c>

00:57:46.430 --> 00:57:46.440 align:start position:0%
that there is no var keyword so normally
 

00:57:46.440 --> 00:57:51.020 align:start position:0%
that there is no var keyword so normally
if<00:57:46.740><c> you</c><00:57:47.310><c> do</c><00:57:47.760><c> use</c><00:57:48.180><c> a</c><00:57:48.210><c> var</c><00:57:48.690><c> keyword</c><00:57:49.700><c> since</c><00:57:50.700><c> this</c>

00:57:51.020 --> 00:57:51.030 align:start position:0%
if you do use a var keyword since this
 

00:57:51.030 --> 00:57:54.350 align:start position:0%
if you do use a var keyword since this
is<00:57:51.330><c> within</c><00:57:51.960><c> a</c><00:57:52.230><c> function</c><00:57:52.920><c> it</c><00:57:53.160><c> will</c><00:57:53.580><c> be</c><00:57:53.760><c> scoped</c>

00:57:54.350 --> 00:57:54.360 align:start position:0%
is within a function it will be scoped
 

00:57:54.360 --> 00:57:57.320 align:start position:0%
is within a function it will be scoped
to<00:57:54.750><c> that</c><00:57:55.320><c> function</c><00:57:55.620><c> if</c><00:57:56.100><c> we</c><00:57:56.490><c> have</c><00:57:56.910><c> the</c><00:57:57.090><c> VAR</c>

00:57:57.320 --> 00:57:57.330 align:start position:0%
to that function if we have the VAR
 

00:57:57.330 --> 00:58:00.170 align:start position:0%
to that function if we have the VAR
keyword<00:57:57.720><c> here</c><00:57:58.290><c> this</c><00:57:59.100><c> will</c><00:57:59.280><c> be</c><00:57:59.370><c> scoped</c><00:57:59.820><c> to</c>

00:58:00.170 --> 00:58:00.180 align:start position:0%
keyword here this will be scoped to
 

00:58:00.180 --> 00:58:02.839 align:start position:0%
keyword here this will be scoped to
function<00:58:00.780><c> so</c><00:58:01.079><c> you</c><00:58:01.140><c> would</c><00:58:01.440><c> not</c><00:58:01.800><c> be</c><00:58:02.130><c> able</c><00:58:02.280><c> to</c><00:58:02.430><c> see</c>

00:58:02.839 --> 00:58:02.849 align:start position:0%
function so you would not be able to see
 

00:58:02.849 --> 00:58:06.710 align:start position:0%
function so you would not be able to see
it<00:58:03.000><c> in</c><00:58:03.240><c> this</c><00:58:03.690><c> function</c><00:58:04.260><c> however</c><00:58:05.270><c> since</c><00:58:06.270><c> we</c>

00:58:06.710 --> 00:58:06.720 align:start position:0%
it in this function however since we
 

00:58:06.720 --> 00:58:09.680 align:start position:0%
it in this function however since we
forgot<00:58:07.200><c> to</c><00:58:07.230><c> put</c><00:58:07.829><c> the</c><00:58:08.069><c> VAR</c><00:58:08.309><c> keyword</c><00:58:08.339><c> in</c><00:58:09.119><c> this</c>

00:58:09.680 --> 00:58:09.690 align:start position:0%
forgot to put the VAR keyword in this
 

00:58:09.690 --> 00:58:12.650 align:start position:0%
forgot to put the VAR keyword in this
example<00:58:10.079><c> there's</c><00:58:10.740><c> no</c><00:58:10.829><c> VAR</c><00:58:11.280><c> keyword</c><00:58:11.660><c> it</c>

00:58:12.650 --> 00:58:12.660 align:start position:0%
example there's no VAR keyword it
 

00:58:12.660 --> 00:58:16.670 align:start position:0%
example there's no VAR keyword it
becomes<00:58:13.559><c> global</c><00:58:14.809><c> automatically</c><00:58:15.809><c> that</c><00:58:16.410><c> means</c>

00:58:16.670 --> 00:58:16.680 align:start position:0%
becomes global automatically that means
 

00:58:16.680 --> 00:58:19.099 align:start position:0%
becomes global automatically that means
you<00:58:16.800><c> can</c><00:58:16.980><c> access</c><00:58:17.250><c> it</c><00:58:17.609><c> anywhere</c><00:58:18.000><c> else</c><00:58:18.359><c> in</c><00:58:18.690><c> the</c>

00:58:19.099 --> 00:58:19.109 align:start position:0%
you can access it anywhere else in the
 

00:58:19.109 --> 00:58:23.960 align:start position:0%
you can access it anywhere else in the
program<00:58:19.380><c> including</c><00:58:20.569><c> here</c><00:58:21.569><c> so</c><00:58:22.440><c> if</c><00:58:22.800><c> we</c><00:58:23.490><c> put</c><00:58:23.790><c> the</c>

00:58:23.960 --> 00:58:23.970 align:start position:0%
program including here so if we put the
 

00:58:23.970 --> 00:58:29.450 align:start position:0%
program including here so if we put the
VAR<00:58:24.210><c> keyword</c><00:58:24.800><c> then</c><00:58:25.800><c> oops</c><00:58:27.140><c> global</c><00:58:28.140><c> would</c><00:58:28.859><c> equal</c>

00:58:29.450 --> 00:58:29.460 align:start position:0%
VAR keyword then oops global would equal
 

00:58:29.460 --> 00:58:32.210 align:start position:0%
VAR keyword then oops global would equal
undefined<00:58:30.210><c> and</c><00:58:30.690><c> then</c><00:58:31.230><c> we</c><00:58:31.349><c> would</c><00:58:31.500><c> never</c><00:58:31.740><c> have</c>

00:58:32.210 --> 00:58:32.220 align:start position:0%
undefined and then we would never have
 

00:58:32.220 --> 00:58:35.569 align:start position:0%
undefined and then we would never have
this<00:58:32.490><c> line</c><00:58:32.819><c> in</c><00:58:32.970><c> the</c><00:58:33.059><c> output</c><00:58:33.650><c> however</c><00:58:34.650><c> since</c><00:58:35.339><c> we</c>

00:58:35.569 --> 00:58:35.579 align:start position:0%
this line in the output however since we
 

00:58:35.579 --> 00:58:37.700 align:start position:0%
this line in the output however since we
did<00:58:35.760><c> not</c><00:58:36.030><c> put</c><00:58:36.420><c> the</c><00:58:36.599><c> VAR</c><00:58:36.839><c> keyword</c>

00:58:37.700 --> 00:58:37.710 align:start position:0%
did not put the VAR keyword
 

00:58:37.710 --> 00:58:41.930 align:start position:0%
did not put the VAR keyword
oops<00:58:38.339><c> global</c><00:58:39.030><c> equals</c><00:58:39.780><c> 5</c><00:58:40.079><c> and</c><00:58:40.609><c> this</c><00:58:41.609><c> will</c><00:58:41.819><c> be</c>

00:58:41.930 --> 00:58:41.940 align:start position:0%
oops global equals 5 and this will be
 

00:58:41.940 --> 00:58:43.280 align:start position:0%
oops global equals 5 and this will be
added<00:58:42.150><c> to</c><00:58:42.420><c> the</c><00:58:42.510><c> output</c>

00:58:43.280 --> 00:58:43.290 align:start position:0%
added to the output
 

00:58:43.290 --> 00:58:47.089 align:start position:0%
added to the output
oops<00:58:43.710><c> global</c><00:58:44.309><c> and</c><00:58:44.550><c> then</c><00:58:44.940><c> the</c><00:58:45.210><c> :</c><00:58:45.630><c> 5</c><00:58:45.930><c> so</c><00:58:46.680><c> when</c><00:58:46.950><c> we</c>

00:58:47.089 --> 00:58:47.099 align:start position:0%
oops global and then the : 5 so when we
 

00:58:47.099 --> 00:58:50.270 align:start position:0%
oops global and then the : 5 so when we
console<00:58:47.730><c> dot</c><00:58:47.940><c> log</c><00:58:48.000><c> the</c><00:58:48.480><c> output</c><00:58:49.050><c> it's</c><00:58:49.829><c> going</c><00:58:50.160><c> to</c>

00:58:50.270 --> 00:58:50.280 align:start position:0%
console dot log the output it's going to
 

00:58:50.280 --> 00:58:55.690 align:start position:0%
console dot log the output it's going to
say<00:58:50.490><c> my</c><00:58:51.150><c> global</c><00:58:51.690><c> 10</c><00:58:52.109><c> oops</c><00:58:52.980><c> Global</c><00:58:53.640><c> 5</c><00:58:54.470><c> now</c>

00:58:55.690 --> 00:58:55.700 align:start position:0%
say my global 10 oops Global 5 now
 

00:58:55.700 --> 00:58:57.680 align:start position:0%
say my global 10 oops Global 5 now
actually<00:58:56.700><c> it's</c><00:58:56.819><c> not</c><00:58:56.970><c> going</c><00:58:57.210><c> to</c><00:58:57.270><c> say</c><00:58:57.480><c> that</c>

00:58:57.680 --> 00:58:57.690 align:start position:0%
actually it's not going to say that
 

00:58:57.690 --> 00:58:59.599 align:start position:0%
actually it's not going to say that
because<00:58:58.020><c> this</c><00:58:58.200><c> is</c><00:58:58.319><c> in</c><00:58:58.470><c> scrim</c><00:58:58.859><c> ba'</c><00:58:59.040><c> and</c><00:58:59.250><c> in</c>

00:58:59.599 --> 00:58:59.609 align:start position:0%
because this is in scrim ba' and in
 

00:58:59.609 --> 00:59:02.540 align:start position:0%
because this is in scrim ba' and in
scrim<00:59:00.030><c> but</c><00:59:00.210><c> it's</c><00:59:00.420><c> it's</c><00:59:01.200><c> more</c><00:59:01.500><c> careful</c><00:59:02.309><c> and</c>

00:59:02.540 --> 00:59:02.550 align:start position:0%
scrim but it's it's more careful and
 

00:59:02.550 --> 00:59:05.599 align:start position:0%
scrim but it's it's more careful and
just<00:59:02.990><c> enforces</c><00:59:03.990><c> the</c><00:59:04.829><c> fact</c><00:59:05.099><c> that</c><00:59:05.190><c> you</c><00:59:05.339><c> have</c><00:59:05.490><c> to</c>

00:59:05.599 --> 00:59:05.609 align:start position:0%
just enforces the fact that you have to
 

00:59:05.609 --> 00:59:09.049 align:start position:0%
just enforces the fact that you have to
use<00:59:05.849><c> a</c><00:59:05.880><c> VAR</c><00:59:06.359><c> keyword</c><00:59:07.010><c> but</c><00:59:08.010><c> if</c><00:59:08.220><c> we</c><00:59:08.520><c> were</c><00:59:08.640><c> in</c><00:59:08.880><c> our</c>

00:59:09.049 --> 00:59:09.059 align:start position:0%
use a VAR keyword but if we were in our
 

00:59:09.059 --> 00:59:11.690 align:start position:0%
use a VAR keyword but if we were in our
browser<00:59:09.480><c> it</c><00:59:10.049><c> would</c><00:59:10.589><c> not</c><00:59:10.770><c> enforce</c><00:59:11.220><c> the</c><00:59:11.339><c> VAR</c>

00:59:11.690 --> 00:59:11.700 align:start position:0%
browser it would not enforce the VAR
 

00:59:11.700 --> 00:59:14.750 align:start position:0%
browser it would not enforce the VAR
keyword<00:59:12.059><c> and</c><00:59:12.569><c> then</c><00:59:13.260><c> it</c><00:59:13.470><c> would</c><00:59:13.770><c> actually</c><00:59:14.069><c> show</c>

00:59:14.750 --> 00:59:14.760 align:start position:0%
keyword and then it would actually show
 

00:59:14.760 --> 00:59:20.270 align:start position:0%
keyword and then it would actually show
my<00:59:15.510><c> global</c><00:59:15.869><c> 10</c><00:59:16.319><c> oops</c><00:59:16.980><c> global</c><00:59:17.549><c> 5</c><00:59:18.180><c> if</c><00:59:19.109><c> this</c><00:59:20.010><c> was</c><00:59:20.250><c> a</c>

00:59:20.270 --> 00:59:20.280 align:start position:0%
my global 10 oops global 5 if this was a
 

00:59:20.280 --> 00:59:22.430 align:start position:0%
my global 10 oops global 5 if this was a
little<00:59:20.549><c> complicated</c><00:59:21.210><c> don't</c><00:59:22.140><c> worry</c><00:59:22.319><c> about</c>

00:59:22.430 --> 00:59:22.440 align:start position:0%
little complicated don't worry about
 

00:59:22.440 --> 00:59:24.740 align:start position:0%
little complicated don't worry about
that<00:59:22.740><c> because</c><00:59:23.010><c> a</c><00:59:23.369><c> lot</c><00:59:23.700><c> of</c><00:59:23.730><c> these</c><00:59:24.000><c> concepts</c>

00:59:24.740 --> 00:59:24.750 align:start position:0%
that because a lot of these concepts
 

00:59:24.750 --> 00:59:27.950 align:start position:0%
that because a lot of these concepts
will<00:59:25.290><c> be</c><00:59:25.319><c> going</c><00:59:26.010><c> over</c><00:59:26.280><c> again</c><00:59:26.640><c> later</c><00:59:27.240><c> with</c>

00:59:27.950 --> 00:59:27.960 align:start position:0%
will be going over again later with
 

00:59:27.960 --> 00:59:34.160 align:start position:0%
will be going over again later with
additional<00:59:28.730><c> examples</c>

00:59:34.160 --> 00:59:34.170 align:start position:0%
 
 

00:59:34.170 --> 00:59:36.510 align:start position:0%
 
variables<00:59:35.170><c> which</c><00:59:35.350><c> are</c><00:59:35.500><c> declared</c><00:59:35.560><c> within</c><00:59:36.280><c> a</c>

00:59:36.510 --> 00:59:36.520 align:start position:0%
variables which are declared within a
 

00:59:36.520 --> 00:59:38.910 align:start position:0%
variables which are declared within a
function<00:59:36.760><c> as</c><00:59:37.270><c> well</c><00:59:37.990><c> as</c><00:59:38.290><c> the</c><00:59:38.530><c> function</c>

00:59:38.910 --> 00:59:38.920 align:start position:0%
function as well as the function
 

00:59:38.920 --> 00:59:42.180 align:start position:0%
function as well as the function
parameters<00:59:39.610><c> have</c><00:59:39.910><c> local</c><00:59:40.630><c> scope</c><00:59:40.950><c> that</c><00:59:41.950><c> means</c>

00:59:42.180 --> 00:59:42.190 align:start position:0%
parameters have local scope that means
 

00:59:42.190 --> 00:59:44.160 align:start position:0%
parameters have local scope that means
they<00:59:42.340><c> are</c><00:59:42.430><c> only</c><00:59:42.640><c> visible</c><00:59:43.210><c> from</c><00:59:43.510><c> within</c><00:59:43.690><c> the</c>

00:59:44.160 --> 00:59:44.170 align:start position:0%
they are only visible from within the
 

00:59:44.170 --> 00:59:46.710 align:start position:0%
they are only visible from within the
function<00:59:44.440><c> let</c><00:59:45.370><c> me</c><00:59:45.460><c> show</c><00:59:45.640><c> you</c><00:59:45.700><c> what</c><00:59:46.000><c> I</c><00:59:46.210><c> mean</c><00:59:46.450><c> if</c>

00:59:46.710 --> 00:59:46.720 align:start position:0%
function let me show you what I mean if
 

00:59:46.720 --> 00:59:49.670 align:start position:0%
function let me show you what I mean if
I<00:59:47.140><c> declare</c><00:59:47.590><c> a</c><00:59:47.620><c> variable</c><00:59:47.890><c> right</c><00:59:48.280><c> here</c><00:59:48.340><c> my</c><00:59:48.850><c> var</c>

00:59:49.670 --> 00:59:49.680 align:start position:0%
I declare a variable right here my var
 

00:59:49.680 --> 00:59:53.850 align:start position:0%
I declare a variable right here my var
equals<00:59:50.680><c> five</c><00:59:51.580><c> so</c><00:59:52.050><c> we've</c><00:59:53.050><c> declared</c><00:59:53.470><c> this</c>

00:59:53.850 --> 00:59:53.860 align:start position:0%
equals five so we've declared this
 

00:59:53.860 --> 00:59:58.290 align:start position:0%
equals five so we've declared this
variable<00:59:54.720><c> inside</c><00:59:55.720><c> a</c><00:59:56.290><c> function</c><00:59:57.160><c> so</c><00:59:57.970><c> this</c>

00:59:58.290 --> 00:59:58.300 align:start position:0%
variable inside a function so this
 

00:59:58.300 --> 01:00:01.860 align:start position:0%
variable inside a function so this
variable<00:59:58.900><c> my</c><00:59:59.350><c> var</c><00:59:59.710><c> is</c><01:00:00.040><c> only</c><01:00:00.670><c> visible</c><01:00:01.120><c> inside</c>

01:00:01.860 --> 01:00:01.870 align:start position:0%
variable my var is only visible inside
 

01:00:01.870 --> 01:00:03.540 align:start position:0%
variable my var is only visible inside
the<01:00:02.020><c> function</c><01:00:02.230><c> so</c><01:00:02.620><c> it</c><01:00:02.710><c> says</c><01:00:02.890><c> console</c><01:00:03.460><c> that</c>

01:00:03.540 --> 01:00:03.550 align:start position:0%
the function so it says console that
 

01:00:03.550 --> 01:00:06.000 align:start position:0%
the function so it says console that
logged<01:00:03.820><c> my</c><01:00:04.030><c> var</c><01:00:04.390><c> it</c><01:00:04.660><c> should</c><01:00:05.170><c> console</c><01:00:05.680><c> that</c><01:00:05.800><c> log</c>

01:00:06.000 --> 01:00:06.010 align:start position:0%
logged my var it should console that log
 

01:00:06.010 --> 01:00:09.360 align:start position:0%
logged my var it should console that log
to<01:00:06.250><c> five</c><01:00:06.490><c> so</c><01:00:07.480><c> we're</c><01:00:08.110><c> gonna</c><01:00:08.230><c> call</c><01:00:08.650><c> the</c><01:00:08.920><c> function</c>

01:00:09.360 --> 01:00:09.370 align:start position:0%
to five so we're gonna call the function
 

01:00:09.370 --> 01:00:11.520 align:start position:0%
to five so we're gonna call the function
here<01:00:09.760><c> and</c><01:00:09.940><c> it's</c><01:00:10.330><c> gonna</c><01:00:10.450><c> console</c><01:00:10.930><c> dialogue</c><01:00:11.320><c> my</c>

01:00:11.520 --> 01:00:11.530 align:start position:0%
here and it's gonna console dialogue my
 

01:00:11.530 --> 01:00:14.190 align:start position:0%
here and it's gonna console dialogue my
var<01:00:11.860><c> but</c><01:00:12.490><c> then</c><01:00:12.790><c> the</c><01:00:12.970><c> program</c><01:00:13.480><c> is</c><01:00:13.510><c> gonna</c><01:00:13.840><c> run</c>

01:00:14.190 --> 01:00:14.200 align:start position:0%
var but then the program is gonna run
 

01:00:14.200 --> 01:00:16.410 align:start position:0%
var but then the program is gonna run
this<01:00:14.380><c> console</c><01:00:15.010><c> dot</c><01:00:15.160><c> log</c><01:00:15.220><c> that's</c><01:00:15.670><c> outside</c><01:00:16.360><c> of</c>

01:00:16.410 --> 01:00:16.420 align:start position:0%
this console dot log that's outside of
 

01:00:16.420 --> 01:00:18.750 align:start position:0%
this console dot log that's outside of
the<01:00:16.780><c> function</c><01:00:17.320><c> it's</c><01:00:17.830><c> still</c><01:00:18.160><c> going</c><01:00:18.430><c> to</c><01:00:18.520><c> try</c><01:00:18.700><c> to</c>

01:00:18.750 --> 01:00:18.760 align:start position:0%
the function it's still going to try to
 

01:00:18.760 --> 01:00:21.810 align:start position:0%
the function it's still going to try to
access<01:00:19.030><c> my</c><01:00:19.660><c> var</c><01:00:20.080><c> and</c><01:00:20.440><c> so</c><01:00:21.370><c> let's</c><01:00:21.580><c> see</c><01:00:21.700><c> what</c>

01:00:21.810 --> 01:00:21.820 align:start position:0%
access my var and so let's see what
 

01:00:21.820 --> 01:00:25.080 align:start position:0%
access my var and so let's see what
happens<01:00:22.270><c> you</c><01:00:23.110><c> can</c><01:00:23.170><c> see</c><01:00:23.620><c> in</c><01:00:23.830><c> the</c><01:00:23.980><c> console</c><01:00:24.580><c> that</c>

01:00:25.080 --> 01:00:25.090 align:start position:0%
happens you can see in the console that
 

01:00:25.090 --> 01:00:28.080 align:start position:0%
happens you can see in the console that
first<01:00:25.600><c> there's</c><01:00:25.960><c> a</c><01:00:26.020><c> five</c><01:00:26.410><c> because</c><01:00:27.370><c> it</c><01:00:27.580><c> console</c>

01:00:28.080 --> 01:00:28.090 align:start position:0%
first there's a five because it console
 

01:00:28.090 --> 01:00:31.380 align:start position:0%
first there's a five because it console
dot<01:00:28.240><c> log</c><01:00:28.320><c> within</c><01:00:29.320><c> the</c><01:00:29.440><c> function</c><01:00:29.920><c> then</c><01:00:30.820><c> there's</c>

01:00:31.380 --> 01:00:31.390 align:start position:0%
dot log within the function then there's
 

01:00:31.390 --> 01:00:34.140 align:start position:0%
dot log within the function then there's
an<01:00:31.600><c> error</c><01:00:31.990><c> because</c><01:00:32.920><c> it</c><01:00:33.040><c> tried</c><01:00:33.310><c> to</c><01:00:33.340><c> access</c><01:00:33.610><c> my</c>

01:00:34.140 --> 01:00:34.150 align:start position:0%
an error because it tried to access my
 

01:00:34.150 --> 01:00:37.860 align:start position:0%
an error because it tried to access my
var<01:00:34.450><c> outside</c><01:00:35.260><c> of</c><01:00:35.560><c> the</c><01:00:35.740><c> function</c><01:00:36.010><c> so</c><01:00:36.750><c> really</c><01:00:37.750><c> we</c>

01:00:37.860 --> 01:00:37.870 align:start position:0%
var outside of the function so really we
 

01:00:37.870 --> 01:00:39.600 align:start position:0%
var outside of the function so really we
just<01:00:37.900><c> need</c><01:00:38.140><c> to</c><01:00:38.320><c> delete</c><01:00:38.680><c> this</c><01:00:39.010><c> where</c><01:00:39.280><c> we</c><01:00:39.400><c> try</c><01:00:39.580><c> to</c>

01:00:39.600 --> 01:00:39.610 align:start position:0%
just need to delete this where we try to
 

01:00:39.610 --> 01:00:41.550 align:start position:0%
just need to delete this where we try to
access<01:00:39.850><c> the</c><01:00:40.300><c> variable</c><01:00:40.690><c> outside</c><01:00:41.140><c> the</c><01:00:41.350><c> function</c>

01:00:41.550 --> 01:00:41.560 align:start position:0%
access the variable outside the function
 

01:00:41.560 --> 01:00:48.390 align:start position:0%
access the variable outside the function
and<01:00:42.150><c> now</c><01:00:43.150><c> there</c><01:00:43.690><c> is</c><01:00:43.720><c> no</c><01:00:44.380><c> error</c>

01:00:48.390 --> 01:00:48.400 align:start position:0%
 
 

01:00:48.400 --> 01:00:51.480 align:start position:0%
 
it<01:00:48.730><c> is</c><01:00:49.359><c> possible</c><01:00:49.930><c> to</c><01:00:49.960><c> have</c><01:00:50.049><c> both</c><01:00:50.440><c> local</c><01:00:51.250><c> and</c>

01:00:51.480 --> 01:00:51.490 align:start position:0%
it is possible to have both local and
 

01:00:51.490 --> 01:00:54.930 align:start position:0%
it is possible to have both local and
global<01:00:51.730><c> variables</c><01:00:52.059><c> with</c><01:00:52.990><c> the</c><01:00:53.230><c> same</c><01:00:53.529><c> name</c><01:00:53.940><c> when</c>

01:00:54.930 --> 01:00:54.940 align:start position:0%
global variables with the same name when
 

01:00:54.940 --> 01:00:57.420 align:start position:0%
global variables with the same name when
you<01:00:55.119><c> do</c><01:00:55.329><c> this</c><01:00:55.539><c> the</c><01:00:56.020><c> local</c><01:00:56.349><c> variable</c><01:00:57.099><c> takes</c>

01:00:57.420 --> 01:00:57.430 align:start position:0%
you do this the local variable takes
 

01:00:57.430 --> 01:01:01.079 align:start position:0%
you do this the local variable takes
precedence<01:00:58.210><c> over</c><01:00:58.420><c> the</c><01:00:58.809><c> global</c><01:00:59.500><c> variable</c><01:01:00.309><c> let</c>

01:01:01.079 --> 01:01:01.089 align:start position:0%
precedence over the global variable let
 

01:01:01.089 --> 01:01:03.960 align:start position:0%
precedence over the global variable let
me<01:01:01.210><c> show</c><01:01:01.390><c> you</c><01:01:01.450><c> an</c><01:01:01.630><c> example</c><01:01:02.339><c> here</c><01:01:03.339><c> we</c><01:01:03.670><c> have</c><01:01:03.700><c> a</c>

01:01:03.960 --> 01:01:03.970 align:start position:0%
me show you an example here we have a
 

01:01:03.970 --> 01:01:07.380 align:start position:0%
me show you an example here we have a
function<01:01:04.750><c> called</c><01:01:04.779><c> my</c><01:01:05.650><c> outfit</c><01:01:06.430><c> that's</c><01:01:07.029><c> going</c>

01:01:07.380 --> 01:01:07.390 align:start position:0%
function called my outfit that's going
 

01:01:07.390 --> 01:01:10.710 align:start position:0%
function called my outfit that's going
to<01:01:07.569><c> return</c><01:01:08.130><c> outerwear</c><01:01:09.190><c> that's</c><01:01:09.880><c> this</c><01:01:10.150><c> variable</c>

01:01:10.710 --> 01:01:10.720 align:start position:0%
to return outerwear that's this variable
 

01:01:10.720 --> 01:01:13.819 align:start position:0%
to return outerwear that's this variable
up<01:01:10.960><c> here</c><01:01:11.339><c> this</c><01:01:12.339><c> is</c><01:01:12.400><c> a</c><01:01:12.640><c> global</c><01:01:13.270><c> variable</c>

01:01:13.819 --> 01:01:13.829 align:start position:0%
up here this is a global variable
 

01:01:13.829 --> 01:01:16.859 align:start position:0%
up here this is a global variable
because<01:01:14.829><c> it</c><01:01:14.859><c> is</c><01:01:15.130><c> declared</c><01:01:15.700><c> outside</c><01:01:16.630><c> of</c><01:01:16.779><c> the</c>

01:01:16.859 --> 01:01:16.869 align:start position:0%
because it is declared outside of the
 

01:01:16.869 --> 01:01:21.779 align:start position:0%
because it is declared outside of the
function<01:01:17.130><c> so</c><01:01:18.130><c> when</c><01:01:18.760><c> we</c><01:01:18.940><c> console</c><01:01:19.809><c> that</c><01:01:20.079><c> log</c><01:01:20.789><c> the</c>

01:01:21.779 --> 01:01:21.789 align:start position:0%
function so when we console that log the
 

01:01:21.789 --> 01:01:26.279 align:start position:0%
function so when we console that log the
output<01:01:22.750><c> of</c><01:01:23.039><c> the</c><01:01:24.039><c> my</c><01:01:24.309><c> outfit</c><01:01:24.970><c> function</c><01:01:25.720><c> or</c><01:01:25.990><c> the</c>

01:01:26.279 --> 01:01:26.289 align:start position:0%
output of the my outfit function or the
 

01:01:26.289 --> 01:01:28.319 align:start position:0%
output of the my outfit function or the
my<01:01:26.500><c> outfit</c><01:01:26.950><c> function</c><01:01:27.430><c> is</c><01:01:27.670><c> going</c><01:01:27.940><c> to</c><01:01:28.029><c> return</c>

01:01:28.319 --> 01:01:28.329 align:start position:0%
my outfit function is going to return
 

01:01:28.329 --> 01:01:31.140 align:start position:0%
my outfit function is going to return
outerwear<01:01:29.079><c> which</c><01:01:29.410><c> is</c><01:01:29.650><c> the</c><01:01:29.859><c> war</c><01:01:30.010><c> t-shirt</c><01:01:30.520><c> so</c>

01:01:31.140 --> 01:01:31.150 align:start position:0%
outerwear which is the war t-shirt so
 

01:01:31.150 --> 01:01:33.690 align:start position:0%
outerwear which is the war t-shirt so
let's<01:01:31.390><c> check</c><01:01:31.660><c> the</c><01:01:31.809><c> console</c><01:01:32.319><c> and</c><01:01:32.589><c> you</c><01:01:33.099><c> can</c><01:01:33.369><c> see</c>

01:01:33.690 --> 01:01:33.700 align:start position:0%
let's check the console and you can see
 

01:01:33.700 --> 01:01:34.410 align:start position:0%
let's check the console and you can see
yep

01:01:34.410 --> 01:01:34.420 align:start position:0%
yep
 

01:01:34.420 --> 01:01:37.019 align:start position:0%
yep
t-shirt<01:01:34.869><c> is</c><01:01:35.079><c> there</c><01:01:35.319><c> however</c><01:01:36.309><c> let's</c><01:01:36.760><c> change</c>

01:01:37.019 --> 01:01:37.029 align:start position:0%
t-shirt is there however let's change
 

01:01:37.029 --> 01:01:39.480 align:start position:0%
t-shirt is there however let's change
this<01:01:37.240><c> up</c><01:01:37.450><c> a</c><01:01:37.599><c> bit</c><01:01:37.779><c> so</c><01:01:38.289><c> we</c><01:01:38.319><c> have</c><01:01:38.500><c> some</c><01:01:38.770><c> space</c><01:01:39.069><c> here</c>

01:01:39.480 --> 01:01:39.490 align:start position:0%
this up a bit so we have some space here
 

01:01:39.490 --> 01:01:44.990 align:start position:0%
this up a bit so we have some space here
because<01:01:40.210><c> I'm</c><01:01:40.390><c> going</c><01:01:40.690><c> to</c><01:01:40.779><c> put</c><01:01:40.990><c> var</c><01:01:42.150><c> outerwear</c>

01:01:44.990 --> 01:01:45.000 align:start position:0%
because I'm going to put var outerwear
 

01:01:45.000 --> 01:01:53.880 align:start position:0%
because I'm going to put var outerwear
equals<01:01:46.619><c> sweater</c><01:01:50.520><c> so</c><01:01:51.520><c> now</c><01:01:51.970><c> if</c><01:01:52.359><c> I</c><01:01:53.020><c> run</c><01:01:53.319><c> this</c>

01:01:53.880 --> 01:01:53.890 align:start position:0%
equals sweater so now if I run this
 

01:01:53.890 --> 01:01:56.789 align:start position:0%
equals sweater so now if I run this
program<01:01:54.130><c> you</c><01:01:54.849><c> can</c><01:01:55.089><c> see</c><01:01:55.480><c> in</c><01:01:55.569><c> the</c><01:01:55.690><c> console</c><01:01:56.230><c> it's</c>

01:01:56.789 --> 01:01:56.799 align:start position:0%
program you can see in the console it's
 

01:01:56.799 --> 01:01:59.730 align:start position:0%
program you can see in the console it's
going<01:01:57.190><c> to</c><01:01:57.339><c> say</c><01:01:57.549><c> sweater</c><01:01:58.150><c> instead</c><01:01:59.109><c> of</c><01:01:59.230><c> t-shirt</c>

01:01:59.730 --> 01:01:59.740 align:start position:0%
going to say sweater instead of t-shirt
 

01:01:59.740 --> 01:02:01.910 align:start position:0%
going to say sweater instead of t-shirt
it's<01:02:00.369><c> because</c><01:02:00.849><c> this</c><01:02:01.089><c> local</c><01:02:01.690><c> variable</c>

01:02:01.910 --> 01:02:01.920 align:start position:0%
it's because this local variable
 

01:02:01.920 --> 01:02:07.039 align:start position:0%
it's because this local variable
outerwear<01:02:02.920><c> took</c><01:02:03.609><c> precedence</c><01:02:04.569><c> over</c><01:02:04.809><c> the</c>

01:02:07.039 --> 01:02:07.049 align:start position:0%
outerwear took precedence over the
 

01:02:07.049 --> 01:02:09.930 align:start position:0%
outerwear took precedence over the
global<01:02:08.049><c> variable</c><01:02:08.680><c> another</c><01:02:09.549><c> thing</c>

01:02:09.930 --> 01:02:09.940 align:start position:0%
global variable another thing
 

01:02:09.940 --> 01:02:12.440 align:start position:0%
global variable another thing
interesting<01:02:10.420><c> thing</c><01:02:10.630><c> about</c><01:02:10.720><c> this</c><01:02:11.079><c> if</c><01:02:11.349><c> I</c><01:02:11.770><c> do</c>

01:02:12.440 --> 01:02:12.450 align:start position:0%
interesting thing about this if I do
 

01:02:12.450 --> 01:02:15.680 align:start position:0%
interesting thing about this if I do
console.log<01:02:13.450><c> and</c><01:02:13.960><c> I</c><01:02:14.380><c> console</c><01:02:14.980><c> that</c><01:02:15.069><c> log</c><01:02:15.339><c> that</c>

01:02:15.680 --> 01:02:15.690 align:start position:0%
console.log and I console that log that
 

01:02:15.690 --> 01:02:21.750 align:start position:0%
console.log and I console that log that
outerwear<01:02:16.950><c> variable</c><01:02:17.950><c> we'll</c><01:02:18.910><c> see</c><01:02:19.329><c> that</c><01:02:20.760><c> it's</c>

01:02:21.750 --> 01:02:21.760 align:start position:0%
outerwear variable we'll see that it's
 

01:02:21.760 --> 01:02:24.720 align:start position:0%
outerwear variable we'll see that it's
still<01:02:22.210><c> t-shirt</c><01:02:22.809><c> so</c><01:02:23.440><c> first</c><01:02:24.069><c> you</c><01:02:24.369><c> see</c><01:02:24.549><c> in</c><01:02:24.640><c> the</c>

01:02:24.720 --> 01:02:24.730 align:start position:0%
still t-shirt so first you see in the
 

01:02:24.730 --> 01:02:27.390 align:start position:0%
still t-shirt so first you see in the
console<01:02:25.180><c> says</c><01:02:25.420><c> sweater</c><01:02:25.809><c> and</c><01:02:26.109><c> t-shirt</c><01:02:26.680><c> so</c>

01:02:27.390 --> 01:02:27.400 align:start position:0%
console says sweater and t-shirt so
 

01:02:27.400 --> 01:02:30.569 align:start position:0%
console says sweater and t-shirt so
first<01:02:27.789><c> we</c><01:02:27.940><c> console</c><01:02:28.480><c> dot</c><01:02:28.599><c> log</c><01:02:28.859><c> this</c><01:02:29.859><c> function</c>

01:02:30.569 --> 01:02:30.579 align:start position:0%
first we console dot log this function
 

01:02:30.579 --> 01:02:31.829 align:start position:0%
first we console dot log this function
which<01:02:31.119><c> is</c><01:02:31.299><c> sweater</c>

01:02:31.829 --> 01:02:31.839 align:start position:0%
which is sweater
 

01:02:31.839 --> 01:02:34.620 align:start position:0%
which is sweater
it<01:02:32.349><c> returns</c><01:02:32.799><c> sweater</c><01:02:33.130><c> and</c><01:02:33.369><c> then</c><01:02:33.940><c> we</c><01:02:34.119><c> console</c>

01:02:34.620 --> 01:02:34.630 align:start position:0%
it returns sweater and then we console
 

01:02:34.630 --> 01:02:38.010 align:start position:0%
it returns sweater and then we console
that<01:02:34.750><c> log</c><01:02:35.020><c> the</c><01:02:35.829><c> global</c><01:02:36.460><c> variable</c><01:02:37.119><c> which</c><01:02:37.750><c> is</c>

01:02:38.010 --> 01:02:38.020 align:start position:0%
that log the global variable which is
 

01:02:38.020 --> 01:02:42.550 align:start position:0%
that log the global variable which is
t-shirt

01:02:42.550 --> 01:02:42.560 align:start position:0%
 
 

01:02:42.560 --> 01:02:45.220 align:start position:0%
 
you<01:02:43.280><c> can</c><01:02:43.490><c> return</c><01:02:43.850><c> a</c><01:02:43.910><c> value</c><01:02:44.030><c> from</c><01:02:44.540><c> a</c><01:02:44.720><c> function</c>

01:02:45.220 --> 01:02:45.230 align:start position:0%
you can return a value from a function
 

01:02:45.230 --> 01:02:48.160 align:start position:0%
you can return a value from a function
with<01:02:45.410><c> this</c><01:02:45.650><c> return</c><01:02:46.280><c> statement</c><01:02:46.870><c> so</c><01:02:47.870><c> we</c><01:02:48.020><c> have</c>

01:02:48.160 --> 01:02:48.170 align:start position:0%
with this return statement so we have
 

01:02:48.170 --> 01:02:51.100 align:start position:0%
with this return statement so we have
this<01:02:48.290><c> function</c><01:02:48.650><c> here</c><01:02:49.190><c> and</c><01:02:49.370><c> we</c><01:02:49.510><c> are</c><01:02:50.510><c> passing</c><01:02:50.840><c> a</c>

01:02:51.100 --> 01:02:51.110 align:start position:0%
this function here and we are passing a
 

01:02:51.110 --> 01:02:53.590 align:start position:0%
this function here and we are passing a
number<01:02:51.290><c> into</c><01:02:51.860><c> it</c><01:02:52.010><c> the</c><01:02:52.190><c> num</c><01:02:52.460><c> and</c><01:02:52.760><c> then</c><01:02:52.820><c> it's</c>

01:02:53.590 --> 01:02:53.600 align:start position:0%
number into it the num and then it's
 

01:02:53.600 --> 01:02:56.140 align:start position:0%
number into it the num and then it's
going<01:02:53.810><c> to</c><01:02:53.900><c> return</c><01:02:54.470><c> whatever's</c><01:02:55.400><c> after</c><01:02:55.580><c> the</c>

01:02:56.140 --> 01:02:56.150 align:start position:0%
going to return whatever's after the
 

01:02:56.150 --> 01:02:59.620 align:start position:0%
going to return whatever's after the
return<01:02:56.570><c> keyword</c><01:02:57.230><c> in</c><01:02:57.710><c> this</c><01:02:58.220><c> case</c><01:02:58.430><c> num</c><01:02:58.760><c> minus</c><01:02:59.210><c> 7</c>

01:02:59.620 --> 01:02:59.630 align:start position:0%
return keyword in this case num minus 7
 

01:02:59.630 --> 01:03:01.960 align:start position:0%
return keyword in this case num minus 7
so<01:03:00.290><c> here</c><01:03:00.320><c> we're</c><01:03:00.920><c> going</c><01:03:01.040><c> to</c><01:03:01.100><c> consult</c><01:03:01.640><c> out</c><01:03:01.760><c> log</c>

01:03:01.960 --> 01:03:01.970 align:start position:0%
so here we're going to consult out log
 

01:03:01.970 --> 01:03:05.800 align:start position:0%
so here we're going to consult out log
the<01:03:02.180><c> function</c><01:03:02.630><c> and</c><01:03:03.310><c> it</c><01:03:04.310><c> returns</c><01:03:04.850><c> the</c><01:03:05.300><c> result</c>

01:03:05.800 --> 01:03:05.810 align:start position:0%
the function and it returns the result
 

01:03:05.810 --> 01:03:10.030 align:start position:0%
the function and it returns the result
of<01:03:05.960><c> minus</c><01:03:06.380><c> 7</c><01:03:06.590><c> is</c><01:03:06.980><c> this</c><01:03:07.370><c> 10</c><01:03:07.910><c> minus</c><01:03:08.870><c> 7</c><01:03:09.140><c> which</c><01:03:09.560><c> is</c><01:03:09.590><c> 3</c>

01:03:10.030 --> 01:03:10.040 align:start position:0%
of minus 7 is this 10 minus 7 which is 3
 

01:03:10.040 --> 01:03:11.920 align:start position:0%
of minus 7 is this 10 minus 7 which is 3
so<01:03:10.640><c> it's</c><01:03:10.760><c> going</c><01:03:10.850><c> to</c><01:03:10.910><c> cancel</c><01:03:11.330><c> that</c><01:03:11.360><c> log</c><01:03:11.660><c> the</c>

01:03:11.920 --> 01:03:11.930 align:start position:0%
so it's going to cancel that log the
 

01:03:11.930 --> 01:03:14.440 align:start position:0%
so it's going to cancel that log the
number<01:03:12.230><c> 3</c><01:03:12.530><c> if</c><01:03:12.950><c> we</c><01:03:13.010><c> look</c><01:03:13.280><c> in</c><01:03:13.400><c> the</c><01:03:13.490><c> console</c><01:03:14.000><c> yep</c>

01:03:14.440 --> 01:03:14.450 align:start position:0%
number 3 if we look in the console yep
 

01:03:14.450 --> 01:03:15.100 align:start position:0%
number 3 if we look in the console yep
it

01:03:15.100 --> 01:03:15.110 align:start position:0%
it
 

01:03:15.110 --> 01:03:18.040 align:start position:0%
it
console.log<01:03:16.100><c> the</c><01:03:16.370><c> number</c><01:03:16.700><c> 3</c><01:03:17.030><c> because</c><01:03:17.690><c> the</c>

01:03:18.040 --> 01:03:18.050 align:start position:0%
console.log the number 3 because the
 

01:03:18.050 --> 01:03:20.980 align:start position:0%
console.log the number 3 because the
function<01:03:18.470><c> returns</c><01:03:18.710><c> 3</c><01:03:19.570><c> let's</c><01:03:20.570><c> try</c><01:03:20.930><c> creating</c>

01:03:20.980 --> 01:03:20.990 align:start position:0%
function returns 3 let's try creating
 

01:03:20.990 --> 01:03:24.430 align:start position:0%
function returns 3 let's try creating
another<01:03:21.740><c> one</c><01:03:22.070><c> this</c><01:03:22.970><c> function</c><01:03:23.600><c> is</c><01:03:23.780><c> going</c><01:03:24.050><c> to</c><01:03:24.260><c> be</c>

01:03:24.430 --> 01:03:24.440 align:start position:0%
another one this function is going to be
 

01:03:24.440 --> 01:03:29.080 align:start position:0%
another one this function is going to be
called<01:03:25.240><c> times</c><01:03:26.240><c> 5</c><01:03:27.340><c> again</c><01:03:28.340><c> we'll</c><01:03:28.520><c> pass</c><01:03:28.820><c> in</c><01:03:29.030><c> a</c>

01:03:29.080 --> 01:03:29.090 align:start position:0%
called times 5 again we'll pass in a
 

01:03:29.090 --> 01:03:32.080 align:start position:0%
called times 5 again we'll pass in a
number<01:03:29.510><c> and</c><01:03:30.370><c> it's</c><01:03:31.370><c> just</c><01:03:31.610><c> going</c><01:03:31.820><c> to</c><01:03:31.880><c> return</c>

01:03:32.080 --> 01:03:32.090 align:start position:0%
number and it's just going to return
 

01:03:32.090 --> 01:03:36.780 align:start position:0%
number and it's just going to return
something<01:03:32.890><c> it's</c><01:03:33.890><c> going</c><01:03:34.190><c> to</c><01:03:34.310><c> return</c><01:03:34.700><c> the</c><01:03:35.120><c> num</c>

01:03:36.780 --> 01:03:36.790 align:start position:0%
something it's going to return the num
 

01:03:36.790 --> 01:03:41.170 align:start position:0%
something it's going to return the num
times<01:03:37.930><c> 5</c><01:03:38.930><c> and</c><01:03:39.410><c> then</c><01:03:39.490><c> just</c><01:03:40.490><c> like</c><01:03:40.610><c> before</c><01:03:40.820><c> we</c><01:03:41.150><c> can</c>

01:03:41.170 --> 01:03:41.180 align:start position:0%
times 5 and then just like before we can
 

01:03:41.180 --> 01:03:45.820 align:start position:0%
times 5 and then just like before we can
test<01:03:41.600><c> it</c><01:03:41.810><c> using</c><01:03:42.410><c> a</c><01:03:42.620><c> console</c><01:03:43.100><c> dot</c><01:03:43.250><c> log</c><01:03:44.170><c> times</c><01:03:45.170><c> 5</c>

01:03:45.820 --> 01:03:45.830 align:start position:0%
test it using a console dot log times 5
 

01:03:45.830 --> 01:03:49.770 align:start position:0%
test it using a console dot log times 5
and<01:03:46.340><c> we'll</c><01:03:46.790><c> pass</c><01:03:47.150><c> in</c><01:03:47.480><c> the</c><01:03:47.630><c> number</c><01:03:47.780><c> 5</c><01:03:48.230><c> here</c><01:03:48.590><c> and</c>

01:03:49.770 --> 01:03:49.780 align:start position:0%
and we'll pass in the number 5 here and
 

01:03:49.780 --> 01:03:53.890 align:start position:0%
and we'll pass in the number 5 here and
if<01:03:50.780><c> I</c><01:03:51.020><c> run</c><01:03:51.650><c> this</c><01:03:51.890><c> we'll</c><01:03:52.760><c> see</c><01:03:53.030><c> that</c><01:03:53.330><c> it</c><01:03:53.660><c> returns</c>

01:03:53.890 --> 01:03:53.900 align:start position:0%
if I run this we'll see that it returns
 

01:03:53.900 --> 01:03:59.160 align:start position:0%
if I run this we'll see that it returns
number<01:03:54.590><c> 25</c>

01:03:59.160 --> 01:03:59.170 align:start position:0%
 
 

01:03:59.170 --> 01:04:01.990 align:start position:0%
 
functions<01:04:00.170><c> can</c><01:04:00.350><c> have</c><01:04:00.410><c> return</c><01:04:00.950><c> statements</c><01:04:01.550><c> but</c>

01:04:01.990 --> 01:04:02.000 align:start position:0%
functions can have return statements but
 

01:04:02.000 --> 01:04:04.690 align:start position:0%
functions can have return statements but
they<01:04:02.060><c> don't</c><01:04:02.360><c> have</c><01:04:02.600><c> to</c><01:04:02.870><c> in</c><01:04:03.170><c> this</c><01:04:03.770><c> case</c><01:04:04.070><c> this</c>

01:04:04.690 --> 01:04:04.700 align:start position:0%
they don't have to in this case this
 

01:04:04.700 --> 01:04:07.380 align:start position:0%
they don't have to in this case this
function<01:04:05.090><c> adds</c><01:04:05.630><c> three</c><01:04:06.290><c> to</c><01:04:06.530><c> the</c><01:04:06.680><c> sum</c><01:04:07.010><c> variable</c>

01:04:07.380 --> 01:04:07.390 align:start position:0%
function adds three to the sum variable
 

01:04:07.390 --> 01:04:10.240 align:start position:0%
function adds three to the sum variable
which<01:04:08.390><c> is</c><01:04:08.570><c> a</c><01:04:08.600><c> global</c><01:04:09.260><c> variable</c><01:04:09.440><c> because</c><01:04:10.070><c> it's</c>

01:04:10.240 --> 01:04:10.250 align:start position:0%
which is a global variable because it's
 

01:04:10.250 --> 01:04:12.970 align:start position:0%
which is a global variable because it's
defined<01:04:10.700><c> before</c><01:04:10.970><c> the</c><01:04:11.330><c> function</c><01:04:11.540><c> it</c><01:04:12.410><c> does</c><01:04:12.770><c> not</c>

01:04:12.970 --> 01:04:12.980 align:start position:0%
defined before the function it does not
 

01:04:12.980 --> 01:04:16.360 align:start position:0%
defined before the function it does not
return<01:04:13.310><c> anything</c><01:04:14.080><c> so</c><01:04:15.080><c> if</c><01:04:15.530><c> you</c><01:04:15.860><c> don't</c><01:04:16.040><c> specify</c>

01:04:16.360 --> 01:04:16.370 align:start position:0%
return anything so if you don't specify
 

01:04:16.370 --> 01:04:19.450 align:start position:0%
return anything so if you don't specify
a<01:04:16.700><c> return</c><01:04:17.180><c> value</c><01:04:17.450><c> the</c><01:04:18.170><c> return</c><01:04:18.530><c> value</c><01:04:18.980><c> is</c><01:04:19.010><c> just</c>

01:04:19.450 --> 01:04:19.460 align:start position:0%
a return value the return value is just
 

01:04:19.460 --> 01:04:21.730 align:start position:0%
a return value the return value is just
undefined<01:04:20.420><c> now</c><01:04:21.320><c> I'm</c><01:04:21.410><c> going</c><01:04:21.530><c> to</c><01:04:21.590><c> create</c>

01:04:21.730 --> 01:04:21.740 align:start position:0%
undefined now I'm going to create
 

01:04:21.740 --> 01:04:24.310 align:start position:0%
undefined now I'm going to create
another<01:04:22.010><c> function</c><01:04:22.400><c> that</c><01:04:22.700><c> is</c><01:04:22.850><c> similar</c><01:04:23.360><c> this</c>

01:04:24.310 --> 01:04:24.320 align:start position:0%
another function that is similar this
 

01:04:24.320 --> 01:04:28.380 align:start position:0%
another function that is similar this
one<01:04:24.530><c> is</c><01:04:24.620><c> going</c><01:04:24.770><c> to</c><01:04:24.830><c> copy</c><01:04:25.070><c> called</c><01:04:25.430><c> add</c><01:04:25.730><c> five</c><01:04:26.230><c> and</c>

01:04:28.380 --> 01:04:28.390 align:start position:0%
one is going to copy called add five and
 

01:04:28.390 --> 01:04:34.320 align:start position:0%
one is going to copy called add five and
this<01:04:29.390><c> time</c><01:04:29.660><c> we'll</c><01:04:30.170><c> just</c><01:04:30.410><c> do</c><01:04:30.620><c> some</c><01:04:30.950><c> equals</c><01:04:33.220><c> sum</c>

01:04:34.320 --> 01:04:34.330 align:start position:0%
this time we'll just do some equals sum
 

01:04:34.330 --> 01:04:40.090 align:start position:0%
this time we'll just do some equals sum
plus<01:04:35.330><c> five</c><01:04:36.880><c> or</c><01:04:37.880><c> we</c><01:04:38.390><c> can</c><01:04:38.570><c> shorten</c><01:04:39.080><c> this</c><01:04:39.260><c> to</c><01:04:39.890><c> use</c>

01:04:40.090 --> 01:04:40.100 align:start position:0%
plus five or we can shorten this to use
 

01:04:40.100 --> 01:04:43.240 align:start position:0%
plus five or we can shorten this to use
the<01:04:40.130><c> plus</c><01:04:40.700><c> equals</c><01:04:41.590><c> two</c><01:04:42.590><c> now</c><01:04:42.740><c> that's</c><01:04:42.980><c> going</c><01:04:43.190><c> to</c>

01:04:43.240 --> 01:04:43.250 align:start position:0%
the plus equals two now that's going to
 

01:04:43.250 --> 01:04:46.210 align:start position:0%
the plus equals two now that's going to
add<01:04:43.430><c> 5</c><01:04:43.700><c> to</c><01:04:43.970><c> sum</c><01:04:44.210><c> also</c><01:04:44.660><c> but</c><01:04:45.290><c> it's</c><01:04:45.530><c> not</c><01:04:45.770><c> going</c><01:04:46.010><c> to</c>

01:04:46.210 --> 01:04:46.220 align:start position:0%
add 5 to sum also but it's not going to
 

01:04:46.220 --> 01:04:49.360 align:start position:0%
add 5 to sum also but it's not going to
return<01:04:46.400><c> anything</c><01:04:46.840><c> so</c><01:04:47.840><c> if</c><01:04:48.020><c> we</c><01:04:48.200><c> log</c><01:04:48.470><c> this</c><01:04:48.770><c> out</c><01:04:49.010><c> it</c>

01:04:49.360 --> 01:04:49.370 align:start position:0%
return anything so if we log this out it
 

01:04:49.370 --> 01:04:54.960 align:start position:0%
return anything so if we log this out it
would<01:04:49.940><c> be</c><01:04:49.970><c> undefined</c>

01:04:54.960 --> 01:04:54.970 align:start position:0%
 
 

01:04:54.970 --> 01:04:58.260 align:start position:0%
 
it's<01:04:55.809><c> simple</c><01:04:56.349><c> to</c><01:04:56.559><c> assign</c><01:04:56.980><c> a</c><01:04:57.010><c> returned</c><01:04:57.700><c> value</c>

01:04:58.260 --> 01:04:58.270 align:start position:0%
it's simple to assign a returned value
 

01:04:58.270 --> 01:05:01.140 align:start position:0%
it's simple to assign a returned value
to<01:04:58.690><c> a</c><01:04:58.720><c> variable</c><01:04:59.220><c> see</c><01:05:00.220><c> right</c><01:05:00.400><c> here</c><01:05:00.579><c> we</c><01:05:00.730><c> have</c><01:05:00.760><c> the</c>

01:05:01.140 --> 01:05:01.150 align:start position:0%
to a variable see right here we have the
 

01:05:01.150 --> 01:05:04.710 align:start position:0%
to a variable see right here we have the
function<01:05:01.390><c> change</c><01:05:02.260><c> and</c><01:05:02.829><c> you</c><01:05:03.819><c> pass</c><01:05:04.089><c> the</c><01:05:04.359><c> number</c>

01:05:04.710 --> 01:05:04.720 align:start position:0%
function change and you pass the number
 

01:05:04.720 --> 01:05:07.380 align:start position:0%
function change and you pass the number
and<01:05:04.990><c> it's</c><01:05:05.200><c> going</c><01:05:05.440><c> to</c><01:05:05.680><c> return</c><01:05:06.190><c> the</c><01:05:06.789><c> result</c><01:05:06.970><c> of</c>

01:05:07.380 --> 01:05:07.390 align:start position:0%
and it's going to return the result of
 

01:05:07.390 --> 01:05:10.109 align:start position:0%
and it's going to return the result of
this<01:05:07.660><c> mathematical</c><01:05:08.289><c> expression</c><01:05:08.760><c> so</c><01:05:09.760><c> when</c><01:05:10.000><c> we</c>

01:05:10.109 --> 01:05:10.119 align:start position:0%
this mathematical expression so when we
 

01:05:10.119 --> 01:05:12.720 align:start position:0%
this mathematical expression so when we
call<01:05:10.480><c> the</c><01:05:10.660><c> function</c><01:05:10.839><c> change</c><01:05:11.650><c> and</c><01:05:12.039><c> pass</c><01:05:12.400><c> in</c><01:05:12.609><c> the</c>

01:05:12.720 --> 01:05:12.730 align:start position:0%
call the function change and pass in the
 

01:05:12.730 --> 01:05:16.319 align:start position:0%
call the function change and pass in the
10<01:05:13.470><c> the</c><01:05:14.470><c> value</c><01:05:14.920><c> that</c><01:05:15.069><c> is</c><01:05:15.190><c> returned</c><01:05:15.760><c> from</c><01:05:16.119><c> this</c>

01:05:16.319 --> 01:05:16.329 align:start position:0%
10 the value that is returned from this
 

01:05:16.329 --> 01:05:18.569 align:start position:0%
10 the value that is returned from this
function<01:05:16.660><c> is</c><01:05:17.140><c> won't</c><01:05:17.500><c> be</c><01:05:17.680><c> stored</c><01:05:18.099><c> in</c><01:05:18.400><c> this</c>

01:05:18.569 --> 01:05:18.579 align:start position:0%
function is won't be stored in this
 

01:05:18.579 --> 01:05:21.270 align:start position:0%
function is won't be stored in this
variable<01:05:18.670><c> here</c><01:05:19.539><c> we</c><01:05:20.470><c> can</c><01:05:20.650><c> do</c><01:05:20.740><c> the</c><01:05:20.829><c> same</c><01:05:21.039><c> thing</c>

01:05:21.270 --> 01:05:21.280 align:start position:0%
variable here we can do the same thing
 

01:05:21.280 --> 01:05:23.400 align:start position:0%
variable here we can do the same thing
down<01:05:21.460><c> here</c><01:05:21.520><c> first</c><01:05:22.510><c> we</c><01:05:22.720><c> initialize</c><01:05:22.960><c> the</c>

01:05:23.400 --> 01:05:23.410 align:start position:0%
down here first we initialize the
 

01:05:23.410 --> 01:05:26.279 align:start position:0%
down here first we initialize the
variable<01:05:23.799><c> processed</c><01:05:24.430><c> and</c><01:05:24.750><c> process</c><01:05:25.750><c> arrgh</c>

01:05:26.279 --> 01:05:26.289 align:start position:0%
variable processed and process arrgh
 

01:05:26.289 --> 01:05:30.180 align:start position:0%
variable processed and process arrgh
it's<01:05:26.500><c> going</c><01:05:26.980><c> to</c><01:05:27.160><c> return</c><01:05:27.599><c> the</c><01:05:28.680><c> result</c><01:05:29.680><c> of</c><01:05:30.069><c> this</c>

01:05:30.180 --> 01:05:30.190 align:start position:0%
it's going to return the result of this
 

01:05:30.190 --> 01:05:33.140 align:start position:0%
it's going to return the result of this
mathematical<01:05:30.819><c> expression</c><01:05:31.140><c> so</c><01:05:32.140><c> I</c><01:05:32.170><c> can</c><01:05:32.559><c> set</c>

01:05:33.140 --> 01:05:33.150 align:start position:0%
mathematical expression so I can set
 

01:05:33.150 --> 01:05:38.970 align:start position:0%
mathematical expression so I can set
processed<01:05:35.280><c> to</c><01:05:36.280><c> equal</c><01:05:37.410><c> what</c><01:05:38.410><c> this</c><01:05:38.559><c> function</c>

01:05:38.970 --> 01:05:38.980 align:start position:0%
processed to equal what this function
 

01:05:38.980 --> 01:05:42.299 align:start position:0%
processed to equal what this function
returns<01:05:39.099><c> so</c><01:05:39.640><c> I</c><01:05:39.700><c> can</c><01:05:39.880><c> say</c><01:05:40.440><c> processed</c><01:05:41.440><c> argh</c><01:05:41.829><c> and</c>

01:05:42.299 --> 01:05:42.309 align:start position:0%
returns so I can say processed argh and
 

01:05:42.309 --> 01:05:45.750 align:start position:0%
returns so I can say processed argh and
then<01:05:42.970><c> I'll</c><01:05:43.059><c> just</c><01:05:43.210><c> pass</c><01:05:43.599><c> in</c><01:05:43.930><c> the</c><01:05:44.650><c> number</c><01:05:44.980><c> 7</c><01:05:45.400><c> here</c>

01:05:45.750 --> 01:05:45.760 align:start position:0%
then I'll just pass in the number 7 here
 

01:05:45.760 --> 01:05:48.569 align:start position:0%
then I'll just pass in the number 7 here
and<01:05:46.740><c> now</c><01:05:47.740><c> process</c>

01:05:48.569 --> 01:05:48.579 align:start position:0%
and now process
 

01:05:48.579 --> 01:05:50.520 align:start position:0%
and now process
equals<01:05:48.940><c> the</c><01:05:49.119><c> result</c><01:05:49.480><c> of</c><01:05:49.690><c> this</c><01:05:49.900><c> mathematical</c>

01:05:50.520 --> 01:05:50.530 align:start position:0%
equals the result of this mathematical
 

01:05:50.530 --> 01:05:54.620 align:start position:0%
equals the result of this mathematical
expression

01:05:54.620 --> 01:05:54.630 align:start position:0%
 
 

01:05:54.630 --> 01:05:57.410 align:start position:0%
 
in<01:05:54.920><c> computer</c><01:05:55.920><c> science</c><01:05:55.950><c> a</c><01:05:56.519><c> queue</c><01:05:56.940><c> is</c><01:05:57.210><c> an</c>

01:05:57.410 --> 01:05:57.420 align:start position:0%
in computer science a queue is an
 

01:05:57.420 --> 01:06:00.019 align:start position:0%
in computer science a queue is an
abstract<01:05:58.049><c> data</c><01:05:58.170><c> structure</c><01:05:58.920><c> where</c><01:05:59.249><c> items</c><01:05:59.729><c> are</c>

01:06:00.019 --> 01:06:00.029 align:start position:0%
abstract data structure where items are
 

01:06:00.029 --> 01:06:03.259 align:start position:0%
abstract data structure where items are
kept<01:06:00.450><c> in</c><01:06:00.720><c> order</c><01:06:01.160><c> new</c><01:06:02.160><c> items</c><01:06:02.489><c> can</c><01:06:02.759><c> be</c><01:06:02.789><c> added</c><01:06:03.180><c> to</c>

01:06:03.259 --> 01:06:03.269 align:start position:0%
kept in order new items can be added to
 

01:06:03.269 --> 01:06:05.239 align:start position:0%
kept in order new items can be added to
the<01:06:03.390><c> back</c><01:06:03.599><c> of</c><01:06:03.630><c> the</c><01:06:03.869><c> queue</c><01:06:04.170><c> and</c><01:06:04.440><c> old</c><01:06:04.829><c> items</c><01:06:05.130><c> are</c>

01:06:05.239 --> 01:06:05.249 align:start position:0%
the back of the queue and old items are
 

01:06:05.249 --> 01:06:06.859 align:start position:0%
the back of the queue and old items are
taken<01:06:05.430><c> off</c><01:06:05.700><c> from</c><01:06:05.849><c> the</c><01:06:05.999><c> front</c><01:06:06.329><c> of</c><01:06:06.450><c> the</c><01:06:06.599><c> queue</c>

01:06:06.859 --> 01:06:06.869 align:start position:0%
taken off from the front of the queue
 

01:06:06.869 --> 01:06:09.789 align:start position:0%
taken off from the front of the queue
we're<01:06:07.589><c> going</c><01:06:07.859><c> to</c><01:06:08.009><c> simulate</c><01:06:08.579><c> that</c><01:06:08.880><c> right</c><01:06:09.420><c> now</c>

01:06:09.789 --> 01:06:09.799 align:start position:0%
we're going to simulate that right now
 

01:06:09.799 --> 01:06:12.289 align:start position:0%
we're going to simulate that right now
some<01:06:10.799><c> of</c><01:06:10.829><c> the</c><01:06:11.099><c> functionality</c><01:06:11.759><c> of</c><01:06:11.789><c> a</c><01:06:11.970><c> queue</c>

01:06:12.289 --> 01:06:12.299 align:start position:0%
some of the functionality of a queue
 

01:06:12.299 --> 01:06:16.700 align:start position:0%
some of the functionality of a queue
using<01:06:12.930><c> this</c><01:06:13.349><c> next</c><01:06:13.859><c> inline</c><01:06:14.549><c> function</c><01:06:15.390><c> so</c><01:06:16.170><c> the</c>

01:06:16.700 --> 01:06:16.710 align:start position:0%
using this next inline function so the
 

01:06:16.710 --> 01:06:19.370 align:start position:0%
using this next inline function so the
purpose<01:06:17.220><c> of</c><01:06:17.489><c> this</c><01:06:17.729><c> is</c><01:06:18.029><c> to</c><01:06:18.569><c> show</c><01:06:18.599><c> that</c><01:06:18.869><c> in</c><01:06:19.229><c> this</c>

01:06:19.370 --> 01:06:19.380 align:start position:0%
purpose of this is to show that in this
 

01:06:19.380 --> 01:06:22.339 align:start position:0%
purpose of this is to show that in this
next<01:06:19.650><c> inline</c><01:06:19.950><c> function</c><01:06:20.519><c> you</c><01:06:21.119><c> can</c><01:06:21.479><c> add</c><01:06:21.749><c> an</c><01:06:22.140><c> item</c>

01:06:22.339 --> 01:06:22.349 align:start position:0%
next inline function you can add an item
 

01:06:22.349 --> 01:06:25.430 align:start position:0%
next inline function you can add an item
to<01:06:22.559><c> the</c><01:06:23.039><c> array</c><01:06:23.400><c> that's</c><01:06:23.759><c> passed</c><01:06:24.119><c> in</c><01:06:24.420><c> and</c><01:06:24.749><c> then</c>

01:06:25.430 --> 01:06:25.440 align:start position:0%
to the array that's passed in and then
 

01:06:25.440 --> 01:06:28.430 align:start position:0%
to the array that's passed in and then
it's<01:06:25.589><c> going</c><01:06:25.829><c> to</c><01:06:25.979><c> return</c><01:06:26.479><c> the</c><01:06:27.479><c> first</c><01:06:27.839><c> item</c><01:06:28.019><c> on</c>

01:06:28.430 --> 01:06:28.440 align:start position:0%
it's going to return the first item on
 

01:06:28.440 --> 01:06:31.400 align:start position:0%
it's going to return the first item on
the<01:06:28.499><c> list</c><01:06:28.700><c> for</c><01:06:29.700><c> instance</c><01:06:29.849><c> if</c><01:06:30.359><c> we</c><01:06:30.660><c> have</c><01:06:30.989><c> this</c>

01:06:31.400 --> 01:06:31.410 align:start position:0%
the list for instance if we have this
 

01:06:31.410 --> 01:06:34.430 align:start position:0%
the list for instance if we have this
array<01:06:31.680><c> right</c><01:06:32.220><c> here</c><01:06:32.670><c> if</c><01:06:32.849><c> we</c><01:06:33.509><c> add</c><01:06:33.749><c> them</c><01:06:33.900><c> at</c><01:06:34.140><c> an</c>

01:06:34.430 --> 01:06:34.440 align:start position:0%
array right here if we add them at an
 

01:06:34.440 --> 01:06:38.239 align:start position:0%
array right here if we add them at an
item<01:06:34.829><c> to</c><01:06:35.789><c> this</c><01:06:36.059><c> array</c><01:06:36.390><c> it</c><01:06:36.720><c> should</c><01:06:37.079><c> come</c><01:06:37.589><c> after</c>

01:06:38.239 --> 01:06:38.249 align:start position:0%
item to this array it should come after
 

01:06:38.249 --> 01:06:40.370 align:start position:0%
item to this array it should come after
at<01:06:38.460><c> the</c><01:06:38.489><c> end</c><01:06:38.609><c> so</c><01:06:39.089><c> it</c><01:06:39.150><c> should</c><01:06:39.329><c> come</c><01:06:39.509><c> after</c><01:06:39.720><c> five</c>

01:06:40.370 --> 01:06:40.380 align:start position:0%
at the end so it should come after five
 

01:06:40.380 --> 01:06:43.999 align:start position:0%
at the end so it should come after five
and<01:06:40.890><c> then</c><01:06:41.640><c> it</c><01:06:41.670><c> should</c><01:06:42.180><c> return</c><01:06:42.869><c> the</c><01:06:43.410><c> first</c><01:06:43.739><c> item</c>

01:06:43.999 --> 01:06:44.009 align:start position:0%
and then it should return the first item
 

01:06:44.009 --> 01:06:47.719 align:start position:0%
and then it should return the first item
on<01:06:44.279><c> the</c><01:06:44.400><c> list</c><01:06:44.579><c> in</c><01:06:44.910><c> this</c><01:06:45.509><c> case</c><01:06:45.869><c> it's</c><01:06:46.259><c> one</c><01:06:46.829><c> so</c><01:06:47.670><c> you</c>

01:06:47.719 --> 01:06:47.729 align:start position:0%
on the list in this case it's one so you
 

01:06:47.729 --> 01:06:50.420 align:start position:0%
on the list in this case it's one so you
see<01:06:48.239><c> we</c><01:06:48.479><c> have</c><01:06:48.509><c> some</c><01:06:48.720><c> console</c><01:06:49.529><c> dot</c><01:06:49.680><c> log</c><01:06:49.739><c> set</c><01:06:50.279><c> up</c>

01:06:50.420 --> 01:06:50.430 align:start position:0%
see we have some console dot log set up
 

01:06:50.430 --> 01:06:53.120 align:start position:0%
see we have some console dot log set up
so<01:06:51.119><c> it</c><01:06:51.269><c> should</c><01:06:51.539><c> show</c><01:06:51.900><c> what</c><01:06:52.289><c> the</c><01:06:52.529><c> list</c><01:06:52.799><c> looks</c>

01:06:53.120 --> 01:06:53.130 align:start position:0%
so it should show what the list looks
 

01:06:53.130 --> 01:06:55.370 align:start position:0%
so it should show what the list looks
like<01:06:53.369><c> the</c><01:06:53.579><c> array</c><01:06:53.759><c> looks</c><01:06:53.999><c> like</c><01:06:54.150><c> beforehand</c><01:06:55.049><c> and</c>

01:06:55.370 --> 01:06:55.380 align:start position:0%
like the array looks like beforehand and
 

01:06:55.380 --> 01:06:57.430 align:start position:0%
like the array looks like beforehand and
then<01:06:55.979><c> show</c><01:06:56.220><c> what</c><01:06:56.249><c> it</c><01:06:56.400><c> looks</c><01:06:56.549><c> like</c><01:06:56.670><c> afterwards</c>

01:06:57.430 --> 01:06:57.440 align:start position:0%
then show what it looks like afterwards
 

01:06:57.440 --> 01:07:01.489 align:start position:0%
then show what it looks like afterwards
this<01:06:58.440><c> JSON</c><01:06:59.039><c> dot</c><01:06:59.369><c> stringify</c><01:06:59.789><c> is</c><01:07:00.420><c> just</c><01:07:01.049><c> a</c><01:07:01.259><c> way</c><01:07:01.469><c> to</c>

01:07:01.489 --> 01:07:01.499 align:start position:0%
this JSON dot stringify is just a way to
 

01:07:01.499 --> 01:07:05.059 align:start position:0%
this JSON dot stringify is just a way to
change<01:07:02.099><c> an</c><01:07:02.460><c> array</c><01:07:02.880><c> into</c><01:07:03.299><c> a</c><01:07:03.900><c> string</c><01:07:04.529><c> that</c><01:07:04.799><c> can</c>

01:07:05.059 --> 01:07:05.069 align:start position:0%
change an array into a string that can
 

01:07:05.069 --> 01:07:09.079 align:start position:0%
change an array into a string that can
easily<01:07:05.430><c> be</c><01:07:06.259><c> printed</c><01:07:07.259><c> out</c><01:07:07.380><c> to</c><01:07:07.589><c> the</c><01:07:07.710><c> screen</c><01:07:08.099><c> so</c>

01:07:09.079 --> 01:07:09.089 align:start position:0%
easily be printed out to the screen so
 

01:07:09.089 --> 01:07:11.390 align:start position:0%
easily be printed out to the screen so
to<01:07:09.839><c> do</c><01:07:10.049><c> this</c><01:07:10.289><c> we're</c><01:07:10.650><c> just</c><01:07:10.829><c> going</c><01:07:11.009><c> to</c><01:07:11.099><c> have</c><01:07:11.339><c> to</c>

01:07:11.390 --> 01:07:11.400 align:start position:0%
to do this we're just going to have to
 

01:07:11.400 --> 01:07:13.549 align:start position:0%
to do this we're just going to have to
do<01:07:11.700><c> two</c><01:07:12.269><c> things</c><01:07:12.630><c> that</c><01:07:12.869><c> we've</c><01:07:12.989><c> learned</c><01:07:13.349><c> about</c>

01:07:13.549 --> 01:07:13.559 align:start position:0%
do two things that we've learned about
 

01:07:13.559 --> 01:07:17.959 align:start position:0%
do two things that we've learned about
already<01:07:14.309><c> so</c><01:07:15.180><c> the</c><01:07:15.329><c> first</c><01:07:15.660><c> thing</c><01:07:15.930><c> is</c><01:07:16.200><c> to</c><01:07:16.890><c> add</c><01:07:17.190><c> the</c>

01:07:17.959 --> 01:07:17.969 align:start position:0%
already so the first thing is to add the
 

01:07:17.969 --> 01:07:20.660 align:start position:0%
already so the first thing is to add the
item<01:07:18.359><c> onto</c><01:07:18.869><c> the</c><01:07:18.989><c> list</c><01:07:19.200><c> so</c><01:07:19.589><c> we</c><01:07:20.039><c> see</c><01:07:20.219><c> right</c><01:07:20.249><c> here</c>

01:07:20.660 --> 01:07:20.670 align:start position:0%
item onto the list so we see right here
 

01:07:20.670 --> 01:07:23.779 align:start position:0%
item onto the list so we see right here
next<01:07:21.180><c> in</c><01:07:21.450><c> line</c><01:07:21.690><c> passed</c><01:07:22.349><c> in</c><01:07:22.650><c> the</c><01:07:23.160><c> test</c><01:07:23.489><c> array</c>

01:07:23.779 --> 01:07:23.789 align:start position:0%
next in line passed in the test array
 

01:07:23.789 --> 01:07:26.509 align:start position:0%
next in line passed in the test array
and<01:07:24.150><c> six</c><01:07:24.719><c> so</c><01:07:25.529><c> we're</c><01:07:25.829><c> calling</c><01:07:26.190><c> this</c><01:07:26.279><c> function</c>

01:07:26.509 --> 01:07:26.519 align:start position:0%
and six so we're calling this function
 

01:07:26.519 --> 01:07:29.239 align:start position:0%
and six so we're calling this function
next<01:07:27.119><c> on</c><01:07:27.239><c> line</c><01:07:27.509><c> we're</c><01:07:28.109><c> passing</c><01:07:28.650><c> in</c><01:07:28.739><c> this</c><01:07:28.859><c> test</c>

01:07:29.239 --> 01:07:29.249 align:start position:0%
next on line we're passing in this test
 

01:07:29.249 --> 01:07:30.410 align:start position:0%
next on line we're passing in this test
in<01:07:29.579><c> this</c><01:07:29.880><c> test</c>

01:07:30.410 --> 01:07:30.420 align:start position:0%
in this test
 

01:07:30.420 --> 01:07:33.349 align:start position:0%
in this test
array<01:07:30.719><c> here</c><01:07:31.140><c> and</c><01:07:31.349><c> the</c><01:07:31.979><c> number</c><01:07:32.219><c> six</c><01:07:32.489><c> we</c><01:07:33.089><c> want</c>

01:07:33.349 --> 01:07:33.359 align:start position:0%
array here and the number six we want
 

01:07:33.359 --> 01:07:35.390 align:start position:0%
array here and the number six we want
the<01:07:33.479><c> number</c><01:07:33.719><c> six</c><01:07:33.989><c> to</c><01:07:34.109><c> be</c><01:07:34.229><c> added</c><01:07:34.619><c> to</c><01:07:34.769><c> the</c><01:07:34.890><c> end</c><01:07:35.069><c> of</c>

01:07:35.390 --> 01:07:35.400 align:start position:0%
the number six to be added to the end of
 

01:07:35.400 --> 01:07:38.890 align:start position:0%
the number six to be added to the end of
the<01:07:35.579><c> array</c><01:07:35.819><c> so</c><01:07:36.089><c> we'll</c><01:07:36.660><c> just</c><01:07:36.809><c> do</c><01:07:36.960><c> our</c><01:07:37.549><c> push</c><01:07:38.549><c> and</c>

01:07:38.890 --> 01:07:38.900 align:start position:0%
the array so we'll just do our push and
 

01:07:38.900 --> 01:07:45.440 align:start position:0%
the array so we'll just do our push and
then<01:07:39.900><c> I'll</c><01:07:40.200><c> put</c><01:07:41.039><c> in</c><01:07:41.660><c> num</c><01:07:43.789><c> just</c><01:07:44.789><c> like</c><01:07:44.969><c> that</c>

01:07:45.440 --> 01:07:45.450 align:start position:0%
then I'll put in num just like that
 

01:07:45.450 --> 01:07:50.059 align:start position:0%
then I'll put in num just like that
well<01:07:45.839><c> actually</c><01:07:46.019><c> it's</c><01:07:46.289><c> item</c><01:07:46.819><c> so</c><01:07:48.680><c> what</c><01:07:49.680><c> we</c><01:07:49.799><c> did</c>

01:07:50.059 --> 01:07:50.069 align:start position:0%
well actually it's item so what we did
 

01:07:50.069 --> 01:07:52.339 align:start position:0%
well actually it's item so what we did
we<01:07:50.460><c> took</c><01:07:50.759><c> this</c><01:07:51.089><c> array</c><01:07:51.479><c> that</c><01:07:51.719><c> was</c><01:07:51.839><c> passed</c><01:07:52.170><c> down</c>

01:07:52.339 --> 01:07:52.349 align:start position:0%
we took this array that was passed down
 

01:07:52.349 --> 01:07:55.099 align:start position:0%
we took this array that was passed down
here<01:07:52.920><c> which</c><01:07:53.430><c> is</c><01:07:53.640><c> in</c><01:07:53.880><c> this</c><01:07:53.999><c> case</c><01:07:54.059><c> test</c><01:07:54.779><c> array</c>

01:07:55.099 --> 01:07:55.109 align:start position:0%
here which is in this case test array
 

01:07:55.109 --> 01:07:57.469 align:start position:0%
here which is in this case test array
and<01:07:55.410><c> we</c><01:07:55.769><c> pushed</c><01:07:56.219><c> the</c><01:07:56.460><c> item</c><01:07:56.819><c> that</c><01:07:56.999><c> was</c><01:07:57.089><c> passed</c>

01:07:57.469 --> 01:07:57.479 align:start position:0%
and we pushed the item that was passed
 

01:07:57.479 --> 01:08:02.329 align:start position:0%
and we pushed the item that was passed
in<01:07:57.779><c> and</c><01:07:58.019><c> in</c><01:07:58.829><c> this</c><01:07:59.069><c> case</c><01:07:59.309><c> here</c><01:07:59.700><c> it's</c><01:07:59.819><c> im6</c><01:08:00.739><c> now</c><01:08:01.739><c> we</c>

01:08:02.329 --> 01:08:02.339 align:start position:0%
in and in this case here it's im6 now we
 

01:08:02.339 --> 01:08:06.469 align:start position:0%
in and in this case here it's im6 now we
want<01:08:02.609><c> to</c><01:08:03.349><c> return</c><01:08:04.349><c> the</c><01:08:05.069><c> first</c><01:08:05.579><c> item</c><01:08:06.150><c> on</c><01:08:06.269><c> the</c>

01:08:06.469 --> 01:08:06.479 align:start position:0%
want to return the first item on the
 

01:08:06.479 --> 01:08:08.330 align:start position:0%
want to return the first item on the
list<01:08:06.660><c> we</c><01:08:07.229><c> want</c><01:08:07.410><c> to</c><01:08:07.499><c> remove</c>

01:08:08.330 --> 01:08:08.340 align:start position:0%
list we want to remove
 

01:08:08.340 --> 01:08:11.120 align:start position:0%
list we want to remove
and<01:08:08.430><c> return</c><01:08:09.210><c> this</c><01:08:09.390><c> item</c><01:08:09.600><c> so</c><01:08:10.380><c> that</c><01:08:10.590><c> when</c><01:08:11.010><c> we</c>

01:08:11.120 --> 01:08:11.130 align:start position:0%
and return this item so that when we
 

01:08:11.130 --> 01:08:14.210 align:start position:0%
and return this item so that when we
council<01:08:11.610><c> that</c><01:08:11.730><c> log</c><01:08:12.110><c> here</c><01:08:13.110><c> it</c><01:08:13.320><c> should</c><01:08:13.620><c> show</c><01:08:13.950><c> the</c>

01:08:14.210 --> 01:08:14.220 align:start position:0%
council that log here it should show the
 

01:08:14.220 --> 01:08:17.599 align:start position:0%
council that log here it should show the
number<01:08:14.580><c> one</c><01:08:14.940><c> so</c><01:08:15.930><c> instead</c><01:08:16.410><c> of</c><01:08:16.470><c> returning</c><01:08:16.890><c> item</c>

01:08:17.599 --> 01:08:17.609 align:start position:0%
number one so instead of returning item
 

01:08:17.609 --> 01:08:21.040 align:start position:0%
number one so instead of returning item
I'm<01:08:18.030><c> gonna</c><01:08:18.390><c> return</c><01:08:18.780><c> our</c><01:08:19.580><c> shift</c>

01:08:21.040 --> 01:08:21.050 align:start position:0%
I'm gonna return our shift
 

01:08:21.050 --> 01:08:24.470 align:start position:0%
I'm gonna return our shift
that's<01:08:22.050><c> what</c><01:08:22.319><c> shift</c><01:08:22.680><c> does</c><01:08:22.950><c> shift</c><01:08:23.640><c> removes</c><01:08:24.240><c> the</c>

01:08:24.470 --> 01:08:24.480 align:start position:0%
that's what shift does shift removes the
 

01:08:24.480 --> 01:08:27.050 align:start position:0%
that's what shift does shift removes the
first<01:08:24.839><c> item</c><01:08:25.319><c> and</c><01:08:25.500><c> returns</c><01:08:26.010><c> that</c><01:08:26.250><c> first</c><01:08:26.609><c> item</c>

01:08:27.050 --> 01:08:27.060 align:start position:0%
first item and returns that first item
 

01:08:27.060 --> 01:08:32.570 align:start position:0%
first item and returns that first item
so<01:08:27.839><c> let's</c><01:08:28.050><c> check</c><01:08:28.380><c> this</c><01:08:28.560><c> out</c><01:08:30.950><c> okay</c><01:08:31.950><c> you</c><01:08:32.220><c> can</c><01:08:32.430><c> see</c>

01:08:32.570 --> 01:08:32.580 align:start position:0%
so let's check this out okay you can see
 

01:08:32.580 --> 01:08:35.840 align:start position:0%
so let's check this out okay you can see
before<01:08:33.180><c> one</c><01:08:33.780><c> two</c><01:08:33.960><c> three</c><01:08:34.200><c> four</c><01:08:34.410><c> five</c><01:08:34.850><c> then</c>

01:08:35.840 --> 01:08:35.850 align:start position:0%
before one two three four five then
 

01:08:35.850 --> 01:08:38.090 align:start position:0%
before one two three four five then
we've<01:08:36.240><c> popped</c><01:08:36.600><c> off</c><01:08:36.810><c> the</c><01:08:36.839><c> one</c><01:08:37.260><c> and</c><01:08:37.470><c> after</c><01:08:37.980><c> it's</c>

01:08:38.090 --> 01:08:38.100 align:start position:0%
we've popped off the one and after it's
 

01:08:38.100 --> 01:08:44.349 align:start position:0%
we've popped off the one and after it's
two<01:08:38.370><c> three</c><01:08:38.609><c> four</c><01:08:38.940><c> five</c><01:08:39.210><c> six</c><01:08:39.589><c> we</c><01:08:40.589><c> did</c><01:08:40.770><c> it</c>

01:08:44.349 --> 01:08:44.359 align:start position:0%
 
 

01:08:44.359 --> 01:08:47.240 align:start position:0%
 
boolean<01:08:45.359><c> czar</c><01:08:45.779><c> another</c><01:08:46.259><c> data</c><01:08:46.680><c> type</c><01:08:47.040><c> in</c>

01:08:47.240 --> 01:08:47.250 align:start position:0%
boolean czar another data type in
 

01:08:47.250 --> 01:08:50.090 align:start position:0%
boolean czar another data type in
JavaScript<01:08:47.660><c> there</c><01:08:48.660><c> are</c><01:08:48.870><c> only</c><01:08:49.049><c> two</c><01:08:49.469><c> values</c>

01:08:50.090 --> 01:08:50.100 align:start position:0%
JavaScript there are only two values
 

01:08:50.100 --> 01:08:53.420 align:start position:0%
JavaScript there are only two values
true<01:08:50.730><c> or</c><01:08:51.029><c> false</c><01:08:51.839><c> they're</c><01:08:52.739><c> basically</c><01:08:53.130><c> little</c>

01:08:53.420 --> 01:08:53.430 align:start position:0%
true or false they're basically little
 

01:08:53.430 --> 01:08:56.269 align:start position:0%
true or false they're basically little
on-off<01:08:53.910><c> switches</c><01:08:54.540><c> where</c><01:08:54.779><c> true</c><01:08:55.109><c> is</c><01:08:55.410><c> on</c><01:08:55.770><c> and</c>

01:08:56.269 --> 01:08:56.279 align:start position:0%
on-off switches where true is on and
 

01:08:56.279 --> 01:08:57.890 align:start position:0%
on-off switches where true is on and
false<01:08:56.910><c> is</c><01:08:57.210><c> off</c>

01:08:57.890 --> 01:08:57.900 align:start position:0%
false is off
 

01:08:57.900 --> 01:09:00.289 align:start position:0%
false is off
they<01:08:58.440><c> don't</c><01:08:58.799><c> use</c><01:08:59.040><c> quotation</c><01:08:59.880><c> marks</c><01:08:59.910><c> around</c>

01:09:00.289 --> 01:09:00.299 align:start position:0%
they don't use quotation marks around
 

01:09:00.299 --> 01:09:03.140 align:start position:0%
they don't use quotation marks around
the<01:09:01.199><c> the</c><01:09:01.500><c> boolean</c><01:09:01.710><c> C</c><01:09:02.219><c> it</c><01:09:02.370><c> just</c><01:09:02.580><c> says</c><01:09:02.699><c> return</c>

01:09:03.140 --> 01:09:03.150 align:start position:0%
the the boolean C it just says return
 

01:09:03.150 --> 01:09:05.990 align:start position:0%
the the boolean C it just says return
false<01:09:03.600><c> so</c><01:09:04.319><c> this</c><01:09:04.650><c> is</c><01:09:04.799><c> a</c><01:09:04.830><c> function</c><01:09:05.339><c> here</c><01:09:05.580><c> it</c>

01:09:05.990 --> 01:09:06.000 align:start position:0%
false so this is a function here it
 

01:09:06.000 --> 01:09:08.450 align:start position:0%
false so this is a function here it
should<01:09:06.120><c> be</c><01:09:06.180><c> indented</c><01:09:06.870><c> where</c><01:09:07.589><c> it's</c><01:09:07.949><c> just</c><01:09:08.130><c> going</c>

01:09:08.450 --> 01:09:08.460 align:start position:0%
should be indented where it's just going
 

01:09:08.460 --> 01:09:10.999 align:start position:0%
should be indented where it's just going
to<01:09:08.580><c> return</c><01:09:08.790><c> false</c><01:09:09.540><c> when</c><01:09:10.500><c> you</c><01:09:10.620><c> call</c><01:09:10.830><c> this</c>

01:09:10.999 --> 01:09:11.009 align:start position:0%
to return false when you call this
 

01:09:11.009 --> 01:09:13.729 align:start position:0%
to return false when you call this
function<01:09:11.310><c> it</c><01:09:11.759><c> could</c><01:09:12.390><c> also</c><01:09:12.630><c> be</c><01:09:12.870><c> true</c><01:09:13.350><c> so</c><01:09:13.620><c> we</c>

01:09:13.729 --> 01:09:13.739 align:start position:0%
function it could also be true so we
 

01:09:13.739 --> 01:09:16.910 align:start position:0%
function it could also be true so we
could<01:09:13.920><c> return</c><01:09:14.250><c> true</c><01:09:14.989><c> you</c><01:09:15.989><c> can</c><01:09:16.199><c> use</c><01:09:16.380><c> true</c><01:09:16.739><c> and</c>

01:09:16.910 --> 01:09:16.920 align:start position:0%
could return true you can use true and
 

01:09:16.920 --> 01:09:19.939 align:start position:0%
could return true you can use true and
false<01:09:17.130><c> in</c><01:09:17.460><c> more</c><01:09:17.640><c> places</c><01:09:17.850><c> than</c><01:09:18.449><c> just</c><01:09:19.080><c> function</c>

01:09:19.939 --> 01:09:19.949 align:start position:0%
false in more places than just function
 

01:09:19.949 --> 01:09:22.340 align:start position:0%
false in more places than just function
returns<01:09:20.339><c> and</c><01:09:20.759><c> we'll</c><01:09:21.449><c> be</c><01:09:21.600><c> talking</c><01:09:21.930><c> more</c><01:09:22.140><c> about</c>

01:09:22.340 --> 01:09:22.350 align:start position:0%
returns and we'll be talking more about
 

01:09:22.350 --> 01:09:26.849 align:start position:0%
returns and we'll be talking more about
that<01:09:22.469><c> later</c>

01:09:26.849 --> 01:09:26.859 align:start position:0%
 
 

01:09:26.859 --> 01:09:29.729 align:start position:0%
 
an<01:09:26.920><c> if</c><01:09:27.850><c> statement</c><01:09:28.210><c> is</c><01:09:28.659><c> used</c><01:09:28.719><c> to</c><01:09:29.560><c> make</c>

01:09:29.729 --> 01:09:29.739 align:start position:0%
an if statement is used to make
 

01:09:29.739 --> 01:09:33.629 align:start position:0%
an if statement is used to make
decisions<01:09:29.980><c> in</c><01:09:30.819><c> code</c><01:09:31.230><c> the</c><01:09:32.230><c> keyword</c><01:09:32.710><c> if</c><01:09:32.949><c> tells</c>

01:09:33.629 --> 01:09:33.639 align:start position:0%
decisions in code the keyword if tells
 

01:09:33.639 --> 01:09:36.329 align:start position:0%
decisions in code the keyword if tells
JavaScript<01:09:34.420><c> to</c><01:09:34.719><c> execute</c><01:09:35.380><c> the</c><01:09:35.589><c> code</c><01:09:35.830><c> in</c><01:09:36.159><c> the</c>

01:09:36.329 --> 01:09:36.339 align:start position:0%
JavaScript to execute the code in the
 

01:09:36.339 --> 01:09:38.609 align:start position:0%
JavaScript to execute the code in the
curly<01:09:36.730><c> braces</c><01:09:37.000><c> under</c><01:09:37.600><c> certain</c><01:09:37.900><c> conditions</c>

01:09:38.609 --> 01:09:38.619 align:start position:0%
curly braces under certain conditions
 

01:09:38.619 --> 01:09:42.030 align:start position:0%
curly braces under certain conditions
defined<01:09:39.400><c> in</c><01:09:39.699><c> the</c><01:09:39.850><c> parentheses</c><01:09:40.449><c> so</c><01:09:41.319><c> here</c><01:09:41.799><c> is</c><01:09:42.009><c> a</c>

01:09:42.030 --> 01:09:42.040 align:start position:0%
defined in the parentheses so here is a
 

01:09:42.040 --> 01:09:45.030 align:start position:0%
defined in the parentheses so here is a
full<01:09:42.580><c> if</c><01:09:42.790><c> statement</c><01:09:43.239><c> right</c><01:09:43.359><c> here</c><01:09:43.420><c> and</c><01:09:44.040><c> there's</c>

01:09:45.030 --> 01:09:45.040 align:start position:0%
full if statement right here and there's
 

01:09:45.040 --> 01:09:47.760 align:start position:0%
full if statement right here and there's
always<01:09:45.509><c> parentheses</c><01:09:46.509><c> after</c><01:09:46.779><c> the</c><01:09:47.109><c> keyword</c><01:09:47.560><c> if</c>

01:09:47.760 --> 01:09:47.770 align:start position:0%
always parentheses after the keyword if
 

01:09:47.770 --> 01:09:50.999 align:start position:0%
always parentheses after the keyword if
and<01:09:48.250><c> here</c><01:09:49.000><c> is</c><01:09:49.119><c> the</c><01:09:49.299><c> condition</c><01:09:49.929><c> so</c><01:09:50.619><c> if</c><01:09:50.859><c> the</c>

01:09:50.999 --> 01:09:51.009 align:start position:0%
and here is the condition so if the
 

01:09:51.009 --> 01:09:53.039 align:start position:0%
and here is the condition so if the
stuff<01:09:51.310><c> inside</c><01:09:51.819><c> this</c><01:09:52.089><c> print</c><01:09:52.480><c> inside</c><01:09:52.869><c> these</c>

01:09:53.039 --> 01:09:53.049 align:start position:0%
stuff inside this print inside these
 

01:09:53.049 --> 01:09:56.330 align:start position:0%
stuff inside this print inside these
parentheses<01:09:53.679><c> evaluates</c><01:09:54.369><c> to</c><01:09:54.580><c> true</c><01:09:54.610><c> then</c><01:09:55.270><c> the</c>

01:09:56.330 --> 01:09:56.340 align:start position:0%
parentheses evaluates to true then the
 

01:09:56.340 --> 01:10:00.240 align:start position:0%
parentheses evaluates to true then the
code<01:09:57.340><c> within</c><01:09:58.300><c> these</c><01:09:58.510><c> curly</c><01:09:59.050><c> braces</c><01:09:59.350><c> will</c><01:10:00.010><c> be</c>

01:10:00.240 --> 01:10:00.250 align:start position:0%
code within these curly braces will be
 

01:10:00.250 --> 01:10:03.810 align:start position:0%
code within these curly braces will be
evaluated<01:10:01.150><c> or</c><01:10:01.210><c> run</c><01:10:01.630><c> so</c><01:10:02.560><c> in</c><01:10:02.679><c> this</c><01:10:02.860><c> case</c><01:10:03.219><c> it's</c><01:10:03.639><c> a</c>

01:10:03.810 --> 01:10:03.820 align:start position:0%
evaluated or run so in this case it's a
 

01:10:03.820 --> 01:10:07.290 align:start position:0%
evaluated or run so in this case it's a
variable<01:10:04.270><c> so</c><01:10:04.659><c> if</c><01:10:04.960><c> the</c><01:10:05.290><c> is</c><01:10:05.619><c> it</c><01:10:06.400><c> true</c><01:10:06.730><c> variable</c>

01:10:07.290 --> 01:10:07.300 align:start position:0%
variable so if the is it true variable
 

01:10:07.300 --> 01:10:11.189 align:start position:0%
variable so if the is it true variable
is<01:10:07.420><c> true</c><01:10:07.690><c> it</c><01:10:08.080><c> will</c><01:10:08.619><c> return</c><01:10:09.040><c> yes</c><01:10:09.489><c> it's</c><01:10:09.760><c> true</c><01:10:10.199><c> now</c>

01:10:11.189 --> 01:10:11.199 align:start position:0%
is true it will return yes it's true now
 

01:10:11.199 --> 01:10:13.290 align:start position:0%
is true it will return yes it's true now
if<01:10:11.380><c> it's</c><01:10:11.560><c> is</c><01:10:11.710><c> not</c><01:10:11.739><c> true</c><01:10:12.369><c> then</c><01:10:12.850><c> we'll</c><01:10:13.030><c> get</c><01:10:13.150><c> to</c>

01:10:13.290 --> 01:10:13.300 align:start position:0%
if it's is not true then we'll get to
 

01:10:13.300 --> 01:10:15.780 align:start position:0%
if it's is not true then we'll get to
the<01:10:13.420><c> second</c><01:10:13.929><c> return</c><01:10:14.260><c> statement</c><01:10:14.800><c> no</c><01:10:15.429><c> it's</c>

01:10:15.780 --> 01:10:15.790 align:start position:0%
the second return statement no it's
 

01:10:15.790 --> 01:10:20.490 align:start position:0%
the second return statement no it's
false<01:10:16.239><c> so</c><01:10:17.230><c> this</c><01:10:17.650><c> whole</c><01:10:18.090><c> function</c><01:10:19.090><c> here</c><01:10:19.630><c> takes</c>

01:10:20.490 --> 01:10:20.500 align:start position:0%
false so this whole function here takes
 

01:10:20.500 --> 01:10:23.129 align:start position:0%
false so this whole function here takes
in<01:10:20.800><c> a</c><01:10:20.980><c> variable</c><01:10:21.429><c> and</c><01:10:21.790><c> we</c><01:10:22.239><c> check</c><01:10:22.690><c> if</c><01:10:22.960><c> that's</c>

01:10:23.129 --> 01:10:23.139 align:start position:0%
in a variable and we check if that's
 

01:10:23.139 --> 01:10:25.590 align:start position:0%
in a variable and we check if that's
true<01:10:23.530><c> or</c><01:10:23.679><c> not</c><01:10:23.710><c> so</c><01:10:24.190><c> I'm</c><01:10:24.850><c> gonna</c><01:10:24.969><c> make</c><01:10:25.150><c> another</c>

01:10:25.590 --> 01:10:25.600 align:start position:0%
true or not so I'm gonna make another
 

01:10:25.600 --> 01:10:28.050 align:start position:0%
true or not so I'm gonna make another
example<01:10:26.230><c> just</c><01:10:26.260><c> like</c><01:10:26.739><c> this</c><01:10:27.010><c> we</c><01:10:27.639><c> have</c><01:10:27.820><c> another</c>

01:10:28.050 --> 01:10:28.060 align:start position:0%
example just like this we have another
 

01:10:28.060 --> 01:10:30.030 align:start position:0%
example just like this we have another
function<01:10:28.420><c> that</c><01:10:28.900><c> hasn't</c><01:10:29.080><c> been</c><01:10:29.320><c> filled</c><01:10:29.560><c> out</c><01:10:29.770><c> yet</c>

01:10:30.030 --> 01:10:30.040 align:start position:0%
function that hasn't been filled out yet
 

01:10:30.040 --> 01:10:33.090 align:start position:0%
function that hasn't been filled out yet
true<01:10:30.969><c> or</c><01:10:31.179><c> false</c><01:10:31.510><c> and</c><01:10:31.869><c> there's</c><01:10:32.500><c> a</c><01:10:32.560><c> variable</c><01:10:32.980><c> S</c>

01:10:33.090 --> 01:10:33.100 align:start position:0%
true or false and there's a variable S
 

01:10:33.100 --> 01:10:36.600 align:start position:0%
true or false and there's a variable S
pass<01:10:33.429><c> in</c><01:10:33.760><c> was</c><01:10:34.330><c> that</c><01:10:34.659><c> true</c><01:10:35.110><c> so</c><01:10:35.889><c> we'll</c><01:10:36.040><c> say</c><01:10:36.310><c> if</c>

01:10:36.600 --> 01:10:36.610 align:start position:0%
pass in was that true so we'll say if
 

01:10:36.610 --> 01:10:40.820 align:start position:0%
pass in was that true so we'll say if
and<01:10:37.060><c> then</c><01:10:37.719><c> the</c><01:10:37.900><c> parentheses</c><01:10:38.639><c> was</c><01:10:39.639><c> that</c><01:10:40.150><c> true</c>

01:10:40.820 --> 01:10:40.830 align:start position:0%
and then the parentheses was that true
 

01:10:40.830 --> 01:10:43.830 align:start position:0%
and then the parentheses was that true
but<01:10:41.830><c> that's</c><01:10:42.070><c> true</c><01:10:42.369><c> we're</c><01:10:42.790><c> going</c><01:10:43.090><c> to</c><01:10:43.360><c> return</c>

01:10:43.830 --> 01:10:43.840 align:start position:0%
but that's true we're going to return
 

01:10:43.840 --> 01:10:47.250 align:start position:0%
but that's true we're going to return
something<01:10:44.670><c> it</c><01:10:45.670><c> will</c><01:10:46.119><c> be</c><01:10:46.300><c> a</c><01:10:46.330><c> string</c><01:10:46.780><c> just</c><01:10:47.050><c> like</c>

01:10:47.250 --> 01:10:47.260 align:start position:0%
something it will be a string just like
 

01:10:47.260 --> 01:10:51.660 align:start position:0%
something it will be a string just like
before<01:10:47.469><c> and</c><01:10:48.070><c> the</c><01:10:48.550><c> string</c><01:10:48.909><c> is</c><01:10:49.139><c> yes</c><01:10:50.159><c> that</c><01:10:51.159><c> was</c>

01:10:51.660 --> 01:10:51.670 align:start position:0%
before and the string is yes that was
 

01:10:51.670 --> 01:10:56.010 align:start position:0%
before and the string is yes that was
true<01:10:52.360><c> if</c><01:10:53.250><c> it's</c><01:10:54.250><c> not</c><01:10:54.639><c> true</c><01:10:55.030><c> then</c><01:10:55.570><c> we'll</c><01:10:55.810><c> get</c>

01:10:56.010 --> 01:10:56.020 align:start position:0%
true if it's not true then we'll get
 

01:10:56.020 --> 01:10:58.890 align:start position:0%
true if it's not true then we'll get
this<01:10:56.260><c> second</c><01:10:56.860><c> return</c><01:10:57.790><c> statement</c><01:10:58.480><c> in</c><01:10:58.570><c> the</c>

01:10:58.890 --> 01:10:58.900 align:start position:0%
this second return statement in the
 

01:10:58.900 --> 01:11:01.320 align:start position:0%
this second return statement in the
function<01:10:59.380><c> and</c><01:10:59.699><c> we'll</c><01:11:00.699><c> return</c><01:11:00.909><c> a</c><01:11:01.119><c> different</c>

01:11:01.320 --> 01:11:01.330 align:start position:0%
function and we'll return a different
 

01:11:01.330 --> 01:11:08.990 align:start position:0%
function and we'll return a different
string<01:11:01.810><c> will</c><01:11:02.710><c> return</c><01:11:03.190><c> no</c><01:11:04.030><c> that</c><01:11:04.810><c> was</c><01:11:05.380><c> false</c>

01:11:08.990 --> 01:11:09.000 align:start position:0%
 
 

01:11:09.000 --> 01:11:10.850 align:start position:0%
 
false

01:11:10.850 --> 01:11:10.860 align:start position:0%
false
 

01:11:10.860 --> 01:11:15.930 align:start position:0%
false
let<01:11:11.860><c> me</c><01:11:11.949><c> just</c><01:11:12.070><c> add</c><01:11:12.280><c> some</c><01:11:13.679><c> semicolons</c><01:11:14.679><c> and</c><01:11:14.949><c> then</c>

01:11:15.930 --> 01:11:15.940 align:start position:0%
let me just add some semicolons and then
 

01:11:15.940 --> 01:11:18.899 align:start position:0%
let me just add some semicolons and then
I<01:11:16.210><c> can</c><01:11:16.840><c> run</c><01:11:17.170><c> this</c><01:11:17.440><c> and</c><01:11:17.770><c> we'll</c><01:11:18.639><c> see</c><01:11:18.670><c> what</c>

01:11:18.899 --> 01:11:18.909 align:start position:0%
I can run this and we'll see what
 

01:11:18.909 --> 01:11:19.379 align:start position:0%
I can run this and we'll see what
happens

01:11:19.379 --> 01:11:19.389 align:start position:0%
happens
 

01:11:19.389 --> 01:11:21.810 align:start position:0%
happens
Oh<01:11:19.480><c> returnees</c><01:11:20.350><c> we</c><01:11:20.530><c> spelled</c><01:11:20.830><c> correctly</c><01:11:21.040><c> so</c><01:11:21.670><c> let</c>

01:11:21.810 --> 01:11:21.820 align:start position:0%
Oh returnees we spelled correctly so let
 

01:11:21.820 --> 01:11:25.200 align:start position:0%
Oh returnees we spelled correctly so let
me<01:11:21.909><c> spell</c><01:11:22.750><c> return</c><01:11:23.199><c> correctly</c><01:11:23.800><c> so</c><01:11:24.699><c> before</c><01:11:25.179><c> I</c>

01:11:25.200 --> 01:11:25.210 align:start position:0%
me spell return correctly so before I
 

01:11:25.210 --> 01:11:28.200 align:start position:0%
me spell return correctly so before I
run<01:11:25.600><c> this</c><01:11:25.810><c> I'm</c><01:11:26.050><c> going</c><01:11:26.440><c> to</c><01:11:26.679><c> edit</c><01:11:27.010><c> console</c><01:11:27.940><c> dot</c>

01:11:28.200 --> 01:11:28.210 align:start position:0%
run this I'm going to edit console dot
 

01:11:28.210 --> 01:11:31.590 align:start position:0%
run this I'm going to edit console dot
log<01:11:28.270><c> here</c><01:11:29.230><c> so</c><01:11:30.159><c> we</c><01:11:30.340><c> can</c><01:11:30.550><c> console</c><01:11:31.030><c> to</c><01:11:31.179><c> log</c><01:11:31.420><c> the</c>

01:11:31.590 --> 01:11:31.600 align:start position:0%
log here so we can console to log the
 

01:11:31.600 --> 01:11:34.800 align:start position:0%
log here so we can console to log the
answer<01:11:32.469><c> so</c><01:11:33.159><c> this</c><01:11:33.400><c> is</c><01:11:33.610><c> the</c><01:11:33.880><c> function</c><01:11:34.449><c> call</c><01:11:34.780><c> here</c>

01:11:34.800 --> 01:11:34.810 align:start position:0%
answer so this is the function call here
 

01:11:34.810 --> 01:11:38.220 align:start position:0%
answer so this is the function call here
true<01:11:35.500><c> or</c><01:11:35.650><c> false</c><01:11:35.889><c> we're</c><01:11:36.250><c> passing</c><01:11:36.820><c> in</c><01:11:37.000><c> true</c><01:11:37.929><c> and</c>

01:11:38.220 --> 01:11:38.230 align:start position:0%
true or false we're passing in true and
 

01:11:38.230 --> 01:11:40.710 align:start position:0%
true or false we're passing in true and
then<01:11:39.070><c> we're</c><01:11:39.219><c> going</c><01:11:39.400><c> to</c><01:11:39.489><c> log</c><01:11:39.969><c> what</c>

01:11:40.710 --> 01:11:40.720 align:start position:0%
then we're going to log what
 

01:11:40.720 --> 01:11:44.340 align:start position:0%
then we're going to log what
returned<01:11:41.200><c> here</c><01:11:41.680><c> yes</c><01:11:42.340><c> that</c><01:11:42.730><c> was</c><01:11:43.030><c> true</c><01:11:43.390><c> since</c><01:11:44.230><c> we</c>

01:11:44.340 --> 01:11:44.350 align:start position:0%
returned here yes that was true since we
 

01:11:44.350 --> 01:11:47.370 align:start position:0%
returned here yes that was true since we
passed<01:11:44.650><c> and</c><01:11:44.950><c> true</c><01:11:45.250><c> this</c><01:11:45.970><c> if</c><01:11:46.180><c> same</c><01:11:46.600><c> evaluates</c><01:11:47.260><c> a</c>

01:11:47.370 --> 01:11:47.380 align:start position:0%
passed and true this if same evaluates a
 

01:11:47.380 --> 01:11:53.470 align:start position:0%
passed and true this if same evaluates a
true<01:11:47.650><c> and</c><01:11:47.950><c> this</c><01:11:48.340><c> code</c><01:11:48.700><c> is</c><01:11:48.880><c> run</c><01:11:49.150><c> right</c><01:11:49.600><c> here</c>

01:11:53.470 --> 01:11:53.480 align:start position:0%
 
 

01:11:53.480 --> 01:11:56.290 align:start position:0%
 
there<01:11:54.320><c> are</c><01:11:54.470><c> many</c><01:11:54.710><c> comparison</c><01:11:55.520><c> operators</c><01:11:56.120><c> in</c>

01:11:56.290 --> 01:11:56.300 align:start position:0%
there are many comparison operators in
 

01:11:56.300 --> 01:11:59.320 align:start position:0%
there are many comparison operators in
JavaScript<01:11:57.140><c> that</c><01:11:57.440><c> will</c><01:11:57.920><c> return</c><01:11:58.340><c> a</c><01:11:58.400><c> boolean</c><01:11:58.790><c> of</c>

01:11:59.320 --> 01:11:59.330 align:start position:0%
JavaScript that will return a boolean of
 

01:11:59.330 --> 01:12:02.410 align:start position:0%
JavaScript that will return a boolean of
true<01:11:59.750><c> or</c><01:11:59.780><c> false</c><01:12:00.320><c> the</c><01:12:01.160><c> most</c><01:12:01.400><c> common</c><01:12:01.910><c> is</c><01:12:02.090><c> the</c>

01:12:02.410 --> 01:12:02.420 align:start position:0%
true or false the most common is the
 

01:12:02.420 --> 01:12:05.560 align:start position:0%
true or false the most common is the
Equality<01:12:03.290><c> operator</c><01:12:03.320><c> and</c><01:12:04.190><c> it's</c><01:12:04.700><c> often</c><01:12:05.120><c> used</c><01:12:05.150><c> in</c>

01:12:05.560 --> 01:12:05.570 align:start position:0%
Equality operator and it's often used in
 

01:12:05.570 --> 01:12:08.260 align:start position:0%
Equality operator and it's often used in
an<01:12:05.690><c> if</c><01:12:05.900><c> statement</c><01:12:06.170><c> so</c><01:12:07.040><c> here</c><01:12:07.340><c> it</c><01:12:07.640><c> just</c><01:12:07.820><c> says</c><01:12:08.000><c> if</c>

01:12:08.260 --> 01:12:08.270 align:start position:0%
an if statement so here it just says if
 

01:12:08.270 --> 01:12:10.750 align:start position:0%
an if statement so here it just says if
Val<01:12:08.960><c> so</c><01:12:09.440><c> we</c><01:12:09.590><c> have</c><01:12:09.680><c> this</c><01:12:09.800><c> whole</c><01:12:09.980><c> if</c><01:12:10.280><c> statement</c>

01:12:10.750 --> 01:12:10.760 align:start position:0%
Val so we have this whole if statement
 

01:12:10.760 --> 01:12:13.390 align:start position:0%
Val so we have this whole if statement
right<01:12:10.820><c> here</c><01:12:10.880><c> if</c><01:12:11.300><c> Val</c><01:12:12.110><c> we're</c><01:12:12.680><c> gonna</c><01:12:12.800><c> see</c><01:12:13.130><c> if</c><01:12:13.250><c> if</c>

01:12:13.390 --> 01:12:13.400 align:start position:0%
right here if Val we're gonna see if if
 

01:12:13.400 --> 01:12:18.280 align:start position:0%
right here if Val we're gonna see if if
Val<01:12:14.050><c> equals</c><01:12:15.050><c> 12</c><01:12:15.890><c> now</c><01:12:16.880><c> to</c><01:12:16.940><c> check</c><01:12:17.450><c> if</c><01:12:17.630><c> it</c><01:12:17.780><c> equals</c>

01:12:18.280 --> 01:12:18.290 align:start position:0%
Val equals 12 now to check if it equals
 

01:12:18.290 --> 01:12:20.530 align:start position:0%
Val equals 12 now to check if it equals
12<01:12:18.770><c> we're</c><01:12:19.400><c> gonna</c><01:12:19.489><c> have</c><01:12:19.700><c> to</c><01:12:19.850><c> use</c><01:12:19.970><c> the</c><01:12:20.180><c> double</c>

01:12:20.530 --> 01:12:20.540 align:start position:0%
12 we're gonna have to use the double
 

01:12:20.540 --> 01:12:23.920 align:start position:0%
12 we're gonna have to use the double
equal<01:12:20.989><c> sign</c><01:12:21.260><c> that</c><01:12:22.130><c> is</c><01:12:22.550><c> the</c><01:12:23.300><c> Equality</c><01:12:23.900><c> operator</c>

01:12:23.920 --> 01:12:23.930 align:start position:0%
equal sign that is the Equality operator
 

01:12:23.930 --> 01:12:28.540 align:start position:0%
equal sign that is the Equality operator
and<01:12:24.770><c> we'll</c><01:12:25.040><c> say</c><01:12:25.220><c> if</c><01:12:25.489><c> Val</c><01:12:26.090><c> equals</c><01:12:26.560><c> 12</c><01:12:27.560><c> the</c>

01:12:28.540 --> 01:12:28.550 align:start position:0%
and we'll say if Val equals 12 the
 

01:12:28.550 --> 01:12:30.910 align:start position:0%
and we'll say if Val equals 12 the
reason<01:12:28.970><c> why</c><01:12:29.090><c> we</c><01:12:29.300><c> can't</c><01:12:29.630><c> just</c><01:12:29.870><c> use</c><01:12:30.050><c> a</c><01:12:30.080><c> single</c>

01:12:30.910 --> 01:12:30.920 align:start position:0%
reason why we can't just use a single
 

01:12:30.920 --> 01:12:33.640 align:start position:0%
reason why we can't just use a single
equal<01:12:31.100><c> sign</c><01:12:31.489><c> is</c><01:12:32.060><c> that</c><01:12:32.570><c> a</c><01:12:32.750><c> single</c><01:12:33.290><c> equal</c><01:12:33.590><c> sign</c>

01:12:33.640 --> 01:12:33.650 align:start position:0%
equal sign is that a single equal sign
 

01:12:33.650 --> 01:12:36.850 align:start position:0%
equal sign is that a single equal sign
is<01:12:34.130><c> the</c><01:12:34.370><c> assignment</c><01:12:34.760><c> operator</c><01:12:35.300><c> if</c><01:12:35.930><c> we</c><01:12:36.500><c> just</c>

01:12:36.850 --> 01:12:36.860 align:start position:0%
is the assignment operator if we just
 

01:12:36.860 --> 01:12:39.490 align:start position:0%
is the assignment operator if we just
had<01:12:37.010><c> a</c><01:12:37.040><c> single</c><01:12:37.610><c> equal</c><01:12:38.060><c> sign</c><01:12:38.090><c> that</c><01:12:39.020><c> would</c><01:12:39.230><c> mean</c>

01:12:39.490 --> 01:12:39.500 align:start position:0%
had a single equal sign that would mean
 

01:12:39.500 --> 01:12:42.610 align:start position:0%
had a single equal sign that would mean
that<01:12:39.530><c> we</c><01:12:39.770><c> were</c><01:12:40.070><c> setting</c><01:12:40.700><c> the</c><01:12:41.360><c> value</c><01:12:42.350><c> of</c><01:12:42.380><c> the</c>

01:12:42.610 --> 01:12:42.620 align:start position:0%
that we were setting the value of the
 

01:12:42.620 --> 01:12:46.270 align:start position:0%
that we were setting the value of the
Val<01:12:42.860><c> variable</c><01:12:43.450><c> to</c><01:12:44.450><c> equal</c><01:12:45.080><c> 12</c><01:12:45.440><c> we're</c><01:12:46.100><c> not</c>

01:12:46.270 --> 01:12:46.280 align:start position:0%
Val variable to equal 12 we're not
 

01:12:46.280 --> 01:12:48.460 align:start position:0%
Val variable to equal 12 we're not
trying<01:12:46.760><c> to</c><01:12:46.820><c> set</c><01:12:47.120><c> this</c><01:12:47.330><c> to</c><01:12:47.510><c> equal</c><01:12:47.960><c> 12</c>

01:12:48.460 --> 01:12:48.470 align:start position:0%
trying to set this to equal 12
 

01:12:48.470 --> 01:12:52.120 align:start position:0%
trying to set this to equal 12
we're<01:12:48.950><c> trying</c><01:12:49.220><c> to</c><01:12:49.280><c> check</c><01:12:49.850><c> if</c><01:12:50.380><c> the</c><01:12:51.380><c> value</c><01:12:51.920><c> of</c>

01:12:52.120 --> 01:12:52.130 align:start position:0%
we're trying to check if the value of
 

01:12:52.130 --> 01:12:54.760 align:start position:0%
we're trying to check if the value of
this<01:12:52.280><c> variable</c><01:12:52.400><c> equals</c><01:12:53.390><c> 12</c><01:12:53.810><c> so</c><01:12:54.110><c> we</c><01:12:54.560><c> have</c><01:12:54.650><c> to</c>

01:12:54.760 --> 01:12:54.770 align:start position:0%
this variable equals 12 so we have to
 

01:12:54.770 --> 01:12:57.850 align:start position:0%
this variable equals 12 so we have to
use<01:12:54.890><c> the</c><01:12:55.070><c> double</c><01:12:55.430><c> equal</c><01:12:55.820><c> sign</c><01:12:56.120><c> so</c><01:12:56.480><c> now</c><01:12:57.380><c> this</c>

01:12:57.850 --> 01:12:57.860 align:start position:0%
use the double equal sign so now this
 

01:12:57.860 --> 01:13:00.610 align:start position:0%
use the double equal sign so now this
test<01:12:58.280><c> equal</c><01:12:58.730><c> function</c><01:12:59.030><c> is</c><01:12:59.510><c> going</c><01:12:59.840><c> to</c><01:12:59.960><c> test</c><01:13:00.350><c> to</c>

01:13:00.610 --> 01:13:00.620 align:start position:0%
test equal function is going to test to
 

01:13:00.620 --> 01:13:03.400 align:start position:0%
test equal function is going to test to
see<01:13:00.650><c> if</c><01:13:00.890><c> the</c><01:13:01.520><c> number</c><01:13:01.760><c> we</c><01:13:01.880><c> pass</c><01:13:02.120><c> in</c><01:13:02.390><c> is</c><01:13:02.600><c> equal</c><01:13:03.170><c> to</c>

01:13:03.400 --> 01:13:03.410 align:start position:0%
see if the number we pass in is equal to
 

01:13:03.410 --> 01:13:06.550 align:start position:0%
see if the number we pass in is equal to
12<01:13:03.890><c> I</c><01:13:04.220><c> can</c><01:13:04.910><c> do</c><01:13:05.030><c> a</c><01:13:05.060><c> console</c><01:13:05.780><c> that</c><01:13:05.960><c> law</c><01:13:06.200><c> here</c>

01:13:06.550 --> 01:13:06.560 align:start position:0%
12 I can do a console that law here
 

01:13:06.560 --> 01:13:11.800 align:start position:0%
12 I can do a console that law here
console<01:13:07.280><c> dot</c><01:13:07.460><c> log</c><01:13:07.520><c> and</c><01:13:08.410><c> then</c><01:13:09.410><c> we</c><01:13:09.530><c> can</c><01:13:10.660><c> see</c><01:13:11.660><c> what</c>

01:13:11.800 --> 01:13:11.810 align:start position:0%
console dot log and then we can see what
 

01:13:11.810 --> 01:13:14.740 align:start position:0%
console dot log and then we can see what
appears<01:13:12.110><c> in</c><01:13:12.770><c> the</c><01:13:13.010><c> console</c><01:13:13.520><c> here</c><01:13:13.820><c> not</c><01:13:14.300><c> equal</c>

01:13:14.740 --> 01:13:14.750 align:start position:0%
appears in the console here not equal
 

01:13:14.750 --> 01:13:20.970 align:start position:0%
appears in the console here not equal
because<01:13:15.350><c> 10</c><01:13:15.739><c> does</c><01:13:16.130><c> not</c><01:13:16.370><c> equal</c><01:13:16.880><c> 12</c>

01:13:20.970 --> 01:13:20.980 align:start position:0%
 
 

01:13:20.980 --> 01:13:23.370 align:start position:0%
 
we<01:13:21.940><c> learned</c><01:13:22.239><c> about</c><01:13:22.360><c> the</c><01:13:22.630><c> Equality</c><01:13:23.080><c> operator</c>

01:13:23.370 --> 01:13:23.380 align:start position:0%
we learned about the Equality operator
 

01:13:23.380 --> 01:13:26.520 align:start position:0%
we learned about the Equality operator
which<01:13:24.160><c> is</c><01:13:24.370><c> the</c><01:13:24.550><c> double</c><01:13:24.910><c> equal</c><01:13:25.330><c> sign</c><01:13:25.600><c> there's</c>

01:13:26.520 --> 01:13:26.530 align:start position:0%
which is the double equal sign there's
 

01:13:26.530 --> 01:13:29.370 align:start position:0%
which is the double equal sign there's
also<01:13:26.890><c> the</c><01:13:27.250><c> strict</c><01:13:27.730><c> equality</c><01:13:28.000><c> operator</c><01:13:28.960><c> the</c>

01:13:29.370 --> 01:13:29.380 align:start position:0%
also the strict equality operator the
 

01:13:29.380 --> 01:13:32.189 align:start position:0%
also the strict equality operator the
triple<01:13:29.920><c> equal</c><01:13:30.219><c> sign</c><01:13:30.489><c> so</c><01:13:30.850><c> here</c><01:13:31.690><c> we're</c><01:13:31.900><c> checking</c>

01:13:32.189 --> 01:13:32.199 align:start position:0%
triple equal sign so here we're checking
 

01:13:32.199 --> 01:13:35.459 align:start position:0%
triple equal sign so here we're checking
if<01:13:32.469><c> 3</c><01:13:32.949><c> equals</c><01:13:33.820><c> 3</c><01:13:34.390><c> with</c><01:13:34.690><c> the</c><01:13:34.840><c> strict</c><01:13:35.290><c> equality</c>

01:13:35.459 --> 01:13:35.469 align:start position:0%
if 3 equals 3 with the strict equality
 

01:13:35.469 --> 01:13:38.580 align:start position:0%
if 3 equals 3 with the strict equality
operator<01:13:36.429><c> so</c><01:13:36.969><c> the</c><01:13:37.239><c> difference</c><01:13:37.780><c> is</c><01:13:37.960><c> that</c><01:13:38.380><c> the</c>

01:13:38.580 --> 01:13:38.590 align:start position:0%
operator so the difference is that the
 

01:13:38.590 --> 01:13:40.860 align:start position:0%
operator so the difference is that the
Equality<01:13:39.219><c> operator</c><01:13:39.250><c> the</c><01:13:39.940><c> double</c><01:13:40.270><c> equal</c><01:13:40.630><c> sign</c>

01:13:40.860 --> 01:13:40.870 align:start position:0%
Equality operator the double equal sign
 

01:13:40.870 --> 01:13:43.410 align:start position:0%
Equality operator the double equal sign
attempts<01:13:41.770><c> to</c><01:13:41.920><c> convert</c><01:13:42.250><c> both</c><01:13:42.550><c> values</c><01:13:43.150><c> being</c>

01:13:43.410 --> 01:13:43.420 align:start position:0%
attempts to convert both values being
 

01:13:43.420 --> 01:13:46.020 align:start position:0%
attempts to convert both values being
compared<01:13:44.050><c> to</c><01:13:44.290><c> a</c><01:13:44.320><c> common</c><01:13:44.800><c> type</c><01:13:45.070><c> while</c><01:13:45.820><c> the</c>

01:13:46.020 --> 01:13:46.030 align:start position:0%
compared to a common type while the
 

01:13:46.030 --> 01:13:48.660 align:start position:0%
compared to a common type while the
strict<01:13:46.480><c> equality</c><01:13:46.600><c> operator</c><01:13:47.469><c> does</c><01:13:47.710><c> not</c><01:13:48.040><c> do</c><01:13:48.520><c> the</c>

01:13:48.660 --> 01:13:48.670 align:start position:0%
strict equality operator does not do the
 

01:13:48.670 --> 01:13:51.180 align:start position:0%
strict equality operator does not do the
type<01:13:48.910><c> conversion</c><01:13:49.570><c> so</c><01:13:50.199><c> this</c><01:13:50.230><c> is</c><01:13:50.890><c> going</c><01:13:51.070><c> to</c>

01:13:51.180 --> 01:13:51.190 align:start position:0%
type conversion so this is going to
 

01:13:51.190 --> 01:13:53.850 align:start position:0%
type conversion so this is going to
evaluate<01:13:51.850><c> to</c><01:13:52.060><c> true</c><01:13:52.090><c> the</c><01:13:52.630><c> 3</c><01:13:52.960><c> equals</c><01:13:53.500><c> equals</c>

01:13:53.850 --> 01:13:53.860 align:start position:0%
evaluate to true the 3 equals equals
 

01:13:53.860 --> 01:13:57.600 align:start position:0%
evaluate to true the 3 equals equals
equals<01:13:54.070><c> 3</c><01:13:54.699><c> but</c><01:13:55.570><c> the</c><01:13:55.810><c> 3</c><01:13:56.170><c> equals</c><01:13:56.770><c> equals</c><01:13:57.130><c> equals</c>

01:13:57.600 --> 01:13:57.610 align:start position:0%
equals 3 but the 3 equals equals equals
 

01:13:57.610 --> 01:14:00.660 align:start position:0%
equals 3 but the 3 equals equals equals
3<01:13:58.150><c> with</c><01:13:58.480><c> the</c><01:13:58.510><c> string</c><01:13:59.110><c> on</c><01:13:59.350><c> this</c><01:13:59.560><c> side</c><01:13:59.860><c> is</c><01:14:00.160><c> going</c>

01:14:00.660 --> 01:14:00.670 align:start position:0%
3 with the string on this side is going
 

01:14:00.670 --> 01:14:03.660 align:start position:0%
3 with the string on this side is going
to<01:14:00.850><c> evaluate</c><01:14:01.120><c> to</c><01:14:01.449><c> false</c><01:14:02.070><c> both</c><01:14:03.070><c> of</c><01:14:03.370><c> these</c><01:14:03.489><c> would</c>

01:14:03.660 --> 01:14:03.670 align:start position:0%
to evaluate to false both of these would
 

01:14:03.670 --> 01:14:05.370 align:start position:0%
to evaluate to false both of these would
be<01:14:03.730><c> true</c><01:14:04.150><c> if</c><01:14:04.360><c> we</c><01:14:04.480><c> were</c><01:14:04.570><c> using</c><01:14:04.750><c> the</c><01:14:04.989><c> double</c>

01:14:05.370 --> 01:14:05.380 align:start position:0%
be true if we were using the double
 

01:14:05.380 --> 01:14:08.970 align:start position:0%
be true if we were using the double
equal<01:14:05.770><c> sign</c><01:14:06.090><c> because</c><01:14:07.090><c> the</c><01:14:08.050><c> string</c><01:14:08.530><c> would</c><01:14:08.920><c> be</c>

01:14:08.970 --> 01:14:08.980 align:start position:0%
equal sign because the string would be
 

01:14:08.980 --> 01:14:11.790 align:start position:0%
equal sign because the string would be
converted<01:14:09.820><c> to</c><01:14:09.850><c> a</c><01:14:10.060><c> number</c><01:14:10.810><c> and</c><01:14:11.110><c> they</c><01:14:11.560><c> would</c><01:14:11.679><c> be</c>

01:14:11.790 --> 01:14:11.800 align:start position:0%
converted to a number and they would be
 

01:14:11.800 --> 01:14:14.400 align:start position:0%
converted to a number and they would be
equal<01:14:12.070><c> to</c><01:14:12.100><c> true</c><01:14:12.489><c> but</c><01:14:13.120><c> with</c><01:14:13.330><c> the</c><01:14:13.540><c> triple</c><01:14:14.080><c> equal</c>

01:14:14.400 --> 01:14:14.410 align:start position:0%
equal to true but with the triple equal
 

01:14:14.410 --> 01:14:16.640 align:start position:0%
equal to true but with the triple equal
sign<01:14:14.620><c> it</c><01:14:14.980><c> does</c><01:14:15.160><c> not</c><01:14:15.340><c> get</c><01:14:15.640><c> converted</c><01:14:16.000><c> to</c><01:14:16.120><c> a</c>

01:14:16.640 --> 01:14:16.650 align:start position:0%
sign it does not get converted to a
 

01:14:16.650 --> 01:14:19.800 align:start position:0%
sign it does not get converted to a
number<01:14:17.650><c> so</c><01:14:18.219><c> it</c><01:14:18.489><c> would</c><01:14:18.640><c> be</c><01:14:18.790><c> evaluate</c><01:14:19.420><c> to</c><01:14:19.570><c> false</c>

01:14:19.800 --> 01:14:19.810 align:start position:0%
number so it would be evaluate to false
 

01:14:19.810 --> 01:14:23.370 align:start position:0%
number so it would be evaluate to false
the<01:14:20.230><c> second</c><01:14:20.650><c> one</c><01:14:20.800><c> with</c><01:14:21.489><c> the</c><01:14:21.699><c> 3</c><01:14:21.910><c> equal</c><01:14:22.179><c> signs</c><01:14:22.420><c> so</c>

01:14:23.370 --> 01:14:23.380 align:start position:0%
the second one with the 3 equal signs so
 

01:14:23.380 --> 01:14:25.770 align:start position:0%
the second one with the 3 equal signs so
here<01:14:24.040><c> we're</c><01:14:24.400><c> just</c><01:14:24.429><c> going</c><01:14:24.850><c> to</c><01:14:24.940><c> use</c><01:14:25.270><c> it</c><01:14:25.300><c> right</c><01:14:25.630><c> in</c>

01:14:25.770 --> 01:14:25.780 align:start position:0%
here we're just going to use it right in
 

01:14:25.780 --> 01:14:28.320 align:start position:0%
here we're just going to use it right in
this<01:14:25.929><c> if</c><01:14:26.170><c> statement</c><01:14:26.350><c> and</c><01:14:26.980><c> who</c><01:14:27.429><c> equals</c><01:14:27.910><c> equals</c>

01:14:28.320 --> 01:14:28.330 align:start position:0%
this if statement and who equals equals
 

01:14:28.330 --> 01:14:34.950 align:start position:0%
this if statement and who equals equals
equals<01:14:29.520><c> 7</c><01:14:30.520><c> so</c><01:14:31.239><c> now</c><01:14:31.750><c> we</c><01:14:32.410><c> can</c><01:14:32.710><c> pass</c><01:14:33.100><c> in</c><01:14:33.960><c> the</c>

01:14:34.950 --> 01:14:34.960 align:start position:0%
equals 7 so now we can pass in the
 

01:14:34.960 --> 01:14:37.620 align:start position:0%
equals 7 so now we can pass in the
number<01:14:35.469><c> 7</c><01:14:36.010><c> and</c><01:14:36.280><c> it's</c><01:14:36.550><c> going</c><01:14:36.730><c> to</c><01:14:36.790><c> evaluate</c><01:14:37.510><c> to</c>

01:14:37.620 --> 01:14:37.630 align:start position:0%
number 7 and it's going to evaluate to
 

01:14:37.630 --> 01:14:40.620 align:start position:0%
number 7 and it's going to evaluate to
true<01:14:37.660><c> but</c><01:14:38.230><c> if</c><01:14:38.350><c> we</c><01:14:38.560><c> pass</c><01:14:38.949><c> in</c><01:14:39.219><c> a</c><01:14:39.340><c> string</c><01:14:39.420><c> 7</c><01:14:40.420><c> it</c>

01:14:40.620 --> 01:14:40.630 align:start position:0%
true but if we pass in a string 7 it
 

01:14:40.630 --> 01:14:46.209 align:start position:0%
true but if we pass in a string 7 it
will<01:14:40.810><c> evaluate</c><01:14:41.199><c> to</c><01:14:41.770><c> false</c>

01:14:46.209 --> 01:14:46.219 align:start position:0%
 
 

01:14:46.219 --> 01:14:49.029 align:start position:0%
 
we<01:14:46.909><c> will</c><01:14:47.119><c> do</c><01:14:47.269><c> one</c><01:14:47.479><c> more</c><01:14:47.510><c> review</c><01:14:48.320><c> with</c><01:14:48.769><c> the</c>

01:14:49.029 --> 01:14:49.039 align:start position:0%
we will do one more review with the
 

01:14:49.039 --> 01:14:51.159 align:start position:0%
we will do one more review with the
Equality<01:14:49.519><c> operator</c><01:14:49.789><c> and</c><01:14:50.570><c> the</c><01:14:50.809><c> strict</c>

01:14:51.159 --> 01:14:51.169 align:start position:0%
Equality operator and the strict
 

01:14:51.169 --> 01:14:54.939 align:start position:0%
Equality operator and the strict
equality<01:14:51.349><c> operator</c><01:14:52.249><c> so</c><01:14:53.030><c> if</c><01:14:53.329><c> I</c><01:14:53.570><c> run</c><01:14:54.260><c> this</c><01:14:54.320><c> here</c>

01:14:54.939 --> 01:14:54.949 align:start position:0%
equality operator so if I run this here
 

01:14:54.949 --> 01:14:57.549 align:start position:0%
equality operator so if I run this here
we'll<01:14:55.309><c> see</c><01:14:55.489><c> in</c><01:14:55.579><c> the</c><01:14:55.699><c> the</c><01:14:56.269><c> console</c><01:14:56.840><c> says</c><01:14:57.079><c> equal</c>

01:14:57.549 --> 01:14:57.559 align:start position:0%
we'll see in the the console says equal
 

01:14:57.559 --> 01:15:00.489 align:start position:0%
we'll see in the the console says equal
because<01:14:58.340><c> it's</c><01:14:58.699><c> checking</c><01:14:58.999><c> if</c><01:14:59.389><c> the</c><01:14:59.719><c> number</c><01:15:00.079><c> 10</c>

01:15:00.489 --> 01:15:00.499 align:start position:0%
because it's checking if the number 10
 

01:15:00.499 --> 01:15:03.750 align:start position:0%
because it's checking if the number 10
and<01:15:00.739><c> the</c><01:15:01.249><c> string</c><01:15:01.309><c> 10</c><01:15:01.999><c> are</c><01:15:02.239><c> equal</c><01:15:02.749><c> so</c><01:15:03.289><c> if</c><01:15:03.469><c> a</c>

01:15:03.750 --> 01:15:03.760 align:start position:0%
and the string 10 are equal so if a
 

01:15:03.760 --> 01:15:06.310 align:start position:0%
and the string 10 are equal so if a
equals<01:15:04.760><c> B</c><01:15:04.880><c> the</c><01:15:05.300><c> number</c><01:15:05.449><c> 10</c><01:15:05.749><c> equals</c><01:15:05.959><c> a</c><01:15:06.050><c> strict</c>

01:15:06.310 --> 01:15:06.320 align:start position:0%
equals B the number 10 equals a strict
 

01:15:06.320 --> 01:15:09.219 align:start position:0%
equals B the number 10 equals a strict
number<01:15:06.530><c> 10</c><01:15:06.739><c> returned</c><01:15:07.400><c> equal</c><01:15:08.090><c> since</c><01:15:08.929><c> we're</c>

01:15:09.219 --> 01:15:09.229 align:start position:0%
number 10 returned equal since we're
 

01:15:09.229 --> 01:15:11.529 align:start position:0%
number 10 returned equal since we're
using<01:15:09.469><c> the</c><01:15:09.739><c> Equality</c><01:15:10.219><c> operator</c><01:15:10.489><c> with</c><01:15:11.239><c> with</c>

01:15:11.529 --> 01:15:11.539 align:start position:0%
using the Equality operator with with
 

01:15:11.539 --> 01:15:14.259 align:start position:0%
using the Equality operator with with
two<01:15:11.869><c> equal</c><01:15:12.260><c> signs</c><01:15:12.530><c> it</c><01:15:12.919><c> performs</c><01:15:13.760><c> a</c><01:15:13.939><c> type</c>

01:15:14.259 --> 01:15:14.269 align:start position:0%
two equal signs it performs a type
 

01:15:14.269 --> 01:15:17.229 align:start position:0%
two equal signs it performs a type
conversion<01:15:15.050><c> and</c><01:15:15.289><c> it</c><01:15:15.829><c> converts</c><01:15:16.309><c> the</c><01:15:16.760><c> string</c>

01:15:17.229 --> 01:15:17.239 align:start position:0%
conversion and it converts the string
 

01:15:17.239 --> 01:15:20.439 align:start position:0%
conversion and it converts the string
into<01:15:17.840><c> a</c><01:15:17.869><c> number</c><01:15:18.380><c> but</c><01:15:19.130><c> if</c><01:15:19.369><c> we</c><01:15:19.669><c> use</c><01:15:19.880><c> the</c><01:15:20.119><c> strict</c>

01:15:20.439 --> 01:15:20.449 align:start position:0%
into a number but if we use the strict
 

01:15:20.449 --> 01:15:22.719 align:start position:0%
into a number but if we use the strict
equality<01:15:20.659><c> operator</c><01:15:21.499><c> with</c><01:15:21.889><c> three</c><01:15:22.159><c> equal</c><01:15:22.429><c> signs</c>

01:15:22.719 --> 01:15:22.729 align:start position:0%
equality operator with three equal signs
 

01:15:22.729 --> 01:15:25.569 align:start position:0%
equality operator with three equal signs
I'll<01:15:23.059><c> run</c><01:15:23.599><c> that</c><01:15:23.780><c> again</c><01:15:24.139><c> and</c><01:15:24.380><c> you'll</c><01:15:24.949><c> see</c><01:15:25.159><c> not</c>

01:15:25.569 --> 01:15:25.579 align:start position:0%
I'll run that again and you'll see not
 

01:15:25.579 --> 01:15:28.899 align:start position:0%
I'll run that again and you'll see not
equal<01:15:26.119><c> in</c><01:15:26.360><c> the</c><01:15:26.630><c> console</c><01:15:27.139><c> because</c><01:15:27.679><c> now</c><01:15:28.219><c> it's</c>

01:15:28.899 --> 01:15:28.909 align:start position:0%
equal in the console because now it's
 

01:15:28.909 --> 01:15:32.169 align:start position:0%
equal in the console because now it's
not<01:15:29.179><c> converting</c><01:15:30.079><c> the</c><01:15:30.499><c> types</c><01:15:31.010><c> and</c><01:15:31.309><c> it's</c><01:15:31.939><c> just</c>

01:15:32.169 --> 01:15:32.179 align:start position:0%
not converting the types and it's just
 

01:15:32.179 --> 01:15:34.779 align:start position:0%
not converting the types and it's just
checking<01:15:32.719><c> if</c><01:15:32.900><c> a</c><01:15:33.139><c> number</c><01:15:33.619><c> is</c><01:15:33.800><c> equal</c><01:15:34.669><c> to</c><01:15:34.760><c> a</c>

01:15:34.779 --> 01:15:34.789 align:start position:0%
checking if a number is equal to a
 

01:15:34.789 --> 01:15:41.100 align:start position:0%
checking if a number is equal to a
string<01:15:35.059><c> which</c><01:15:35.360><c> is</c><01:15:35.510><c> not</c><01:15:35.719><c> so</c><01:15:36.139><c> we</c><01:15:36.320><c> get</c><01:15:36.530><c> not</c><01:15:36.769><c> equal</c>

01:15:41.100 --> 01:15:41.110 align:start position:0%
 
 

01:15:41.110 --> 01:15:43.800 align:start position:0%
 
now<01:15:41.740><c> I</c><01:15:41.770><c> will</c><01:15:42.160><c> show</c><01:15:42.400><c> you</c><01:15:42.460><c> the</c><01:15:42.820><c> inequality</c>

01:15:43.800 --> 01:15:43.810 align:start position:0%
now I will show you the inequality
 

01:15:43.810 --> 01:15:46.170 align:start position:0%
now I will show you the inequality
operator<01:15:44.290><c> which</c><01:15:44.920><c> is</c><01:15:45.130><c> basically</c><01:15:45.490><c> the</c><01:15:45.640><c> opposite</c>

01:15:46.170 --> 01:15:46.180 align:start position:0%
operator which is basically the opposite
 

01:15:46.180 --> 01:15:49.650 align:start position:0%
operator which is basically the opposite
of<01:15:46.360><c> the</c><01:15:46.510><c> Equality</c><01:15:47.290><c> operator</c><01:15:47.580><c> so</c><01:15:48.580><c> I'm</c><01:15:48.910><c> gonna</c><01:15:49.210><c> do</c>

01:15:49.650 --> 01:15:49.660 align:start position:0%
of the Equality operator so I'm gonna do
 

01:15:49.660 --> 01:15:51.300 align:start position:0%
of the Equality operator so I'm gonna do
the<01:15:49.780><c> inequality</c><01:15:50.440><c> operator</c><01:15:50.920><c> with</c><01:15:51.130><c> an</c>

01:15:51.300 --> 01:15:51.310 align:start position:0%
the inequality operator with an
 

01:15:51.310 --> 01:15:53.580 align:start position:0%
the inequality operator with an
exclamation<01:15:51.640><c> point</c><01:15:52.000><c> in</c><01:15:52.450><c> an</c><01:15:52.570><c> equal</c><01:15:53.020><c> sign</c><01:15:53.260><c> in</c>

01:15:53.580 --> 01:15:53.590 align:start position:0%
exclamation point in an equal sign in
 

01:15:53.590 --> 01:15:57.060 align:start position:0%
exclamation point in an equal sign in
this<01:15:54.340><c> case</c><01:15:54.640><c> I'm</c><01:15:54.910><c> going</c><01:15:55.300><c> to</c><01:15:55.450><c> see</c><01:15:55.810><c> if</c><01:15:56.110><c> the</c><01:15:56.800><c> value</c>

01:15:57.060 --> 01:15:57.070 align:start position:0%
this case I'm going to see if the value
 

01:15:57.070 --> 01:16:02.850 align:start position:0%
this case I'm going to see if the value
is<01:15:57.610><c> not</c><01:15:58.480><c> equal</c><01:15:58.870><c> to</c><01:15:59.550><c> 99</c><01:16:00.550><c> and</c><01:16:01.230><c> again</c><01:16:02.230><c> just</c><01:16:02.740><c> like</c>

01:16:02.850 --> 01:16:02.860 align:start position:0%
is not equal to 99 and again just like
 

01:16:02.860 --> 01:16:05.280 align:start position:0%
is not equal to 99 and again just like
the<01:16:03.070><c> Equality</c><01:16:03.550><c> operator</c><01:16:03.600><c> this</c><01:16:04.600><c> does</c><01:16:04.930><c> type</c>

01:16:05.280 --> 01:16:05.290 align:start position:0%
the Equality operator this does type
 

01:16:05.290 --> 01:16:07.920 align:start position:0%
the Equality operator this does type
conversion<01:16:06.010><c> so</c><01:16:06.730><c> let's</c><01:16:07.300><c> just</c><01:16:07.480><c> run</c><01:16:07.720><c> this</c>

01:16:07.920 --> 01:16:07.930 align:start position:0%
conversion so let's just run this
 

01:16:07.930 --> 01:16:11.040 align:start position:0%
conversion so let's just run this
program<01:16:08.260><c> and</c><01:16:08.800><c> we'll</c><01:16:09.220><c> see</c><01:16:09.460><c> it</c><01:16:09.730><c> is</c><01:16:09.940><c> not</c><01:16:10.450><c> equal</c>

01:16:11.040 --> 01:16:11.050 align:start position:0%
program and we'll see it is not equal
 

01:16:11.050 --> 01:16:13.590 align:start position:0%
program and we'll see it is not equal
because<01:16:11.740><c> 10</c><01:16:12.250><c> we</c><01:16:12.430><c> pass</c><01:16:12.700><c> them</c><01:16:12.970><c> 10</c><01:16:13.270><c> into</c><01:16:13.510><c> the</c>

01:16:13.590 --> 01:16:13.600 align:start position:0%
because 10 we pass them 10 into the
 

01:16:13.600 --> 01:16:16.860 align:start position:0%
because 10 we pass them 10 into the
function<01:16:14.020><c> here</c><01:16:14.290><c> and</c><01:16:14.440><c> 10</c><01:16:15.130><c> is</c><01:16:15.340><c> not</c><01:16:15.820><c> equal</c><01:16:16.360><c> to</c><01:16:16.390><c> 99</c>

01:16:16.860 --> 01:16:16.870 align:start position:0%
function here and 10 is not equal to 99
 

01:16:16.870 --> 01:16:22.570 align:start position:0%
function here and 10 is not equal to 99
so<01:16:17.320><c> we</c><01:16:18.190><c> get</c><01:16:18.430><c> not</c><01:16:18.610><c> equal</c>

01:16:22.570 --> 01:16:22.580 align:start position:0%
 
 

01:16:22.580 --> 01:16:25.180 align:start position:0%
 
the<01:16:23.360><c> strict</c><01:16:23.780><c> inequality</c><01:16:24.500><c> operator</c><01:16:24.920><c> is</c>

01:16:25.180 --> 01:16:25.190 align:start position:0%
the strict inequality operator is
 

01:16:25.190 --> 01:16:27.490 align:start position:0%
the strict inequality operator is
basically<01:16:25.760><c> the</c><01:16:26.000><c> opposite</c><01:16:26.540><c> of</c><01:16:26.720><c> the</c><01:16:27.080><c> strict</c>

01:16:27.490 --> 01:16:27.500 align:start position:0%
basically the opposite of the strict
 

01:16:27.500 --> 01:16:30.580 align:start position:0%
basically the opposite of the strict
equality<01:16:27.820><c> operator</c><01:16:28.820><c> and</c><01:16:29.420><c> works</c><01:16:29.630><c> like</c><01:16:29.750><c> this</c><01:16:30.080><c> so</c>

01:16:30.580 --> 01:16:30.590 align:start position:0%
equality operator and works like this so
 

01:16:30.590 --> 01:16:32.890 align:start position:0%
equality operator and works like this so
it<01:16:30.800><c> says</c><01:16:30.980><c> if</c><01:16:31.190><c> Val</c><01:16:31.460><c> I'm</c><01:16:31.730><c> going</c><01:16:31.880><c> to</c><01:16:31.940><c> do</c><01:16:32.060><c> if</c><01:16:32.270><c> Val</c>

01:16:32.890 --> 01:16:32.900 align:start position:0%
it says if Val I'm going to do if Val
 

01:16:32.900 --> 01:16:38.530 align:start position:0%
it says if Val I'm going to do if Val
does<01:16:33.680><c> not</c><01:16:34.040><c> equal</c><01:16:35.530><c> 17</c><01:16:36.530><c> so</c><01:16:37.520><c> this</c><01:16:37.790><c> is</c><01:16:37.970><c> the</c><01:16:38.150><c> strict</c>

01:16:38.530 --> 01:16:38.540 align:start position:0%
does not equal 17 so this is the strict
 

01:16:38.540 --> 01:16:40.480 align:start position:0%
does not equal 17 so this is the strict
inequality<01:16:39.200><c> operator</c><01:16:39.590><c> instead</c><01:16:39.890><c> of</c><01:16:40.010><c> one</c><01:16:40.190><c> equal</c>

01:16:40.480 --> 01:16:40.490 align:start position:0%
inequality operator instead of one equal
 

01:16:40.490 --> 01:16:43.060 align:start position:0%
inequality operator instead of one equal
sign<01:16:40.670><c> we</c><01:16:40.850><c> have</c><01:16:40.880><c> two</c><01:16:41.210><c> equal</c><01:16:41.540><c> signs</c><01:16:41.750><c> and</c><01:16:42.260><c> that</c>

01:16:43.060 --> 01:16:43.070 align:start position:0%
sign we have two equal signs and that
 

01:16:43.070 --> 01:16:44.860 align:start position:0%
sign we have two equal signs and that
means<01:16:43.310><c> it's</c><01:16:43.520><c> going</c><01:16:43.670><c> to</c><01:16:43.820><c> check</c><01:16:44.120><c> if</c><01:16:44.300><c> this</c><01:16:44.420><c> is</c><01:16:44.480><c> not</c>

01:16:44.860 --> 01:16:44.870 align:start position:0%
means it's going to check if this is not
 

01:16:44.870 --> 01:16:48.190 align:start position:0%
means it's going to check if this is not
true<01:16:45.260><c> but</c><01:16:45.920><c> it's</c><01:16:46.070><c> not</c><01:16:46.370><c> going</c><01:16:46.820><c> to</c><01:16:46.940><c> convert</c><01:16:47.780><c> types</c>

01:16:48.190 --> 01:16:48.200 align:start position:0%
true but it's not going to convert types
 

01:16:48.200 --> 01:16:50.710 align:start position:0%
true but it's not going to convert types
so<01:16:49.130><c> for</c><01:16:49.340><c> instance</c><01:16:49.730><c> if</c><01:16:49.940><c> we</c><01:16:50.060><c> are</c><01:16:50.090><c> checking</c><01:16:50.480><c> if</c>

01:16:50.710 --> 01:16:50.720 align:start position:0%
so for instance if we are checking if
 

01:16:50.720 --> 01:16:53.740 align:start position:0%
so for instance if we are checking if
the<01:16:50.900><c> number</c><01:16:51.320><c> three</c><01:16:51.620><c> does</c><01:16:51.980><c> not</c><01:16:52.010><c> equal</c><01:16:52.970><c> the</c>

01:16:53.740 --> 01:16:53.750 align:start position:0%
the number three does not equal the
 

01:16:53.750 --> 01:16:57.280 align:start position:0%
the number three does not equal the
string<01:16:54.440><c> three</c><01:16:54.830><c> that</c><01:16:55.490><c> would</c><01:16:55.640><c> be</c><01:16:55.820><c> true</c><01:16:56.300><c> so</c><01:16:57.170><c> in</c>

01:16:57.280 --> 01:16:57.290 align:start position:0%
string three that would be true so in
 

01:16:57.290 --> 01:16:59.680 align:start position:0%
string three that would be true so in
this<01:16:57.470><c> example</c><01:16:57.890><c> we're</c><01:16:58.340><c> just</c><01:16:58.370><c> checking</c><01:16:59.030><c> if</c><01:16:59.210><c> ten</c>

01:16:59.680 --> 01:16:59.690 align:start position:0%
this example we're just checking if ten
 

01:16:59.690 --> 01:17:03.100 align:start position:0%
this example we're just checking if ten
does<01:17:00.350><c> not</c><01:17:00.560><c> equal</c><01:17:00.830><c> 17</c><01:17:01.460><c> if</c><01:17:01.730><c> we</c><01:17:02.270><c> run</c><01:17:02.540><c> this</c><01:17:02.750><c> we</c><01:17:02.810><c> will</c>

01:17:03.100 --> 01:17:03.110 align:start position:0%
does not equal 17 if we run this we will
 

01:17:03.110 --> 01:17:07.850 align:start position:0%
does not equal 17 if we run this we will
see<01:17:03.290><c> it's</c><01:17:03.440><c> not</c><01:17:03.710><c> equal</c>

01:17:07.850 --> 01:17:07.860 align:start position:0%
 
 

01:17:07.860 --> 01:17:09.920 align:start position:0%
 
we<01:17:08.580><c> can</c><01:17:08.760><c> also</c><01:17:08.910><c> use</c><01:17:09.180><c> the</c><01:17:09.420><c> greater</c><01:17:09.780><c> than</c>

01:17:09.920 --> 01:17:09.930 align:start position:0%
we can also use the greater than
 

01:17:09.930 --> 01:17:12.260 align:start position:0%
we can also use the greater than
operator<01:17:10.770><c> so</c><01:17:11.370><c> in</c><01:17:11.490><c> this</c><01:17:11.610><c> function</c><01:17:11.880><c> we're</c>

01:17:12.260 --> 01:17:12.270 align:start position:0%
operator so in this function we're
 

01:17:12.270 --> 01:17:15.770 align:start position:0%
operator so in this function we're
checking<01:17:12.630><c> if</c><01:17:12.990><c> a</c><01:17:13.140><c> value</c><01:17:13.380><c> is</c><01:17:13.560><c> over</c><01:17:14.040><c> 100</c><01:17:14.790><c> so</c><01:17:15.450><c> I'm</c>

01:17:15.770 --> 01:17:15.780 align:start position:0%
checking if a value is over 100 so I'm
 

01:17:15.780 --> 01:17:19.610 align:start position:0%
checking if a value is over 100 so I'm
going<01:17:16.050><c> to</c><01:17:16.080><c> put</c><01:17:16.410><c> greater</c><01:17:16.980><c> than</c><01:17:17.810><c> 100</c><01:17:18.810><c> and</c><01:17:18.990><c> then</c>

01:17:19.610 --> 01:17:19.620 align:start position:0%
going to put greater than 100 and then
 

01:17:19.620 --> 01:17:21.620 align:start position:0%
going to put greater than 100 and then
here<01:17:19.950><c> we're</c><01:17:20.100><c> checking</c><01:17:20.370><c> if</c><01:17:20.670><c> a</c><01:17:20.820><c> value</c><01:17:21.060><c> is</c><01:17:21.210><c> over</c>

01:17:21.620 --> 01:17:21.630 align:start position:0%
here we're checking if a value is over
 

01:17:21.630 --> 01:17:26.360 align:start position:0%
here we're checking if a value is over
10<01:17:21.990><c> so</c><01:17:22.650><c> I'll</c><01:17:22.980><c> put</c><01:17:23.280><c> greater</c><01:17:23.760><c> than</c><01:17:24.320><c> 10</c><01:17:25.320><c> so</c><01:17:25.590><c> here</c>

01:17:26.360 --> 01:17:26.370 align:start position:0%
10 so I'll put greater than 10 so here
 

01:17:26.370 --> 01:17:28.870 align:start position:0%
10 so I'll put greater than 10 so here
we<01:17:26.490><c> call</c><01:17:26.700><c> the</c><01:17:26.850><c> function</c><01:17:27.030><c> we</c><01:17:27.360><c> pass</c><01:17:27.690><c> in</c><01:17:27.990><c> 10</c><01:17:28.470><c> and</c>

01:17:28.870 --> 01:17:28.880 align:start position:0%
we call the function we pass in 10 and
 

01:17:28.880 --> 01:17:32.780 align:start position:0%
we call the function we pass in 10 and
if<01:17:29.880><c> I</c><01:17:30.180><c> run</c><01:17:30.990><c> that</c><01:17:31.020><c> function</c><01:17:31.680><c> you'll</c><01:17:32.040><c> see</c><01:17:32.280><c> 10</c><01:17:32.670><c> or</c>

01:17:32.780 --> 01:17:32.790 align:start position:0%
if I run that function you'll see 10 or
 

01:17:32.790 --> 01:17:34.820 align:start position:0%
if I run that function you'll see 10 or
under<01:17:32.820><c> because</c><01:17:33.570><c> we're</c><01:17:33.840><c> not</c><01:17:33.990><c> over</c><01:17:34.260><c> 100</c><01:17:34.680><c> we're</c>

01:17:34.820 --> 01:17:34.830 align:start position:0%
under because we're not over 100 we're
 

01:17:34.830 --> 01:17:37.460 align:start position:0%
under because we're not over 100 we're
not<01:17:34.920><c> over</c><01:17:35.190><c> 10</c><01:17:35.460><c> or</c><01:17:36.000><c> 10</c><01:17:36.330><c> or</c><01:17:36.450><c> under</c><01:17:36.480><c> because</c><01:17:37.350><c> we</c>

01:17:37.460 --> 01:17:37.470 align:start position:0%
not over 10 or 10 or under because we
 

01:17:37.470 --> 01:17:42.239 align:start position:0%
not over 10 or 10 or under because we
passed<01:17:37.740><c> in</c><01:17:38.040><c> 10</c>

01:17:42.239 --> 01:17:42.249 align:start position:0%
 
 

01:17:42.249 --> 01:17:44.819 align:start position:0%
 
we<01:17:43.090><c> can</c><01:17:43.269><c> also</c><01:17:43.510><c> use</c><01:17:43.840><c> the</c><01:17:44.050><c> greater</c><01:17:44.380><c> than</c><01:17:44.499><c> or</c>

01:17:44.819 --> 01:17:44.829 align:start position:0%
we can also use the greater than or
 

01:17:44.829 --> 01:17:47.520 align:start position:0%
we can also use the greater than or
equal<01:17:45.099><c> to</c><01:17:45.369><c> operator</c><01:17:45.820><c> so</c><01:17:46.809><c> we'll</c><01:17:47.019><c> finish</c><01:17:47.229><c> this</c>

01:17:47.520 --> 01:17:47.530 align:start position:0%
equal to operator so we'll finish this
 

01:17:47.530 --> 01:17:50.399 align:start position:0%
equal to operator so we'll finish this
function<01:17:48.099><c> by</c><01:17:48.309><c> using</c><01:17:48.539><c> greater</c><01:17:49.539><c> than</c><01:17:49.840><c> or</c><01:17:49.989><c> equal</c>

01:17:50.399 --> 01:17:50.409 align:start position:0%
function by using greater than or equal
 

01:17:50.409 --> 01:17:52.799 align:start position:0%
function by using greater than or equal
to<01:17:50.590><c> that's</c><01:17:50.949><c> just</c><01:17:51.280><c> a</c><01:17:51.610><c> greater</c><01:17:52.239><c> than</c><01:17:52.300><c> sign</c><01:17:52.539><c> in</c><01:17:52.690><c> an</c>

01:17:52.799 --> 01:17:52.809 align:start position:0%
to that's just a greater than sign in an
 

01:17:52.809 --> 01:17:56.219 align:start position:0%
to that's just a greater than sign in an
equal<01:17:53.139><c> sign</c><01:17:53.380><c> and</c><01:17:53.710><c> we'll</c><01:17:54.340><c> put</c><01:17:54.550><c> 20</c><01:17:55.119><c> down</c><01:17:55.809><c> here</c>

01:17:56.219 --> 01:17:56.229 align:start position:0%
equal sign and we'll put 20 down here
 

01:17:56.229 --> 01:18:02.339 align:start position:0%
equal sign and we'll put 20 down here
just<01:17:57.059><c> greater</c><01:17:58.059><c> than</c><01:17:58.239><c> or</c><01:17:58.749><c> equal</c><01:17:59.320><c> to</c><01:18:00.239><c> 10</c><01:18:01.239><c> if</c><01:18:01.900><c> I</c>

01:18:02.339 --> 01:18:02.349 align:start position:0%
just greater than or equal to 10 if I
 

01:18:02.349 --> 01:18:05.040 align:start position:0%
just greater than or equal to 10 if I
run<01:18:02.650><c> that</c><01:18:02.920><c> we</c><01:18:03.579><c> should</c><01:18:03.789><c> see</c><01:18:04.030><c> 10</c><01:18:04.599><c> or</c><01:18:04.719><c> over</c>

01:18:05.040 --> 01:18:05.050 align:start position:0%
run that we should see 10 or over
 

01:18:05.050 --> 01:18:07.080 align:start position:0%
run that we should see 10 or over
because<01:18:05.440><c> we're</c><01:18:05.860><c> passing</c><01:18:06.309><c> in</c><01:18:06.429><c> 10</c><01:18:06.729><c> and</c><01:18:06.969><c> it's</c>

01:18:07.080 --> 01:18:07.090 align:start position:0%
because we're passing in 10 and it's
 

01:18:07.090 --> 01:18:12.160 align:start position:0%
because we're passing in 10 and it's
greater<01:18:07.389><c> than</c><01:18:07.510><c> or</c><01:18:07.749><c> equal</c><01:18:07.869><c> to</c><01:18:08.260><c> 10</c>

01:18:12.160 --> 01:18:12.170 align:start position:0%
 
 

01:18:12.170 --> 01:18:14.380 align:start position:0%
 
now<01:18:12.740><c> I'll</c><01:18:13.040><c> show</c><01:18:13.250><c> you</c><01:18:13.340><c> an</c><01:18:13.460><c> example</c><01:18:13.550><c> of</c><01:18:13.910><c> the</c><01:18:14.090><c> less</c>

01:18:14.380 --> 01:18:14.390 align:start position:0%
now I'll show you an example of the less
 

01:18:14.390 --> 01:18:17.020 align:start position:0%
now I'll show you an example of the less
than<01:18:14.420><c> operator</c><01:18:15.170><c> with</c><01:18:15.770><c> this</c><01:18:15.980><c> function</c><01:18:16.520><c> we're</c>

01:18:17.020 --> 01:18:17.030 align:start position:0%
than operator with this function we're
 

01:18:17.030 --> 01:18:19.890 align:start position:0%
than operator with this function we're
going<01:18:17.060><c> to</c><01:18:17.210><c> check</c><01:18:17.570><c> if</c><01:18:17.840><c> the</c><01:18:18.020><c> value</c><01:18:18.230><c> is</c><01:18:18.680><c> less</c><01:18:19.430><c> than</c>

01:18:19.890 --> 01:18:19.900 align:start position:0%
going to check if the value is less than
 

01:18:19.900 --> 01:18:23.800 align:start position:0%
going to check if the value is less than
25<01:18:20.900><c> and</c><01:18:21.290><c> then</c><01:18:22.100><c> here</c><01:18:22.730><c> we're</c><01:18:22.940><c> checking</c><01:18:23.360><c> if</c><01:18:23.570><c> a</c>

01:18:23.800 --> 01:18:23.810 align:start position:0%
25 and then here we're checking if a
 

01:18:23.810 --> 01:18:28.660 align:start position:0%
25 and then here we're checking if a
value<01:18:24.140><c> is</c><01:18:24.670><c> less</c><01:18:25.670><c> than</c><01:18:26.170><c> 55</c><01:18:27.170><c> so</c><01:18:27.860><c> here's</c><01:18:28.340><c> a</c><01:18:28.460><c> trick</c>

01:18:28.660 --> 01:18:28.670 align:start position:0%
value is less than 55 so here's a trick
 

01:18:28.670 --> 01:18:30.880 align:start position:0%
value is less than 55 so here's a trick
I<01:18:28.880><c> use</c><01:18:29.090><c> to</c><01:18:29.120><c> remember</c><01:18:29.660><c> which</c><01:18:30.080><c> symbol</c><01:18:30.500><c> is</c><01:18:30.620><c> less</c>

01:18:30.880 --> 01:18:30.890 align:start position:0%
I use to remember which symbol is less
 

01:18:30.890 --> 01:18:34.090 align:start position:0%
I use to remember which symbol is less
than<01:18:31.100><c> 1</c><01:18:31.580><c> which</c><01:18:31.820><c> symbol</c><01:18:32.300><c> is</c><01:18:32.450><c> more</c><01:18:32.870><c> than</c><01:18:33.170><c> if</c><01:18:33.500><c> you</c>

01:18:34.090 --> 01:18:34.100 align:start position:0%
than 1 which symbol is more than if you
 

01:18:34.100 --> 01:18:36.400 align:start position:0%
than 1 which symbol is more than if you
see<01:18:34.340><c> the</c><01:18:34.640><c> less</c><01:18:34.940><c> than</c><01:18:35.270><c> symbol</c><01:18:35.570><c> looks</c><01:18:36.020><c> kind</c><01:18:36.320><c> of</c>

01:18:36.400 --> 01:18:36.410 align:start position:0%
see the less than symbol looks kind of
 

01:18:36.410 --> 01:18:38.950 align:start position:0%
see the less than symbol looks kind of
like<01:18:36.560><c> the</c><01:18:36.830><c> letter</c><01:18:37.100><c> L</c><01:18:37.370><c> which</c><01:18:38.300><c> is</c><01:18:38.330><c> the</c><01:18:38.660><c> first</c>

01:18:38.950 --> 01:18:38.960 align:start position:0%
like the letter L which is the first
 

01:18:38.960 --> 01:18:40.900 align:start position:0%
like the letter L which is the first
letter<01:18:39.170><c> in</c><01:18:39.290><c> less</c><01:18:39.620><c> than</c><01:18:39.920><c> and</c><01:18:40.160><c> then</c><01:18:40.580><c> the</c><01:18:40.670><c> more</c>

01:18:40.900 --> 01:18:40.910 align:start position:0%
letter in less than and then the more
 

01:18:40.910 --> 01:18:46.430 align:start position:0%
letter in less than and then the more
than<01:18:41.090><c> symbol</c><01:18:41.510><c> is</c><01:18:41.630><c> just</c><01:18:41.660><c> the</c><01:18:42.050><c> opposite</c>

01:18:46.430 --> 01:18:46.440 align:start position:0%
 
 

01:18:46.440 --> 01:18:49.070 align:start position:0%
 
and<01:18:46.530><c> we</c><01:18:47.100><c> also</c><01:18:47.280><c> have</c><01:18:47.610><c> the</c><01:18:47.850><c> less</c><01:18:48.120><c> than</c><01:18:48.390><c> or</c><01:18:48.570><c> equal</c>

01:18:49.070 --> 01:18:49.080 align:start position:0%
and we also have the less than or equal
 

01:18:49.080 --> 01:18:51.500 align:start position:0%
and we also have the less than or equal
to<01:18:49.260><c> operator</c><01:18:49.469><c> we</c><01:18:50.100><c> can</c><01:18:50.130><c> use</c><01:18:50.460><c> in</c><01:18:50.610><c> JavaScript</c><01:18:51.300><c> so</c>

01:18:51.500 --> 01:18:51.510 align:start position:0%
to operator we can use in JavaScript so
 

01:18:51.510 --> 01:18:54.350 align:start position:0%
to operator we can use in JavaScript so
here<01:18:52.199><c> we're</c><01:18:52.380><c> going</c><01:18:52.500><c> to</c><01:18:52.560><c> check</c><01:18:52.890><c> if</c><01:18:53.160><c> it's</c><01:18:53.850><c> less</c>

01:18:54.350 --> 01:18:54.360 align:start position:0%
here we're going to check if it's less
 

01:18:54.360 --> 01:18:57.200 align:start position:0%
here we're going to check if it's less
than<01:18:54.570><c> or</c><01:18:54.690><c> equal</c><01:18:54.840><c> to</c><01:18:55.230><c> 12</c><01:18:55.650><c> so</c><01:18:56.489><c> we</c><01:18:56.699><c> just</c><01:18:56.910><c> put</c><01:18:57.090><c> the</c>

01:18:57.200 --> 01:18:57.210 align:start position:0%
than or equal to 12 so we just put the
 

01:18:57.210 --> 01:19:01.580 align:start position:0%
than or equal to 12 so we just put the
less<01:18:57.480><c> than</c><01:18:57.780><c> operator</c><01:18:58.489><c> 12</c><01:18:59.489><c> Oh</c><01:19:00.110><c> evil</c><01:19:01.110><c> less</c><01:19:01.380><c> than</c>

01:19:01.580 --> 01:19:01.590 align:start position:0%
less than operator 12 Oh evil less than
 

01:19:01.590 --> 01:19:04.640 align:start position:0%
less than operator 12 Oh evil less than
or<01:19:01.710><c> equal</c><01:19:02.330><c> that's</c><01:19:03.330><c> an</c><01:19:03.449><c> important</c><01:19:03.870><c> part</c><01:19:04.110><c> here</c>

01:19:04.640 --> 01:19:04.650 align:start position:0%
or equal that's an important part here
 

01:19:04.650 --> 01:19:09.290 align:start position:0%
or equal that's an important part here
it's<01:19:04.949><c> the</c><01:19:05.340><c> less</c><01:19:06.270><c> than</c><01:19:06.600><c> or</c><01:19:06.630><c> equal</c><01:19:07.290><c> to</c><01:19:07.790><c> 24</c><01:19:08.790><c> to</c>

01:19:09.290 --> 01:19:09.300 align:start position:0%
it's the less than or equal to 24 to
 

01:19:09.300 --> 01:19:11.510 align:start position:0%
it's the less than or equal to 24 to
make<01:19:09.480><c> this</c><01:19:09.660><c> statement</c><01:19:09.989><c> true</c><01:19:10.199><c> and</c><01:19:10.680><c> if</c><01:19:11.130><c> we</c><01:19:11.250><c> run</c>

01:19:11.510 --> 01:19:11.520 align:start position:0%
make this statement true and if we run
 

01:19:11.520 --> 01:19:14.420 align:start position:0%
make this statement true and if we run
we<01:19:12.150><c> see</c><01:19:12.420><c> smaller</c><01:19:13.170><c> than</c><01:19:13.380><c> or</c><01:19:13.620><c> equal</c><01:19:14.010><c> to</c><01:19:14.160><c> 12</c>

01:19:14.420 --> 01:19:14.430 align:start position:0%
we see smaller than or equal to 12
 

01:19:14.430 --> 01:19:19.690 align:start position:0%
we see smaller than or equal to 12
number<01:19:15.150><c> 10</c><01:19:15.330><c> we</c><01:19:15.449><c> passed</c><01:19:15.690><c> in</c>

01:19:19.690 --> 01:19:19.700 align:start position:0%
 
 

01:19:19.700 --> 01:19:21.980 align:start position:0%
 
sometimes<01:19:20.700><c> you</c><01:19:20.850><c> want</c><01:19:21.000><c> to</c><01:19:21.030><c> check</c><01:19:21.330><c> if</c><01:19:21.600><c> two</c>

01:19:21.980 --> 01:19:21.990 align:start position:0%
sometimes you want to check if two
 

01:19:21.990 --> 01:19:25.070 align:start position:0%
sometimes you want to check if two
things<01:19:22.320><c> are</c><01:19:22.560><c> true</c><01:19:22.590><c> at</c><01:19:23.130><c> the</c><01:19:23.490><c> same</c><01:19:23.760><c> time</c><01:19:24.150><c> for</c>

01:19:25.070 --> 01:19:25.080 align:start position:0%
things are true at the same time for
 

01:19:25.080 --> 01:19:27.680 align:start position:0%
things are true at the same time for
instance<01:19:25.470><c> you</c><01:19:25.950><c> may</c><01:19:26.130><c> want</c><01:19:26.160><c> to</c><01:19:26.370><c> check</c><01:19:26.670><c> if</c><01:19:26.970><c> this</c>

01:19:27.680 --> 01:19:27.690 align:start position:0%
instance you may want to check if this
 

01:19:27.690 --> 01:19:33.380 align:start position:0%
instance you may want to check if this
value<01:19:28.140><c> is</c><01:19:29.150><c> less</c><01:19:30.150><c> than</c><01:19:30.450><c> or</c><01:19:30.720><c> equal</c><01:19:31.590><c> to</c><01:19:32.180><c> 50</c><01:19:33.180><c> and</c>

01:19:33.380 --> 01:19:33.390 align:start position:0%
value is less than or equal to 50 and
 

01:19:33.390 --> 01:19:37.450 align:start position:0%
value is less than or equal to 50 and
you<01:19:33.960><c> also</c><01:19:34.260><c> want</c><01:19:34.680><c> to</c><01:19:34.710><c> check</c><01:19:34.980><c> if</c><01:19:35.160><c> the</c><01:19:35.310><c> value</c><01:19:35.790><c> is</c>

01:19:37.450 --> 01:19:37.460 align:start position:0%
you also want to check if the value is
 

01:19:37.460 --> 01:19:44.450 align:start position:0%
you also want to check if the value is
more<01:19:38.460><c> than</c><01:19:38.520><c> or</c><01:19:39.090><c> equal</c><01:19:39.780><c> to</c><01:19:40.430><c> 25</c><01:19:42.620><c> so</c><01:19:43.620><c> we</c><01:19:43.650><c> here</c><01:19:44.340><c> we</c>

01:19:44.450 --> 01:19:44.460 align:start position:0%
more than or equal to 25 so we here we
 

01:19:44.460 --> 01:19:46.400 align:start position:0%
more than or equal to 25 so we here we
have<01:19:44.550><c> a</c><01:19:44.580><c> nested</c><01:19:45.030><c> if</c><01:19:45.150><c> statement</c><01:19:45.720><c> so</c><01:19:46.170><c> it's</c><01:19:46.290><c> going</c>

01:19:46.400 --> 01:19:46.410 align:start position:0%
have a nested if statement so it's going
 

01:19:46.410 --> 01:19:48.080 align:start position:0%
have a nested if statement so it's going
to<01:19:46.470><c> check</c><01:19:46.800><c> if</c><01:19:46.950><c> it's</c><01:19:47.100><c> less</c><01:19:47.340><c> than</c><01:19:47.520><c> equal</c><01:19:47.700><c> to</c><01:19:47.760><c> 50</c>

01:19:48.080 --> 01:19:48.090 align:start position:0%
to check if it's less than equal to 50
 

01:19:48.090 --> 01:19:49.700 align:start position:0%
to check if it's less than equal to 50
and<01:19:48.330><c> if</c><01:19:48.570><c> it's</c><01:19:48.750><c> more</c><01:19:48.930><c> than</c><01:19:48.960><c> equal</c><01:19:49.230><c> to</c><01:19:49.290><c> 25</c><01:19:49.680><c> then</c>

01:19:49.700 --> 01:19:49.710 align:start position:0%
and if it's more than equal to 25 then
 

01:19:49.710 --> 01:19:52.100 align:start position:0%
and if it's more than equal to 25 then
it's<01:19:50.010><c> going</c><01:19:50.100><c> to</c><01:19:50.160><c> return</c><01:19:50.280><c> yes</c><01:19:50.760><c> but</c><01:19:51.750><c> there's</c><01:19:51.960><c> an</c>

01:19:52.100 --> 01:19:52.110 align:start position:0%
it's going to return yes but there's an
 

01:19:52.110 --> 01:19:54.680 align:start position:0%
it's going to return yes but there's an
easier<01:19:52.590><c> way</c><01:19:52.860><c> to</c><01:19:52.890><c> do</c><01:19:53.370><c> this</c><01:19:53.580><c> so</c><01:19:53.850><c> what</c><01:19:54.450><c> I'm</c><01:19:54.570><c> going</c>

01:19:54.680 --> 01:19:54.690 align:start position:0%
easier way to do this so what I'm going
 

01:19:54.690 --> 01:19:56.870 align:start position:0%
easier way to do this so what I'm going
to<01:19:54.720><c> do</c><01:19:54.840><c> is</c><01:19:54.990><c> copy</c><01:19:55.320><c> this</c><01:19:55.710><c> where</c><01:19:56.010><c> it</c><01:19:56.160><c> says</c><01:19:56.400><c> value</c>

01:19:56.870 --> 01:19:56.880 align:start position:0%
to do is copy this where it says value
 

01:19:56.880 --> 01:19:59.690 align:start position:0%
to do is copy this where it says value
is<01:19:57.000><c> more</c><01:19:57.240><c> than</c><01:19:57.480><c> or</c><01:19:57.570><c> equal</c><01:19:57.900><c> to</c><01:19:58.050><c> 25</c><01:19:58.620><c> I'm</c><01:19:59.160><c> going</c><01:19:59.640><c> to</c>

01:19:59.690 --> 01:19:59.700 align:start position:0%
is more than or equal to 25 I'm going to
 

01:19:59.700 --> 01:20:03.110 align:start position:0%
is more than or equal to 25 I'm going to
delete<01:19:59.940><c> this</c><01:20:00.240><c> nested</c><01:20:00.990><c> if</c><01:20:01.170><c> statement</c><01:20:02.000><c> so</c><01:20:03.000><c> we</c>

01:20:03.110 --> 01:20:03.120 align:start position:0%
delete this nested if statement so we
 

01:20:03.120 --> 01:20:05.930 align:start position:0%
delete this nested if statement so we
don't<01:20:03.330><c> need</c><01:20:03.480><c> that</c><01:20:03.690><c> if</c><01:20:03.870><c> statement</c><01:20:04.440><c> and</c><01:20:04.940><c> I'm</c>

01:20:05.930 --> 01:20:05.940 align:start position:0%
don't need that if statement and I'm
 

01:20:05.940 --> 01:20:09.890 align:start position:0%
don't need that if statement and I'm
going<01:20:06.240><c> to</c><01:20:06.360><c> use</c><01:20:06.720><c> the</c><01:20:07.200><c> and</c><01:20:07.470><c> operator</c><01:20:08.390><c> so</c><01:20:09.390><c> we</c><01:20:09.570><c> have</c>

01:20:09.890 --> 01:20:09.900 align:start position:0%
going to use the and operator so we have
 

01:20:09.900 --> 01:20:13.280 align:start position:0%
going to use the and operator so we have
less<01:20:10.680><c> than</c><01:20:10.890><c> or</c><01:20:10.980><c> equal</c><01:20:11.100><c> to</c><01:20:11.430><c> 50</c><01:20:11.910><c> and</c><01:20:12.120><c> if</c><01:20:12.750><c> I</c><01:20:12.900><c> put</c>

01:20:13.280 --> 01:20:13.290 align:start position:0%
less than or equal to 50 and if I put
 

01:20:13.290 --> 01:20:17.090 align:start position:0%
less than or equal to 50 and if I put
two<01:20:14.100><c> ampersands</c><01:20:14.730><c> like</c><01:20:15.660><c> this</c><01:20:15.960><c> that</c><01:20:16.560><c> means</c><01:20:16.770><c> and</c>

01:20:17.090 --> 01:20:17.100 align:start position:0%
two ampersands like this that means and
 

01:20:17.100 --> 01:20:20.090 align:start position:0%
two ampersands like this that means and
now<01:20:18.090><c> I'm</c><01:20:18.180><c> going</c><01:20:18.330><c> to</c><01:20:18.420><c> put</c><01:20:18.600><c> value</c><01:20:19.140><c> is</c><01:20:19.380><c> more</c><01:20:20.040><c> than</c>

01:20:20.090 --> 01:20:20.100 align:start position:0%
now I'm going to put value is more than
 

01:20:20.100 --> 01:20:23.420 align:start position:0%
now I'm going to put value is more than
or<01:20:20.370><c> equal</c><01:20:20.700><c> to</c><01:20:20.820><c> 25</c><01:20:21.300><c> so</c><01:20:22.050><c> this</c><01:20:22.290><c> says</c><01:20:22.560><c> if</c><01:20:22.740><c> value</c><01:20:23.280><c> is</c>

01:20:23.420 --> 01:20:23.430 align:start position:0%
or equal to 25 so this says if value is
 

01:20:23.430 --> 01:20:27.440 align:start position:0%
or equal to 25 so this says if value is
less<01:20:23.730><c> than</c><01:20:23.760><c> or</c><01:20:23.970><c> equal</c><01:20:24.030><c> to</c><01:20:24.330><c> 50</c><01:20:24.810><c> and</c><01:20:25.880><c> the</c><01:20:26.880><c> value</c>

01:20:27.440 --> 01:20:27.450 align:start position:0%
less than or equal to 50 and the value
 

01:20:27.450 --> 01:20:31.120 align:start position:0%
less than or equal to 50 and the value
is<01:20:27.600><c> also</c><01:20:28.260><c> more</c><01:20:28.890><c> than</c><01:20:28.920><c> or</c><01:20:29.310><c> equal</c><01:20:29.640><c> to</c><01:20:29.760><c> 25</c><01:20:30.360><c> then</c>

01:20:31.120 --> 01:20:31.130 align:start position:0%
is also more than or equal to 25 then
 

01:20:31.130 --> 01:20:34.250 align:start position:0%
is also more than or equal to 25 then
we're<01:20:32.130><c> going</c><01:20:32.250><c> to</c><01:20:32.310><c> return</c><01:20:32.640><c> yes</c><01:20:33.000><c> so</c><01:20:33.450><c> both</c><01:20:33.840><c> this</c>

01:20:34.250 --> 01:20:34.260 align:start position:0%
we're going to return yes so both this
 

01:20:34.260 --> 01:20:36.620 align:start position:0%
we're going to return yes so both this
statement<01:20:34.560><c> and</c><01:20:34.950><c> this</c><01:20:35.670><c> statement</c><01:20:35.730><c> have</c><01:20:36.330><c> to</c><01:20:36.540><c> be</c>

01:20:36.620 --> 01:20:36.630 align:start position:0%
statement and this statement have to be
 

01:20:36.630 --> 01:20:39.110 align:start position:0%
statement and this statement have to be
true<01:20:36.990><c> to</c><01:20:37.560><c> get</c><01:20:37.770><c> into</c><01:20:38.220><c> inside</c><01:20:38.790><c> this</c><01:20:38.880><c> if</c>

01:20:39.110 --> 01:20:39.120 align:start position:0%
true to get into inside this if
 

01:20:39.120 --> 01:20:43.790 align:start position:0%
true to get into inside this if
statement<01:20:39.600><c> here</c>

01:20:43.790 --> 01:20:43.800 align:start position:0%
 
 

01:20:43.800 --> 01:20:46.910 align:start position:0%
 
in<01:20:43.860><c> this</c><01:20:44.820><c> code</c><01:20:45.180><c> here</c><01:20:45.660><c> we're</c><01:20:45.990><c> checking</c><01:20:46.320><c> if</c><01:20:46.680><c> the</c>

01:20:46.910 --> 01:20:46.920 align:start position:0%
in this code here we're checking if the
 

01:20:46.920 --> 01:20:51.920 align:start position:0%
in this code here we're checking if the
value<01:20:47.130><c> is</c><01:20:47.640><c> not</c><01:20:47.900><c> between</c><01:20:48.900><c> 10</c><01:20:49.320><c> and</c><01:20:49.350><c> 20</c><01:20:50.120><c> so</c><01:20:51.120><c> if</c><01:20:51.510><c> the</c>

01:20:51.920 --> 01:20:51.930 align:start position:0%
value is not between 10 and 20 so if the
 

01:20:51.930 --> 01:20:54.980 align:start position:0%
value is not between 10 and 20 so if the
value<01:20:52.080><c> is</c><01:20:52.530><c> less</c><01:20:53.160><c> than</c><01:20:53.220><c> 10</c><01:20:53.760><c> we</c><01:20:54.120><c> return</c><01:20:54.540><c> outside</c>

01:20:54.980 --> 01:20:54.990 align:start position:0%
value is less than 10 we return outside
 

01:20:54.990 --> 01:20:57.920 align:start position:0%
value is less than 10 we return outside
and<01:20:55.290><c> if</c><01:20:55.680><c> the</c><01:20:55.830><c> value</c><01:20:56.190><c> is</c><01:20:56.370><c> more</c><01:20:56.820><c> than</c><01:20:57.030><c> 20</c><01:20:57.570><c> we</c>

01:20:57.920 --> 01:20:57.930 align:start position:0%
and if the value is more than 20 we
 

01:20:57.930 --> 01:21:01.040 align:start position:0%
and if the value is more than 20 we
return<01:20:58.350><c> outside</c><01:20:58.830><c> there</c><01:20:59.820><c> is</c><01:21:00.150><c> an</c><01:21:00.390><c> easier</c><01:21:00.840><c> way</c><01:21:00.900><c> to</c>

01:21:01.040 --> 01:21:01.050 align:start position:0%
return outside there is an easier way to
 

01:21:01.050 --> 01:21:05.090 align:start position:0%
return outside there is an easier way to
do<01:21:01.380><c> this</c><01:21:01.410><c> with</c><01:21:01.980><c> the</c><01:21:02.220><c> logical</c><01:21:02.850><c> or</c><01:21:03.120><c> operator</c><01:21:04.100><c> so</c>

01:21:05.090 --> 01:21:05.100 align:start position:0%
do this with the logical or operator so
 

01:21:05.100 --> 01:21:07.190 align:start position:0%
do this with the logical or operator so
I'm<01:21:05.400><c> just</c><01:21:05.790><c> going</c><01:21:05.970><c> to</c><01:21:06.060><c> delete</c><01:21:06.240><c> this</c><01:21:06.660><c> whole</c><01:21:06.870><c> if</c>

01:21:07.190 --> 01:21:07.200 align:start position:0%
I'm just going to delete this whole if
 

01:21:07.200 --> 01:21:10.100 align:start position:0%
I'm just going to delete this whole if
statement<01:21:07.710><c> here</c><01:21:07.950><c> and</c><01:21:08.100><c> then</c><01:21:09.030><c> I</c><01:21:09.210><c> can</c><01:21:09.270><c> add</c><01:21:09.690><c> an</c><01:21:09.870><c> or</c>

01:21:10.100 --> 01:21:10.110 align:start position:0%
statement here and then I can add an or
 

01:21:10.110 --> 01:21:15.830 align:start position:0%
statement here and then I can add an or
statement<01:21:10.760><c> which</c><01:21:11.760><c> is</c><01:21:12.000><c> just</c><01:21:12.390><c> 2</c><01:21:13.730><c> pipes</c><01:21:14.730><c> so</c><01:21:15.720><c> I'm</c>

01:21:15.830 --> 01:21:15.840 align:start position:0%
statement which is just 2 pipes so I'm
 

01:21:15.840 --> 01:21:19.550 align:start position:0%
statement which is just 2 pipes so I'm
going<01:21:15.960><c> to</c><01:21:15.990><c> put</c><01:21:16.170><c> Val</c><01:21:16.500><c> is</c><01:21:17.180><c> less</c><01:21:18.180><c> than</c><01:21:18.540><c> or</c><01:21:19.140><c> it</c><01:21:19.290><c> more</c>

01:21:19.550 --> 01:21:19.560 align:start position:0%
going to put Val is less than or it more
 

01:21:19.560 --> 01:21:23.180 align:start position:0%
going to put Val is less than or it more
than<01:21:19.820><c> 20</c><01:21:20.820><c> here</c><01:21:21.180><c> so</c><01:21:21.900><c> now</c><01:21:22.140><c> we're</c><01:21:22.560><c> checking</c><01:21:22.890><c> if</c>

01:21:23.180 --> 01:21:23.190 align:start position:0%
than 20 here so now we're checking if
 

01:21:23.190 --> 01:21:27.260 align:start position:0%
than 20 here so now we're checking if
the<01:21:23.520><c> value</c><01:21:23.670><c> is</c><01:21:24.180><c> less</c><01:21:24.660><c> than</c><01:21:24.690><c> 10</c><01:21:25.320><c> or</c><01:21:25.760><c> if</c><01:21:26.760><c> the</c>

01:21:27.260 --> 01:21:27.270 align:start position:0%
the value is less than 10 or if the
 

01:21:27.270 --> 01:21:30.830 align:start position:0%
the value is less than 10 or if the
value<01:21:27.720><c> is</c><01:21:27.930><c> more</c><01:21:28.470><c> than</c><01:21:28.680><c> 20</c><01:21:29.130><c> either</c><01:21:29.850><c> way</c><01:21:30.330><c> we're</c>

01:21:30.830 --> 01:21:30.840 align:start position:0%
value is more than 20 either way we're
 

01:21:30.840 --> 01:21:33.530 align:start position:0%
value is more than 20 either way we're
going<01:21:31.020><c> to</c><01:21:31.140><c> return</c><01:21:31.560><c> outside</c><01:21:32.310><c> and</c><01:21:32.670><c> if</c><01:21:33.420><c> that's</c>

01:21:33.530 --> 01:21:33.540 align:start position:0%
going to return outside and if that's
 

01:21:33.540 --> 01:21:39.429 align:start position:0%
going to return outside and if that's
not<01:21:33.810><c> true</c><01:21:34.170><c> we'll</c><01:21:34.560><c> return</c><01:21:34.770><c> inside</c>

01:21:39.429 --> 01:21:39.439 align:start position:0%
 
 

01:21:39.439 --> 01:21:42.759 align:start position:0%
 
when<01:21:40.099><c> an</c><01:21:40.189><c> if</c><01:21:40.429><c> steam</c><01:21:40.760><c> is</c><01:21:41.090><c> true</c><01:21:41.510><c> normally</c><01:21:42.469><c> the</c>

01:21:42.759 --> 01:21:42.769 align:start position:0%
when an if steam is true normally the
 

01:21:42.769 --> 01:21:44.469 align:start position:0%
when an if steam is true normally the
block<01:21:43.130><c> of</c><01:21:43.340><c> code</c><01:21:43.369><c> right</c><01:21:43.909><c> after</c><01:21:44.269><c> the</c><01:21:44.360><c> if</c>

01:21:44.469 --> 01:21:44.479 align:start position:0%
block of code right after the if
 

01:21:44.479 --> 01:21:47.319 align:start position:0%
block of code right after the if
statement<01:21:45.019><c> will</c><01:21:45.229><c> be</c><01:21:45.619><c> evaluated</c><01:21:46.369><c> and</c><01:21:46.579><c> if</c><01:21:47.150><c> it's</c>

01:21:47.319 --> 01:21:47.329 align:start position:0%
statement will be evaluated and if it's
 

01:21:47.329 --> 01:21:50.589 align:start position:0%
statement will be evaluated and if it's
not<01:21:47.539><c> true</c><01:21:47.929><c> nothing</c><01:21:48.709><c> happens</c><01:21:49.130><c> but</c><01:21:50.119><c> with</c><01:21:50.389><c> an</c>

01:21:50.589 --> 01:21:50.599 align:start position:0%
not true nothing happens but with an
 

01:21:50.599 --> 01:21:53.080 align:start position:0%
not true nothing happens but with an
else<01:21:50.869><c> statement</c><01:21:51.110><c> an</c><01:21:51.860><c> alternate</c><01:21:52.669><c> block</c><01:21:52.880><c> of</c>

01:21:53.080 --> 01:21:53.090 align:start position:0%
else statement an alternate block of
 

01:21:53.090 --> 01:21:55.299 align:start position:0%
else statement an alternate block of
code<01:21:53.389><c> can</c><01:21:53.780><c> be</c><01:21:53.809><c> executed</c><01:21:53.900><c> when</c><01:21:54.619><c> it's</c><01:21:54.769><c> not</c><01:21:54.949><c> true</c>

01:21:55.299 --> 01:21:55.309 align:start position:0%
code can be executed when it's not true
 

01:21:55.309 --> 01:21:58.209 align:start position:0%
code can be executed when it's not true
so<01:21:55.969><c> this</c><01:21:56.119><c> is</c><01:21:56.300><c> a</c><01:21:56.329><c> perfect</c><01:21:56.869><c> use</c><01:21:57.079><c> case</c><01:21:57.169><c> if</c><01:21:57.530><c> value</c>

01:21:58.209 --> 01:21:58.219 align:start position:0%
so this is a perfect use case if value
 

01:21:58.219 --> 01:22:00.159 align:start position:0%
so this is a perfect use case if value
is<01:21:58.340><c> more</c><01:21:58.550><c> than</c><01:21:58.610><c> five</c><01:21:58.999><c> the</c><01:21:59.479><c> result</c><01:21:59.809><c> is</c><01:21:59.929><c> bigger</c>

01:22:00.159 --> 01:22:00.169 align:start position:0%
is more than five the result is bigger
 

01:22:00.169 --> 01:22:03.129 align:start position:0%
is more than five the result is bigger
than<01:22:00.349><c> five</c><01:22:00.619><c> if</c><01:22:01.070><c> there</c><01:22:01.969><c> is</c><01:22:02.150><c> if</c><01:22:02.479><c> the</c><01:22:02.659><c> value</c><01:22:03.019><c> is</c>

01:22:03.129 --> 01:22:03.139 align:start position:0%
than five if there is if the value is
 

01:22:03.139 --> 01:22:04.810 align:start position:0%
than five if there is if the value is
less<01:22:03.169><c> than</c><01:22:03.499><c> or</c><01:22:03.590><c> equal</c><01:22:03.709><c> to</c><01:22:03.979><c> five</c><01:22:04.159><c> the</c><01:22:04.340><c> result</c><01:22:04.669><c> is</c>

01:22:04.810 --> 01:22:04.820 align:start position:0%
less than or equal to five the result is
 

01:22:04.820 --> 01:22:07.060 align:start position:0%
less than or equal to five the result is
five<01:22:05.090><c> or</c><01:22:05.119><c> smaller</c><01:22:05.539><c> we</c><01:22:06.320><c> can</c><01:22:06.349><c> do</c><01:22:06.619><c> this</c><01:22:06.800><c> with</c><01:22:06.949><c> an</c>

01:22:07.060 --> 01:22:07.070 align:start position:0%
five or smaller we can do this with an
 

01:22:07.070 --> 01:22:08.919 align:start position:0%
five or smaller we can do this with an
else<01:22:07.340><c> statement</c><01:22:07.459><c> so</c><01:22:08.209><c> I'm</c><01:22:08.329><c> just</c><01:22:08.479><c> going</c><01:22:08.599><c> to</c><01:22:08.659><c> type</c>

01:22:08.919 --> 01:22:08.929 align:start position:0%
else statement so I'm just going to type
 

01:22:08.929 --> 01:22:12.909 align:start position:0%
else statement so I'm just going to type
in<01:22:09.110><c> else</c><01:22:09.499><c> here</c><01:22:09.949><c> and</c><01:22:10.479><c> then</c><01:22:11.479><c> we</c><01:22:12.079><c> can</c><01:22:12.260><c> just</c><01:22:12.530><c> delete</c>

01:22:12.909 --> 01:22:12.919 align:start position:0%
in else here and then we can just delete
 

01:22:12.919 --> 01:22:15.699 align:start position:0%
in else here and then we can just delete
this<01:22:13.099><c> whole</c><01:22:13.369><c> if</c><01:22:13.699><c> statement</c><01:22:14.360><c> just</c><01:22:15.260><c> like</c><01:22:15.439><c> that</c>

01:22:15.699 --> 01:22:15.709 align:start position:0%
this whole if statement just like that
 

01:22:15.709 --> 01:22:18.429 align:start position:0%
this whole if statement just like that
and<01:22:15.979><c> now</c><01:22:16.909><c> we</c><01:22:16.969><c> have</c><01:22:17.150><c> if</c><01:22:17.570><c> the</c><01:22:18.019><c> value</c><01:22:18.349><c> is</c><01:22:18.409><c> less</c>

01:22:18.429 --> 01:22:18.439 align:start position:0%
and now we have if the value is less
 

01:22:18.439 --> 01:22:20.140 align:start position:0%
and now we have if the value is less
than<01:22:18.619><c> five</c><01:22:19.010><c> the</c><01:22:19.429><c> results</c><01:22:19.789><c> will</c><01:22:19.880><c> be</c><01:22:19.909><c> bigger</c>

01:22:20.140 --> 01:22:20.150 align:start position:0%
than five the results will be bigger
 

01:22:20.150 --> 01:22:22.779 align:start position:0%
than five the results will be bigger
than<01:22:20.300><c> five</c><01:22:20.510><c> else</c><01:22:21.079><c> if</c><01:22:21.559><c> it's</c><01:22:22.010><c> which</c><01:22:22.249><c> is</c><01:22:22.429><c> if</c><01:22:22.610><c> it's</c>

01:22:22.779 --> 01:22:22.789 align:start position:0%
than five else if it's which is if it's
 

01:22:22.789 --> 01:22:26.049 align:start position:0%
than five else if it's which is if it's
not<01:22:23.030><c> more</c><01:22:23.780><c> than</c><01:22:23.929><c> five</c><01:22:24.199><c> we'll</c><01:22:24.860><c> return</c><01:22:25.130><c> five</c><01:22:25.729><c> or</c>

01:22:26.049 --> 01:22:26.059 align:start position:0%
not more than five we'll return five or
 

01:22:26.059 --> 01:22:30.310 align:start position:0%
not more than five we'll return five or
smaller

01:22:30.310 --> 01:22:30.320 align:start position:0%
 
 

01:22:30.320 --> 01:22:32.560 align:start position:0%
 
if<01:22:30.380><c> you</c><01:22:31.040><c> have</c><01:22:31.160><c> multiple</c><01:22:31.640><c> conditions</c><01:22:32.390><c> that</c>

01:22:32.560 --> 01:22:32.570 align:start position:0%
if you have multiple conditions that
 

01:22:32.570 --> 01:22:34.810 align:start position:0%
if you have multiple conditions that
need<01:22:32.750><c> to</c><01:22:32.870><c> be</c><01:22:32.900><c> addressed</c><01:22:33.260><c> you</c><01:22:33.710><c> can</c><01:22:33.920><c> use</c><01:22:34.100><c> else</c><01:22:34.430><c> if</c>

01:22:34.810 --> 01:22:34.820 align:start position:0%
need to be addressed you can use else if
 

01:22:34.820 --> 01:22:37.180 align:start position:0%
need to be addressed you can use else if
statements<01:22:35.810><c> it's</c><01:22:36.290><c> a</c><01:22:36.380><c> way</c><01:22:36.530><c> of</c><01:22:36.560><c> chaining</c><01:22:37.070><c> if</c>

01:22:37.180 --> 01:22:37.190 align:start position:0%
statements it's a way of chaining if
 

01:22:37.190 --> 01:22:39.700 align:start position:0%
statements it's a way of chaining if
statements<01:22:37.850><c> together</c><01:22:38.000><c> in</c><01:22:38.540><c> this</c><01:22:39.050><c> example</c><01:22:39.470><c> we</c>

01:22:39.700 --> 01:22:39.710 align:start position:0%
statements together in this example we
 

01:22:39.710 --> 01:22:42.280 align:start position:0%
statements together in this example we
have<01:22:39.740><c> three</c><01:22:39.860><c> conditions</c><01:22:40.370><c> if</c><01:22:41.030><c> value</c><01:22:41.930><c> is</c><01:22:41.960><c> more</c>

01:22:42.280 --> 01:22:42.290 align:start position:0%
have three conditions if value is more
 

01:22:42.290 --> 01:22:44.200 align:start position:0%
have three conditions if value is more
than<01:22:42.350><c> 10</c><01:22:42.770><c> we're</c><01:22:43.130><c> gonna</c><01:22:43.250><c> return</c><01:22:43.490><c> greater</c><01:22:44.000><c> than</c>

01:22:44.200 --> 01:22:44.210 align:start position:0%
than 10 we're gonna return greater than
 

01:22:44.210 --> 01:22:46.900 align:start position:0%
than 10 we're gonna return greater than
10<01:22:44.450><c> if</c><01:22:44.660><c> it's</c><01:22:45.170><c> less</c><01:22:45.410><c> than</c><01:22:45.560><c> 5</c><01:22:45.830><c> returns</c><01:22:46.640><c> smaller</c>

01:22:46.900 --> 01:22:46.910 align:start position:0%
10 if it's less than 5 returns smaller
 

01:22:46.910 --> 01:22:50.260 align:start position:0%
10 if it's less than 5 returns smaller
than<01:22:47.150><c> 5</c><01:22:47.390><c> or</c><01:22:47.660><c> else</c><01:22:48.440><c> we're</c><01:22:49.160><c> gonna</c><01:22:49.280><c> return</c><01:22:49.700><c> 5</c><01:22:50.030><c> and</c>

01:22:50.260 --> 01:22:50.270 align:start position:0%
than 5 or else we're gonna return 5 and
 

01:22:50.270 --> 01:22:53.020 align:start position:0%
than 5 or else we're gonna return 5 and
up<01:22:50.360><c> so</c><01:22:51.020><c> this</c><01:22:51.170><c> is</c><01:22:51.350><c> a</c><01:22:51.380><c> perfect</c><01:22:51.920><c> use</c><01:22:52.220><c> case</c><01:22:52.370><c> for</c><01:22:52.910><c> an</c>

01:22:53.020 --> 01:22:53.030 align:start position:0%
up so this is a perfect use case for an
 

01:22:53.030 --> 01:22:55.720 align:start position:0%
up so this is a perfect use case for an
else<01:22:53.240><c> if</c><01:22:53.540><c> statement</c><01:22:54.290><c> so</c><01:22:54.920><c> this</c><01:22:55.220><c> is</c><01:22:55.340><c> how</c><01:22:55.400><c> we</c><01:22:55.460><c> do</c>

01:22:55.720 --> 01:22:55.730 align:start position:0%
else if statement so this is how we do
 

01:22:55.730 --> 01:22:59.110 align:start position:0%
else if statement so this is how we do
it<01:22:55.760><c> well</c><01:22:56.240><c> do</c><01:22:56.660><c> else</c><01:22:56.990><c> and</c><01:22:57.550><c> then</c><01:22:58.550><c> just</c><01:22:58.880><c> we're</c>

01:22:59.110 --> 01:22:59.120 align:start position:0%
it well do else and then just we're
 

01:22:59.120 --> 01:23:00.940 align:start position:0%
it well do else and then just we're
going<01:22:59.330><c> to</c><01:22:59.450><c> add</c><01:22:59.600><c> the</c><01:22:59.810><c> if</c><01:22:59.960><c> statement</c><01:23:00.530><c> at</c><01:23:00.620><c> the</c><01:23:00.800><c> end</c>

01:23:00.940 --> 01:23:00.950 align:start position:0%
going to add the if statement at the end
 

01:23:00.950 --> 01:23:02.530 align:start position:0%
going to add the if statement at the end
of<01:23:01.160><c> the</c><01:23:01.220><c> else</c><01:23:01.400><c> I'm</c><01:23:01.610><c> just</c><01:23:01.640><c> gonna</c><01:23:01.910><c> delete</c><01:23:02.270><c> all</c>

01:23:02.530 --> 01:23:02.540 align:start position:0%
of the else I'm just gonna delete all
 

01:23:02.540 --> 01:23:06.670 align:start position:0%
of the else I'm just gonna delete all
this<01:23:02.750><c> stuff</c><01:23:03.020><c> so</c><01:23:03.500><c> else</c><01:23:03.920><c> if</c><01:23:05.110><c> value</c><01:23:06.110><c> is</c><01:23:06.140><c> less</c><01:23:06.470><c> than</c>

01:23:06.670 --> 01:23:06.680 align:start position:0%
this stuff so else if value is less than
 

01:23:06.680 --> 01:23:09.340 align:start position:0%
this stuff so else if value is less than
5<01:23:06.950><c> and</c><01:23:07.330><c> then</c><01:23:08.330><c> we're</c><01:23:08.480><c> gonna</c><01:23:08.570><c> have</c><01:23:08.810><c> one</c><01:23:09.080><c> final</c>

01:23:09.340 --> 01:23:09.350 align:start position:0%
5 and then we're gonna have one final
 

01:23:09.350 --> 01:23:13.090 align:start position:0%
5 and then we're gonna have one final
else<01:23:09.650><c> statement</c><01:23:10.160><c> else</c><01:23:10.730><c> and</c><01:23:11.530><c> I'm</c><01:23:12.530><c> going</c><01:23:12.740><c> to</c><01:23:12.770><c> put</c>

01:23:13.090 --> 01:23:13.100 align:start position:0%
else statement else and I'm going to put
 

01:23:13.100 --> 01:23:15.760 align:start position:0%
else statement else and I'm going to put
this<01:23:13.430><c> statement</c><01:23:13.820><c> here</c><01:23:14.360><c> this</c><01:23:14.840><c> final</c><01:23:15.350><c> return</c>

01:23:15.760 --> 01:23:15.770 align:start position:0%
this statement here this final return
 

01:23:15.770 --> 01:23:18.910 align:start position:0%
this statement here this final return
just<01:23:16.610><c> gonna</c><01:23:16.820><c> cut</c><01:23:17.150><c> that</c><01:23:17.360><c> and</c><01:23:17.690><c> then</c><01:23:18.290><c> paste</c><01:23:18.620><c> it</c>

01:23:18.910 --> 01:23:18.920 align:start position:0%
just gonna cut that and then paste it
 

01:23:18.920 --> 01:23:23.800 align:start position:0%
just gonna cut that and then paste it
right<01:23:18.950><c> in</c><01:23:19.250><c> there</c><01:23:19.520><c> so</c><01:23:20.420><c> now</c><01:23:21.940><c> we've</c><01:23:22.940><c> instead</c><01:23:23.720><c> of</c>

01:23:23.800 --> 01:23:23.810 align:start position:0%
right in there so now we've instead of
 

01:23:23.810 --> 01:23:25.750 align:start position:0%
right in there so now we've instead of
using<01:23:24.110><c> multiple</c><01:23:24.380><c> if</c><01:23:24.860><c> statements</c><01:23:25.370><c> we</c><01:23:25.490><c> have</c><01:23:25.670><c> the</c>

01:23:25.750 --> 01:23:25.760 align:start position:0%
using multiple if statements we have the
 

01:23:25.760 --> 01:23:28.240 align:start position:0%
using multiple if statements we have the
if<01:23:25.910><c> and</c><01:23:26.270><c> only</c><01:23:26.480><c> the</c><01:23:26.600><c> else</c><01:23:26.780><c> if</c><01:23:27.140><c> and</c><01:23:27.350><c> then</c><01:23:27.890><c> we</c><01:23:28.040><c> have</c>

01:23:28.240 --> 01:23:28.250 align:start position:0%
if and only the else if and then we have
 

01:23:28.250 --> 01:23:32.770 align:start position:0%
if and only the else if and then we have
the<01:23:28.460><c> else</c>

01:23:32.770 --> 01:23:32.780 align:start position:0%
 
 

01:23:32.780 --> 01:23:35.260 align:start position:0%
 
when<01:23:33.320><c> you're</c><01:23:33.500><c> using</c><01:23:33.770><c> else</c><01:23:34.130><c> if</c><01:23:34.400><c> statements</c>

01:23:35.260 --> 01:23:35.270 align:start position:0%
when you're using else if statements
 

01:23:35.270 --> 01:23:38.140 align:start position:0%
when you're using else if statements
order<01:23:36.050><c> is</c><01:23:36.200><c> very</c><01:23:36.530><c> important</c><01:23:37.190><c> let's</c><01:23:37.790><c> look</c><01:23:38.030><c> at</c>

01:23:38.140 --> 01:23:38.150 align:start position:0%
order is very important let's look at
 

01:23:38.150 --> 01:23:40.540 align:start position:0%
order is very important let's look at
this<01:23:38.270><c> example</c><01:23:38.480><c> here</c><01:23:39.230><c> in</c><01:23:39.350><c> this</c><01:23:39.800><c> function</c><01:23:40.280><c> first</c>

01:23:40.540 --> 01:23:40.550 align:start position:0%
this example here in this function first
 

01:23:40.550 --> 01:23:42.910 align:start position:0%
this example here in this function first
we<01:23:40.790><c> check</c><01:23:41.060><c> if</c><01:23:41.300><c> the</c><01:23:41.510><c> value</c><01:23:41.720><c> is</c><01:23:42.080><c> less</c><01:23:42.350><c> than</c><01:23:42.380><c> 10</c>

01:23:42.910 --> 01:23:42.920 align:start position:0%
we check if the value is less than 10
 

01:23:42.920 --> 01:23:46.930 align:start position:0%
we check if the value is less than 10
and<01:23:43.190><c> return</c><01:23:43.700><c> less</c><01:23:43.910><c> than</c><01:23:44.090><c> 10</c><01:23:44.360><c> then</c><01:23:45.170><c> else</c><01:23:46.070><c> if</c><01:23:46.370><c> we</c>

01:23:46.930 --> 01:23:46.940 align:start position:0%
and return less than 10 then else if we
 

01:23:46.940 --> 01:23:49.150 align:start position:0%
and return less than 10 then else if we
check<01:23:47.240><c> if</c><01:23:47.420><c> the</c><01:23:47.450><c> value</c><01:23:47.930><c> is</c><01:23:48.050><c> less</c><01:23:48.080><c> than</c><01:23:48.470><c> 5</c><01:23:48.740><c> and</c>

01:23:49.150 --> 01:23:49.160 align:start position:0%
check if the value is less than 5 and
 

01:23:49.160 --> 01:23:54.130 align:start position:0%
check if the value is less than 5 and
return<01:23:49.970><c> less</c><01:23:50.570><c> than</c><01:23:50.840><c> 5</c><01:23:51.580><c> well</c><01:23:52.580><c> if</c><01:23:52.820><c> we</c><01:23:53.510><c> look</c><01:23:53.990><c> at</c>

01:23:54.130 --> 01:23:54.140 align:start position:0%
return less than 5 well if we look at
 

01:23:54.140 --> 01:23:56.050 align:start position:0%
return less than 5 well if we look at
this<01:23:54.260><c> example</c><01:23:54.650><c> when</c><01:23:55.040><c> we</c><01:23:55.130><c> pass</c><01:23:55.430><c> in</c><01:23:55.640><c> the</c><01:23:55.790><c> number</c>

01:23:56.050 --> 01:23:56.060 align:start position:0%
this example when we pass in the number
 

01:23:56.060 --> 01:23:58.780 align:start position:0%
this example when we pass in the number
7<01:23:56.570><c> if</c><01:23:56.720><c> I</c><01:23:56.810><c> run</c><01:23:57.050><c> this</c><01:23:57.290><c> you'll</c><01:23:57.980><c> see</c><01:23:58.070><c> it's</c><01:23:58.490><c> going</c><01:23:58.670><c> to</c>

01:23:58.780 --> 01:23:58.790 align:start position:0%
7 if I run this you'll see it's going to
 

01:23:58.790 --> 01:24:01.660 align:start position:0%
7 if I run this you'll see it's going to
say<01:23:59.120><c> less</c><01:23:59.780><c> than</c><01:23:59.810><c> 10</c><01:24:00.470><c> which</c><01:24:00.950><c> is</c><01:24:01.010><c> what</c><01:24:01.280><c> we</c><01:24:01.400><c> want</c>

01:24:01.660 --> 01:24:01.670 align:start position:0%
say less than 10 which is what we want
 

01:24:01.670 --> 01:24:07.360 align:start position:0%
say less than 10 which is what we want
however<01:24:02.450><c> if</c><01:24:02.720><c> we</c><01:24:03.500><c> put</c><01:24:03.890><c> 3</c><01:24:05.860><c> it's</c><01:24:06.860><c> still</c><01:24:07.160><c> just</c>

01:24:07.360 --> 01:24:07.370 align:start position:0%
however if we put 3 it's still just
 

01:24:07.370 --> 01:24:10.690 align:start position:0%
however if we put 3 it's still just
gonna<01:24:07.580><c> say</c><01:24:07.880><c> less</c><01:24:08.270><c> than</c><01:24:08.570><c> 10</c><01:24:09.340><c> really</c><01:24:10.340><c> we</c><01:24:10.460><c> want</c>

01:24:10.690 --> 01:24:10.700 align:start position:0%
gonna say less than 10 really we want
 

01:24:10.700 --> 01:24:13.480 align:start position:0%
gonna say less than 10 really we want
this<01:24:10.820><c> to</c><01:24:11.000><c> say</c><01:24:11.180><c> less</c><01:24:11.480><c> than</c><01:24:11.510><c> 5</c><01:24:12.130><c> because</c><01:24:13.130><c> it</c><01:24:13.340><c> is</c>

01:24:13.480 --> 01:24:13.490 align:start position:0%
this to say less than 5 because it is
 

01:24:13.490 --> 01:24:15.310 align:start position:0%
this to say less than 5 because it is
actually<01:24:13.730><c> less</c><01:24:14.390><c> than</c><01:24:14.450><c> 5</c>

01:24:15.310 --> 01:24:15.320 align:start position:0%
actually less than 5
 

01:24:15.320 --> 01:24:17.770 align:start position:0%
actually less than 5
however<01:24:16.010><c> the</c><01:24:16.220><c> this</c><01:24:16.670><c> is</c><01:24:16.820><c> in</c><01:24:16.970><c> the</c><01:24:17.120><c> wrong</c><01:24:17.330><c> order</c>

01:24:17.770 --> 01:24:17.780 align:start position:0%
however the this is in the wrong order
 

01:24:17.780 --> 01:24:21.190 align:start position:0%
however the this is in the wrong order
so<01:24:18.770><c> what</c><01:24:19.340><c> we</c><01:24:19.460><c> need</c><01:24:19.610><c> to</c><01:24:19.730><c> do</c><01:24:20.000><c> is</c><01:24:20.240><c> change</c><01:24:20.930><c> the</c>

01:24:21.190 --> 01:24:21.200 align:start position:0%
so what we need to do is change the
 

01:24:21.200 --> 01:24:24.790 align:start position:0%
so what we need to do is change the
order<01:24:21.500><c> so</c><01:24:21.680><c> this</c><01:24:22.160><c> should</c><01:24:22.370><c> be</c><01:24:22.400><c> 5</c><01:24:23.470><c> this</c><01:24:24.470><c> should</c><01:24:24.680><c> be</c>

01:24:24.790 --> 01:24:24.800 align:start position:0%
order so this should be 5 this should be
 

01:24:24.800 --> 01:24:29.170 align:start position:0%
order so this should be 5 this should be
5<01:24:25.100><c> and</c><01:24:25.460><c> this</c><01:24:26.120><c> should</c><01:24:26.360><c> be</c><01:24:26.510><c> 10</c><01:24:27.140><c> and</c><01:24:28.030><c> this</c><01:24:29.030><c> should</c>

01:24:29.170 --> 01:24:29.180 align:start position:0%
5 and this should be 10 and this should
 

01:24:29.180 --> 01:24:32.890 align:start position:0%
5 and this should be 10 and this should
be<01:24:29.270><c> 10</c><01:24:29.570><c> so</c><01:24:30.260><c> once</c><01:24:31.070><c> the</c><01:24:31.370><c> first</c><01:24:31.790><c> condition</c><01:24:32.510><c> is</c><01:24:32.600><c> met</c>

01:24:32.890 --> 01:24:32.900 align:start position:0%
be 10 so once the first condition is met
 

01:24:32.900 --> 01:24:34.930 align:start position:0%
be 10 so once the first condition is met
it<01:24:33.110><c> doesn't</c><01:24:33.410><c> even</c><01:24:33.470><c> check</c><01:24:33.950><c> for</c><01:24:34.340><c> the</c><01:24:34.550><c> rest</c><01:24:34.760><c> of</c>

01:24:34.930 --> 01:24:34.940 align:start position:0%
it doesn't even check for the rest of
 

01:24:34.940 --> 01:24:37.000 align:start position:0%
it doesn't even check for the rest of
the<01:24:35.030><c> conditions</c><01:24:35.630><c> so</c><01:24:36.470><c> that's</c><01:24:36.680><c> why</c><01:24:36.860><c> it's</c>

01:24:37.000 --> 01:24:37.010 align:start position:0%
the conditions so that's why it's
 

01:24:37.010 --> 01:24:39.850 align:start position:0%
the conditions so that's why it's
important<01:24:37.580><c> to</c><01:24:37.640><c> think</c><01:24:38.120><c> about</c><01:24:38.480><c> the</c><01:24:38.870><c> order</c><01:24:39.080><c> so</c><01:24:39.770><c> if</c>

01:24:39.850 --> 01:24:39.860 align:start position:0%
important to think about the order so if
 

01:24:39.860 --> 01:24:43.360 align:start position:0%
important to think about the order so if
we<01:24:40.010><c> run</c><01:24:40.250><c> this</c><01:24:40.400><c> now</c><01:24:40.780><c> yep</c><01:24:41.810><c> less</c><01:24:42.140><c> than</c><01:24:42.380><c> 5</c><01:24:42.590><c> that's</c>

01:24:43.360 --> 01:24:43.370 align:start position:0%
we run this now yep less than 5 that's
 

01:24:43.370 --> 01:24:47.820 align:start position:0%
we run this now yep less than 5 that's
what<01:24:43.580><c> we</c><01:24:43.670><c> want</c>

01:24:47.820 --> 01:24:47.830 align:start position:0%
 
 

01:24:47.830 --> 01:24:51.210 align:start position:0%
 
you<01:24:48.400><c> can</c><01:24:48.580><c> also</c><01:24:48.820><c> chain</c><01:24:49.450><c> if</c><01:24:49.930><c> and</c><01:24:50.620><c> else</c><01:24:50.890><c> if</c>

01:24:51.210 --> 01:24:51.220 align:start position:0%
you can also chain if and else if
 

01:24:51.220 --> 01:24:53.970 align:start position:0%
you can also chain if and else if
statements<01:24:51.940><c> so</c><01:24:52.390><c> I'm</c><01:24:52.570><c> going</c><01:24:52.900><c> to</c><01:24:53.110><c> complete</c><01:24:53.800><c> the</c>

01:24:53.970 --> 01:24:53.980 align:start position:0%
statements so I'm going to complete the
 

01:24:53.980 --> 01:24:56.190 align:start position:0%
statements so I'm going to complete the
following<01:24:54.310><c> challenge</c><01:24:54.820><c> here</c><01:24:55.210><c> right</c><01:24:55.750><c> chained</c>

01:24:56.190 --> 01:24:56.200 align:start position:0%
following challenge here right chained
 

01:24:56.200 --> 01:24:58.710 align:start position:0%
following challenge here right chained
if<01:24:56.470><c> /</c><01:24:56.920><c> else</c><01:24:57.250><c> if</c><01:24:57.580><c> statements</c><01:24:58.150><c> to</c><01:24:58.240><c> fulfill</c><01:24:58.600><c> the</c>

01:24:58.710 --> 01:24:58.720 align:start position:0%
if / else if statements to fulfill the
 

01:24:58.720 --> 01:25:01.020 align:start position:0%
if / else if statements to fulfill the
following<01:24:59.080><c> conditions</c><01:24:59.590><c> so</c><01:25:00.340><c> we</c><01:25:00.670><c> have</c><01:25:00.850><c> these</c>

01:25:01.020 --> 01:25:01.030 align:start position:0%
following conditions so we have these
 

01:25:01.030 --> 01:25:03.630 align:start position:0%
following conditions so we have these
conditions<01:25:01.690><c> where</c><01:25:02.050><c> if</c><01:25:02.560><c> the</c><01:25:02.950><c> number</c><01:25:03.250><c> is</c><01:25:03.370><c> less</c>

01:25:03.630 --> 01:25:03.640 align:start position:0%
conditions where if the number is less
 

01:25:03.640 --> 01:25:05.820 align:start position:0%
conditions where if the number is less
than<01:25:03.670><c> five</c><01:25:04.060><c> we're</c><01:25:04.540><c> gonna</c><01:25:04.690><c> return</c><01:25:04.900><c> tiny</c><01:25:05.500><c> if</c>

01:25:05.820 --> 01:25:05.830 align:start position:0%
than five we're gonna return tiny if
 

01:25:05.830 --> 01:25:08.790 align:start position:0%
than five we're gonna return tiny if
it's<01:25:06.280><c> less</c><01:25:06.490><c> than</c><01:25:06.520><c> ten</c><01:25:06.970><c> returns</c><01:25:07.390><c> small</c><01:25:07.690><c> and</c><01:25:07.990><c> so</c>

01:25:08.790 --> 01:25:08.800 align:start position:0%
it's less than ten returns small and so
 

01:25:08.800 --> 01:25:10.830 align:start position:0%
it's less than ten returns small and so
on<01:25:09.040><c> so</c><01:25:09.670><c> what</c><01:25:09.820><c> I'm</c><01:25:09.910><c> gonna</c><01:25:10.000><c> do</c><01:25:10.240><c> is</c><01:25:10.390><c> actually</c><01:25:10.510><c> just</c>

01:25:10.830 --> 01:25:10.840 align:start position:0%
on so what I'm gonna do is actually just
 

01:25:10.840 --> 01:25:13.680 align:start position:0%
on so what I'm gonna do is actually just
copy<01:25:11.110><c> this</c><01:25:11.530><c> right</c><01:25:11.770><c> here</c><01:25:12.100><c> because</c><01:25:12.850><c> this</c><01:25:13.420><c> is</c>

01:25:13.680 --> 01:25:13.690 align:start position:0%
copy this right here because this is
 

01:25:13.690 --> 01:25:15.420 align:start position:0%
copy this right here because this is
written<01:25:14.170><c> as</c><01:25:14.380><c> part</c><01:25:14.680><c> of</c><01:25:14.740><c> it's</c><01:25:14.890><c> written</c><01:25:15.190><c> exactly</c>

01:25:15.420 --> 01:25:15.430 align:start position:0%
written as part of it's written exactly
 

01:25:15.430 --> 01:25:17.400 align:start position:0%
written as part of it's written exactly
how<01:25:15.760><c> we</c><01:25:15.820><c> want</c><01:25:16.120><c> to</c><01:25:16.210><c> be</c><01:25:16.300><c> written</c><01:25:16.660><c> I'll</c><01:25:16.900><c> just</c>

01:25:17.400 --> 01:25:17.410 align:start position:0%
how we want to be written I'll just
 

01:25:17.410 --> 01:25:20.880 align:start position:0%
how we want to be written I'll just
paste<01:25:17.860><c> it</c><01:25:18.220><c> here</c><01:25:18.250><c> and</c><01:25:19.170><c> I'm</c><01:25:20.170><c> going</c><01:25:20.320><c> to</c><01:25:20.440><c> just</c><01:25:20.650><c> add</c>

01:25:20.880 --> 01:25:20.890 align:start position:0%
paste it here and I'm going to just add
 

01:25:20.890 --> 01:25:22.500 align:start position:0%
paste it here and I'm going to just add
the<01:25:21.160><c> if</c><01:25:21.310><c> and</c><01:25:21.520><c> else</c><01:25:21.640><c> statement</c><01:25:22.120><c> so</c><01:25:22.240><c> it's</c><01:25:22.390><c> gonna</c>

01:25:22.500 --> 01:25:22.510 align:start position:0%
the if and else statement so it's gonna
 

01:25:22.510 --> 01:25:24.510 align:start position:0%
the if and else statement so it's gonna
be<01:25:22.570><c> if</c><01:25:22.870><c> and</c><01:25:23.200><c> then</c><01:25:23.890><c> we</c><01:25:24.010><c> put</c><01:25:24.280><c> this</c><01:25:24.370><c> in</c>

01:25:24.510 --> 01:25:24.520 align:start position:0%
be if and then we put this in
 

01:25:24.520 --> 01:25:26.160 align:start position:0%
be if and then we put this in
parentheses<01:25:25.090><c> because</c><01:25:25.240><c> the</c><01:25:25.510><c> condition</c><01:25:26.080><c> is</c>

01:25:26.160 --> 01:25:26.170 align:start position:0%
parentheses because the condition is
 

01:25:26.170 --> 01:25:28.650 align:start position:0%
parentheses because the condition is
always<01:25:26.500><c> in</c><01:25:26.680><c> parentheses</c><01:25:27.250><c> if</c><01:25:27.670><c> number</c><01:25:28.300><c> is</c><01:25:28.420><c> less</c>

01:25:28.650 --> 01:25:28.660 align:start position:0%
always in parentheses if number is less
 

01:25:28.660 --> 01:25:31.590 align:start position:0%
always in parentheses if number is less
than<01:25:28.900><c> five</c><01:25:29.230><c> then</c><01:25:30.130><c> we're</c><01:25:30.610><c> going</c><01:25:30.820><c> to</c><01:25:30.880><c> use</c><01:25:31.270><c> the</c>

01:25:31.590 --> 01:25:31.600 align:start position:0%
than five then we're going to use the
 

01:25:31.600 --> 01:25:35.070 align:start position:0%
than five then we're going to use the
curly<01:25:31.930><c> braces</c><01:25:32.350><c> and</c><01:25:32.890><c> we're</c><01:25:33.790><c> going</c><01:25:34.030><c> to</c><01:25:34.090><c> return</c>

01:25:35.070 --> 01:25:35.080 align:start position:0%
curly braces and we're going to return
 

01:25:35.080 --> 01:25:37.050 align:start position:0%
curly braces and we're going to return
tiny<01:25:35.710><c> so</c><01:25:36.040><c> I'll</c><01:25:36.100><c> just</c><01:25:36.190><c> move</c><01:25:36.430><c> that</c><01:25:36.580><c> up</c><01:25:36.730><c> here</c><01:25:36.940><c> I'll</c>

01:25:37.050 --> 01:25:37.060 align:start position:0%
tiny so I'll just move that up here I'll
 

01:25:37.060 --> 01:25:40.530 align:start position:0%
tiny so I'll just move that up here I'll
cut<01:25:37.780><c> it</c><01:25:37.930><c> and</c><01:25:38.110><c> paste</c><01:25:38.500><c> it</c><01:25:38.830><c> now</c><01:25:39.240><c> we're</c><01:25:40.240><c> going</c><01:25:40.420><c> to</c>

01:25:40.530 --> 01:25:40.540 align:start position:0%
cut it and paste it now we're going to
 

01:25:40.540 --> 01:25:43.830 align:start position:0%
cut it and paste it now we're going to
use<01:25:40.660><c> an</c><01:25:41.110><c> else</c><01:25:41.410><c> if</c><01:25:42.100><c> statement</c><01:25:42.910><c> and</c><01:25:43.120><c> I</c><01:25:43.540><c> got</c><01:25:43.720><c> the</c>

01:25:43.830 --> 01:25:43.840 align:start position:0%
use an else if statement and I got the
 

01:25:43.840 --> 01:25:45.120 align:start position:0%
use an else if statement and I got the
curly<01:25:44.290><c> braces</c>

01:25:45.120 --> 01:25:45.130 align:start position:0%
curly braces
 

01:25:45.130 --> 01:25:47.280 align:start position:0%
curly braces
first<01:25:45.760><c> of</c><01:25:45.910><c> all</c><01:25:45.970><c> also</c><01:25:46.270><c> I</c><01:25:46.450><c> need</c><01:25:46.660><c> to</c><01:25:46.750><c> put</c><01:25:47.020><c> the</c>

01:25:47.280 --> 01:25:47.290 align:start position:0%
first of all also I need to put the
 

01:25:47.290 --> 01:25:50.010 align:start position:0%
first of all also I need to put the
condition<01:25:47.920><c> in</c><01:25:48.130><c> these</c><01:25:48.310><c> parentheses</c><01:25:48.750><c> I'm</c><01:25:49.750><c> just</c>

01:25:50.010 --> 01:25:50.020 align:start position:0%
condition in these parentheses I'm just
 

01:25:50.020 --> 01:25:52.800 align:start position:0%
condition in these parentheses I'm just
going<01:25:50.170><c> to</c><01:25:50.230><c> cut</c><01:25:50.470><c> this</c><01:25:51.120><c> number</c><01:25:52.120><c> is</c><01:25:52.360><c> less</c><01:25:52.750><c> than</c>

01:25:52.800 --> 01:25:52.810 align:start position:0%
going to cut this number is less than
 

01:25:52.810 --> 01:25:55.170 align:start position:0%
going to cut this number is less than
ten<01:25:53.290><c> put</c><01:25:53.650><c> right</c><01:25:53.800><c> here</c><01:25:54.160><c> and</c><01:25:54.340><c> we're</c><01:25:55.030><c> gonna</c>

01:25:55.170 --> 01:25:55.180 align:start position:0%
ten put right here and we're gonna
 

01:25:55.180 --> 01:25:58.590 align:start position:0%
ten put right here and we're gonna
return<01:25:55.450><c> this</c><01:25:56.320><c> small</c><01:25:56.830><c> so</c><01:25:57.820><c> I'll</c><01:25:58.060><c> put</c><01:25:58.330><c> that</c><01:25:58.540><c> in</c>

01:25:58.590 --> 01:25:58.600 align:start position:0%
return this small so I'll put that in
 

01:25:58.600 --> 01:26:02.160 align:start position:0%
return this small so I'll put that in
the<01:25:58.930><c> curly</c><01:25:59.410><c> braces</c><01:25:59.680><c> here</c><01:25:59.920><c> and</c><01:26:00.450><c> then</c><01:26:01.450><c> we</c><01:26:01.840><c> have</c>

01:26:02.160 --> 01:26:02.170 align:start position:0%
the curly braces here and then we have
 

01:26:02.170 --> 01:26:06.270 align:start position:0%
the curly braces here and then we have
another<01:26:02.470><c> else</c><01:26:03.190><c> if</c><01:26:03.640><c> statement</c><01:26:04.240><c> else</c><01:26:04.860><c> if</c><01:26:05.860><c> and</c>

01:26:06.270 --> 01:26:06.280 align:start position:0%
another else if statement else if and
 

01:26:06.280 --> 01:26:09.180 align:start position:0%
another else if statement else if and
the<01:26:06.970><c> condition</c><01:26:07.600><c> just</c><01:26:07.930><c> like</c><01:26:08.050><c> before</c><01:26:08.560><c> number</c><01:26:08.890><c> is</c>

01:26:09.180 --> 01:26:09.190 align:start position:0%
the condition just like before number is
 

01:26:09.190 --> 01:26:13.080 align:start position:0%
the condition just like before number is
less<01:26:09.670><c> than</c><01:26:09.940><c> fifteen</c><01:26:10.480><c> but</c><01:26:11.290><c> that</c><01:26:11.470><c> in</c><01:26:11.620><c> there</c><01:26:12.090><c> we</c>

01:26:13.080 --> 01:26:13.090 align:start position:0%
less than fifteen but that in there we
 

01:26:13.090 --> 01:26:16.080 align:start position:0%
less than fifteen but that in there we
get<01:26:13.300><c> we</c><01:26:13.570><c> always</c><01:26:13.840><c> need</c><01:26:14.080><c> the</c><01:26:14.380><c> curly</c><01:26:14.830><c> braces</c><01:26:15.310><c> to</c>

01:26:16.080 --> 01:26:16.090 align:start position:0%
get we always need the curly braces to
 

01:26:16.090 --> 01:26:17.820 align:start position:0%
get we always need the curly braces to
show<01:26:16.360><c> what's</c><01:26:16.630><c> going</c><01:26:16.810><c> to</c><01:26:16.840><c> happen</c><01:26:17.260><c> in</c><01:26:17.530><c> the</c><01:26:17.710><c> if</c>

01:26:17.820 --> 01:26:17.830 align:start position:0%
show what's going to happen in the if
 

01:26:17.830 --> 01:26:19.770 align:start position:0%
show what's going to happen in the if
statement<01:26:18.000><c> so</c><01:26:19.000><c> I'm</c><01:26:19.120><c> just</c><01:26:19.300><c> cutting</c><01:26:19.540><c> and</c>

01:26:19.770 --> 01:26:19.780 align:start position:0%
statement so I'm just cutting and
 

01:26:19.780 --> 01:26:22.710 align:start position:0%
statement so I'm just cutting and
pasting<01:26:19.960><c> the</c><01:26:20.260><c> text</c><01:26:20.340><c> again</c><01:26:21.340><c> we</c><01:26:22.090><c> have</c><01:26:22.240><c> an</c><01:26:22.390><c> else</c>

01:26:22.710 --> 01:26:22.720 align:start position:0%
pasting the text again we have an else
 

01:26:22.720 --> 01:26:31.110 align:start position:0%
pasting the text again we have an else
if<01:26:24.000><c> and</c><01:26:25.080><c> then</c><01:26:26.080><c> we</c><01:26:26.200><c> have</c><01:26:26.350><c> this</c><01:26:26.620><c> year</c><01:26:29.880><c> and</c><01:26:30.880><c> we</c>

01:26:31.110 --> 01:26:31.120 align:start position:0%
if and then we have this year and we
 

01:26:31.120 --> 01:26:38.040 align:start position:0%
if and then we have this year and we
have<01:26:31.150><c> return</c><01:26:31.930><c> large</c><01:26:36.210><c> another</c><01:26:37.210><c> actually</c><01:26:37.990><c> the</c>

01:26:38.040 --> 01:26:38.050 align:start position:0%
have return large another actually the
 

01:26:38.050 --> 01:26:42.900 align:start position:0%
have return large another actually the
final<01:26:38.380><c> thing</c><01:26:38.590><c> is</c><01:26:38.620><c> just</c><01:26:38.830><c> going</c><01:26:39.100><c> to</c><01:26:39.400><c> be</c><01:26:40.440><c> else</c><01:26:41.910><c> we</c>

01:26:42.900 --> 01:26:42.910 align:start position:0%
final thing is just going to be else we
 

01:26:42.910 --> 01:26:44.250 align:start position:0%
final thing is just going to be else we
don't<01:26:43.090><c> even</c><01:26:43.300><c> need</c><01:26:43.390><c> an</c><01:26:43.510><c> else</c><01:26:43.690><c> if</c><01:26:43.930><c> at</c><01:26:44.140><c> the</c>

01:26:44.250 --> 01:26:44.260 align:start position:0%
don't even need an else if at the
 

01:26:44.260 --> 01:26:46.470 align:start position:0%
don't even need an else if at the
statement<01:26:44.710><c> at</c><01:26:44.890><c> the</c><01:26:45.070><c> end</c><01:26:45.250><c> we're</c><01:26:45.970><c> not</c><01:26:46.120><c> we</c><01:26:46.330><c> don't</c>

01:26:46.470 --> 01:26:46.480 align:start position:0%
statement at the end we're not we don't
 

01:26:46.480 --> 01:26:48.120 align:start position:0%
statement at the end we're not we don't
even<01:26:46.600><c> need</c><01:26:46.750><c> to</c><01:26:46.810><c> put</c><01:26:47.050><c> the</c><01:26:47.200><c> condition</c><01:26:47.770><c> because</c>

01:26:48.120 --> 01:26:48.130 align:start position:0%
even need to put the condition because
 

01:26:48.130 --> 01:26:50.400 align:start position:0%
even need to put the condition because
if<01:26:48.400><c> it's</c><01:26:49.000><c> more</c><01:26:49.090><c> than</c><01:26:49.540><c> equal</c><01:26:49.690><c> to</c><01:26:49.930><c> twenty</c><01:26:50.290><c> that's</c>

01:26:50.400 --> 01:26:50.410 align:start position:0%
if it's more than equal to twenty that's
 

01:26:50.410 --> 01:26:52.620 align:start position:0%
if it's more than equal to twenty that's
going<01:26:50.620><c> to</c><01:26:50.680><c> be</c><01:26:50.740><c> everything</c><01:26:51.220><c> else</c><01:26:51.460><c> so</c><01:26:52.150><c> I'm</c><01:26:52.420><c> just</c>

01:26:52.620 --> 01:26:52.630 align:start position:0%
going to be everything else so I'm just
 

01:26:52.630 --> 01:26:55.770 align:start position:0%
going to be everything else so I'm just
going<01:26:52.900><c> to</c><01:26:52.960><c> cut</c><01:26:53.860><c> this</c><01:26:54.130><c> we</c><01:26:54.730><c> don't</c><01:26:55.000><c> need</c><01:26:55.390><c> any</c><01:26:55.660><c> of</c>

01:26:55.770 --> 01:26:55.780 align:start position:0%
going to cut this we don't need any of
 

01:26:55.780 --> 01:27:00.300 align:start position:0%
going to cut this we don't need any of
this<01:26:55.990><c> stuff</c><01:26:56.050><c> here</c><01:26:56.920><c> and</c><01:26:58.860><c> we're</c><01:26:59.860><c> just</c><01:26:59.980><c> going</c><01:27:00.220><c> to</c>

01:27:00.300 --> 01:27:00.310 align:start position:0%
this stuff here and we're just going to
 

01:27:00.310 --> 01:27:01.180 align:start position:0%
this stuff here and we're just going to
return

01:27:01.180 --> 01:27:01.190 align:start position:0%
return
 

01:27:01.190 --> 01:27:05.530 align:start position:0%
return
and<01:27:01.280><c> large</c><01:27:01.820><c> so</c><01:27:02.719><c> with</c><01:27:03.050><c> this</c><01:27:03.260><c> one</c><01:27:03.739><c> test</c><01:27:04.100><c> here</c><01:27:04.540><c> for</c>

01:27:05.530 --> 01:27:05.540 align:start position:0%
and large so with this one test here for
 

01:27:05.540 --> 01:27:07.479 align:start position:0%
and large so with this one test here for
test<01:27:05.870><c> seven</c><01:27:06.320><c> we</c><01:27:06.440><c> can</c><01:27:06.620><c> actually</c><01:27:06.739><c> cancel</c><01:27:07.370><c> that</c>

01:27:07.479 --> 01:27:07.489 align:start position:0%
test seven we can actually cancel that
 

01:27:07.489 --> 01:27:13.630 align:start position:0%
test seven we can actually cancel that
log<01:27:07.760><c> that</c><01:27:09.130><c> console</c><01:27:10.130><c> dot</c><01:27:10.430><c> log</c><01:27:11.410><c> and</c><01:27:12.489><c> see</c><01:27:13.489><c> what</c>

01:27:13.630 --> 01:27:13.640 align:start position:0%
log that console dot log and see what
 

01:27:13.640 --> 01:27:15.760 align:start position:0%
log that console dot log and see what
returns<01:27:14.030><c> for</c><01:27:14.330><c> seven</c><01:27:14.780><c> we</c><01:27:15.260><c> can</c><01:27:15.380><c> try</c><01:27:15.560><c> a</c><01:27:15.590><c> few</c>

01:27:15.760 --> 01:27:15.770 align:start position:0%
returns for seven we can try a few
 

01:27:15.770 --> 01:27:16.630 align:start position:0%
returns for seven we can try a few
different<01:27:15.830><c> things</c>

01:27:16.630 --> 01:27:16.640 align:start position:0%
different things
 

01:27:16.640 --> 01:27:19.090 align:start position:0%
different things
ooh<01:27:16.670><c> we</c><01:27:17.239><c> have</c><01:27:17.360><c> an</c><01:27:17.449><c> ear</c><01:27:17.719><c> here</c><01:27:17.989><c> oh</c><01:27:18.110><c> forget</c><01:27:18.770><c> to</c><01:27:18.949><c> it</c>

01:27:19.090 --> 01:27:19.100 align:start position:0%
ooh we have an ear here oh forget to it
 

01:27:19.100 --> 01:27:22.090 align:start position:0%
ooh we have an ear here oh forget to it
but<01:27:19.219><c> this</c><01:27:19.370><c> parenthesis</c><01:27:19.940><c> wrong</c><01:27:20.180><c> way</c><01:27:20.620><c> let's</c><01:27:21.620><c> try</c>

01:27:22.090 --> 01:27:22.100 align:start position:0%
but this parenthesis wrong way let's try
 

01:27:22.100 --> 01:27:27.780 align:start position:0%
but this parenthesis wrong way let's try
that<01:27:22.280><c> again</c>

01:27:27.780 --> 01:27:27.790 align:start position:0%
 
 

01:27:27.790 --> 01:27:33.420 align:start position:0%
 
small<01:27:28.790><c> but</c><01:27:29.570><c> if</c><01:27:29.660><c> this</c><01:27:29.870><c> is</c><01:27:30.820><c> 20</c><01:27:31.820><c> it</c><01:27:32.660><c> should</c><01:27:33.140><c> be</c>

01:27:33.420 --> 01:27:33.430 align:start position:0%
small but if this is 20 it should be
 

01:27:33.430 --> 01:27:41.590 align:start position:0%
small but if this is 20 it should be
huge<01:27:34.430><c> and</c><01:27:35.860><c> if</c><01:27:37.000><c> it's</c><01:27:39.280><c> 19</c><01:27:40.280><c> which</c><01:27:41.180><c> would</c><01:27:41.300><c> be</c><01:27:41.360><c> less</c>

01:27:41.590 --> 01:27:41.600 align:start position:0%
huge and if it's 19 which would be less
 

01:27:41.600 --> 01:27:44.260 align:start position:0%
huge and if it's 19 which would be less
than<01:27:41.810><c> 20</c><01:27:42.170><c> we</c><01:27:42.290><c> should</c><01:27:42.469><c> see</c><01:27:42.650><c> you</c><01:27:42.770><c> large</c><01:27:43.040><c> yep</c><01:27:43.969><c> that</c>

01:27:44.260 --> 01:27:44.270 align:start position:0%
than 20 we should see you large yep that
 

01:27:44.270 --> 01:27:47.989 align:start position:0%
than 20 we should see you large yep that
worth

01:27:47.989 --> 01:27:47.999 align:start position:0%
 
 

01:27:47.999 --> 01:27:50.719 align:start position:0%
 
in<01:27:48.059><c> the</c><01:27:48.659><c> game</c><01:27:48.839><c> of</c><01:27:48.989><c> golf</c><01:27:49.199><c> each</c><01:27:49.529><c> hole</c><01:27:49.889><c> has</c><01:27:50.189><c> a</c><01:27:50.219><c> par</c>

01:27:50.719 --> 01:27:50.729 align:start position:0%
in the game of golf each hole has a par
 

01:27:50.729 --> 01:27:52.579 align:start position:0%
in the game of golf each hole has a par
which<01:27:51.329><c> means</c><01:27:51.599><c> the</c><01:27:51.779><c> average</c><01:27:52.199><c> number</c><01:27:52.409><c> of</c>

01:27:52.579 --> 01:27:52.589 align:start position:0%
which means the average number of
 

01:27:52.589 --> 01:27:55.339 align:start position:0%
which means the average number of
strokes<01:27:52.979><c> you're</c><01:27:53.669><c> supposed</c><01:27:54.089><c> to</c><01:27:54.239><c> use</c><01:27:54.629><c> to</c><01:27:54.659><c> get</c>

01:27:55.339 --> 01:27:55.349 align:start position:0%
strokes you're supposed to use to get
 

01:27:55.349 --> 01:27:58.639 align:start position:0%
strokes you're supposed to use to get
the<01:27:55.529><c> ball</c><01:27:55.769><c> into</c><01:27:56.069><c> the</c><01:27:56.399><c> hole</c><01:27:56.609><c> so</c><01:27:57.569><c> depending</c><01:27:58.529><c> on</c>

01:27:58.639 --> 01:27:58.649 align:start position:0%
the ball into the hole so depending on
 

01:27:58.649 --> 01:28:00.949 align:start position:0%
the ball into the hole so depending on
how<01:27:58.799><c> far</c><01:27:59.069><c> above</c><01:27:59.729><c> or</c><01:27:59.909><c> below</c><01:28:00.029><c> par</c><01:28:00.389><c> your</c><01:28:00.629><c> strokes</c>

01:28:00.949 --> 01:28:00.959 align:start position:0%
how far above or below par your strokes
 

01:28:00.959 --> 01:28:03.589 align:start position:0%
how far above or below par your strokes
are<01:28:01.169><c> there's</c><01:28:01.409><c> a</c><01:28:01.469><c> different</c><01:28:01.889><c> nickname</c><01:28:02.239><c> so</c><01:28:03.239><c> here</c>

01:28:03.589 --> 01:28:03.599 align:start position:0%
are there's a different nickname so here
 

01:28:03.599 --> 01:28:04.909 align:start position:0%
are there's a different nickname so here
are<01:28:03.689><c> some</c><01:28:03.779><c> of</c><01:28:03.869><c> the</c><01:28:03.929><c> nicknames</c><01:28:04.289><c> hole-in-one</c>

01:28:04.909 --> 01:28:04.919 align:start position:0%
are some of the nicknames hole-in-one
 

01:28:04.919 --> 01:28:07.999 align:start position:0%
are some of the nicknames hole-in-one
Eagle<01:28:05.489><c> birdie</c><01:28:05.849><c> par</c><01:28:06.419><c> and</c><01:28:06.839><c> we're</c><01:28:07.529><c> gonna</c><01:28:07.709><c> write</c><01:28:07.979><c> a</c>

01:28:07.999 --> 01:28:08.009 align:start position:0%
Eagle birdie par and we're gonna write a
 

01:28:08.009 --> 01:28:10.729 align:start position:0%
Eagle birdie par and we're gonna write a
function<01:28:08.609><c> where</c><01:28:08.909><c> you</c><01:28:09.029><c> pass</c><01:28:09.389><c> in</c><01:28:09.689><c> the</c><01:28:09.959><c> par</c><01:28:10.319><c> and</c>

01:28:10.729 --> 01:28:10.739 align:start position:0%
function where you pass in the par and
 

01:28:10.739 --> 01:28:12.949 align:start position:0%
function where you pass in the par and
you<01:28:11.219><c> also</c><01:28:11.459><c> pass</c><01:28:11.909><c> on</c><01:28:11.939><c> the</c><01:28:12.239><c> stroke</c><01:28:12.599><c> so</c><01:28:12.779><c> you</c><01:28:12.839><c> can</c>

01:28:12.949 --> 01:28:12.959 align:start position:0%
you also pass on the stroke so you can
 

01:28:12.959 --> 01:28:15.229 align:start position:0%
you also pass on the stroke so you can
see<01:28:13.079><c> up</c><01:28:13.169><c> here</c><01:28:13.199><c> par</c><01:28:13.709><c> and</c><01:28:14.009><c> strokes</c><01:28:14.459><c> and</c><01:28:14.699><c> it's</c>

01:28:15.229 --> 01:28:15.239 align:start position:0%
see up here par and strokes and it's
 

01:28:15.239 --> 01:28:18.619 align:start position:0%
see up here par and strokes and it's
going<01:28:15.419><c> to</c><01:28:15.539><c> return</c><01:28:16.079><c> the</c><01:28:16.709><c> nickname</c><01:28:17.339><c> so</c><01:28:18.269><c> that's</c>

01:28:18.619 --> 01:28:18.629 align:start position:0%
going to return the nickname so that's
 

01:28:18.629 --> 01:28:20.389 align:start position:0%
going to return the nickname so that's
what<01:28:18.869><c> we're</c><01:28:18.989><c> going</c><01:28:19.109><c> to</c><01:28:19.229><c> write</c><01:28:19.769><c> you</c><01:28:19.979><c> can</c><01:28:20.159><c> see</c>

01:28:20.389 --> 01:28:20.399 align:start position:0%
what we're going to write you can see
 

01:28:20.399 --> 01:28:22.999 align:start position:0%
what we're going to write you can see
this<01:28:20.639><c> table</c><01:28:21.029><c> here</c><01:28:21.479><c> shows</c><01:28:21.989><c> what</c><01:28:22.199><c> we</c><01:28:22.529><c> have</c><01:28:22.679><c> to</c><01:28:22.829><c> do</c>

01:28:22.999 --> 01:28:23.009 align:start position:0%
this table here shows what we have to do
 

01:28:23.009 --> 01:28:27.409 align:start position:0%
this table here shows what we have to do
if<01:28:23.249><c> the</c><01:28:23.849><c> strokes</c><01:28:24.269><c> are</c><01:28:24.599><c> 1</c><01:28:25.729><c> then</c><01:28:26.729><c> you</c><01:28:27.269><c> get</c><01:28:27.389><c> a</c>

01:28:27.409 --> 01:28:27.419 align:start position:0%
if the strokes are 1 then you get a
 

01:28:27.419 --> 01:28:28.009 align:start position:0%
if the strokes are 1 then you get a
hole-in-one

01:28:28.009 --> 01:28:28.019 align:start position:0%
hole-in-one
 

01:28:28.019 --> 01:28:29.959 align:start position:0%
hole-in-one
if<01:28:28.229><c> the</c><01:28:28.619><c> stroke</c><01:28:28.919><c> is</c><01:28:29.129><c> less</c><01:28:29.459><c> than</c><01:28:29.579><c> or</c><01:28:29.669><c> equal</c><01:28:29.729><c> to</c>

01:28:29.959 --> 01:28:29.969 align:start position:0%
if the stroke is less than or equal to
 

01:28:29.969 --> 01:28:33.139 align:start position:0%
if the stroke is less than or equal to
par<01:28:30.359><c> minus</c><01:28:30.689><c> 2</c><01:28:30.929><c> you</c><01:28:31.529><c> get</c><01:28:31.709><c> an</c><01:28:31.799><c> eagle</c><01:28:32.219><c> and</c><01:28:32.399><c> so</c><01:28:32.969><c> on</c>

01:28:33.139 --> 01:28:33.149 align:start position:0%
par minus 2 you get an eagle and so on
 

01:28:33.149 --> 01:28:35.299 align:start position:0%
par minus 2 you get an eagle and so on
and<01:28:33.419><c> we</c><01:28:33.839><c> also</c><01:28:34.049><c> have</c><01:28:34.349><c> this</c><01:28:34.499><c> array</c><01:28:34.919><c> that's</c><01:28:35.189><c> gonna</c>

01:28:35.299 --> 01:28:35.309 align:start position:0%
and we also have this array that's gonna
 

01:28:35.309 --> 01:28:36.919 align:start position:0%
and we also have this array that's gonna
make<01:28:35.579><c> it</c><01:28:35.609><c> easier</c><01:28:35.939><c> because</c><01:28:36.269><c> we</c><01:28:36.419><c> can</c><01:28:36.449><c> you</c><01:28:36.659><c> just</c>

01:28:36.919 --> 01:28:36.929 align:start position:0%
make it easier because we can you just
 

01:28:36.929 --> 01:28:38.629 align:start position:0%
make it easier because we can you just
use<01:28:37.199><c> things</c><01:28:37.529><c> from</c><01:28:37.619><c> this</c><01:28:37.889><c> array</c><01:28:38.189><c> instead</c><01:28:38.489><c> of</c>

01:28:38.629 --> 01:28:38.639 align:start position:0%
use things from this array instead of
 

01:28:38.639 --> 01:28:41.419 align:start position:0%
use things from this array instead of
typing<01:28:38.909><c> out</c><01:28:39.149><c> the</c><01:28:39.209><c> words</c><01:28:39.629><c> so</c><01:28:40.559><c> we're</c><01:28:41.159><c> going</c><01:28:41.339><c> to</c>

01:28:41.419 --> 01:28:41.429 align:start position:0%
typing out the words so we're going to
 

01:28:41.429 --> 01:28:44.989 align:start position:0%
typing out the words so we're going to
start<01:28:41.729><c> with</c><01:28:41.879><c> an</c><01:28:42.059><c> if</c><01:28:42.299><c> statement</c><01:28:42.569><c> if</c><01:28:43.559><c> and</c><01:28:44.099><c> then</c>

01:28:44.989 --> 01:28:44.999 align:start position:0%
start with an if statement if and then
 

01:28:44.999 --> 01:28:51.849 align:start position:0%
start with an if statement if and then
we<01:28:45.179><c> have</c><01:28:45.479><c> to</c><01:28:45.689><c> put</c><01:28:46.229><c> the</c><01:28:46.379><c> condition</c><01:28:46.979><c> if</c><01:28:48.679><c> strokes</c>

01:28:51.849 --> 01:28:51.859 align:start position:0%
 
 

01:28:51.859 --> 01:28:54.679 align:start position:0%
 
equals<01:28:52.859><c> equals</c><01:28:53.399><c> that's</c><01:28:53.939><c> the</c><01:28:54.179><c> Equality</c>

01:28:54.679 --> 01:28:54.689 align:start position:0%
equals equals that's the Equality
 

01:28:54.689 --> 01:28:55.999 align:start position:0%
equals equals that's the Equality
operator<01:28:54.719><c> we</c><01:28:55.319><c> don't</c><01:28:55.469><c> want</c><01:28:55.589><c> to</c><01:28:55.649><c> use</c><01:28:55.739><c> a</c><01:28:55.769><c> single</c>

01:28:55.999 --> 01:28:56.009 align:start position:0%
operator we don't want to use a single
 

01:28:56.009 --> 01:28:57.559 align:start position:0%
operator we don't want to use a single
equal<01:28:56.399><c> sign</c><01:28:56.459><c> because</c><01:28:56.879><c> that</c><01:28:56.999><c> would</c><01:28:57.179><c> be</c><01:28:57.389><c> the</c>

01:28:57.559 --> 01:28:57.569 align:start position:0%
equal sign because that would be the
 

01:28:57.569 --> 01:29:01.549 align:start position:0%
equal sign because that would be the
assignment<01:28:58.199><c> operator</c><01:28:58.319><c> if</c><01:28:58.889><c> it</c><01:28:59.489><c> equals</c><01:28:59.909><c> 1</c><01:29:00.569><c> then</c>

01:29:01.549 --> 01:29:01.559 align:start position:0%
assignment operator if it equals 1 then
 

01:29:01.559 --> 01:29:04.429 align:start position:0%
assignment operator if it equals 1 then
we<01:29:02.099><c> can</c><01:29:02.369><c> return</c><01:29:02.849><c> and</c><01:29:03.269><c> we</c><01:29:03.869><c> can</c><01:29:04.019><c> see</c><01:29:04.199><c> down</c><01:29:04.379><c> here</c>

01:29:04.429 --> 01:29:04.439 align:start position:0%
we can return and we can see down here
 

01:29:04.439 --> 01:29:07.099 align:start position:0%
we can return and we can see down here
we're<01:29:05.009><c> gonna</c><01:29:05.099><c> return</c><01:29:05.459><c> hole-in-one</c><01:29:06.299><c> but</c><01:29:06.959><c> we</c>

01:29:07.099 --> 01:29:07.109 align:start position:0%
we're gonna return hole-in-one but we
 

01:29:07.109 --> 01:29:09.379 align:start position:0%
we're gonna return hole-in-one but we
can<01:29:07.289><c> just</c><01:29:07.319><c> use</c><01:29:07.619><c> it</c><01:29:07.649><c> from</c><01:29:07.949><c> this</c><01:29:08.069><c> names</c><01:29:08.429><c> array</c><01:29:08.819><c> so</c>

01:29:09.379 --> 01:29:09.389 align:start position:0%
can just use it from this names array so
 

01:29:09.389 --> 01:29:11.029 align:start position:0%
can just use it from this names array so
it's<01:29:09.539><c> going</c><01:29:09.629><c> to</c><01:29:09.689><c> be</c><01:29:09.779><c> named</c><01:29:10.109><c> and</c><01:29:10.469><c> this</c><01:29:10.769><c> is</c><01:29:10.919><c> the</c>

01:29:11.029 --> 01:29:11.039 align:start position:0%
it's going to be named and this is the
 

01:29:11.039 --> 01:29:13.519 align:start position:0%
it's going to be named and this is the
meet<01:29:11.159><c> index</c><01:29:11.579><c> 0</c><01:29:12.029><c> of</c><01:29:12.269><c> the</c><01:29:12.419><c> array</c><01:29:12.779><c> so</c><01:29:13.049><c> we'll</c><01:29:13.379><c> do</c>

01:29:13.519 --> 01:29:13.529 align:start position:0%
meet index 0 of the array so we'll do
 

01:29:13.529 --> 01:29:18.529 align:start position:0%
meet index 0 of the array so we'll do
names<01:29:13.889><c> and</c><01:29:14.279><c> then</c><01:29:15.149><c> 0</c><01:29:16.729><c> and</c><01:29:17.729><c> then</c><01:29:18.149><c> we</c><01:29:18.209><c> can</c><01:29:18.359><c> do</c><01:29:18.419><c> an</c>

01:29:18.529 --> 01:29:18.539 align:start position:0%
names and then 0 and then we can do an
 

01:29:18.539 --> 01:29:22.489 align:start position:0%
names and then 0 and then we can do an
else<01:29:18.779><c> if</c><01:29:18.989><c> else</c><01:29:19.499><c> if</c><01:29:19.979><c> and</c><01:29:21.049><c> then</c><01:29:22.049><c> we</c><01:29:22.139><c> can</c><01:29:22.289><c> put</c><01:29:22.409><c> the</c>

01:29:22.489 --> 01:29:22.499 align:start position:0%
else if else if and then we can put the
 

01:29:22.499 --> 01:29:30.969 align:start position:0%
else if else if and then we can put the
condition<01:29:23.009><c> strokes</c><01:29:25.189><c> expel</c><01:29:26.189><c> strokes</c><01:29:26.609><c> right</c>

01:29:30.969 --> 01:29:30.979 align:start position:0%
 
 

01:29:30.979 --> 01:29:34.399 align:start position:0%
 
spokes<01:29:31.979><c> and</c><01:29:32.369><c> then</c><01:29:33.119><c> we</c><01:29:33.329><c> can</c><01:29:33.569><c> just</c><01:29:33.899><c> actually</c>

01:29:34.399 --> 01:29:34.409 align:start position:0%
spokes and then we can just actually
 

01:29:34.409 --> 01:29:36.769 align:start position:0%
spokes and then we can just actually
copy<01:29:34.859><c> this</c><01:29:35.099><c> right</c><01:29:35.309><c> from</c><01:29:35.429><c> here</c><01:29:35.819><c> less</c><01:29:36.479><c> than</c><01:29:36.509><c> or</c>

01:29:36.769 --> 01:29:36.779 align:start position:0%
copy this right from here less than or
 

01:29:36.779 --> 01:29:41.389 align:start position:0%
copy this right from here less than or
equal<01:29:37.109><c> to</c><01:29:37.229><c> power</c><01:29:37.529><c> minus</c><01:29:37.949><c> 2</c><01:29:38.339><c> and</c><01:29:39.379><c> then</c><01:29:40.379><c> we</c><01:29:41.279><c> are</c>

01:29:41.389 --> 01:29:41.399 align:start position:0%
equal to power minus 2 and then we are
 

01:29:41.399 --> 01:29:46.039 align:start position:0%
equal to power minus 2 and then we are
going<01:29:41.639><c> to</c><01:29:41.729><c> return</c><01:29:42.319><c> name</c><01:29:43.319><c> and</c><01:29:44.749><c> this</c><01:29:45.749><c> will</c><01:29:45.929><c> be</c>

01:29:46.039 --> 01:29:46.049 align:start position:0%
going to return name and this will be
 

01:29:46.049 --> 01:29:50.419 align:start position:0%
going to return name and this will be
the<01:29:46.259><c> index</c><01:29:46.679><c> 1</c><01:29:47.249><c> which</c><01:29:48.089><c> is</c><01:29:48.299><c> an</c><01:29:48.479><c> eagle</c><01:29:49.199><c> at</c><01:29:49.979><c> this</c>

01:29:50.419 --> 01:29:50.429 align:start position:0%
the index 1 which is an eagle at this
 

01:29:50.429 --> 01:29:52.249 align:start position:0%
the index 1 which is an eagle at this
point<01:29:50.729><c> I</c><01:29:50.909><c> can</c><01:29:51.209><c> do</c><01:29:51.329><c> some</c><01:29:51.509><c> copying</c><01:29:51.929><c> and</c><01:29:52.079><c> pasting</c>

01:29:52.249 --> 01:29:52.259 align:start position:0%
point I can do some copying and pasting
 

01:29:52.259 --> 01:29:54.169 align:start position:0%
point I can do some copying and pasting
I'm<01:29:52.769><c> going</c><01:29:53.129><c> to</c><01:29:53.189><c> copy</c><01:29:53.369><c> this</c><01:29:53.519><c> whole</c><01:29:53.669><c> thing's</c><01:29:53.999><c> a</c>

01:29:54.169 --> 01:29:54.179 align:start position:0%
I'm going to copy this whole thing's a
 

01:29:54.179 --> 01:29:55.849 align:start position:0%
I'm going to copy this whole thing's a
lot<01:29:54.359><c> of</c><01:29:54.449><c> this</c><01:29:54.569><c> rest</c><01:29:54.929><c> of</c><01:29:55.019><c> this</c><01:29:55.079><c> will</c><01:29:55.229><c> be</c><01:29:55.349><c> else</c><01:29:55.559><c> if</c>

01:29:55.849 --> 01:29:55.859 align:start position:0%
lot of this rest of this will be else if
 

01:29:55.859 --> 01:30:00.559 align:start position:0%
lot of this rest of this will be else if
so<01:29:56.609><c> else</c><01:29:57.209><c> if</c><01:29:57.539><c> strokes</c><01:29:58.199><c> is</c><01:29:59.179><c> this</c><01:30:00.179><c> time</c><01:30:00.359><c> is</c><01:30:00.449><c> going</c>

01:30:00.559 --> 01:30:00.569 align:start position:0%
so else if strokes is this time is going
 

01:30:00.569 --> 01:30:01.920 align:start position:0%
so else if strokes is this time is going
to<01:30:00.599><c> be</c><01:30:00.679><c> equal</c>

01:30:01.920 --> 01:30:01.930 align:start position:0%
to be equal
 

01:30:01.930 --> 01:30:09.470 align:start position:0%
to be equal
to<01:30:02.580><c> par</c><01:30:03.580><c> -</c><01:30:05.760><c> one</c><01:30:06.760><c> and</c><01:30:07.590><c> we're</c><01:30:08.590><c> going</c><01:30:08.800><c> to</c><01:30:09.010><c> return</c>

01:30:09.470 --> 01:30:09.480 align:start position:0%
to par - one and we're going to return
 

01:30:09.480 --> 01:30:13.830 align:start position:0%
to par - one and we're going to return
this<01:30:10.480><c> many</c><01:30:10.750><c> birdie</c><01:30:11.080><c> which</c><01:30:11.950><c> is</c><01:30:12.220><c> array</c><01:30:13.000><c> index</c><01:30:13.360><c> -</c>

01:30:13.830 --> 01:30:13.840 align:start position:0%
this many birdie which is array index -
 

01:30:13.840 --> 01:30:19.350 align:start position:0%
this many birdie which is array index -
and<01:30:15.720><c> I'm</c><01:30:16.720><c> going</c><01:30:16.990><c> to</c><01:30:17.310><c> continue</c><01:30:18.310><c> just</c><01:30:19.000><c> like</c><01:30:19.150><c> this</c>

01:30:19.350 --> 01:30:19.360 align:start position:0%
and I'm going to continue just like this
 

01:30:19.360 --> 01:30:24.290 align:start position:0%
and I'm going to continue just like this
so<01:30:20.310><c> this</c><01:30:21.310><c> time</c><01:30:21.580><c> it's</c><01:30:21.850><c> if</c><01:30:22.210><c> strokes</c><01:30:22.960><c> equal</c><01:30:23.470><c> par</c>

01:30:24.290 --> 01:30:24.300 align:start position:0%
so this time it's if strokes equal par
 

01:30:24.300 --> 01:30:31.890 align:start position:0%
so this time it's if strokes equal par
we're<01:30:25.300><c> going</c><01:30:25.420><c> to</c><01:30:25.480><c> return</c><01:30:26.100><c> name</c><01:30:27.270><c> index</c><01:30:28.290><c> 3</c><01:30:29.550><c> C</c><01:30:30.550><c> 0</c><01:30:31.210><c> 1</c>

01:30:31.890 --> 01:30:31.900 align:start position:0%
we're going to return name index 3 C 0 1
 

01:30:31.900 --> 01:30:35.120 align:start position:0%
we're going to return name index 3 C 0 1
2<01:30:32.530><c> 3</c><01:30:33.040><c> is</c><01:30:33.220><c> going</c><01:30:33.310><c> to</c><01:30:33.370><c> be</c><01:30:33.430><c> the</c><01:30:33.520><c> word</c><01:30:33.640><c> par</c><01:30:34.000><c> up</c><01:30:34.210><c> here</c>

01:30:35.120 --> 01:30:35.130 align:start position:0%
2 3 is going to be the word par up here
 

01:30:35.130 --> 01:30:38.160 align:start position:0%
2 3 is going to be the word par up here
they'll<01:30:36.130><c> just</c><01:30:36.340><c> keep</c><01:30:36.610><c> just</c><01:30:36.910><c> like</c><01:30:37.030><c> this</c><01:30:37.330><c> now</c>

01:30:38.160 --> 01:30:38.170 align:start position:0%
they'll just keep just like this now
 

01:30:38.170 --> 01:30:41.700 align:start position:0%
they'll just keep just like this now
it's<01:30:38.350><c> going</c><01:30:38.470><c> to</c><01:30:38.500><c> be</c><01:30:38.650><c> R</c><01:30:39.040><c> plus</c><01:30:39.390><c> 1</c><01:30:40.560><c> and</c><01:30:41.560><c> we'll</c>

01:30:41.700 --> 01:30:41.710 align:start position:0%
it's going to be R plus 1 and we'll
 

01:30:41.710 --> 01:30:46.470 align:start position:0%
it's going to be R plus 1 and we'll
change<01:30:41.950><c> this</c><01:30:42.190><c> to</c><01:30:42.250><c> 4</c><01:30:44.700><c> now</c><01:30:45.700><c> it's</c><01:30:46.090><c> going</c><01:30:46.330><c> to</c><01:30:46.360><c> be</c>

01:30:46.470 --> 01:30:46.480 align:start position:0%
change this to 4 now it's going to be
 

01:30:46.480 --> 01:30:53.610 align:start position:0%
change this to 4 now it's going to be
par<01:30:47.670><c> plus</c><01:30:49.410><c> 2</c><01:30:50.460><c> and</c><01:30:51.460><c> we'll</c><01:30:51.700><c> change</c><01:30:52.000><c> this</c><01:30:52.330><c> to</c><01:30:52.750><c> 5</c>

01:30:53.610 --> 01:30:53.620 align:start position:0%
par plus 2 and we'll change this to 5
 

01:30:53.620 --> 01:30:56.250 align:start position:0%
par plus 2 and we'll change this to 5
which<01:30:54.580><c> is</c><01:30:54.640><c> gonna</c><01:30:54.880><c> be</c><01:30:55.030><c> the</c><01:30:55.240><c> double</c><01:30:55.810><c> bogey</c>

01:30:56.250 --> 01:30:56.260 align:start position:0%
which is gonna be the double bogey
 

01:30:56.260 --> 01:31:01.890 align:start position:0%
which is gonna be the double bogey
and<01:30:57.390><c> finally</c><01:30:58.390><c> if</c><01:30:59.140><c> strokes</c><01:30:59.830><c> is</c><01:31:00.450><c> change</c><01:31:01.450><c> this</c><01:31:01.660><c> to</c>

01:31:01.890 --> 01:31:01.900 align:start position:0%
and finally if strokes is change this to
 

01:31:01.900 --> 01:31:07.110 align:start position:0%
and finally if strokes is change this to
more<01:31:02.590><c> than</c><01:31:02.890><c> or</c><01:31:03.070><c> equal</c><01:31:03.460><c> to</c><01:31:03.700><c> car</c><01:31:04.630><c> plus</c><01:31:05.790><c> 3</c><01:31:06.790><c> that</c>

01:31:07.110 --> 01:31:07.120 align:start position:0%
more than or equal to car plus 3 that
 

01:31:07.120 --> 01:31:10.860 align:start position:0%
more than or equal to car plus 3 that
means<01:31:07.750><c> you</c><01:31:08.530><c> did</c><01:31:08.710><c> very</c><01:31:08.740><c> poorly</c><01:31:09.360><c> so</c><01:31:10.360><c> you</c><01:31:10.450><c> should</c>

01:31:10.860 --> 01:31:10.870 align:start position:0%
means you did very poorly so you should
 

01:31:10.870 --> 01:31:14.250 align:start position:0%
means you did very poorly so you should
just<01:31:10.900><c> go</c><01:31:11.230><c> home</c><01:31:12.120><c> so</c><01:31:13.120><c> it's</c><01:31:13.360><c> going</c><01:31:13.630><c> to</c><01:31:13.810><c> be</c><01:31:13.930><c> named</c>

01:31:14.250 --> 01:31:14.260 align:start position:0%
just go home so it's going to be named
 

01:31:14.260 --> 01:31:19.010 align:start position:0%
just go home so it's going to be named
index<01:31:15.330><c> 6</c><01:31:16.330><c> and</c><01:31:16.810><c> we</c><01:31:17.320><c> don't</c><01:31:17.500><c> need</c><01:31:17.680><c> this</c><01:31:17.860><c> anymore</c>

01:31:19.010 --> 01:31:19.020 align:start position:0%
index 6 and we don't need this anymore
 

01:31:19.020 --> 01:31:21.990 align:start position:0%
index 6 and we don't need this anymore
so<01:31:20.020><c> now</c><01:31:20.290><c> we're</c><01:31:20.440><c> gonna</c><01:31:20.560><c> do</c><01:31:20.860><c> some</c><01:31:21.130><c> tests</c><01:31:21.730><c> here</c>

01:31:21.990 --> 01:31:22.000 align:start position:0%
so now we're gonna do some tests here
 

01:31:22.000 --> 01:31:27.590 align:start position:0%
so now we're gonna do some tests here
I'm<01:31:22.570><c> gonna</c><01:31:22.810><c> do</c><01:31:23.620><c> a</c><01:31:23.650><c> console</c><01:31:25.860><c> console</c><01:31:26.860><c> dot</c><01:31:27.190><c> log</c>

01:31:27.590 --> 01:31:27.600 align:start position:0%
I'm gonna do a console console dot log
 

01:31:27.600 --> 01:31:30.480 align:start position:0%
I'm gonna do a console console dot log
and<01:31:28.600><c> we're</c><01:31:28.750><c> going</c><01:31:28.960><c> to</c><01:31:29.020><c> pass</c><01:31:29.470><c> in</c><01:31:29.800><c> the</c><01:31:29.830><c> function</c>

01:31:30.480 --> 01:31:30.490 align:start position:0%
and we're going to pass in the function
 

01:31:30.490 --> 01:31:32.370 align:start position:0%
and we're going to pass in the function
that<01:31:30.520><c> we're</c><01:31:30.760><c> calling</c><01:31:30.940><c> so</c><01:31:31.570><c> in</c><01:31:31.690><c> this</c><01:31:31.840><c> case</c><01:31:32.140><c> the</c>

01:31:32.370 --> 01:31:32.380 align:start position:0%
that we're calling so in this case the
 

01:31:32.380 --> 01:31:35.910 align:start position:0%
that we're calling so in this case the
par<01:31:32.680><c> is</c><01:31:32.950><c> 5</c><01:31:33.340><c> and</c><01:31:33.760><c> the</c><01:31:33.850><c> strokes</c><01:31:34.210><c> are</c><01:31:34.420><c> 4</c><01:31:34.840><c> so</c><01:31:35.590><c> that</c>

01:31:35.910 --> 01:31:35.920 align:start position:0%
par is 5 and the strokes are 4 so that
 

01:31:35.920 --> 01:31:38.640 align:start position:0%
par is 5 and the strokes are 4 so that
should<01:31:36.400><c> return</c><01:31:37.050><c> birdie</c><01:31:38.050><c> let's</c><01:31:38.410><c> see</c><01:31:38.530><c> what</c>

01:31:38.640 --> 01:31:38.650 align:start position:0%
should return birdie let's see what
 

01:31:38.650 --> 01:31:39.740 align:start position:0%
should return birdie let's see what
happens

01:31:39.740 --> 01:31:39.750 align:start position:0%
happens
 

01:31:39.750 --> 01:31:44.670 align:start position:0%
happens
no<01:31:41.070><c> ok</c><01:31:42.070><c> that's</c><01:31:42.430><c> not</c><01:31:42.790><c> what</c><01:31:43.090><c> I</c><01:31:43.240><c> expected</c><01:31:44.110><c> it's</c>

01:31:44.670 --> 01:31:44.680 align:start position:0%
no ok that's not what I expected it's
 

01:31:44.680 --> 01:31:48.990 align:start position:0%
no ok that's not what I expected it's
because<01:31:45.310><c> this</c><01:31:45.790><c> should</c><01:31:46.000><c> be</c><01:31:46.120><c> names</c><01:31:48.000><c> spelled</c>

01:31:48.990 --> 01:31:49.000 align:start position:0%
because this should be names spelled
 

01:31:49.000 --> 01:31:53.970 align:start position:0%
because this should be names spelled
this<01:31:49.330><c> wrong</c><01:31:52.350><c> and</c><01:31:53.350><c> that's</c><01:31:53.590><c> why</c><01:31:53.710><c> sometimes</c>

01:31:53.970 --> 01:31:53.980 align:start position:0%
this wrong and that's why sometimes
 

01:31:53.980 --> 01:31:56.550 align:start position:0%
this wrong and that's why sometimes
better<01:31:54.400><c> to</c><01:31:54.520><c> check</c><01:31:54.910><c> before</c><01:31:55.480><c> you</c><01:31:55.510><c> go</c><01:31:55.990><c> through</c>

01:31:56.550 --> 01:31:56.560 align:start position:0%
better to check before you go through
 

01:31:56.560 --> 01:31:57.990 align:start position:0%
better to check before you go through
the<01:31:56.650><c> whole</c><01:31:56.830><c> thing</c><01:31:56.860><c> you</c><01:31:57.220><c> can</c><01:31:57.370><c> test</c><01:31:57.640><c> things</c><01:31:57.850><c> as</c>

01:31:57.990 --> 01:31:58.000 align:start position:0%
the whole thing you can test things as
 

01:31:58.000 --> 01:31:59.700 align:start position:0%
the whole thing you can test things as
you<01:31:58.150><c> go</c><01:31:58.300><c> but</c><01:31:58.810><c> let's</c><01:31:59.020><c> do</c><01:31:59.260><c> that</c><01:31:59.350><c> again</c>

01:31:59.700 --> 01:31:59.710 align:start position:0%
you go but let's do that again
 

01:31:59.710 --> 01:32:06.330 align:start position:0%
you go but let's do that again
yep<01:32:00.010><c> birdie</c><01:32:00.400><c> and</c><01:32:00.760><c> if</c><01:32:01.660><c> I</c><01:32:02.040><c> type</c><01:32:03.040><c> in</c><01:32:03.360><c> 2</c><01:32:04.360><c> here</c><01:32:05.340><c> eagle</c>

01:32:06.330 --> 01:32:06.340 align:start position:0%
yep birdie and if I type in 2 here eagle
 

01:32:06.340 --> 01:32:07.650 align:start position:0%
yep birdie and if I type in 2 here eagle
if<01:32:06.550><c> I</c>

01:32:07.650 --> 01:32:07.660 align:start position:0%
if I
 

01:32:07.660 --> 01:32:09.480 align:start position:0%
if I
type<01:32:07.840><c> and</c><01:32:08.140><c> eat</c><01:32:08.470><c> it's</c><01:32:08.800><c> probably</c><01:32:09.100><c> that</c><01:32:09.160><c> tell</c><01:32:09.400><c> us</c>

01:32:09.480 --> 01:32:09.490 align:start position:0%
type and eat it's probably that tell us
 

01:32:09.490 --> 01:32:13.260 align:start position:0%
type and eat it's probably that tell us
to<01:32:09.640><c> go</c><01:32:09.850><c> home</c><01:32:10.120><c> go</c><01:32:11.020><c> home</c><01:32:11.050><c> yep</c><01:32:12.070><c> we</c><01:32:12.580><c> just</c><01:32:12.850><c> completed</c>

01:32:13.260 --> 01:32:13.270 align:start position:0%
to go home go home yep we just completed
 

01:32:13.270 --> 01:32:17.840 align:start position:0%
to go home go home yep we just completed
this<01:32:13.420><c> challenge</c>

01:32:17.840 --> 01:32:17.850 align:start position:0%
 
 

01:32:17.850 --> 01:32:20.330 align:start position:0%
 
instead<01:32:18.570><c> of</c><01:32:18.660><c> using</c><01:32:18.840><c> chained</c><01:32:19.410><c> else</c><01:32:19.980><c> if</c>

01:32:20.330 --> 01:32:20.340 align:start position:0%
instead of using chained else if
 

01:32:20.340 --> 01:32:22.340 align:start position:0%
instead of using chained else if
statements<01:32:21.120><c> you</c><01:32:21.360><c> can</c><01:32:21.540><c> use</c><01:32:21.750><c> a</c><01:32:21.780><c> switch</c>

01:32:22.340 --> 01:32:22.350 align:start position:0%
statements you can use a switch
 

01:32:22.350 --> 01:32:24.980 align:start position:0%
statements you can use a switch
statement<01:32:22.680><c> a</c><01:32:23.310><c> switch</c><01:32:24.030><c> statement</c><01:32:24.180><c> test</c><01:32:24.750><c> of</c>

01:32:24.980 --> 01:32:24.990 align:start position:0%
statement a switch statement test of
 

01:32:24.990 --> 01:32:27.200 align:start position:0%
statement a switch statement test of
value<01:32:25.380><c> and</c><01:32:25.530><c> can</c><01:32:25.680><c> have</c><01:32:25.920><c> many</c><01:32:26.160><c> case</c><01:32:26.550><c> statements</c>

01:32:27.200 --> 01:32:27.210 align:start position:0%
value and can have many case statements
 

01:32:27.210 --> 01:32:30.320 align:start position:0%
value and can have many case statements
which<01:32:27.630><c> define</c><01:32:28.140><c> various</c><01:32:28.530><c> possible</c><01:32:29.010><c> values</c><01:32:29.520><c> so</c>

01:32:30.320 --> 01:32:30.330 align:start position:0%
which define various possible values so
 

01:32:30.330 --> 01:32:32.570 align:start position:0%
which define various possible values so
let<01:32:30.540><c> me</c><01:32:30.630><c> show</c><01:32:30.780><c> you</c><01:32:30.840><c> how</c><01:32:31.020><c> that</c><01:32:31.260><c> works</c><01:32:31.580><c> here</c>

01:32:32.570 --> 01:32:32.580 align:start position:0%
let me show you how that works here
 

01:32:32.580 --> 01:32:34.070 align:start position:0%
let me show you how that works here
we're<01:32:32.820><c> going</c><01:32:32.970><c> to</c><01:32:33.180><c> write</c><01:32:33.360><c> a</c><01:32:33.390><c> switch</c><01:32:33.900><c> statement</c>

01:32:34.070 --> 01:32:34.080 align:start position:0%
we're going to write a switch statement
 

01:32:34.080 --> 01:32:36.350 align:start position:0%
we're going to write a switch statement
which<01:32:34.620><c> tests</c><01:32:35.130><c> Val</c><01:32:35.340><c> and</c><01:32:35.580><c> sets</c><01:32:35.790><c> the</c><01:32:35.940><c> answer</c><01:32:36.270><c> to</c>

01:32:36.350 --> 01:32:36.360 align:start position:0%
which tests Val and sets the answer to
 

01:32:36.360 --> 01:32:38.630 align:start position:0%
which tests Val and sets the answer to
the<01:32:36.450><c> following</c><01:32:36.600><c> conditions</c><01:32:37.380><c> if</c><01:32:37.920><c> we</c><01:32:38.070><c> pass</c><01:32:38.490><c> in</c>

01:32:38.630 --> 01:32:38.640 align:start position:0%
the following conditions if we pass in
 

01:32:38.640 --> 01:32:41.030 align:start position:0%
the following conditions if we pass in
one<01:32:38.940><c> the</c><01:32:39.570><c> answer</c><01:32:39.900><c> should</c><01:32:40.020><c> be</c><01:32:40.080><c> alpha</c><01:32:40.320><c> if</c><01:32:40.830><c> we</c>

01:32:41.030 --> 01:32:41.040 align:start position:0%
one the answer should be alpha if we
 

01:32:41.040 --> 01:32:43.310 align:start position:0%
one the answer should be alpha if we
pass<01:32:41.250><c> on</c><01:32:41.400><c> to</c><01:32:41.610><c> the</c><01:32:42.330><c> answer</c><01:32:42.510><c> should</c><01:32:42.660><c> be</c><01:32:42.720><c> beta</c><01:32:43.020><c> and</c>

01:32:43.310 --> 01:32:43.320 align:start position:0%
pass on to the answer should be beta and
 

01:32:43.320 --> 01:32:45.860 align:start position:0%
pass on to the answer should be beta and
so<01:32:43.860><c> on</c><01:32:44.040><c> so</c><01:32:44.730><c> let</c><01:32:45.090><c> me</c><01:32:45.150><c> show</c><01:32:45.270><c> you</c><01:32:45.360><c> how</c><01:32:45.510><c> that</c><01:32:45.570><c> works</c>

01:32:45.860 --> 01:32:45.870 align:start position:0%
so on so let me show you how that works
 

01:32:45.870 --> 01:32:48.140 align:start position:0%
so on so let me show you how that works
we'll<01:32:46.650><c> just</c><01:32:46.950><c> type</c><01:32:47.190><c> in</c><01:32:47.370><c> the</c><01:32:47.490><c> word</c><01:32:47.520><c> switch</c>

01:32:48.140 --> 01:32:48.150 align:start position:0%
we'll just type in the word switch
 

01:32:48.150 --> 01:32:50.780 align:start position:0%
we'll just type in the word switch
that's<01:32:48.420><c> a</c><01:32:48.600><c> key</c><01:32:48.840><c> word</c><01:32:49.050><c> here</c><01:32:49.080><c> and</c><01:32:49.620><c> we're</c><01:32:50.280><c> testing</c>

01:32:50.780 --> 01:32:50.790 align:start position:0%
that's a key word here and we're testing
 

01:32:50.790 --> 01:32:52.850 align:start position:0%
that's a key word here and we're testing
the<01:32:51.270><c> valve</c><01:32:51.660><c> that's</c><01:32:51.990><c> passed</c><01:32:52.260><c> into</c><01:32:52.530><c> this</c>

01:32:52.850 --> 01:32:52.860 align:start position:0%
the valve that's passed into this
 

01:32:52.860 --> 01:32:56.300 align:start position:0%
the valve that's passed into this
function<01:32:53.490><c> so</c><01:32:53.840><c> it</c><01:32:54.840><c> starts</c><01:32:55.500><c> off</c><01:32:55.680><c> kind</c><01:32:55.980><c> of</c><01:32:56.070><c> like</c>

01:32:56.300 --> 01:32:56.310 align:start position:0%
function so it starts off kind of like
 

01:32:56.310 --> 01:33:00.500 align:start position:0%
function so it starts off kind of like
an<01:32:56.460><c> if</c><01:32:56.760><c> statement</c><01:32:57.150><c> and</c><01:32:57.740><c> right</c><01:32:58.740><c> now</c><01:32:59.240><c> so</c><01:33:00.240><c> we're</c>

01:33:00.500 --> 01:33:00.510 align:start position:0%
an if statement and right now so we're
 

01:33:00.510 --> 01:33:03.020 align:start position:0%
an if statement and right now so we're
gonna<01:33:00.630><c> compare</c><01:33:01.170><c> the</c><01:33:01.740><c> Val</c><01:33:02.040><c> to</c><01:33:02.580><c> the</c><01:33:02.700><c> different</c>

01:33:03.020 --> 01:33:03.030 align:start position:0%
gonna compare the Val to the different
 

01:33:03.030 --> 01:33:05.900 align:start position:0%
gonna compare the Val to the different
cases<01:33:03.270><c> that</c><01:33:04.080><c> we</c><01:33:04.200><c> have</c><01:33:04.470><c> so</c><01:33:05.100><c> we'll</c><01:33:05.280><c> have</c><01:33:05.430><c> case</c>

01:33:05.900 --> 01:33:05.910 align:start position:0%
cases that we have so we'll have case
 

01:33:05.910 --> 01:33:08.960 align:start position:0%
cases that we have so we'll have case
and<01:33:06.590><c> the</c><01:33:07.590><c> first</c><01:33:07.860><c> number</c><01:33:08.160><c> is</c><01:33:08.430><c> going</c><01:33:08.550><c> to</c><01:33:08.640><c> be</c><01:33:08.700><c> one</c>

01:33:08.960 --> 01:33:08.970 align:start position:0%
and the first number is going to be one
 

01:33:08.970 --> 01:33:13.190 align:start position:0%
and the first number is going to be one
so<01:33:09.830><c> here</c><01:33:10.830><c> we're</c><01:33:11.100><c> saying</c><01:33:11.340><c> if</c><01:33:11.610><c> the</c><01:33:12.240><c> case</c><01:33:12.510><c> of</c><01:33:12.930><c> Val</c>

01:33:13.190 --> 01:33:13.200 align:start position:0%
so here we're saying if the case of Val
 

01:33:13.200 --> 01:33:17.090 align:start position:0%
so here we're saying if the case of Val
is<01:33:13.530><c> 1</c><01:33:13.860><c> if</c><01:33:14.160><c> Val</c><01:33:14.520><c> equals</c><01:33:15.000><c> 1</c><01:33:15.720><c> and</c><01:33:15.990><c> it's</c><01:33:16.530><c> using</c><01:33:16.830><c> the</c>

01:33:17.090 --> 01:33:17.100 align:start position:0%
is 1 if Val equals 1 and it's using the
 

01:33:17.100 --> 01:33:19.310 align:start position:0%
is 1 if Val equals 1 and it's using the
strict<01:33:17.490><c> equality</c><01:33:17.640><c> operator</c><01:33:18.540><c> so</c><01:33:19.020><c> it's</c><01:33:19.200><c> like</c>

01:33:19.310 --> 01:33:19.320 align:start position:0%
strict equality operator so it's like
 

01:33:19.320 --> 01:33:21.680 align:start position:0%
strict equality operator so it's like
that<01:33:19.470><c> equals</c><01:33:19.860><c> equals</c><01:33:20.220><c> equals</c><01:33:20.760><c> it's</c><01:33:21.420><c> going</c><01:33:21.630><c> to</c>

01:33:21.680 --> 01:33:21.690 align:start position:0%
that equals equals equals it's going to
 

01:33:21.690 --> 01:33:23.300 align:start position:0%
that equals equals equals it's going to
make<01:33:21.840><c> sure</c><01:33:21.870><c> that</c><01:33:22.230><c> the</c><01:33:22.380><c> type</c><01:33:22.710><c> of</c><01:33:22.740><c> the</c><01:33:23.100><c> variable</c>

01:33:23.300 --> 01:33:23.310 align:start position:0%
make sure that the type of the variable
 

01:33:23.310 --> 01:33:26.090 align:start position:0%
make sure that the type of the variable
are<01:33:23.880><c> the</c><01:33:24.030><c> same</c><01:33:24.240><c> so</c><01:33:24.570><c> a</c><01:33:24.600><c> string</c><01:33:25.320><c> 1</c><01:33:25.620><c> and</c><01:33:25.770><c> a</c><01:33:25.800><c> number</c>

01:33:26.090 --> 01:33:26.100 align:start position:0%
are the same so a string 1 and a number
 

01:33:26.100 --> 01:33:29.690 align:start position:0%
are the same so a string 1 and a number
1<01:33:26.310><c> will</c><01:33:26.490><c> not</c><01:33:26.640><c> be</c><01:33:26.700><c> equal</c><01:33:26.990><c> but</c><01:33:27.990><c> if</c><01:33:28.230><c> the</c><01:33:28.560><c> case</c><01:33:28.830><c> is</c><01:33:29.160><c> 1</c>

01:33:29.690 --> 01:33:29.700 align:start position:0%
1 will not be equal but if the case is 1
 

01:33:29.700 --> 01:33:35.120 align:start position:0%
1 will not be equal but if the case is 1
then<01:33:30.600><c> we're</c><01:33:31.380><c> going</c><01:33:31.740><c> to</c><01:33:32.060><c> set</c><01:33:33.060><c> answer</c><01:33:33.690><c> to</c><01:33:34.350><c> equal</c>

01:33:35.120 --> 01:33:35.130 align:start position:0%
then we're going to set answer to equal
 

01:33:35.130 --> 01:33:40.610 align:start position:0%
then we're going to set answer to equal
alpha<01:33:37.100><c> we'll</c><01:33:38.100><c> just</c><01:33:38.340><c> use</c><01:33:38.520><c> the</c><01:33:38.810><c> like</c><01:33:39.810><c> this</c><01:33:39.990><c> alpha</c>

01:33:40.610 --> 01:33:40.620 align:start position:0%
alpha we'll just use the like this alpha
 

01:33:40.620 --> 01:33:47.300 align:start position:0%
alpha we'll just use the like this alpha
and<01:33:41.690><c> then</c><01:33:43.730><c> we</c><01:33:44.730><c> are</c><01:33:44.850><c> going</c><01:33:45.060><c> to</c><01:33:45.150><c> break</c><01:33:46.310><c> break</c>

01:33:47.300 --> 01:33:47.310 align:start position:0%
and then we are going to break break
 

01:33:47.310 --> 01:33:49.580 align:start position:0%
and then we are going to break break
means<01:33:47.640><c> that</c><01:33:47.850><c> we're</c><01:33:48.030><c> at</c><01:33:48.300><c> the</c><01:33:48.480><c> end</c><01:33:48.510><c> of</c><01:33:49.020><c> that</c><01:33:49.200><c> case</c>

01:33:49.580 --> 01:33:49.590 align:start position:0%
means that we're at the end of that case
 

01:33:49.590 --> 01:33:52.250 align:start position:0%
means that we're at the end of that case
statement<01:33:50.190><c> and</c><01:33:50.460><c> once</c><01:33:51.000><c> you</c><01:33:51.150><c> break</c><01:33:51.420><c> it</c><01:33:51.660><c> it</c><01:33:51.870><c> just</c>

01:33:52.250 --> 01:33:52.260 align:start position:0%
statement and once you break it it just
 

01:33:52.260 --> 01:33:54.500 align:start position:0%
statement and once you break it it just
goes<01:33:53.070><c> to</c><01:33:53.430><c> the</c><01:33:53.460><c> end</c><01:33:53.730><c> of</c><01:33:53.940><c> the</c><01:33:54.060><c> switch</c><01:33:54.360><c> statement</c>

01:33:54.500 --> 01:33:54.510 align:start position:0%
goes to the end of the switch statement
 

01:33:54.510 --> 01:33:56.360 align:start position:0%
goes to the end of the switch statement
it<01:33:54.870><c> doesn't</c><01:33:55.140><c> evaluate</c><01:33:55.350><c> anything</c><01:33:55.890><c> else</c><01:33:56.070><c> in</c><01:33:56.250><c> the</c>

01:33:56.360 --> 01:33:56.370 align:start position:0%
it doesn't evaluate anything else in the
 

01:33:56.370 --> 01:33:59.390 align:start position:0%
it doesn't evaluate anything else in the
switch<01:33:56.610><c> statement</c><01:33:56.810><c> so</c><01:33:57.810><c> we're</c><01:33:58.470><c> also</c><01:33:58.710><c> going</c><01:33:59.310><c> to</c>

01:33:59.390 --> 01:33:59.400 align:start position:0%
switch statement so we're also going to
 

01:33:59.400 --> 01:34:04.010 align:start position:0%
switch statement so we're also going to
have<01:34:00.110><c> case</c><01:34:01.130><c> two</c><01:34:02.130><c> and</c><01:34:02.670><c> one</c><01:34:03.510><c> thing</c><01:34:03.690><c> I</c><01:34:03.780><c> forgot</c>

01:34:04.010 --> 01:34:04.020 align:start position:0%
have case two and one thing I forgot
 

01:34:04.020 --> 01:34:06.260 align:start position:0%
have case two and one thing I forgot
that<01:34:04.590><c> we're</c><01:34:05.040><c> gonna</c><01:34:05.130><c> is</c><01:34:05.310><c> going</c><01:34:05.430><c> to</c><01:34:05.490><c> end</c><01:34:05.790><c> in</c><01:34:06.030><c> that</c>

01:34:06.260 --> 01:34:06.270 align:start position:0%
that we're gonna is going to end in that
 

01:34:06.270 --> 01:34:07.820 align:start position:0%
that we're gonna is going to end in that
so<01:34:06.600><c> it's</c><01:34:06.750><c> easier</c><01:34:07.080><c> to</c><01:34:07.110><c> see</c><01:34:07.410><c> the</c><01:34:07.530><c> different</c>

01:34:07.820 --> 01:34:07.830 align:start position:0%
so it's easier to see the different
 

01:34:07.830 --> 01:34:12.470 align:start position:0%
so it's easier to see the different
cases<01:34:08.100><c> and</c><01:34:09.290><c> case</c><01:34:10.290><c> 2</c><01:34:10.650><c> the</c><01:34:10.920><c> answer</c><01:34:11.580><c> is</c><01:34:12.030><c> going</c><01:34:12.360><c> to</c>

01:34:12.470 --> 01:34:12.480 align:start position:0%
cases and case 2 the answer is going to
 

01:34:12.480 --> 01:34:16.910 align:start position:0%
cases and case 2 the answer is going to
set<01:34:12.720><c> equal</c><01:34:12.930><c> to</c><01:34:13.220><c> beta</c><01:34:14.220><c> and</c><01:34:15.320><c> then</c><01:34:16.320><c> we</c><01:34:16.500><c> always</c>

01:34:16.910 --> 01:34:16.920 align:start position:0%
set equal to beta and then we always
 

01:34:16.920 --> 01:34:19.460 align:start position:0%
set equal to beta and then we always
need<01:34:17.130><c> the</c><01:34:17.250><c> break</c><01:34:17.490><c> statement</c><01:34:17.670><c> if</c><01:34:18.540><c> you</c><01:34:18.960><c> don't</c>

01:34:19.460 --> 01:34:19.470 align:start position:0%
need the break statement if you don't
 

01:34:19.470 --> 01:34:22.550 align:start position:0%
need the break statement if you don't
have<01:34:19.710><c> a</c><01:34:19.740><c> break</c><01:34:20.040><c> statement</c><01:34:20.370><c> it</c><01:34:20.970><c> will</c><01:34:21.420><c> just</c><01:34:21.900><c> run</c>

01:34:22.550 --> 01:34:22.560 align:start position:0%
have a break statement it will just run
 

01:34:22.560 --> 01:34:24.710 align:start position:0%
have a break statement it will just run
through<01:34:23.280><c> to</c><01:34:23.460><c> the</c><01:34:23.550><c> next</c><01:34:23.910><c> case</c><01:34:24.210><c> statement</c>

01:34:24.710 --> 01:34:24.720 align:start position:0%
through to the next case statement
 

01:34:24.720 --> 01:34:28.400 align:start position:0%
through to the next case statement
automatically<01:34:25.500><c> so</c><01:34:26.010><c> if</c><01:34:26.400><c> the</c><01:34:27.060><c> case</c><01:34:27.360><c> was</c><01:34:27.630><c> one</c><01:34:28.050><c> and</c>

01:34:28.400 --> 01:34:28.410 align:start position:0%
automatically so if the case was one and
 

01:34:28.410 --> 01:34:31.010 align:start position:0%
automatically so if the case was one and
you<01:34:29.070><c> did</c><01:34:29.250><c> not</c><01:34:29.400><c> have</c><01:34:29.520><c> a</c><01:34:29.580><c> break</c><01:34:29.880><c> here</c><01:34:30.240><c> first</c><01:34:30.840><c> who</c>

01:34:31.010 --> 01:34:31.020 align:start position:0%
you did not have a break here first who
 

01:34:31.020 --> 01:34:31.790 align:start position:0%
you did not have a break here first who
would<01:34:31.140><c> set</c><01:34:31.380><c> the</c><01:34:31.500><c> and</c>

01:34:31.790 --> 01:34:31.800 align:start position:0%
would set the and
 

01:34:31.800 --> 01:34:34.370 align:start position:0%
would set the and
alpha<01:34:32.340><c> and</c><01:34:32.550><c> then</c><01:34:33.270><c> it</c><01:34:33.540><c> would</c><01:34:33.659><c> set</c><01:34:33.900><c> the</c><01:34:33.929><c> answer</c>

01:34:34.370 --> 01:34:34.380 align:start position:0%
alpha and then it would set the answer
 

01:34:34.380 --> 01:34:36.649 align:start position:0%
alpha and then it would set the answer
to<01:34:34.500><c> beta</c><01:34:34.739><c> it</c><01:34:35.099><c> would</c><01:34:35.460><c> just</c><01:34:35.639><c> skip</c><01:34:35.909><c> over</c><01:34:36.150><c> right</c><01:34:36.510><c> to</c>

01:34:36.649 --> 01:34:36.659 align:start position:0%
to beta it would just skip over right to
 

01:34:36.659 --> 01:34:38.600 align:start position:0%
to beta it would just skip over right to
the<01:34:36.750><c> next</c><01:34:37.020><c> case</c><01:34:37.230><c> Thema</c><01:34:37.500><c> but</c><01:34:37.679><c> since</c><01:34:37.860><c> the</c><01:34:38.340><c> break</c>

01:34:38.600 --> 01:34:38.610 align:start position:0%
the next case Thema but since the break
 

01:34:38.610 --> 01:34:41.510 align:start position:0%
the next case Thema but since the break
is<01:34:38.820><c> here</c><01:34:38.849><c> it's</c><01:34:39.690><c> going</c><01:34:40.079><c> to</c><01:34:40.290><c> go</c><01:34:41.010><c> out</c><01:34:41.250><c> of</c><01:34:41.400><c> the</c>

01:34:41.510 --> 01:34:41.520 align:start position:0%
is here it's going to go out of the
 

01:34:41.520 --> 01:34:43.490 align:start position:0%
is here it's going to go out of the
switch<01:34:41.790><c> damn</c><01:34:42.030><c> it</c><01:34:42.179><c> completely</c><01:34:42.750><c> so</c><01:34:42.960><c> it</c><01:34:43.170><c> would</c><01:34:43.290><c> go</c>

01:34:43.490 --> 01:34:43.500 align:start position:0%
switch damn it completely so it would go
 

01:34:43.500 --> 01:34:45.740 align:start position:0%
switch damn it completely so it would go
start<01:34:44.250><c> writing</c><01:34:44.460><c> the</c><01:34:44.520><c> code</c><01:34:44.699><c> after</c><01:34:45.210><c> this</c><01:34:45.389><c> last</c>

01:34:45.740 --> 01:34:45.750 align:start position:0%
start writing the code after this last
 

01:34:45.750 --> 01:34:49.609 align:start position:0%
start writing the code after this last
curly<01:34:46.290><c> bracket</c><01:34:46.800><c> so</c><01:34:47.760><c> now</c><01:34:48.690><c> we're</c><01:34:49.170><c> going</c><01:34:49.260><c> to</c><01:34:49.320><c> case</c>

01:34:49.609 --> 01:34:49.619 align:start position:0%
curly bracket so now we're going to case
 

01:34:49.619 --> 01:34:52.100 align:start position:0%
curly bracket so now we're going to case
three<01:34:50.400><c> we'll</c><01:34:50.880><c> just</c><01:34:51.090><c> do</c><01:34:51.210><c> some</c><01:34:51.420><c> copying</c><01:34:51.929><c> and</c>

01:34:52.100 --> 01:34:52.110 align:start position:0%
three we'll just do some copying and
 

01:34:52.110 --> 01:34:57.709 align:start position:0%
three we'll just do some copying and
pasting<01:34:52.380><c> here</c><01:34:54.199><c> and</c><01:34:55.969><c> we're</c><01:34:56.969><c> gonna</c><01:34:57.030><c> have</c><01:34:57.420><c> four</c>

01:34:57.709 --> 01:34:57.719 align:start position:0%
pasting here and we're gonna have four
 

01:34:57.719 --> 01:34:59.330 align:start position:0%
pasting here and we're gonna have four
cases<01:34:58.139><c> I'll</c><01:34:58.320><c> just</c><01:34:58.469><c> do</c><01:34:58.650><c> the</c><01:34:58.800><c> rest</c><01:34:58.980><c> of</c><01:34:59.070><c> the</c><01:34:59.130><c> cop</c>

01:34:59.330 --> 01:34:59.340 align:start position:0%
cases I'll just do the rest of the cop
 

01:34:59.340 --> 01:35:02.350 align:start position:0%
cases I'll just do the rest of the cop
the<01:34:59.550><c> pasting</c><01:35:00.030><c> here</c><01:35:00.239><c> so</c><01:35:00.690><c> we'll</c><01:35:00.900><c> have</c><01:35:01.020><c> three</c><01:35:01.500><c> and</c>

01:35:02.350 --> 01:35:02.360 align:start position:0%
the pasting here so we'll have three and
 

01:35:02.360 --> 01:35:08.330 align:start position:0%
the pasting here so we'll have three and
four<01:35:03.739><c> alpha</c><01:35:04.969><c> beta</c><01:35:05.969><c> and</c><01:35:06.500><c> then</c><01:35:07.500><c> we</c><01:35:07.650><c> have</c><01:35:07.829><c> gamma</c>

01:35:08.330 --> 01:35:08.340 align:start position:0%
four alpha beta and then we have gamma
 

01:35:08.340 --> 01:35:16.040 align:start position:0%
four alpha beta and then we have gamma
and<01:35:10.010><c> Delta</c><01:35:14.030><c> and</c><01:35:15.030><c> we</c><01:35:15.150><c> know</c><01:35:15.360><c> that</c><01:35:15.570><c> the</c><01:35:15.719><c> switch</c>

01:35:16.040 --> 01:35:16.050 align:start position:0%
and Delta and we know that the switch
 

01:35:16.050 --> 01:35:19.729 align:start position:0%
and Delta and we know that the switch
statement<01:35:16.559><c> is</c><01:35:16.739><c> over</c><01:35:17.780><c> because</c><01:35:18.780><c> we</c><01:35:19.050><c> have</c><01:35:19.380><c> this</c>

01:35:19.729 --> 01:35:19.739 align:start position:0%
statement is over because we have this
 

01:35:19.739 --> 01:35:21.950 align:start position:0%
statement is over because we have this
final<01:35:20.369><c> curly</c><01:35:20.760><c> bracket</c><01:35:21.239><c> and</c><01:35:21.329><c> then</c><01:35:21.809><c> we're</c><01:35:21.929><c> just</c>

01:35:21.950 --> 01:35:21.960 align:start position:0%
final curly bracket and then we're just
 

01:35:21.960 --> 01:35:25.729 align:start position:0%
final curly bracket and then we're just
going<01:35:22.199><c> to</c><01:35:22.230><c> return</c><01:35:22.590><c> answer</c><01:35:23.300><c> so</c><01:35:24.300><c> let's</c><01:35:25.139><c> do</c><01:35:25.440><c> some</c>

01:35:25.729 --> 01:35:25.739 align:start position:0%
going to return answer so let's do some
 

01:35:25.739 --> 01:35:27.379 align:start position:0%
going to return answer so let's do some
tests<01:35:26.130><c> to</c><01:35:26.309><c> really</c><01:35:26.670><c> test</c><01:35:26.940><c> this</c><01:35:27.090><c> we're</c><01:35:27.239><c> going</c><01:35:27.329><c> to</c>

01:35:27.379 --> 01:35:27.389 align:start position:0%
tests to really test this we're going to
 

01:35:27.389 --> 01:35:30.439 align:start position:0%
tests to really test this we're going to
have<01:35:27.480><c> to</c><01:35:27.690><c> add</c><01:35:27.840><c> a</c><01:35:27.869><c> console</c><01:35:28.590><c> dot</c><01:35:28.770><c> log</c><01:35:28.829><c> here</c><01:35:29.790><c> to</c>

01:35:30.439 --> 01:35:30.449 align:start position:0%
have to add a console dot log here to
 

01:35:30.449 --> 01:35:33.080 align:start position:0%
have to add a console dot log here to
log<01:35:30.719><c> what</c><01:35:30.929><c> it's</c><01:35:31.079><c> going</c><01:35:31.199><c> to</c><01:35:31.260><c> be</c><01:35:31.530><c> and</c><01:35:31.820><c> I'll</c><01:35:32.820><c> run</c>

01:35:33.080 --> 01:35:33.090 align:start position:0%
log what it's going to be and I'll run
 

01:35:33.090 --> 01:35:39.560 align:start position:0%
log what it's going to be and I'll run
this<01:35:33.679><c> alpha</c><01:35:34.679><c> good</c><01:35:35.070><c> now</c><01:35:35.670><c> two</c><01:35:36.139><c> should</c><01:35:37.139><c> be</c><01:35:37.400><c> beta</c><01:35:38.570><c> 3</c>

01:35:39.560 --> 01:35:39.570 align:start position:0%
this alpha good now two should be beta 3
 

01:35:39.570 --> 01:35:43.430 align:start position:0%
this alpha good now two should be beta 3
should<01:35:40.290><c> be</c><01:35:40.790><c> gamma</c><01:35:41.790><c> good</c><01:35:42.329><c> and</c><01:35:42.630><c> we'll</c><01:35:43.260><c> just</c>

01:35:43.430 --> 01:35:43.440 align:start position:0%
should be gamma good and we'll just
 

01:35:43.440 --> 01:35:44.479 align:start position:0%
should be gamma good and we'll just
assume<01:35:43.679><c> for</c><01:35:43.920><c> is</c><01:35:44.010><c> correct</c>

01:35:44.479 --> 01:35:44.489 align:start position:0%
assume for is correct
 

01:35:44.489 --> 01:35:48.780 align:start position:0%
assume for is correct
so<01:35:44.730><c> we're</c><01:35:45.000><c> done</c>

01:35:48.780 --> 01:35:48.790 align:start position:0%
 
 

01:35:48.790 --> 01:35:51.000 align:start position:0%
 
now<01:35:49.420><c> I'll</c><01:35:49.570><c> talk</c><01:35:49.780><c> to</c><01:35:49.840><c> you</c><01:35:50.050><c> about</c><01:35:50.170><c> the</c><01:35:50.440><c> default</c>

01:35:51.000 --> 01:35:51.010 align:start position:0%
now I'll talk to you about the default
 

01:35:51.010 --> 01:35:53.790 align:start position:0%
now I'll talk to you about the default
option<01:35:51.610><c> in</c><01:35:51.760><c> a</c><01:35:51.880><c> switch</c><01:35:52.150><c> statement</c><01:35:52.360><c> the</c><01:35:53.350><c> default</c>

01:35:53.790 --> 01:35:53.800 align:start position:0%
option in a switch statement the default
 

01:35:53.800 --> 01:35:56.100 align:start position:0%
option in a switch statement the default
option<01:35:54.250><c> is</c><01:35:54.340><c> kind</c><01:35:54.610><c> of</c><01:35:54.640><c> like</c><01:35:54.880><c> else</c><01:35:55.180><c> in</c><01:35:55.660><c> an</c>

01:35:56.100 --> 01:35:56.110 align:start position:0%
option is kind of like else in an
 

01:35:56.110 --> 01:35:59.400 align:start position:0%
option is kind of like else in an
if-else<01:35:56.620><c> statement</c><01:35:57.400><c> so</c><01:35:58.150><c> here's</c><01:35:58.750><c> a</c><01:35:58.960><c> switch</c>

01:35:59.400 --> 01:35:59.410 align:start position:0%
if-else statement so here's a switch
 

01:35:59.410 --> 01:36:01.110 align:start position:0%
if-else statement so here's a switch
statement<01:35:59.560><c> that's</c><01:36:00.070><c> very</c><01:36:00.280><c> similar</c><01:36:00.580><c> to</c><01:36:00.850><c> the</c><01:36:00.940><c> one</c>

01:36:01.110 --> 01:36:01.120 align:start position:0%
statement that's very similar to the one
 

01:36:01.120 --> 01:36:03.420 align:start position:0%
statement that's very similar to the one
we<01:36:01.240><c> already</c><01:36:01.510><c> saw</c><01:36:01.780><c> and</c><01:36:02.140><c> it's</c><01:36:02.800><c> inside</c><01:36:03.220><c> this</c>

01:36:03.420 --> 01:36:03.430 align:start position:0%
we already saw and it's inside this
 

01:36:03.430 --> 01:36:05.340 align:start position:0%
we already saw and it's inside this
function<01:36:04.000><c> where</c><01:36:04.150><c> we</c><01:36:04.180><c> pass</c><01:36:04.570><c> in</c><01:36:04.750><c> a</c><01:36:04.840><c> value</c><01:36:04.870><c> into</c>

01:36:05.340 --> 01:36:05.350 align:start position:0%
function where we pass in a value into
 

01:36:05.350 --> 01:36:07.170 align:start position:0%
function where we pass in a value into
the<01:36:05.500><c> function</c><01:36:05.530><c> and</c><01:36:06.280><c> we're</c><01:36:06.580><c> going</c><01:36:06.700><c> to</c><01:36:06.760><c> check</c><01:36:06.970><c> if</c>

01:36:07.170 --> 01:36:07.180 align:start position:0%
the function and we're going to check if
 

01:36:07.180 --> 01:36:09.630 align:start position:0%
the function and we're going to check if
the<01:36:07.300><c> value</c><01:36:07.450><c> equals</c><01:36:08.140><c> a</c><01:36:08.260><c> if</c><01:36:08.530><c> it</c><01:36:08.650><c> equals</c><01:36:08.740><c> a</c><01:36:09.100><c> the</c>

01:36:09.630 --> 01:36:09.640 align:start position:0%
the value equals a if it equals a the
 

01:36:09.640 --> 01:36:11.730 align:start position:0%
the value equals a if it equals a the
answer<01:36:09.940><c> is</c><01:36:10.030><c> gonna</c><01:36:10.360><c> be</c><01:36:10.480><c> set</c><01:36:10.720><c> to</c><01:36:10.810><c> Apple</c><01:36:11.230><c> B</c>

01:36:11.730 --> 01:36:11.740 align:start position:0%
answer is gonna be set to Apple B
 

01:36:11.740 --> 01:36:15.420 align:start position:0%
answer is gonna be set to Apple B
intercept<01:36:12.610><c> the</c><01:36:12.730><c> birds</c><01:36:12.970><c> see</c><01:36:13.390><c> cat</c><01:36:14.110><c> so</c><01:36:14.950><c> in</c><01:36:15.280><c> this</c>

01:36:15.420 --> 01:36:15.430 align:start position:0%
intercept the birds see cat so in this
 

01:36:15.430 --> 01:36:18.960 align:start position:0%
intercept the birds see cat so in this
example<01:36:15.990><c> we</c><01:36:16.990><c> can</c><01:36:17.020><c> see</c><01:36:17.440><c> that</c><01:36:17.470><c> we</c><01:36:18.280><c> passed</c><01:36:18.700><c> in</c>

01:36:18.960 --> 01:36:18.970 align:start position:0%
example we can see that we passed in
 

01:36:18.970 --> 01:36:23.310 align:start position:0%
example we can see that we passed in
here<01:36:19.480><c> we</c><01:36:20.020><c> pass</c><01:36:20.260><c> in</c><01:36:20.470><c> a</c><01:36:20.770><c> and</c><01:36:21.130><c> it</c><01:36:22.090><c> returned</c><01:36:22.690><c> Apple</c>

01:36:23.310 --> 01:36:23.320 align:start position:0%
here we pass in a and it returned Apple
 

01:36:23.320 --> 01:36:25.950 align:start position:0%
here we pass in a and it returned Apple
because<01:36:24.040><c> that</c><01:36:24.640><c> was</c><01:36:24.790><c> one</c><01:36:24.940><c> of</c><01:36:24.970><c> the</c><01:36:25.090><c> options</c><01:36:25.240><c> but</c>

01:36:25.950 --> 01:36:25.960 align:start position:0%
because that was one of the options but
 

01:36:25.960 --> 01:36:28.290 align:start position:0%
because that was one of the options but
what<01:36:26.200><c> if</c><01:36:26.320><c> we</c><01:36:26.470><c> pass</c><01:36:26.740><c> in</c><01:36:26.980><c> something</c><01:36:27.250><c> else</c><01:36:27.610><c> if</c><01:36:27.910><c> I</c>

01:36:28.290 --> 01:36:28.300 align:start position:0%
what if we pass in something else if I
 

01:36:28.300 --> 01:36:31.230 align:start position:0%
what if we pass in something else if I
pass<01:36:28.600><c> in</c><01:36:28.630><c> the</c><01:36:29.020><c> number</c><01:36:29.200><c> two</c><01:36:29.680><c> here</c><01:36:30.250><c> it's</c><01:36:31.030><c> going</c>

01:36:31.230 --> 01:36:31.240 align:start position:0%
pass in the number two here it's going
 

01:36:31.240 --> 01:36:33.330 align:start position:0%
pass in the number two here it's going
to<01:36:31.300><c> return</c><01:36:31.600><c> an</c><01:36:31.750><c> empty</c><01:36:32.050><c> string</c><01:36:32.380><c> that's</c><01:36:32.950><c> because</c>

01:36:33.330 --> 01:36:33.340 align:start position:0%
to return an empty string that's because
 

01:36:33.340 --> 01:36:35.340 align:start position:0%
to return an empty string that's because
the<01:36:33.490><c> answer</c><01:36:33.970><c> is</c><01:36:34.000><c> set</c><01:36:34.300><c> to</c><01:36:34.420><c> an</c><01:36:34.510><c> empty</c><01:36:34.720><c> string</c><01:36:35.080><c> and</c>

01:36:35.340 --> 01:36:35.350 align:start position:0%
the answer is set to an empty string and
 

01:36:35.350 --> 01:36:37.830 align:start position:0%
the answer is set to an empty string and
we<01:36:35.650><c> never</c><01:36:35.920><c> override</c><01:36:36.610><c> the</c><01:36:36.850><c> answer</c><01:36:37.270><c> here</c><01:36:37.540><c> so</c><01:36:37.570><c> it</c>

01:36:37.830 --> 01:36:37.840 align:start position:0%
we never override the answer here so it
 

01:36:37.840 --> 01:36:41.310 align:start position:0%
we never override the answer here so it
just<01:36:38.050><c> returns</c><01:36:38.440><c> that</c><01:36:38.680><c> empty</c><01:36:39.100><c> string</c><01:36:40.110><c> what</c><01:36:41.110><c> if</c>

01:36:41.310 --> 01:36:41.320 align:start position:0%
just returns that empty string what if
 

01:36:41.320 --> 01:36:45.180 align:start position:0%
just returns that empty string what if
we<01:36:41.560><c> want</c><01:36:41.770><c> to</c><01:36:41.830><c> return</c><01:36:42.040><c> something</c><01:36:42.910><c> anytime</c><01:36:43.840><c> a</c><01:36:44.500><c> B</c>

01:36:45.180 --> 01:36:45.190 align:start position:0%
we want to return something anytime a B
 

01:36:45.190 --> 01:36:47.220 align:start position:0%
we want to return something anytime a B
or<01:36:45.250><c> C</c><01:36:45.490><c> is</c><01:36:45.520><c> not</c><01:36:45.850><c> passed</c><01:36:46.390><c> through</c><01:36:46.750><c> so</c><01:36:46.990><c> for</c>

01:36:47.220 --> 01:36:47.230 align:start position:0%
or C is not passed through so for
 

01:36:47.230 --> 01:36:48.840 align:start position:0%
or C is not passed through so for
anything<01:36:47.440><c> else</c><01:36:47.770><c> that's</c><01:36:48.130><c> passed</c><01:36:48.460><c> into</c><01:36:48.670><c> the</c>

01:36:48.840 --> 01:36:48.850 align:start position:0%
anything else that's passed into the
 

01:36:48.850 --> 01:36:51.630 align:start position:0%
anything else that's passed into the
function<01:36:49.050><c> we're</c><01:36:50.050><c> gonna</c><01:36:50.230><c> do</c><01:36:50.500><c> default</c><01:36:51.160><c> this</c><01:36:51.580><c> is</c>

01:36:51.630 --> 01:36:51.640 align:start position:0%
function we're gonna do default this is
 

01:36:51.640 --> 01:36:54.960 align:start position:0%
function we're gonna do default this is
like<01:36:51.910><c> the</c><01:36:52.060><c> else</c><01:36:52.240><c> statement</c><01:36:52.420><c> so</c><01:36:53.700><c> the</c><01:36:54.700><c> default</c>

01:36:54.960 --> 01:36:54.970 align:start position:0%
like the else statement so the default
 

01:36:54.970 --> 01:37:00.110 align:start position:0%
like the else statement so the default
we're<01:36:55.300><c> gonna</c><01:36:55.450><c> do</c><01:36:55.510><c> answer</c><01:36:56.550><c> equals</c><01:36:57.550><c> it's</c><01:36:58.420><c> off</c>

01:37:00.110 --> 01:37:00.120 align:start position:0%
we're gonna do answer equals it's off
 

01:37:00.120 --> 01:37:05.100 align:start position:0%
we're gonna do answer equals it's off
again<01:37:01.120><c> we're</c><01:37:01.240><c> gonna</c><01:37:01.330><c> have</c><01:37:01.510><c> the</c><01:37:01.660><c> break</c><01:37:03.810><c> so</c><01:37:04.810><c> now</c>

01:37:05.100 --> 01:37:05.110 align:start position:0%
again we're gonna have the break so now
 

01:37:05.110 --> 01:37:06.930 align:start position:0%
again we're gonna have the break so now
whenever<01:37:05.770><c> we</c><01:37:05.980><c> pass</c><01:37:06.280><c> in</c><01:37:06.550><c> something</c><01:37:06.760><c> that's</c><01:37:06.820><c> not</c>

01:37:06.930 --> 01:37:06.940 align:start position:0%
whenever we pass in something that's not
 

01:37:06.940 --> 01:37:09.750 align:start position:0%
whenever we pass in something that's not
a<01:37:07.090><c> B</c><01:37:07.150><c> or</c><01:37:07.360><c> C</c><01:37:07.390><c> it's</c><01:37:07.810><c> gonna</c><01:37:08.050><c> return</c><01:37:08.170><c> stuff</c><01:37:08.830><c> so</c><01:37:09.640><c> we</c>

01:37:09.750 --> 01:37:09.760 align:start position:0%
a B or C it's gonna return stuff so we
 

01:37:09.760 --> 01:37:13.380 align:start position:0%
a B or C it's gonna return stuff so we
can<01:37:09.790><c> pass</c><01:37:10.240><c> in</c><01:37:10.600><c> five</c><01:37:11.560><c> it's</c><01:37:12.490><c> gonna</c><01:37:12.700><c> rain</c><01:37:12.940><c> return</c>

01:37:13.380 --> 01:37:13.390 align:start position:0%
can pass in five it's gonna rain return
 

01:37:13.390 --> 01:37:17.040 align:start position:0%
can pass in five it's gonna rain return
stuff<01:37:13.840><c> but</c><01:37:14.650><c> if</c><01:37:14.890><c> I</c><01:37:15.160><c> go</c><01:37:15.460><c> back</c><01:37:15.820><c> the</c><01:37:16.540><c> pass</c><01:37:16.840><c> again</c>

01:37:17.040 --> 01:37:17.050 align:start position:0%
stuff but if I go back the pass again
 

01:37:17.050 --> 01:37:18.690 align:start position:0%
stuff but if I go back the pass again
see<01:37:17.500><c> one</c><01:37:17.830><c> of</c><01:37:17.950><c> the</c><01:37:18.010><c> things</c><01:37:18.070><c> they</c><01:37:18.310><c> have</c><01:37:18.400><c> a</c><01:37:18.460><c> case</c>

01:37:18.690 --> 01:37:18.700 align:start position:0%
see one of the things they have a case
 

01:37:18.700 --> 01:37:21.660 align:start position:0%
see one of the things they have a case
for<01:37:18.970><c> it'll</c><01:37:19.330><c> return</c><01:37:19.630><c> cat</c><01:37:20.140><c> and</c><01:37:20.500><c> that's</c><01:37:21.460><c> the</c>

01:37:21.660 --> 01:37:21.670 align:start position:0%
for it'll return cat and that's the
 

01:37:21.670 --> 01:37:25.990 align:start position:0%
for it'll return cat and that's the
switch<01:37:21.940><c> statement</c>

01:37:25.990 --> 01:37:26.000 align:start position:0%
 
 

01:37:26.000 --> 01:37:28.000 align:start position:0%
 
sometimes<01:37:26.900><c> you</c><01:37:27.200><c> want</c><01:37:27.410><c> a</c><01:37:27.470><c> switch</c><01:37:27.830><c> statement</c>

01:37:28.000 --> 01:37:28.010 align:start position:0%
sometimes you want a switch statement
 

01:37:28.010 --> 01:37:30.850 align:start position:0%
sometimes you want a switch statement
where<01:37:28.670><c> multiple</c><01:37:29.390><c> inputs</c><01:37:30.050><c> give</c><01:37:30.380><c> the</c><01:37:30.560><c> same</c>

01:37:30.850 --> 01:37:30.860 align:start position:0%
where multiple inputs give the same
 

01:37:30.860 --> 01:37:33.520 align:start position:0%
where multiple inputs give the same
output<01:37:31.330><c> well</c><01:37:32.330><c> that's</c><01:37:32.540><c> easy</c><01:37:32.840><c> enough</c><01:37:32.990><c> by</c>

01:37:33.520 --> 01:37:33.530 align:start position:0%
output well that's easy enough by
 

01:37:33.530 --> 01:37:36.730 align:start position:0%
output well that's easy enough by
omitting<01:37:34.190><c> the</c><01:37:34.670><c> break</c><01:37:35.180><c> statement</c><01:37:35.570><c> let</c><01:37:36.470><c> me</c><01:37:36.560><c> show</c>

01:37:36.730 --> 01:37:36.740 align:start position:0%
omitting the break statement let me show
 

01:37:36.740 --> 01:37:39.400 align:start position:0%
omitting the break statement let me show
you<01:37:36.800><c> how</c><01:37:36.980><c> that</c><01:37:37.010><c> works</c><01:37:37.430><c> so</c><01:37:38.150><c> let's</c><01:37:38.390><c> get</c><01:37:38.780><c> a</c><01:37:38.840><c> switch</c>

01:37:39.400 --> 01:37:39.410 align:start position:0%
you how that works so let's get a switch
 

01:37:39.410 --> 01:37:43.090 align:start position:0%
you how that works so let's get a switch
statement<01:37:39.560><c> here</c><01:37:40.160><c> and</c><01:37:40.840><c> we're</c><01:37:41.840><c> gonna</c><01:37:41.900><c> have</c><01:37:42.290><c> Val</c>

01:37:43.090 --> 01:37:43.100 align:start position:0%
statement here and we're gonna have Val
 

01:37:43.100 --> 01:37:44.940 align:start position:0%
statement here and we're gonna have Val
that's<01:37:43.610><c> what's</c><01:37:43.820><c> passed</c><01:37:44.090><c> into</c><01:37:44.300><c> the</c><01:37:44.480><c> function</c>

01:37:44.940 --> 01:37:44.950 align:start position:0%
that's what's passed into the function
 

01:37:44.950 --> 01:37:48.700 align:start position:0%
that's what's passed into the function
and<01:37:45.950><c> in</c><01:37:46.670><c> this</c><01:37:46.820><c> case</c><01:37:47.180><c> when</c><01:37:47.720><c> you</c><01:37:47.780><c> want</c><01:37:48.080><c> the</c><01:37:48.320><c> case</c>

01:37:48.700 --> 01:37:48.710 align:start position:0%
and in this case when you want the case
 

01:37:48.710 --> 01:37:51.790 align:start position:0%
and in this case when you want the case
of<01:37:49.010><c> one</c><01:37:49.340><c> two</c><01:37:49.640><c> and</c><01:37:49.820><c> three</c><01:37:50.210><c> all</c><01:37:50.540><c> to</c><01:37:51.260><c> return</c><01:37:51.650><c> the</c>

01:37:51.790 --> 01:37:51.800 align:start position:0%
of one two and three all to return the
 

01:37:51.800 --> 01:37:54.400 align:start position:0%
of one two and three all to return the
answer<01:37:52.190><c> of</c><01:37:52.400><c> lo</c><01:37:52.730><c> so</c><01:37:53.420><c> I</c><01:37:53.450><c> can</c><01:37:53.690><c> do</c><01:37:53.780><c> it</c><01:37:53.810><c> like</c><01:37:53.930><c> this</c>

01:37:54.400 --> 01:37:54.410 align:start position:0%
answer of lo so I can do it like this
 

01:37:54.410 --> 01:37:58.060 align:start position:0%
answer of lo so I can do it like this
case<01:37:54.890><c> one</c><01:37:55.400><c> and</c><01:37:55.810><c> I</c><01:37:56.810><c> can</c><01:37:56.960><c> go</c><01:37:57.110><c> straight</c><01:37:57.500><c> into</c><01:37:57.650><c> case</c>

01:37:58.060 --> 01:37:58.070 align:start position:0%
case one and I can go straight into case
 

01:37:58.070 --> 01:38:01.950 align:start position:0%
case one and I can go straight into case
two<01:37:58.700><c> and</c><01:37:59.440><c> then</c><01:38:00.440><c> I</c><01:38:00.500><c> can</c><01:38:00.620><c> go</c><01:38:00.740><c> straight</c><01:38:01.010><c> into</c><01:38:01.160><c> case</c>

01:38:01.950 --> 01:38:01.960 align:start position:0%
two and then I can go straight into case
 

01:38:01.960 --> 01:38:05.980 align:start position:0%
two and then I can go straight into case
three<01:38:02.960><c> and</c><01:38:03.730><c> since</c><01:38:04.730><c> I</c><01:38:04.820><c> don't</c><01:38:04.880><c> have</c><01:38:05.150><c> any</c><01:38:05.600><c> break</c>

01:38:05.980 --> 01:38:05.990 align:start position:0%
three and since I don't have any break
 

01:38:05.990 --> 01:38:08.620 align:start position:0%
three and since I don't have any break
statement<01:38:06.620><c> between</c><01:38:07.100><c> these</c><01:38:07.220><c> cases</c><01:38:07.520><c> it</c><01:38:08.450><c> will</c>

01:38:08.620 --> 01:38:08.630 align:start position:0%
statement between these cases it will
 

01:38:08.630 --> 01:38:10.270 align:start position:0%
statement between these cases it will
just<01:38:08.930><c> keep</c><01:38:09.140><c> going</c><01:38:09.410><c> to</c><01:38:09.740><c> the</c><01:38:09.830><c> next</c><01:38:10.070><c> one</c>

01:38:10.270 --> 01:38:10.280 align:start position:0%
just keep going to the next one
 

01:38:10.280 --> 01:38:13.120 align:start position:0%
just keep going to the next one
automatically<01:38:11.180><c> and</c><01:38:11.540><c> now</c><01:38:12.140><c> I'm</c><01:38:12.470><c> gonna</c><01:38:12.590><c> say</c><01:38:12.890><c> that</c>

01:38:13.120 --> 01:38:13.130 align:start position:0%
automatically and now I'm gonna say that
 

01:38:13.130 --> 01:38:17.680 align:start position:0%
automatically and now I'm gonna say that
the<01:38:13.400><c> answer</c><01:38:13.730><c> is</c><01:38:14.440><c> must</c><01:38:15.440><c> be</c><01:38:15.800><c> set</c><01:38:16.040><c> to</c><01:38:16.070><c> equal</c><01:38:16.690><c> low</c>

01:38:17.680 --> 01:38:17.690 align:start position:0%
the answer is must be set to equal low
 

01:38:17.690 --> 01:38:20.740 align:start position:0%
the answer is must be set to equal low
and<01:38:18.430><c> here</c><01:38:19.430><c> is</c><01:38:19.580><c> where</c><01:38:20.030><c> I</c><01:38:20.060><c> put</c><01:38:20.360><c> the</c><01:38:20.510><c> break</c>

01:38:20.740 --> 01:38:20.750 align:start position:0%
and here is where I put the break
 

01:38:20.750 --> 01:38:22.630 align:start position:0%
and here is where I put the break
statement<01:38:21.070><c> okay</c><01:38:22.070><c> now</c><01:38:22.220><c> we're</c><01:38:22.340><c> gonna</c><01:38:22.460><c> do</c><01:38:22.550><c> the</c>

01:38:22.630 --> 01:38:22.640 align:start position:0%
statement okay now we're gonna do the
 

01:38:22.640 --> 01:38:24.820 align:start position:0%
statement okay now we're gonna do the
same<01:38:22.850><c> thing</c><01:38:22.910><c> with</c><01:38:23.300><c> cases</c><01:38:23.810><c> four</c><01:38:24.140><c> through</c><01:38:24.440><c> six</c>

01:38:24.820 --> 01:38:24.830 align:start position:0%
same thing with cases four through six
 

01:38:24.830 --> 01:38:26.650 align:start position:0%
same thing with cases four through six
and<01:38:25.220><c> actually</c><01:38:25.940><c> I'm</c><01:38:26.000><c> just</c><01:38:26.030><c> going</c><01:38:26.270><c> to</c><01:38:26.300><c> do</c><01:38:26.480><c> some</c>

01:38:26.650 --> 01:38:26.660 align:start position:0%
and actually I'm just going to do some
 

01:38:26.660 --> 01:38:28.360 align:start position:0%
and actually I'm just going to do some
copying<01:38:27.170><c> and</c><01:38:27.320><c> pasting</c><01:38:27.470><c> I'm</c><01:38:27.770><c> gonna</c><01:38:27.920><c> copy</c><01:38:28.130><c> all</c>

01:38:28.360 --> 01:38:28.370 align:start position:0%
copying and pasting I'm gonna copy all
 

01:38:28.370 --> 01:38:31.870 align:start position:0%
copying and pasting I'm gonna copy all
this<01:38:28.640><c> and</c><01:38:29.140><c> now</c><01:38:30.140><c> we're</c><01:38:30.290><c> going</c><01:38:30.440><c> to</c><01:38:30.560><c> paste</c><01:38:31.010><c> that's</c>

01:38:31.870 --> 01:38:31.880 align:start position:0%
this and now we're going to paste that's
 

01:38:31.880 --> 01:38:33.940 align:start position:0%
this and now we're going to paste that's
four<01:38:32.450><c> five</c><01:38:32.660><c> six</c><01:38:32.930><c> we're</c><01:38:33.440><c> gonna</c><01:38:33.590><c> do</c><01:38:33.680><c> the</c><01:38:33.770><c> same</c>

01:38:33.940 --> 01:38:33.950 align:start position:0%
four five six we're gonna do the same
 

01:38:33.950 --> 01:38:36.010 align:start position:0%
four five six we're gonna do the same
thing<01:38:34.130><c> with</c><01:38:34.250><c> seven</c><01:38:34.580><c> eight</c><01:38:34.700><c> nine</c><01:38:34.940><c> so</c><01:38:35.720><c> I'm</c><01:38:35.900><c> gonna</c>

01:38:36.010 --> 01:38:36.020 align:start position:0%
thing with seven eight nine so I'm gonna
 

01:38:36.020 --> 01:38:37.630 align:start position:0%
thing with seven eight nine so I'm gonna
do<01:38:36.170><c> copy</c><01:38:36.440><c> and</c><01:38:36.650><c> paste</c><01:38:36.860><c> again</c><01:38:37.040><c> and</c><01:38:37.490><c> then</c><01:38:37.580><c> I'm</c>

01:38:37.630 --> 01:38:37.640 align:start position:0%
do copy and paste again and then I'm
 

01:38:37.640 --> 01:38:39.790 align:start position:0%
do copy and paste again and then I'm
just<01:38:37.670><c> going</c><01:38:37.850><c> to</c><01:38:37.970><c> update</c><01:38:38.150><c> the</c><01:38:38.480><c> code</c><01:38:38.780><c> so</c><01:38:39.440><c> this</c><01:38:39.680><c> is</c>

01:38:39.790 --> 01:38:39.800 align:start position:0%
just going to update the code so this is
 

01:38:39.800 --> 01:38:43.600 align:start position:0%
just going to update the code so this is
gonna<01:38:39.890><c> be</c><01:38:40.010><c> four</c><01:38:40.550><c> five</c><01:38:41.150><c> six</c><01:38:41.720><c> we'll</c><01:38:42.560><c> have</c><01:38:42.740><c> seven</c>

01:38:43.600 --> 01:38:43.610 align:start position:0%
gonna be four five six we'll have seven
 

01:38:43.610 --> 01:38:48.270 align:start position:0%
gonna be four five six we'll have seven
eight<01:38:43.820><c> nine</c><01:38:44.420><c> and</c><01:38:45.080><c> we're</c><01:38:45.530><c> gonna</c><01:38:45.620><c> have</c><01:38:45.950><c> mid</c><01:38:46.640><c> and</c>

01:38:48.270 --> 01:38:48.280 align:start position:0%
eight nine and we're gonna have mid and
 

01:38:48.280 --> 01:38:51.630 align:start position:0%
eight nine and we're gonna have mid and
high<01:38:49.420><c> so</c><01:38:50.420><c> if</c><01:38:50.600><c> the</c><01:38:50.750><c> case</c><01:38:50.960><c> is</c><01:38:51.080><c> one</c><01:38:51.290><c> two</c><01:38:51.440><c> or</c><01:38:51.560><c> three</c>

01:38:51.630 --> 01:38:51.640 align:start position:0%
high so if the case is one two or three
 

01:38:51.640 --> 01:38:53.920 align:start position:0%
high so if the case is one two or three
like<01:38:52.640><c> for</c><01:38:52.790><c> instance</c><01:38:52.880><c> if</c><01:38:53.120><c> it's</c><01:38:53.270><c> one</c><01:38:53.540><c> it's</c><01:38:53.780><c> gonna</c>

01:38:53.920 --> 01:38:53.930 align:start position:0%
like for instance if it's one it's gonna
 

01:38:53.930 --> 01:38:55.600 align:start position:0%
like for instance if it's one it's gonna
pass<01:38:54.260><c> through</c><01:38:54.500><c> two</c><01:38:54.740><c> and</c><01:38:54.890><c> three</c><01:38:55.100><c> to</c><01:38:55.190><c> get</c><01:38:55.340><c> low</c>

01:38:55.600 --> 01:38:55.610 align:start position:0%
pass through two and three to get low
 

01:38:55.610 --> 01:38:57.610 align:start position:0%
pass through two and three to get low
and<01:38:55.640><c> then</c><01:38:55.910><c> it's</c><01:38:56.000><c> gonna</c><01:38:56.090><c> break</c><01:38:56.480><c> out</c><01:38:56.750><c> if</c><01:38:57.050><c> it's</c>

01:38:57.610 --> 01:38:57.620 align:start position:0%
and then it's gonna break out if it's
 

01:38:57.620 --> 01:38:59.440 align:start position:0%
and then it's gonna break out if it's
four<01:38:57.920><c> five</c><01:38:58.070><c> or</c><01:38:58.250><c> six</c><01:38:58.280><c> it's</c><01:38:58.670><c> gonna</c><01:38:58.820><c> pass</c><01:38:59.090><c> through</c>

01:38:59.440 --> 01:38:59.450 align:start position:0%
four five or six it's gonna pass through
 

01:38:59.450 --> 01:39:01.900 align:start position:0%
four five or six it's gonna pass through
to<01:39:00.140><c> get</c><01:39:00.290><c> to</c><01:39:00.350><c> mid</c><01:39:00.890><c> and</c><01:39:01.310><c> then</c><01:39:01.430><c> it's</c><01:39:01.520><c> gonna</c><01:39:01.640><c> break</c>

01:39:01.900 --> 01:39:01.910 align:start position:0%
to get to mid and then it's gonna break
 

01:39:01.910 --> 01:39:03.400 align:start position:0%
to get to mid and then it's gonna break
out<01:39:02.090><c> seven</c><01:39:02.570><c> eight</c><01:39:02.630><c> nine</c><01:39:02.840><c> it's</c><01:39:03.020><c> gonna</c><01:39:03.110><c> pass</c>

01:39:03.400 --> 01:39:03.410 align:start position:0%
out seven eight nine it's gonna pass
 

01:39:03.410 --> 01:39:05.770 align:start position:0%
out seven eight nine it's gonna pass
through<01:39:03.590><c> to</c><01:39:03.740><c> high</c><01:39:03.980><c> and</c><01:39:04.190><c> break</c><01:39:04.370><c> out</c><01:39:04.580><c> so</c><01:39:05.420><c> let's</c>

01:39:05.770 --> 01:39:05.780 align:start position:0%
through to high and break out so let's
 

01:39:05.780 --> 01:39:08.080 align:start position:0%
through to high and break out so let's
test<01:39:06.230><c> this</c><01:39:06.470><c> out</c><01:39:06.710><c> and</c><01:39:06.770><c> see</c><01:39:07.070><c> since</c><01:39:07.940><c> we're</c>

01:39:08.080 --> 01:39:08.090 align:start position:0%
test this out and see since we're
 

01:39:08.090 --> 01:39:09.760 align:start position:0%
test this out and see since we're
passing<01:39:08.540><c> in</c><01:39:08.630><c> the</c><01:39:08.720><c> number</c><01:39:08.990><c> one</c><01:39:09.320><c> here</c><01:39:09.680><c> it's</c>

01:39:09.760 --> 01:39:09.770 align:start position:0%
passing in the number one here it's
 

01:39:09.770 --> 01:39:12.880 align:start position:0%
passing in the number one here it's
going<01:39:09.890><c> to</c><01:39:09.980><c> be</c><01:39:10.040><c> low</c><01:39:10.400><c> but</c><01:39:11.120><c> if</c><01:39:11.270><c> we</c><01:39:11.390><c> pass</c><01:39:11.690><c> in</c><01:39:12.050><c> five</c>

01:39:12.880 --> 01:39:12.890 align:start position:0%
going to be low but if we pass in five
 

01:39:12.890 --> 01:39:15.340 align:start position:0%
going to be low but if we pass in five
we<01:39:13.130><c> should</c><01:39:13.370><c> get</c><01:39:13.520><c> mid</c><01:39:13.940><c> and</c><01:39:14.270><c> if</c><01:39:14.750><c> it's</c><01:39:14.930><c> seven</c>

01:39:15.340 --> 01:39:15.350 align:start position:0%
we should get mid and if it's seven
 

01:39:15.350 --> 01:39:16.660 align:start position:0%
we should get mid and if it's seven
eight<01:39:15.650><c> or</c><01:39:15.830><c> nine</c>

01:39:16.660 --> 01:39:16.670 align:start position:0%
eight or nine
 

01:39:16.670 --> 01:39:23.020 align:start position:0%
eight or nine
we<01:39:17.450><c> should</c><01:39:17.810><c> get</c><01:39:18.050><c> high</c>

01:39:23.020 --> 01:39:23.030 align:start position:0%
 
 

01:39:23.030 --> 01:39:25.240 align:start position:0%
 
sometimes<01:39:23.870><c> a</c><01:39:24.050><c> switch</c><01:39:24.470><c> statement</c><01:39:24.650><c> can</c><01:39:25.100><c> be</c>

01:39:25.240 --> 01:39:25.250 align:start position:0%
sometimes a switch statement can be
 

01:39:25.250 --> 01:39:27.700 align:start position:0%
sometimes a switch statement can be
easier<01:39:25.760><c> to</c><01:39:25.970><c> write</c><01:39:26.240><c> and</c><01:39:26.510><c> easier</c><01:39:27.050><c> to</c><01:39:27.170><c> understand</c>

01:39:27.700 --> 01:39:27.710 align:start position:0%
easier to write and easier to understand
 

01:39:27.710 --> 01:39:31.390 align:start position:0%
easier to write and easier to understand
then<01:39:28.520><c> a</c><01:39:28.550><c> chain</c><01:39:29.000><c> of</c><01:39:29.330><c> if-else</c><01:39:30.050><c> statements</c><01:39:30.830><c> so</c>

01:39:31.390 --> 01:39:31.400 align:start position:0%
then a chain of if-else statements so
 

01:39:31.400 --> 01:39:34.930 align:start position:0%
then a chain of if-else statements so
we're<01:39:31.670><c> going</c><01:39:31.880><c> to</c><01:39:32.000><c> change</c><01:39:32.720><c> this</c><01:39:33.560><c> chain</c><01:39:34.190><c> of</c><01:39:34.490><c> else</c>

01:39:34.930 --> 01:39:34.940 align:start position:0%
we're going to change this chain of else
 

01:39:34.940 --> 01:39:37.570 align:start position:0%
we're going to change this chain of else
if<01:39:35.300><c> statements</c><01:39:35.900><c> to</c><01:39:36.380><c> become</c><01:39:36.800><c> a</c><01:39:36.950><c> switch</c>

01:39:37.570 --> 01:39:37.580 align:start position:0%
if statements to become a switch
 

01:39:37.580 --> 01:39:41.290 align:start position:0%
if statements to become a switch
statement<01:39:38.200><c> so</c><01:39:39.200><c> let's</c><01:39:40.040><c> do</c><01:39:40.760><c> that</c><01:39:40.790><c> right</c><01:39:41.090><c> now</c>

01:39:41.290 --> 01:39:41.300 align:start position:0%
statement so let's do that right now
 

01:39:41.300 --> 01:39:43.120 align:start position:0%
statement so let's do that right now
so<01:39:41.780><c> I'm</c><01:39:41.840><c> gonna</c><01:39:41.930><c> start</c><01:39:42.290><c> with</c><01:39:42.530><c> the</c><01:39:42.770><c> switch</c>

01:39:43.120 --> 01:39:43.130 align:start position:0%
so I'm gonna start with the switch
 

01:39:43.130 --> 01:39:46.270 align:start position:0%
so I'm gonna start with the switch
keyword<01:39:44.120><c> and</c><01:39:44.450><c> we're</c><01:39:45.380><c> going</c><01:39:45.620><c> to</c><01:39:45.710><c> be</c><01:39:45.830><c> evaluating</c>

01:39:46.270 --> 01:39:46.280 align:start position:0%
keyword and we're going to be evaluating
 

01:39:46.280 --> 01:39:49.570 align:start position:0%
keyword and we're going to be evaluating
the<01:39:46.610><c> value</c><01:39:46.850><c> with</c><01:39:47.780><c> open</c><01:39:48.350><c> curly</c><01:39:48.740><c> braket</c><01:39:49.280><c> and</c><01:39:49.430><c> we</c>

01:39:49.570 --> 01:39:49.580 align:start position:0%
the value with open curly braket and we
 

01:39:49.580 --> 01:39:51.190 align:start position:0%
the value with open curly braket and we
want<01:39:49.760><c> to</c><01:39:49.850><c> make</c><01:39:50.000><c> sure</c><01:39:50.180><c> to</c><01:39:50.270><c> have</c><01:39:50.330><c> an</c><01:39:50.510><c> end</c><01:39:50.720><c> curly</c>

01:39:51.190 --> 01:39:51.200 align:start position:0%
want to make sure to have an end curly
 

01:39:51.200 --> 01:39:56.950 align:start position:0%
want to make sure to have an end curly
bracket<01:39:51.680><c> end</c><01:39:52.270><c> so</c><01:39:53.270><c> for</c><01:39:53.900><c> a</c><01:39:53.930><c> case</c><01:39:54.500><c> Bob</c><01:39:55.960><c> we're</c>

01:39:56.950 --> 01:39:56.960 align:start position:0%
bracket end so for a case Bob we're
 

01:39:56.960 --> 01:40:01.720 align:start position:0%
bracket end so for a case Bob we're
gonna<01:39:57.140><c> set</c><01:39:57.350><c> the</c><01:39:57.530><c> answer</c><01:39:59.140><c> to</c><01:40:00.140><c> Marlee</c><01:40:00.650><c> and</c><01:40:00.860><c> then</c>

01:40:01.720 --> 01:40:01.730 align:start position:0%
gonna set the answer to Marlee and then
 

01:40:01.730 --> 01:40:06.030 align:start position:0%
gonna set the answer to Marlee and then
we<01:40:01.880><c> need</c><01:40:02.060><c> to</c><01:40:02.180><c> have</c><01:40:02.330><c> a</c><01:40:02.360><c> break</c><01:40:02.690><c> in</c><01:40:02.900><c> here</c><01:40:04.000><c> for</c><01:40:05.000><c> case</c>

01:40:06.030 --> 01:40:06.040 align:start position:0%
we need to have a break in here for case
 

01:40:06.040 --> 01:40:12.160 align:start position:0%
we need to have a break in here for case
42<01:40:08.260><c> we're</c><01:40:09.260><c> gonna</c><01:40:09.410><c> set</c><01:40:09.620><c> the</c><01:40:09.740><c> answer</c><01:40:10.190><c> to</c><01:40:11.170><c> the</c>

01:40:12.160 --> 01:40:12.170 align:start position:0%
42 we're gonna set the answer to the
 

01:40:12.170 --> 01:40:24.130 align:start position:0%
42 we're gonna set the answer to the
answer<01:40:14.680><c> or</c><01:40:19.000><c> case</c><01:40:20.230><c> one</c><01:40:22.330><c> whole</c><01:40:23.330><c> set</c><01:40:23.570><c> the</c><01:40:23.690><c> answer</c>

01:40:24.130 --> 01:40:24.140 align:start position:0%
answer or case one whole set the answer
 

01:40:24.140 --> 01:40:30.430 align:start position:0%
answer or case one whole set the answer
to<01:40:24.500><c> there</c><01:40:25.340><c> is</c><01:40:25.550><c> no</c><01:40:25.910><c> number</c><01:40:26.450><c> one</c><01:40:26.930><c> oh</c><01:40:29.260><c> we</c><01:40:30.260><c> need</c><01:40:30.320><c> a</c>

01:40:30.430 --> 01:40:30.440 align:start position:0%
to there is no number one oh we need a
 

01:40:30.440 --> 01:40:42.390 align:start position:0%
to there is no number one oh we need a
break<01:40:30.740><c> up</c><01:40:30.950><c> here</c><01:40:35.830><c> for</c><01:40:36.830><c> case</c><01:40:38.050><c> 99</c><01:40:40.600><c> the</c><01:40:41.600><c> answer</c><01:40:42.020><c> is</c>

01:40:42.390 --> 01:40:42.400 align:start position:0%
break up here for case 99 the answer is
 

01:40:42.400 --> 01:40:46.660 align:start position:0%
break up here for case 99 the answer is
miss<01:40:43.400><c> by</c><01:40:43.670><c> this</c><01:40:43.730><c> much</c><01:40:44.540><c> and</c><01:40:45.410><c> then</c><01:40:46.370><c> we</c><01:40:46.460><c> need</c><01:40:46.610><c> a</c>

01:40:46.660 --> 01:40:46.670 align:start position:0%
miss by this much and then we need a
 

01:40:46.670 --> 01:40:58.660 align:start position:0%
miss by this much and then we need a
break<01:40:46.970><c> now</c><01:40:48.760><c> we</c><01:40:49.760><c> have</c><01:40:50.180><c> for</c><01:40:52.360><c> case</c><01:40:53.360><c> seven</c><01:40:57.670><c> well</c>

01:40:58.660 --> 01:40:58.670 align:start position:0%
break now we have for case seven well
 

01:40:58.670 --> 01:41:04.930 align:start position:0%
break now we have for case seven well
seven<01:40:59.860><c> eight</c><01:41:00.860><c> nine</c><01:41:01.190><c> and</c><01:41:01.810><c> break</c><01:41:02.810><c> and</c><01:41:03.190><c> now</c><01:41:04.190><c> we</c>

01:41:04.930 --> 01:41:04.940 align:start position:0%
seven eight nine and break and now we
 

01:41:04.940 --> 01:41:08.320 align:start position:0%
seven eight nine and break and now we
just<01:41:05.210><c> changed</c><01:41:06.200><c> that</c><01:41:06.440><c> chain</c><01:41:07.370><c> of</c><01:41:07.400><c> else</c><01:41:08.000><c> if</c>

01:41:08.320 --> 01:41:08.330 align:start position:0%
just changed that chain of else if
 

01:41:08.330 --> 01:41:14.290 align:start position:0%
just changed that chain of else if
statements<01:41:08.930><c> into</c><01:41:09.650><c> a</c><01:41:09.680><c> switch</c><01:41:10.340><c> statement</c>

01:41:14.290 --> 01:41:14.300 align:start position:0%
 
 

01:41:14.300 --> 01:41:16.600 align:start position:0%
 
here's<01:41:15.079><c> a</c><01:41:15.139><c> little</c><01:41:15.349><c> trick</c><01:41:15.739><c> when</c><01:41:16.039><c> you</c><01:41:16.190><c> want</c><01:41:16.460><c> a</c>

01:41:16.600 --> 01:41:16.610 align:start position:0%
here's a little trick when you want a
 

01:41:16.610 --> 01:41:19.270 align:start position:0%
here's a little trick when you want a
function<01:41:17.269><c> to</c><01:41:17.539><c> return</c><01:41:17.989><c> a</c><01:41:18.019><c> boolean</c><01:41:18.679><c> a</c><01:41:18.860><c> true</c><01:41:19.130><c> or</c>

01:41:19.270 --> 01:41:19.280 align:start position:0%
function to return a boolean a true or
 

01:41:19.280 --> 01:41:21.819 align:start position:0%
function to return a boolean a true or
false<01:41:19.309><c> value</c><01:41:19.760><c> you</c><01:41:20.749><c> can</c><01:41:20.929><c> see</c><01:41:21.110><c> in</c><01:41:21.199><c> this</c><01:41:21.380><c> function</c>

01:41:21.819 --> 01:41:21.829 align:start position:0%
false value you can see in this function
 

01:41:21.829 --> 01:41:23.799 align:start position:0%
false value you can see in this function
we're<01:41:22.010><c> checking</c><01:41:22.429><c> if</c><01:41:22.550><c> a</c><01:41:22.760><c> is</c><01:41:22.940><c> less</c><01:41:23.150><c> than</c><01:41:23.210><c> B</c><01:41:23.599><c> and</c>

01:41:23.799 --> 01:41:23.809 align:start position:0%
we're checking if a is less than B and
 

01:41:23.809 --> 01:41:27.100 align:start position:0%
we're checking if a is less than B and
if<01:41:24.650><c> so</c><01:41:24.829><c> we</c><01:41:25.039><c> return</c><01:41:25.369><c> true</c><01:41:25.579><c> else</c><01:41:25.880><c> we</c><01:41:26.630><c> return</c>

01:41:27.100 --> 01:41:27.110 align:start position:0%
if so we return true else we return
 

01:41:27.110 --> 01:41:30.250 align:start position:0%
if so we return true else we return
false<01:41:27.579><c> you</c><01:41:28.579><c> may</c><01:41:28.760><c> remember</c><01:41:29.210><c> from</c><01:41:29.449><c> before</c><01:41:29.809><c> that</c>

01:41:30.250 --> 01:41:30.260 align:start position:0%
false you may remember from before that
 

01:41:30.260 --> 01:41:32.859 align:start position:0%
false you may remember from before that
all<01:41:30.469><c> comparison</c><01:41:31.280><c> operators</c><01:41:31.999><c> return</c><01:41:32.630><c> a</c>

01:41:32.859 --> 01:41:32.869 align:start position:0%
all comparison operators return a
 

01:41:32.869 --> 01:41:36.250 align:start position:0%
all comparison operators return a
boolean<01:41:33.260><c> true</c><01:41:33.949><c> or</c><01:41:34.219><c> false</c><01:41:34.550><c> value</c><01:41:34.929><c> so</c><01:41:35.929><c> instead</c>

01:41:36.250 --> 01:41:36.260 align:start position:0%
boolean true or false value so instead
 

01:41:36.260 --> 01:41:39.009 align:start position:0%
boolean true or false value so instead
of<01:41:36.320><c> using</c><01:41:36.650><c> this</c><01:41:36.920><c> if</c><01:41:37.130><c> statement</c><01:41:37.730><c> here</c><01:41:38.030><c> we</c><01:41:38.840><c> can</c>

01:41:39.009 --> 01:41:39.019 align:start position:0%
of using this if statement here we can
 

01:41:39.019 --> 01:41:40.569 align:start position:0%
of using this if statement here we can
just<01:41:39.050><c> do</c><01:41:39.440><c> that</c><01:41:39.469><c> we</c><01:41:39.650><c> can</c><01:41:39.800><c> actually</c><01:41:39.949><c> delete</c><01:41:40.369><c> all</c>

01:41:40.569 --> 01:41:40.579 align:start position:0%
just do that we can actually delete all
 

01:41:40.579 --> 01:41:45.339 align:start position:0%
just do that we can actually delete all
of<01:41:40.639><c> this</c><01:41:41.090><c> and</c><01:41:41.389><c> just</c><01:41:42.820><c> return</c><01:41:43.820><c> the</c><01:41:44.630><c> result</c><01:41:45.079><c> of</c>

01:41:45.339 --> 01:41:45.349 align:start position:0%
of this and just return the result of
 

01:41:45.349 --> 01:41:49.209 align:start position:0%
of this and just return the result of
this<01:41:45.650><c> return</c><01:41:47.139><c> we're</c><01:41:48.139><c> just</c><01:41:48.320><c> returning</c><01:41:48.469><c> the</c>

01:41:49.209 --> 01:41:49.219 align:start position:0%
this return we're just returning the
 

01:41:49.219 --> 01:41:52.479 align:start position:0%
this return we're just returning the
result<01:41:49.639><c> of</c><01:41:49.880><c> a</c><01:41:50.090><c> is</c><01:41:50.420><c> less</c><01:41:50.690><c> than</c><01:41:50.749><c> B</c><01:41:51.110><c> so</c><01:41:51.349><c> this</c><01:41:52.249><c> is</c>

01:41:52.479 --> 01:41:52.489 align:start position:0%
result of a is less than B so this is
 

01:41:52.489 --> 01:41:55.839 align:start position:0%
result of a is less than B so this is
going<01:41:52.699><c> to</c><01:41:52.940><c> be</c><01:41:53.329><c> true</c><01:41:53.690><c> or</c><01:41:53.960><c> false</c><01:41:54.380><c> and</c><01:41:54.829><c> we</c><01:41:55.670><c> can</c>

01:41:55.839 --> 01:41:55.849 align:start position:0%
going to be true or false and we can
 

01:41:55.849 --> 01:41:58.479 align:start position:0%
going to be true or false and we can
just<01:41:55.999><c> skip</c><01:41:56.300><c> that</c><01:41:56.539><c> whole</c><01:41:56.599><c> if</c><01:41:57.260><c> statement</c><01:41:58.070><c> logic</c>

01:41:58.479 --> 01:41:58.489 align:start position:0%
just skip that whole if statement logic
 

01:41:58.489 --> 01:42:02.529 align:start position:0%
just skip that whole if statement logic
and<01:41:58.730><c> just</c><01:41:58.969><c> return</c><01:41:59.420><c> this</c><01:41:59.960><c> so</c><01:42:00.769><c> if</c><01:42:01.039><c> we</c><01:42:01.760><c> consul</c>

01:42:02.529 --> 01:42:02.539 align:start position:0%
and just return this so if we consul
 

01:42:02.539 --> 01:42:07.060 align:start position:0%
and just return this so if we consul
don't<01:42:02.690><c> log</c><01:42:02.900><c> this</c><01:42:03.139><c> out</c><01:42:04.449><c> console.log</c><01:42:05.710><c> we</c><01:42:06.710><c> should</c>

01:42:07.060 --> 01:42:07.070 align:start position:0%
don't log this out console.log we should
 

01:42:07.070 --> 01:42:12.669 align:start position:0%
don't log this out console.log we should
be<01:42:07.249><c> able</c><01:42:07.309><c> to</c><01:42:07.429><c> see</c><01:42:07.699><c> if</c><01:42:09.010><c> 10</c><01:42:10.010><c> is</c><01:42:10.039><c> less</c><01:42:10.670><c> than</c><01:42:10.880><c> 15</c><01:42:11.679><c> it</c>

01:42:12.669 --> 01:42:12.679 align:start position:0%
be able to see if 10 is less than 15 it
 

01:42:12.679 --> 01:42:15.160 align:start position:0%
be able to see if 10 is less than 15 it
is<01:42:12.829><c> less</c><01:42:13.039><c> than</c><01:42:13.190><c> 15</c><01:42:13.519><c> it's</c><01:42:13.699><c> true</c><01:42:13.969><c> but</c><01:42:14.659><c> if</c><01:42:14.749><c> we</c><01:42:14.869><c> put</c>

01:42:15.160 --> 01:42:15.170 align:start position:0%
is less than 15 it's true but if we put
 

01:42:15.170 --> 01:42:23.460 align:start position:0%
is less than 15 it's true but if we put
a<01:42:15.760><c> 20</c><01:42:16.760><c> here</c><01:42:17.030><c> and</c><01:42:18.190><c> it's</c><01:42:19.190><c> false</c>

01:42:23.460 --> 01:42:23.470 align:start position:0%
 
 

01:42:23.470 --> 01:42:25.530 align:start position:0%
 
we've<01:42:24.100><c> already</c><01:42:24.280><c> seen</c><01:42:24.550><c> a</c><01:42:24.610><c> few</c><01:42:24.700><c> examples</c><01:42:25.420><c> of</c>

01:42:25.530 --> 01:42:25.540 align:start position:0%
we've already seen a few examples of
 

01:42:25.540 --> 01:42:28.080 align:start position:0%
we've already seen a few examples of
this<01:42:25.720><c> but</c><01:42:26.170><c> you</c><01:42:26.350><c> can</c><01:42:26.590><c> return</c><01:42:27.070><c> early</c><01:42:27.580><c> from</c><01:42:27.880><c> a</c>

01:42:28.080 --> 01:42:28.090 align:start position:0%
this but you can return early from a
 

01:42:28.090 --> 01:42:30.840 align:start position:0%
this but you can return early from a
function<01:42:28.690><c> with</c><01:42:28.930><c> the</c><01:42:29.140><c> return</c><01:42:29.530><c> statement</c><01:42:29.860><c> so</c><01:42:30.760><c> if</c>

01:42:30.840 --> 01:42:30.850 align:start position:0%
function with the return statement so if
 

01:42:30.850 --> 01:42:33.690 align:start position:0%
function with the return statement so if
you<01:42:30.940><c> see</c><01:42:31.120><c> this</c><01:42:31.390><c> this</c><01:42:32.320><c> function</c><01:42:32.560><c> right</c><01:42:32.860><c> here</c><01:42:32.920><c> we</c>

01:42:33.690 --> 01:42:33.700 align:start position:0%
you see this this function right here we
 

01:42:33.700 --> 01:42:35.700 align:start position:0%
you see this this function right here we
return<01:42:34.180><c> at</c><01:42:34.420><c> the</c><01:42:34.540><c> very</c><01:42:34.750><c> end</c><01:42:34.990><c> of</c><01:42:35.140><c> the</c><01:42:35.290><c> function</c>

01:42:35.700 --> 01:42:35.710 align:start position:0%
return at the very end of the function
 

01:42:35.710 --> 01:42:38.580 align:start position:0%
return at the very end of the function
and<01:42:35.920><c> so</c><01:42:36.670><c> it</c><01:42:36.790><c> leaves</c><01:42:37.060><c> a</c><01:42:37.330><c> function</c><01:42:37.840><c> and</c><01:42:38.080><c> returns</c>

01:42:38.580 --> 01:42:38.590 align:start position:0%
and so it leaves a function and returns
 

01:42:38.590 --> 01:42:41.130 align:start position:0%
and so it leaves a function and returns
this<01:42:38.860><c> value</c><01:42:39.310><c> from</c><01:42:39.490><c> the</c><01:42:39.640><c> function</c><01:42:39.820><c> but</c><01:42:40.810><c> you</c><01:42:40.840><c> can</c>

01:42:41.130 --> 01:42:41.140 align:start position:0%
this value from the function but you can
 

01:42:41.140 --> 01:42:44.010 align:start position:0%
this value from the function but you can
leave<01:42:41.320><c> the</c><01:42:41.560><c> function</c><01:42:42.010><c> anytime</c><01:42:42.670><c> with</c><01:42:43.360><c> a</c><01:42:43.390><c> return</c>

01:42:44.010 --> 01:42:44.020 align:start position:0%
leave the function anytime with a return
 

01:42:44.020 --> 01:42:46.470 align:start position:0%
leave the function anytime with a return
statement<01:42:44.380><c> so</c><01:42:45.160><c> we're</c><01:42:45.460><c> going</c><01:42:45.670><c> to</c><01:42:45.760><c> modify</c><01:42:46.120><c> this</c>

01:42:46.470 --> 01:42:46.480 align:start position:0%
statement so we're going to modify this
 

01:42:46.480 --> 01:42:49.260 align:start position:0%
statement so we're going to modify this
function<01:42:46.930><c> so</c><01:42:46.960><c> that</c><01:42:47.200><c> if</c><01:42:47.590><c> a</c><01:42:47.950><c> or</c><01:42:48.010><c> b</c><01:42:48.520><c> are</c><01:42:48.760><c> less</c><01:42:49.030><c> than</c>

01:42:49.260 --> 01:42:49.270 align:start position:0%
function so that if a or b are less than
 

01:42:49.270 --> 01:42:52.140 align:start position:0%
function so that if a or b are less than
zero<01:42:49.720><c> the</c><01:42:50.320><c> function</c><01:42:50.530><c> will</c><01:42:50.920><c> immediately</c><01:42:51.640><c> exit</c>

01:42:52.140 --> 01:42:52.150 align:start position:0%
zero the function will immediately exit
 

01:42:52.150 --> 01:42:54.750 align:start position:0%
zero the function will immediately exit
with<01:42:52.300><c> a</c><01:42:52.330><c> value</c><01:42:52.780><c> of</c><01:42:52.900><c> undefined</c><01:42:53.530><c> so</c><01:42:54.370><c> let's</c><01:42:54.580><c> do</c>

01:42:54.750 --> 01:42:54.760 align:start position:0%
with a value of undefined so let's do
 

01:42:54.760 --> 01:42:57.240 align:start position:0%
with a value of undefined so let's do
that<01:42:54.970><c> we're</c><01:42:55.120><c> gonna</c><01:42:55.240><c> set</c><01:42:55.660><c> an</c><01:42:55.750><c> if</c><01:42:55.990><c> statement</c><01:42:56.290><c> if</c>

01:42:57.240 --> 01:42:57.250 align:start position:0%
that we're gonna set an if statement if
 

01:42:57.250 --> 01:43:04.560 align:start position:0%
that we're gonna set an if statement if
a<01:42:57.640><c> is</c><01:42:58.540><c> less</c><01:42:58.990><c> than</c><01:43:00.180><c> zero</c><01:43:02.250><c> or</c><01:43:03.250><c> that's</c><01:43:03.940><c> two</c><01:43:04.270><c> pipes</c>

01:43:04.560 --> 01:43:04.570 align:start position:0%
a is less than zero or that's two pipes
 

01:43:04.570 --> 01:43:10.710 align:start position:0%
a is less than zero or that's two pipes
B<01:43:05.020><c> is</c><01:43:05.380><c> less</c><01:43:06.220><c> than</c><01:43:06.870><c> zero</c><01:43:08.340><c> then</c><01:43:09.390><c> we're</c><01:43:10.390><c> going</c><01:43:10.660><c> to</c>

01:43:10.710 --> 01:43:10.720 align:start position:0%
B is less than zero then we're going to
 

01:43:10.720 --> 01:43:18.390 align:start position:0%
B is less than zero then we're going to
return<01:43:10.990><c> an</c><01:43:13.260><c> undefined</c><01:43:15.930><c> so</c><01:43:16.930><c> we</c><01:43:17.560><c> can</c><01:43:17.770><c> do</c><01:43:17.950><c> a</c><01:43:17.980><c> test</c>

01:43:18.390 --> 01:43:18.400 align:start position:0%
return an undefined so we can do a test
 

01:43:18.400 --> 01:43:25.020 align:start position:0%
return an undefined so we can do a test
here<01:43:19.500><c> console.log</c><01:43:23.160><c> eight</c><01:43:24.160><c> but</c><01:43:24.610><c> what</c><01:43:24.790><c> if</c><01:43:24.880><c> this</c>

01:43:25.020 --> 01:43:25.030 align:start position:0%
here console.log eight but what if this
 

01:43:25.030 --> 01:43:29.220 align:start position:0%
here console.log eight but what if this
is<01:43:25.090><c> a</c><01:43:25.510><c> negative</c><01:43:26.380><c> number</c><01:43:27.960><c> it's</c><01:43:28.960><c> going</c><01:43:29.080><c> to</c>

01:43:29.220 --> 01:43:29.230 align:start position:0%
is a negative number it's going to
 

01:43:29.230 --> 01:43:32.370 align:start position:0%
is a negative number it's going to
return<01:43:29.620><c> undefined</c><01:43:30.810><c> Skrim</c><01:43:31.810><c> beheads</c><01:43:32.110><c> a</c><01:43:32.170><c> little</c>

01:43:32.370 --> 01:43:32.380 align:start position:0%
return undefined Skrim beheads a little
 

01:43:32.380 --> 01:43:34.800 align:start position:0%
return undefined Skrim beheads a little
quirk<01:43:32.740><c> here</c><01:43:33.070><c> where</c><01:43:33.250><c> it</c><01:43:33.340><c> just</c><01:43:33.490><c> shows</c><01:43:33.700><c> null</c><01:43:34.120><c> but</c>

01:43:34.800 --> 01:43:34.810 align:start position:0%
quirk here where it just shows null but
 

01:43:34.810 --> 01:43:41.470 align:start position:0%
quirk here where it just shows null but
in<01:43:35.080><c> a</c><01:43:35.500><c> browser</c><01:43:35.950><c> will</c><01:43:36.430><c> show</c><01:43:36.640><c> undefined</c>

01:43:41.470 --> 01:43:41.480 align:start position:0%
 
 

01:43:41.480 --> 01:43:44.500 align:start position:0%
 
we<01:43:41.960><c> are</c><01:43:42.080><c> going</c><01:43:42.350><c> to</c><01:43:42.380><c> create</c><01:43:42.739><c> a</c><01:43:43.010><c> blackjack</c><01:43:43.520><c> card</c>

01:43:44.500 --> 01:43:44.510 align:start position:0%
we are going to create a blackjack card
 

01:43:44.510 --> 01:43:47.530 align:start position:0%
we are going to create a blackjack card
counting<01:43:44.690><c> function</c><01:43:45.580><c> so</c><01:43:46.580><c> how</c><01:43:46.820><c> how</c><01:43:47.120><c> card</c>

01:43:47.530 --> 01:43:47.540 align:start position:0%
counting function so how how card
 

01:43:47.540 --> 01:43:49.689 align:start position:0%
counting function so how how card
counting<01:43:47.989><c> works</c><01:43:48.260><c> at</c><01:43:48.800><c> least</c><01:43:49.160><c> how</c><01:43:49.370><c> this</c>

01:43:49.689 --> 01:43:49.699 align:start position:0%
counting works at least how this
 

01:43:49.699 --> 01:43:52.300 align:start position:0%
counting works at least how this
function<01:43:50.150><c> is</c><01:43:50.239><c> gonna</c><01:43:50.420><c> work</c><01:43:50.750><c> is</c><01:43:50.989><c> that</c><01:43:51.830><c> when</c><01:43:52.130><c> you</c>

01:43:52.300 --> 01:43:52.310 align:start position:0%
function is gonna work is that when you
 

01:43:52.310 --> 01:43:55.630 align:start position:0%
function is gonna work is that when you
see<01:43:52.640><c> a</c><01:43:52.850><c> low</c><01:43:53.360><c> card</c><01:43:53.810><c> that</c><01:43:54.380><c> count</c><01:43:54.710><c> goes</c><01:43:55.040><c> up</c><01:43:55.340><c> and</c>

01:43:55.630 --> 01:43:55.640 align:start position:0%
see a low card that count goes up and
 

01:43:55.640 --> 01:43:58.419 align:start position:0%
see a low card that count goes up and
when<01:43:56.179><c> you</c><01:43:56.270><c> see</c><01:43:56.449><c> a</c><01:43:56.480><c> high</c><01:43:56.929><c> card</c><01:43:57.320><c> that</c><01:43:57.949><c> count</c><01:43:58.219><c> goes</c>

01:43:58.419 --> 01:43:58.429 align:start position:0%
when you see a high card that count goes
 

01:43:58.429 --> 01:44:01.090 align:start position:0%
when you see a high card that count goes
down<01:43:58.760><c> and</c><01:43:59.150><c> if</c><01:43:59.390><c> it's</c><01:43:59.570><c> a</c><01:43:59.780><c> middle</c><01:44:00.199><c> value</c><01:44:00.350><c> card</c><01:44:00.830><c> the</c>

01:44:01.090 --> 01:44:01.100 align:start position:0%
down and if it's a middle value card the
 

01:44:01.100 --> 01:44:04.510 align:start position:0%
down and if it's a middle value card the
count<01:44:01.370><c> stays</c><01:44:01.760><c> the</c><01:44:02.179><c> same</c><01:44:02.210><c> and</c><01:44:02.810><c> then</c><01:44:03.739><c> when</c><01:44:04.370><c> the</c>

01:44:04.510 --> 01:44:04.520 align:start position:0%
count stays the same and then when the
 

01:44:04.520 --> 01:44:07.060 align:start position:0%
count stays the same and then when the
count<01:44:04.790><c> is</c><01:44:04.969><c> positive</c><01:44:05.780><c> the</c><01:44:06.080><c> player</c><01:44:06.350><c> should</c><01:44:06.739><c> bet</c>

01:44:07.060 --> 01:44:07.070 align:start position:0%
count is positive the player should bet
 

01:44:07.070 --> 01:44:09.850 align:start position:0%
count is positive the player should bet
high<01:44:07.400><c> and</c><01:44:07.850><c> when</c><01:44:08.300><c> the</c><01:44:08.420><c> count</c><01:44:08.690><c> is</c><01:44:08.870><c> zero</c><01:44:09.560><c> or</c>

01:44:09.850 --> 01:44:09.860 align:start position:0%
high and when the count is zero or
 

01:44:09.860 --> 01:44:13.810 align:start position:0%
high and when the count is zero or
negative<01:44:10.340><c> the</c><01:44:11.150><c> player</c><01:44:11.510><c> should</c><01:44:11.960><c> bet</c><01:44:12.380><c> low</c><01:44:12.830><c> so</c><01:44:13.520><c> we</c>

01:44:13.810 --> 01:44:13.820 align:start position:0%
negative the player should bet low so we
 

01:44:13.820 --> 01:44:17.650 align:start position:0%
negative the player should bet low so we
are<01:44:14.150><c> going</c><01:44:14.600><c> to</c><01:44:14.870><c> use</c><01:44:15.440><c> a</c><01:44:15.679><c> switch</c><01:44:16.400><c> statement</c><01:44:16.699><c> to</c>

01:44:17.650 --> 01:44:17.660 align:start position:0%
are going to use a switch statement to
 

01:44:17.660 --> 01:44:21.010 align:start position:0%
are going to use a switch statement to
figure<01:44:18.080><c> out</c><01:44:18.260><c> what</c><01:44:19.219><c> card</c><01:44:19.790><c> has</c><01:44:20.210><c> been</c><01:44:20.239><c> passed</c><01:44:20.690><c> in</c>

01:44:21.010 --> 01:44:21.020 align:start position:0%
figure out what card has been passed in
 

01:44:21.020 --> 01:44:23.530 align:start position:0%
figure out what card has been passed in
and<01:44:21.230><c> what</c><01:44:21.410><c> to</c><01:44:21.530><c> do</c><01:44:21.739><c> about</c><01:44:22.070><c> it</c><01:44:22.280><c> you</c><01:44:22.940><c> can</c><01:44:23.150><c> see</c><01:44:23.360><c> that</c>

01:44:23.530 --> 01:44:23.540 align:start position:0%
and what to do about it you can see that
 

01:44:23.540 --> 01:44:25.689 align:start position:0%
and what to do about it you can see that
the<01:44:23.630><c> function</c><01:44:23.810><c> looks</c><01:44:24.199><c> like</c><01:44:24.260><c> this</c><01:44:24.620><c> see</c><01:44:25.280><c> see</c><01:44:25.550><c> and</c>

01:44:25.689 --> 01:44:25.699 align:start position:0%
the function looks like this see see and
 

01:44:25.699 --> 01:44:28.330 align:start position:0%
the function looks like this see see and
we<01:44:25.760><c> pass</c><01:44:26.030><c> in</c><01:44:26.210><c> a</c><01:44:26.300><c> card</c><01:44:26.690><c> and</c><01:44:27.160><c> depending</c><01:44:28.160><c> on</c><01:44:28.190><c> what</c>

01:44:28.330 --> 01:44:28.340 align:start position:0%
we pass in a card and depending on what
 

01:44:28.340 --> 01:44:30.790 align:start position:0%
we pass in a card and depending on what
the<01:44:28.460><c> card</c><01:44:28.760><c> is</c><01:44:28.910><c> it's</c><01:44:29.420><c> going</c><01:44:29.690><c> to</c><01:44:29.810><c> increase</c><01:44:30.440><c> this</c>

01:44:30.790 --> 01:44:30.800 align:start position:0%
the card is it's going to increase this
 

01:44:30.800 --> 01:44:33.250 align:start position:0%
the card is it's going to increase this
global<01:44:31.400><c> count</c><01:44:31.730><c> variable</c><01:44:32.330><c> or</c><01:44:32.810><c> it's</c><01:44:32.960><c> going</c><01:44:33.140><c> to</c>

01:44:33.250 --> 01:44:33.260 align:start position:0%
global count variable or it's going to
 

01:44:33.260 --> 01:44:35.470 align:start position:0%
global count variable or it's going to
decrease<01:44:33.710><c> it</c><01:44:34.040><c> or</c><01:44:34.219><c> it's</c><01:44:34.699><c> going</c><01:44:34.850><c> to</c><01:44:34.910><c> stay</c><01:44:35.179><c> the</c>

01:44:35.470 --> 01:44:35.480 align:start position:0%
decrease it or it's going to stay the
 

01:44:35.480 --> 01:44:38.950 align:start position:0%
decrease it or it's going to stay the
same<01:44:35.719><c> and</c><01:44:36.219><c> then</c><01:44:37.219><c> we</c><01:44:37.730><c> are</c><01:44:37.820><c> going</c><01:44:38.030><c> to</c><01:44:38.120><c> return</c><01:44:38.360><c> two</c>

01:44:38.950 --> 01:44:38.960 align:start position:0%
same and then we are going to return two
 

01:44:38.960 --> 01:44:41.050 align:start position:0%
same and then we are going to return two
things<01:44:39.380><c> we're</c><01:44:39.770><c> not</c><01:44:39.860><c> gonna</c><01:44:40.040><c> return</c><01:44:40.370><c> changeme</c>

01:44:41.050 --> 01:44:41.060 align:start position:0%
things we're not gonna return changeme
 

01:44:41.060 --> 01:44:44.020 align:start position:0%
things we're not gonna return changeme
we<01:44:41.600><c> are</c><01:44:41.750><c> going</c><01:44:42.020><c> to</c><01:44:42.170><c> return</c><01:44:42.380><c> the</c><01:44:43.310><c> current</c><01:44:43.760><c> count</c>

01:44:44.020 --> 01:44:44.030 align:start position:0%
we are going to return the current count
 

01:44:44.030 --> 01:44:47.110 align:start position:0%
we are going to return the current count
value<01:44:44.570><c> and</c><01:44:44.780><c> whether</c><01:44:45.500><c> the</c><01:44:45.830><c> player</c><01:44:46.219><c> should</c><01:44:46.670><c> hold</c>

01:44:47.110 --> 01:44:47.120 align:start position:0%
value and whether the player should hold
 

01:44:47.120 --> 01:44:51.880 align:start position:0%
value and whether the player should hold
or<01:44:47.449><c> bet</c><01:44:48.429><c> so</c><01:44:49.429><c> every</c><01:44:50.239><c> time</c><01:44:50.480><c> you</c><01:44:50.690><c> call</c><01:44:50.960><c> the</c><01:44:51.350><c> CC</c>

01:44:51.880 --> 01:44:51.890 align:start position:0%
or bet so every time you call the CC
 

01:44:51.890 --> 01:44:55.240 align:start position:0%
or bet so every time you call the CC
function<01:44:52.520><c> it's</c><01:44:53.150><c> going</c><01:44:53.600><c> to</c><01:44:53.870><c> change</c><01:44:54.500><c> this</c><01:44:54.860><c> count</c>

01:44:55.240 --> 01:44:55.250 align:start position:0%
function it's going to change this count
 

01:44:55.250 --> 01:44:58.450 align:start position:0%
function it's going to change this count
value<01:44:55.820><c> and</c><01:44:56.060><c> return</c><01:44:56.810><c> the</c><01:44:57.020><c> total</c><01:44:57.320><c> count</c><01:44:57.560><c> so</c>

01:44:58.450 --> 01:44:58.460 align:start position:0%
value and return the total count so
 

01:44:58.460 --> 01:45:01.270 align:start position:0%
value and return the total count so
let's<01:44:58.699><c> see</c><01:44:58.940><c> how</c><01:44:59.179><c> this</c><01:44:59.420><c> is</c><01:44:59.480><c> going</c><01:44:59.960><c> to</c><01:45:00.140><c> work</c><01:45:00.280><c> we</c>

01:45:01.270 --> 01:45:01.280 align:start position:0%
let's see how this is going to work we
 

01:45:01.280 --> 01:45:03.250 align:start position:0%
let's see how this is going to work we
are<01:45:01.310><c> going</c><01:45:01.460><c> to</c><01:45:01.969><c> use</c><01:45:02.540><c> the</c><01:45:02.780><c> switch</c><01:45:03.110><c> statement</c>

01:45:03.250 --> 01:45:03.260 align:start position:0%
are going to use the switch statement
 

01:45:03.260 --> 01:45:08.979 align:start position:0%
are going to use the switch statement
like<01:45:03.710><c> I</c><01:45:03.739><c> said</c><01:45:04.179><c> and</c><01:45:06.219><c> we're</c><01:45:07.219><c> going</c><01:45:07.460><c> to</c><01:45:07.699><c> check</c><01:45:08.540><c> the</c>

01:45:08.979 --> 01:45:08.989 align:start position:0%
like I said and we're going to check the
 

01:45:08.989 --> 01:45:13.510 align:start position:0%
like I said and we're going to check the
card<01:45:09.380><c> value</c><01:45:09.469><c> that</c><01:45:09.949><c> was</c><01:45:10.100><c> passed</c><01:45:10.130><c> in</c><01:45:11.739><c> so</c><01:45:12.739><c> if</c><01:45:13.340><c> the</c>

01:45:13.510 --> 01:45:13.520 align:start position:0%
card value that was passed in so if the
 

01:45:13.520 --> 01:45:17.020 align:start position:0%
card value that was passed in so if the
case<01:45:14.060><c> is</c><01:45:14.360><c> 2</c><01:45:14.660><c> 3</c><01:45:14.870><c> 4</c><01:45:15.170><c> 5</c><01:45:15.350><c> 6</c><01:45:15.739><c> we</c><01:45:16.429><c> are</c><01:45:16.550><c> going</c><01:45:16.850><c> to</c>

01:45:17.020 --> 01:45:17.030 align:start position:0%
case is 2 3 4 5 6 we are going to
 

01:45:17.030 --> 01:45:19.689 align:start position:0%
case is 2 3 4 5 6 we are going to
increment<01:45:17.690><c> the</c><01:45:18.050><c> count</c><01:45:18.320><c> variable</c><01:45:18.739><c> so</c><01:45:19.580><c> we're</c>

01:45:19.689 --> 01:45:19.699 align:start position:0%
increment the count variable so we're
 

01:45:19.699 --> 01:45:23.350 align:start position:0%
increment the count variable so we're
going<01:45:19.790><c> to</c><01:45:19.850><c> do</c><01:45:19.940><c> like</c><01:45:20.060><c> this</c><01:45:20.300><c> case</c><01:45:21.190><c> 2</c><01:45:22.190><c> I'm</c><01:45:23.179><c> going</c>

01:45:23.350 --> 01:45:23.360 align:start position:0%
going to do like this case 2 I'm going
 

01:45:23.360 --> 01:45:25.750 align:start position:0%
going to do like this case 2 I'm going
to<01:45:23.420><c> do</c><01:45:23.540><c> some</c><01:45:23.780><c> copying</c><01:45:24.350><c> and</c><01:45:24.530><c> pasting</c><01:45:24.800><c> if</c><01:45:25.370><c> the</c>

01:45:25.750 --> 01:45:25.760 align:start position:0%
to do some copying and pasting if the
 

01:45:25.760 --> 01:45:28.390 align:start position:0%
to do some copying and pasting if the
case<01:45:25.940><c> is</c><01:45:26.120><c> 2</c><01:45:26.390><c> 3</c><01:45:26.900><c> 4</c><01:45:27.290><c> 5</c><01:45:27.650><c> 6</c>

01:45:28.390 --> 01:45:28.400 align:start position:0%
case is 2 3 4 5 6
 

01:45:28.400 --> 01:45:30.040 align:start position:0%
case is 2 3 4 5 6
well<01:45:29.030><c> it</c><01:45:29.090><c> just</c><01:45:29.270><c> had</c><01:45:29.360><c> to</c><01:45:29.480><c> actually</c><01:45:29.750><c> change</c>

01:45:30.040 --> 01:45:30.050 align:start position:0%
well it just had to actually change
 

01:45:30.050 --> 01:45:37.300 align:start position:0%
well it just had to actually change
these<01:45:30.199><c> values</c><01:45:30.340><c> 3</c><01:45:31.390><c> 4</c><01:45:32.980><c> 5</c><01:45:34.690><c> 6</c><01:45:35.690><c> now</c><01:45:36.140><c> there</c><01:45:36.469><c> are</c><01:45:36.679><c> many</c>

01:45:37.300 --> 01:45:37.310 align:start position:0%
these values 3 4 5 6 now there are many
 

01:45:37.310 --> 01:45:40.390 align:start position:0%
these values 3 4 5 6 now there are many
ways<01:45:37.699><c> to</c><01:45:38.090><c> write</c><01:45:38.270><c> any</c><01:45:38.540><c> program</c><01:45:38.980><c> this</c><01:45:39.980><c> could</c><01:45:40.280><c> be</c>

01:45:40.390 --> 01:45:40.400 align:start position:0%
ways to write any program this could be
 

01:45:40.400 --> 01:45:41.830 align:start position:0%
ways to write any program this could be
done<01:45:40.550><c> with</c><01:45:40.699><c> if</c><01:45:40.910><c> statements</c><01:45:41.540><c> and</c><01:45:41.600><c> else</c>

01:45:41.830 --> 01:45:41.840 align:start position:0%
done with if statements and else
 

01:45:41.840 --> 01:45:44.169 align:start position:0%
done with if statements and else
statements<01:45:42.440><c> it</c><01:45:42.590><c> could</c><01:45:43.280><c> be</c><01:45:43.520><c> even</c><01:45:43.699><c> done</c><01:45:44.030><c> with</c>

01:45:44.169 --> 01:45:44.179 align:start position:0%
statements it could be even done with
 

01:45:44.179 --> 01:45:45.610 align:start position:0%
statements it could be even done with
other<01:45:44.420><c> other</c><01:45:44.810><c> ways</c><01:45:45.050><c> that</c><01:45:45.230><c> we</c><01:45:45.290><c> haven't</c><01:45:45.560><c> even</c>

01:45:45.610 --> 01:45:45.620 align:start position:0%
other other ways that we haven't even
 

01:45:45.620 --> 01:45:48.220 align:start position:0%
other other ways that we haven't even
talked<01:45:45.980><c> about</c><01:45:46.160><c> yet</c><01:45:46.550><c> as</c><01:45:46.790><c> long</c><01:45:47.360><c> as</c><01:45:47.570><c> the</c><01:45:47.719><c> program</c>

01:45:48.220 --> 01:45:48.230 align:start position:0%
talked about yet as long as the program
 

01:45:48.230 --> 01:45:50.979 align:start position:0%
talked about yet as long as the program
works<01:45:48.650><c> in</c><01:45:49.070><c> this</c><01:45:49.820><c> case</c><01:45:50.120><c> that's</c><01:45:50.420><c> all</c><01:45:50.690><c> that</c>

01:45:50.979 --> 01:45:50.989 align:start position:0%
works in this case that's all that
 

01:45:50.989 --> 01:45:53.560 align:start position:0%
works in this case that's all that
matters<01:45:51.469><c> so</c><01:45:51.770><c> if</c><01:45:52.370><c> you</c><01:45:52.610><c> find</c><01:45:52.850><c> a</c><01:45:53.060><c> different</c><01:45:53.449><c> way</c>

01:45:53.560 --> 01:45:53.570 align:start position:0%
matters so if you find a different way
 

01:45:53.570 --> 01:45:54.830 align:start position:0%
matters so if you find a different way
to<01:45:53.600><c> write</c><01:45:53.840><c> this</c><01:45:54.140><c> program</c>

01:45:54.830 --> 01:45:54.840 align:start position:0%
to write this program
 

01:45:54.840 --> 01:45:58.010 align:start position:0%
to write this program
that's<01:45:55.050><c> great</c><01:45:55.340><c> so</c><01:45:56.340><c> if</c><01:45:56.700><c> the</c><01:45:57.210><c> case</c><01:45:57.420><c> is</c><01:45:57.570><c> two</c><01:45:57.780><c> three</c>

01:45:58.010 --> 01:45:58.020 align:start position:0%
that's great so if the case is two three
 

01:45:58.020 --> 01:46:01.250 align:start position:0%
that's great so if the case is two three
four<01:45:58.200><c> five</c><01:45:58.440><c> or</c><01:45:58.680><c> six</c><01:45:59.190><c> we</c><01:46:00.120><c> are</c><01:46:00.270><c> going</c><01:46:00.570><c> to</c><01:46:00.810><c> take</c>

01:46:01.250 --> 01:46:01.260 align:start position:0%
four five or six we are going to take
 

01:46:01.260 --> 01:46:05.360 align:start position:0%
four five or six we are going to take
the<01:46:01.560><c> account</c><01:46:01.860><c> value</c><01:46:02.100><c> and</c><01:46:02.760><c> if</c><01:46:03.060><c> we</c><01:46:03.210><c> just</c><01:46:03.390><c> do</c><01:46:04.370><c> plus</c>

01:46:05.360 --> 01:46:05.370 align:start position:0%
the account value and if we just do plus
 

01:46:05.370 --> 01:46:08.510 align:start position:0%
the account value and if we just do plus
plus<01:46:05.760><c> that</c><01:46:06.420><c> increments</c><01:46:07.080><c> it</c><01:46:07.200><c> by</c><01:46:07.410><c> one</c><01:46:07.740><c> and</c><01:46:08.010><c> then</c>

01:46:08.510 --> 01:46:08.520 align:start position:0%
plus that increments it by one and then
 

01:46:08.520 --> 01:46:12.770 align:start position:0%
plus that increments it by one and then
we're<01:46:08.700><c> going</c><01:46:08.880><c> to</c><01:46:09.120><c> break</c><01:46:09.510><c> now</c><01:46:10.280><c> if</c><01:46:11.280><c> the</c><01:46:12.180><c> case</c><01:46:12.540><c> is</c>

01:46:12.770 --> 01:46:12.780 align:start position:0%
we're going to break now if the case is
 

01:46:12.780 --> 01:46:15.770 align:start position:0%
we're going to break now if the case is
seven<01:46:13.140><c> eight</c><01:46:13.260><c> nine</c><01:46:13.470><c> so</c><01:46:14.280><c> let's</c><01:46:14.730><c> pay</c><01:46:15.180><c> some</c><01:46:15.450><c> three</c>

01:46:15.770 --> 01:46:15.780 align:start position:0%
seven eight nine so let's pay some three
 

01:46:15.780 --> 01:46:22.340 align:start position:0%
seven eight nine so let's pay some three
of<01:46:15.900><c> these</c><01:46:16.490><c> blue</c><01:46:17.960><c> seven</c><01:46:18.960><c> eight</c><01:46:19.700><c> nine</c><01:46:21.350><c> actually</c>

01:46:22.340 --> 01:46:22.350 align:start position:0%
of these blue seven eight nine actually
 

01:46:22.350 --> 01:46:25.460 align:start position:0%
of these blue seven eight nine actually
we're<01:46:22.470><c> going</c><01:46:22.560><c> to</c><01:46:22.620><c> do</c><01:46:22.740><c> nothing</c><01:46:24.080><c> the</c><01:46:25.080><c> account</c><01:46:25.350><c> is</c>

01:46:25.460 --> 01:46:25.470 align:start position:0%
we're going to do nothing the account is
 

01:46:25.470 --> 01:46:27.140 align:start position:0%
we're going to do nothing the account is
not<01:46:25.530><c> going</c><01:46:25.740><c> to</c><01:46:25.830><c> change</c><01:46:25.890><c> at</c><01:46:26.160><c> all</c><01:46:26.280><c> so</c><01:46:26.850><c> we</c><01:46:27.120><c> don't</c>

01:46:27.140 --> 01:46:27.150 align:start position:0%
not going to change at all so we don't
 

01:46:27.150 --> 01:46:29.720 align:start position:0%
not going to change at all so we don't
even<01:46:27.330><c> need</c><01:46:27.540><c> case</c><01:46:28.050><c> seven</c><01:46:28.410><c> or</c><01:46:28.470><c> eight</c><01:46:28.530><c> nine</c><01:46:28.770><c> so</c>

01:46:29.720 --> 01:46:29.730 align:start position:0%
even need case seven or eight nine so
 

01:46:29.730 --> 01:46:31.550 align:start position:0%
even need case seven or eight nine so
instead<01:46:30.060><c> of</c><01:46:30.120><c> doing</c><01:46:30.270><c> seven</c><01:46:30.660><c> eight</c><01:46:30.780><c> nine</c><01:46:30.930><c> we</c>

01:46:31.550 --> 01:46:31.560 align:start position:0%
instead of doing seven eight nine we
 

01:46:31.560 --> 01:46:33.710 align:start position:0%
instead of doing seven eight nine we
just<01:46:32.010><c> need</c><01:46:32.160><c> to</c><01:46:32.340><c> check</c><01:46:33.030><c> in</c><01:46:33.240><c> the</c><01:46:33.450><c> case</c><01:46:33.690><c> that</c>

01:46:33.710 --> 01:46:33.720 align:start position:0%
just need to check in the case that
 

01:46:33.720 --> 01:46:35.840 align:start position:0%
just need to check in the case that
something<01:46:34.110><c> is</c><01:46:34.230><c> actually</c><01:46:34.350><c> going</c><01:46:34.710><c> to</c><01:46:34.800><c> happen</c><01:46:35.040><c> so</c>

01:46:35.840 --> 01:46:35.850 align:start position:0%
something is actually going to happen so
 

01:46:35.850 --> 01:46:38.180 align:start position:0%
something is actually going to happen so
we<01:46:36.660><c> are</c><01:46:36.780><c> going</c><01:46:36.930><c> to</c><01:46:37.080><c> decrement</c><01:46:37.710><c> the</c><01:46:37.830><c> count</c>

01:46:38.180 --> 01:46:38.190 align:start position:0%
we are going to decrement the count
 

01:46:38.190 --> 01:46:41.330 align:start position:0%
we are going to decrement the count
variable<01:46:38.430><c> if</c><01:46:38.940><c> we</c><01:46:39.570><c> have</c><01:46:39.840><c> ten</c><01:46:40.320><c> Jack</c><01:46:40.740><c> queen</c><01:46:41.310><c> king</c>

01:46:41.330 --> 01:46:41.340 align:start position:0%
variable if we have ten Jack queen king
 

01:46:41.340 --> 01:46:43.940 align:start position:0%
variable if we have ten Jack queen king
or<01:46:42.030><c> ace</c><01:46:42.420><c> so</c><01:46:43.200><c> that's</c><01:46:43.350><c> what</c><01:46:43.470><c> we're</c><01:46:43.560><c> gonna</c><01:46:43.620><c> change</c>

01:46:43.940 --> 01:46:43.950 align:start position:0%
or ace so that's what we're gonna change
 

01:46:43.950 --> 01:46:59.240 align:start position:0%
or ace so that's what we're gonna change
this<01:46:44.190><c> to</c><01:46:44.330><c> ten</c><01:46:47.120><c> Jack</c><01:46:49.490><c> queen</c><01:46:50.490><c> king</c><01:46:53.030><c> or</c><01:46:56.360><c> bass</c><01:46:58.250><c> in</c>

01:46:59.240 --> 01:46:59.250 align:start position:0%
this to ten Jack queen king or bass in
 

01:46:59.250 --> 01:47:01.670 align:start position:0%
this to ten Jack queen king or bass in
this<01:46:59.400><c> case</c><01:46:59.700><c> we're</c><01:47:00.450><c> going</c><01:47:00.660><c> to</c><01:47:00.750><c> decrement</c><01:47:01.530><c> the</c>

01:47:01.670 --> 01:47:01.680 align:start position:0%
this case we're going to decrement the
 

01:47:01.680 --> 01:47:05.300 align:start position:0%
this case we're going to decrement the
count<01:47:02.040><c> so</c><01:47:02.640><c> you</c><01:47:02.730><c> can</c><01:47:02.850><c> do</c><01:47:02.940><c> count</c><01:47:03.300><c> -</c><01:47:04.140><c> -</c><01:47:04.770><c> so</c><01:47:05.250><c> that's</c>

01:47:05.300 --> 01:47:05.310 align:start position:0%
count so you can do count - - so that's
 

01:47:05.310 --> 01:47:07.250 align:start position:0%
count so you can do count - - so that's
the<01:47:05.490><c> same</c><01:47:05.670><c> as</c><01:47:05.910><c> count</c><01:47:06.180><c> equals</c><01:47:06.510><c> count</c><01:47:06.570><c> minus</c><01:47:07.050><c> one</c>

01:47:07.250 --> 01:47:07.260 align:start position:0%
the same as count equals count minus one
 

01:47:07.260 --> 01:47:14.660 align:start position:0%
the same as count equals count minus one
and<01:47:07.850><c> then</c><01:47:08.850><c> we</c><01:47:09.420><c> will</c><01:47:09.450><c> break</c><01:47:12.020><c> now</c><01:47:13.020><c> we've</c><01:47:13.740><c> taken</c>

01:47:14.660 --> 01:47:14.670 align:start position:0%
and then we will break now we've taken
 

01:47:14.670 --> 01:47:17.150 align:start position:0%
and then we will break now we've taken
care<01:47:15.180><c> of</c><01:47:15.210><c> the</c><01:47:15.810><c> count</c><01:47:16.230><c> and</c><01:47:16.440><c> up</c><01:47:16.620><c> game</c><01:47:16.800><c> account</c>

01:47:17.150 --> 01:47:17.160 align:start position:0%
care of the count and up game account
 

01:47:17.160 --> 01:47:19.130 align:start position:0%
care of the count and up game account
now<01:47:17.850><c> we</c><01:47:17.910><c> have</c><01:47:18.120><c> to</c><01:47:18.240><c> take</c><01:47:18.540><c> care</c><01:47:18.750><c> of</c><01:47:18.780><c> what</c><01:47:18.990><c> we're</c>

01:47:19.130 --> 01:47:19.140 align:start position:0%
now we have to take care of what we're
 

01:47:19.140 --> 01:47:22.700 align:start position:0%
now we have to take care of what we're
going<01:47:19.350><c> to</c><01:47:19.380><c> return</c><01:47:20.030><c> we</c><01:47:21.030><c> are</c><01:47:21.120><c> going</c><01:47:21.450><c> to</c><01:47:21.710><c> return</c>

01:47:22.700 --> 01:47:22.710 align:start position:0%
going to return we are going to return
 

01:47:22.710 --> 01:47:26.780 align:start position:0%
going to return we are going to return
the<01:47:23.460><c> count</c><01:47:23.960><c> and</c><01:47:24.960><c> we're</c><01:47:25.560><c> also</c><01:47:25.800><c> going</c><01:47:26.190><c> to</c><01:47:26.280><c> return</c>

01:47:26.780 --> 01:47:26.790 align:start position:0%
the count and we're also going to return
 

01:47:26.790 --> 01:47:31.070 align:start position:0%
the count and we're also going to return
whether<01:47:27.210><c> we</c><01:47:27.960><c> are</c><01:47:28.230><c> going</c><01:47:28.650><c> to</c><01:47:28.860><c> hold</c><01:47:29.310><c> or</c><01:47:29.670><c> bet</c><01:47:30.210><c> so</c>

01:47:31.070 --> 01:47:31.080 align:start position:0%
whether we are going to hold or bet so
 

01:47:31.080 --> 01:47:32.300 align:start position:0%
whether we are going to hold or bet so
we're<01:47:31.320><c> going</c><01:47:31.500><c> to</c><01:47:31.650><c> actually</c><01:47:31.800><c> return</c><01:47:32.250><c> a</c>

01:47:32.300 --> 01:47:32.310 align:start position:0%
we're going to actually return a
 

01:47:32.310 --> 01:47:33.950 align:start position:0%
we're going to actually return a
variable<01:47:32.910><c> but</c><01:47:33.060><c> first</c><01:47:33.300><c> we're</c><01:47:33.420><c> going</c><01:47:33.600><c> to</c><01:47:33.660><c> space</c>

01:47:33.950 --> 01:47:33.960 align:start position:0%
variable but first we're going to space
 

01:47:33.960 --> 01:47:36.100 align:start position:0%
variable but first we're going to space
there's<01:47:34.290><c> a</c><01:47:34.350><c> space</c><01:47:34.650><c> between</c><01:47:34.680><c> the</c><01:47:35.400><c> number</c><01:47:35.820><c> and</c>

01:47:36.100 --> 01:47:36.110 align:start position:0%
there's a space between the number and
 

01:47:36.110 --> 01:47:40.750 align:start position:0%
there's a space between the number and
then<01:47:37.110><c> we're</c><01:47:37.800><c> going</c><01:47:38.100><c> to</c><01:47:38.130><c> return</c><01:47:38.660><c> the</c><01:47:39.740><c> hold</c>

01:47:40.750 --> 01:47:40.760 align:start position:0%
then we're going to return the hold
 

01:47:40.760 --> 01:47:43.220 align:start position:0%
then we're going to return the hold
variable<01:47:41.760><c> now</c><01:47:42.150><c> this</c><01:47:42.330><c> is</c><01:47:42.450><c> a</c><01:47:42.480><c> variable</c><01:47:42.900><c> we</c>

01:47:43.220 --> 01:47:43.230 align:start position:0%
variable now this is a variable we
 

01:47:43.230 --> 01:47:45.410 align:start position:0%
variable now this is a variable we
haven't<01:47:43.740><c> created</c><01:47:44.010><c> yet</c><01:47:44.220><c> normally</c><01:47:45.060><c> this</c><01:47:45.210><c> would</c>

01:47:45.410 --> 01:47:45.420 align:start position:0%
haven't created yet normally this would
 

01:47:45.420 --> 01:47:47.390 align:start position:0%
haven't created yet normally this would
be<01:47:45.450><c> the</c><01:47:45.780><c> perfect</c><01:47:46.260><c> time</c><01:47:46.410><c> to</c><01:47:46.470><c> use</c><01:47:46.650><c> the</c><01:47:46.920><c> ternary</c>

01:47:47.390 --> 01:47:47.400 align:start position:0%
be the perfect time to use the ternary
 

01:47:47.400 --> 01:47:49.160 align:start position:0%
be the perfect time to use the ternary
operator<01:47:47.880><c> but</c><01:47:48.390><c> we</c><01:47:48.510><c> haven't</c><01:47:48.750><c> learned</c><01:47:48.900><c> that</c><01:47:49.050><c> yet</c>

01:47:49.160 --> 01:47:49.170 align:start position:0%
operator but we haven't learned that yet
 

01:47:49.170 --> 01:47:51.350 align:start position:0%
operator but we haven't learned that yet
and<01:47:49.680><c> what</c><01:47:50.520><c> we're</c><01:47:50.700><c> not</c><01:47:50.790><c> going</c><01:47:50.970><c> to</c><01:47:51.000><c> learn</c><01:47:51.210><c> that</c>

01:47:51.350 --> 01:47:51.360 align:start position:0%
and what we're not going to learn that
 

01:47:51.360 --> 01:47:52.850 align:start position:0%
and what we're not going to learn that
for<01:47:51.510><c> a</c><01:47:51.570><c> few</c><01:47:51.750><c> more</c><01:47:51.930><c> lessons</c><01:47:52.110><c> so</c><01:47:52.410><c> I</c><01:47:52.470><c> won't</c><01:47:52.710><c> use</c>

01:47:52.850 --> 01:47:52.860 align:start position:0%
for a few more lessons so I won't use
 

01:47:52.860 --> 01:47:55.760 align:start position:0%
for a few more lessons so I won't use
that<01:47:52.890><c> now</c><01:47:53.310><c> we</c><01:47:54.150><c> are</c><01:47:54.180><c> going</c><01:47:54.480><c> to</c><01:47:54.750><c> set</c><01:47:55.350><c> what</c><01:47:55.590><c> that</c>

01:47:55.760 --> 01:47:55.770 align:start position:0%
that now we are going to set what that
 

01:47:55.770 --> 01:47:59.600 align:start position:0%
that now we are going to set what that
hold<01:47:56.070><c> that</c><01:47:56.340><c> value</c><01:47:56.850><c> is</c><01:47:57.410><c> first</c><01:47:58.410><c> we'll</c><01:47:59.130><c> create</c>

01:47:59.600 --> 01:47:59.610 align:start position:0%
hold that value is first we'll create
 

01:47:59.610 --> 01:48:05.410 align:start position:0%
hold that value is first we'll create
the<01:47:59.790><c> hold</c><01:48:00.510><c> variable</c><01:48:01.340><c> variable</c><01:48:02.340><c> hold</c><01:48:03.240><c> back</c><01:48:04.110><c> and</c>

01:48:05.410 --> 01:48:05.420 align:start position:0%
the hold variable variable hold back and
 

01:48:05.420 --> 01:48:08.270 align:start position:0%
the hold variable variable hold back and
we'll<01:48:06.420><c> set</c><01:48:06.840><c> it</c><01:48:06.990><c> to</c>

01:48:08.270 --> 01:48:08.280 align:start position:0%
we'll set it to
 

01:48:08.280 --> 01:48:19.510 align:start position:0%
we'll set it to
hold<01:48:09.240><c> however</c><01:48:09.900><c> if</c><01:48:12.800><c> count</c><01:48:13.800><c> is</c><01:48:15.860><c> more</c><01:48:16.860><c> than</c><01:48:17.220><c> zero</c>

01:48:19.510 --> 01:48:19.520 align:start position:0%
hold however if count is more than zero
 

01:48:19.520 --> 01:48:28.720 align:start position:0%
hold however if count is more than zero
then<01:48:20.520><c> we</c><01:48:21.270><c> can</c><01:48:21.300><c> set</c><01:48:21.780><c> hold</c><01:48:22.640><c> that</c><01:48:24.530><c> to</c><01:48:25.530><c> equal</c><01:48:26.360><c> that</c>

01:48:28.720 --> 01:48:28.730 align:start position:0%
then we can set hold that to equal that
 

01:48:28.730 --> 01:48:33.950 align:start position:0%
then we can set hold that to equal that
so<01:48:29.730><c> now</c><01:48:30.740><c> this</c><01:48:31.740><c> should</c><01:48:32.250><c> work</c><01:48:32.760><c> let's</c><01:48:33.390><c> test</c><01:48:33.780><c> it</c>

01:48:33.950 --> 01:48:33.960 align:start position:0%
so now this should work let's test it
 

01:48:33.960 --> 01:48:35.630 align:start position:0%
so now this should work let's test it
out<01:48:34.050><c> and</c><01:48:34.320><c> see</c><01:48:34.380><c> if</c><01:48:34.710><c> we've</c><01:48:34.860><c> made</c><01:48:35.100><c> any</c><01:48:35.250><c> mistakes</c>

01:48:35.630 --> 01:48:35.640 align:start position:0%
out and see if we've made any mistakes
 

01:48:35.640 --> 01:48:41.060 align:start position:0%
out and see if we've made any mistakes
yet<01:48:35.960><c> hold</c><01:48:36.960><c> that</c><01:48:37.170><c> is</c><01:48:37.320><c> not</c><01:48:37.620><c> defined</c><01:48:39.200><c> well</c><01:48:40.200><c> we</c>

01:48:41.060 --> 01:48:41.070 align:start position:0%
yet hold that is not defined well we
 

01:48:41.070 --> 01:48:41.780 align:start position:0%
yet hold that is not defined well we
have<01:48:41.250><c> it</c><01:48:41.340><c> right</c><01:48:41.460><c> here</c>

01:48:41.780 --> 01:48:41.790 align:start position:0%
have it right here
 

01:48:41.790 --> 01:48:44.660 align:start position:0%
have it right here
hold<01:48:42.060><c> Oh</c><01:48:42.540><c> we</c><01:48:42.690><c> spelled</c><01:48:42.990><c> that</c><01:48:43.110><c> wrong</c><01:48:43.380><c> so</c><01:48:44.070><c> instead</c>

01:48:44.660 --> 01:48:44.670 align:start position:0%
hold Oh we spelled that wrong so instead
 

01:48:44.670 --> 01:48:48.460 align:start position:0%
hold Oh we spelled that wrong so instead
of<01:48:44.730><c> halt</c><01:48:45.090><c> bet</c><01:48:45.510><c> that</c><01:48:45.780><c> should</c><01:48:45.900><c> we</c><01:48:45.960><c> hold</c><01:48:46.290><c> that</c>

01:48:48.460 --> 01:48:48.470 align:start position:0%
of halt bet that should we hold that
 

01:48:48.470 --> 01:48:52.250 align:start position:0%
of halt bet that should we hold that
okay<01:48:49.470><c> in</c><01:48:49.680><c> this</c><01:48:50.040><c> case</c><01:48:50.340><c> we're</c><01:48:50.790><c> going</c><01:48:51.030><c> to</c><01:48:51.260><c> bet</c>

01:48:52.250 --> 01:48:52.260 align:start position:0%
okay in this case we're going to bet
 

01:48:52.260 --> 01:48:55.130 align:start position:0%
okay in this case we're going to bet
because<01:48:53.130><c> we</c><01:48:53.790><c> had</c><01:48:54.150><c> a</c><01:48:54.510><c> bunch</c><01:48:54.780><c> of</c><01:48:54.930><c> positive</c>

01:48:55.130 --> 01:48:55.140 align:start position:0%
because we had a bunch of positive
 

01:48:55.140 --> 01:48:57.050 align:start position:0%
because we had a bunch of positive
numbers<01:48:55.470><c> and</c><01:48:55.680><c> then</c><01:48:55.920><c> negative</c><01:48:56.250><c> numbers</c><01:48:56.550><c> but</c><01:48:56.940><c> if</c>

01:48:57.050 --> 01:48:57.060 align:start position:0%
numbers and then negative numbers but if
 

01:48:57.060 --> 01:49:04.180 align:start position:0%
numbers and then negative numbers but if
we<01:48:57.270><c> change</c><01:48:57.720><c> this</c><01:48:58.080><c> to</c><01:48:58.730><c> K</c><01:48:59.730><c> I</c><01:49:01.190><c> change</c><01:49:02.190><c> this</c><01:49:02.400><c> to</c><01:49:03.170><c> 10</c>

01:49:04.180 --> 01:49:04.190 align:start position:0%
we change this to K I change this to 10
 

01:49:04.190 --> 01:49:07.880 align:start position:0%
we change this to K I change this to 10
what<01:49:05.190><c> do</c><01:49:05.370><c> what</c><01:49:05.490><c> happens</c><01:49:06.260><c> now</c><01:49:07.260><c> we're</c><01:49:07.770><c> gonna</c>

01:49:07.880 --> 01:49:07.890 align:start position:0%
what do what happens now we're gonna
 

01:49:07.890 --> 01:49:14.340 align:start position:0%
what do what happens now we're gonna
hold<01:49:08.780><c> okay</c><01:49:09.780><c> it</c><01:49:09.930><c> worked</c>

01:49:14.340 --> 01:49:14.350 align:start position:0%
 
 

01:49:14.350 --> 01:49:17.400 align:start position:0%
 
objects<01:49:15.370><c> objects</c><01:49:16.370><c> are</c><01:49:16.490><c> similar</c><01:49:16.850><c> to</c><01:49:17.030><c> arrays</c>

01:49:17.400 --> 01:49:17.410 align:start position:0%
objects objects are similar to arrays
 

01:49:17.410 --> 01:49:20.650 align:start position:0%
objects objects are similar to arrays
except<01:49:18.410><c> that</c><01:49:18.560><c> instead</c><01:49:18.710><c> of</c><01:49:18.920><c> using</c><01:49:19.150><c> indexes</c><01:49:20.150><c> to</c>

01:49:20.650 --> 01:49:20.660 align:start position:0%
except that instead of using indexes to
 

01:49:20.660 --> 01:49:24.520 align:start position:0%
except that instead of using indexes to
access<01:49:21.380><c> data</c><01:49:22.070><c> you</c><01:49:22.490><c> use</c><01:49:22.520><c> properties</c><01:49:23.480><c> so</c><01:49:24.170><c> here's</c>

01:49:24.520 --> 01:49:24.530 align:start position:0%
access data you use properties so here's
 

01:49:24.530 --> 01:49:27.400 align:start position:0%
access data you use properties so here's
an<01:49:24.680><c> object</c><01:49:24.890><c> called</c><01:49:25.460><c> our</c><01:49:25.730><c> dog</c><01:49:26.290><c> objects</c><01:49:27.290><c> are</c>

01:49:27.400 --> 01:49:27.410 align:start position:0%
an object called our dog objects are
 

01:49:27.410 --> 01:49:29.470 align:start position:0%
an object called our dog objects are
going<01:49:27.590><c> to</c><01:49:27.740><c> be</c><01:49:27.830><c> defined</c><01:49:28.460><c> with</c><01:49:28.700><c> these</c><01:49:28.880><c> curly</c>

01:49:29.470 --> 01:49:29.480 align:start position:0%
going to be defined with these curly
 

01:49:29.480 --> 01:49:31.420 align:start position:0%
going to be defined with these curly
braces<01:49:29.720><c> before</c><01:49:30.260><c> at</c><01:49:30.680><c> the</c><01:49:30.860><c> beginning</c><01:49:31.010><c> of</c><01:49:31.370><c> the</c>

01:49:31.420 --> 01:49:31.430 align:start position:0%
braces before at the beginning of the
 

01:49:31.430 --> 01:49:34.300 align:start position:0%
braces before at the beginning of the
end<01:49:31.670><c> and</c><01:49:32.000><c> these</c><01:49:32.540><c> are</c><01:49:32.780><c> the</c><01:49:32.960><c> properties</c><01:49:33.500><c> now</c><01:49:34.250><c> the</c>

01:49:34.300 --> 01:49:34.310 align:start position:0%
end and these are the properties now the
 

01:49:34.310 --> 01:49:37.960 align:start position:0%
end and these are the properties now the
properties<01:49:35.240><c> are</c><01:49:36.010><c> everything</c><01:49:37.010><c> before</c><01:49:37.640><c> the</c>

01:49:37.960 --> 01:49:37.970 align:start position:0%
properties are everything before the
 

01:49:37.970 --> 01:49:41.680 align:start position:0%
properties are everything before the
colons<01:49:38.690><c> so</c><01:49:39.440><c> we</c><01:49:40.070><c> have</c><01:49:40.400><c> name</c><01:49:40.850><c> that's</c><01:49:41.150><c> a</c><01:49:41.240><c> property</c>

01:49:41.680 --> 01:49:41.690 align:start position:0%
colons so we have name that's a property
 

01:49:41.690 --> 01:49:44.410 align:start position:0%
colons so we have name that's a property
legs<01:49:42.050><c> the</c><01:49:42.320><c> property</c><01:49:42.830><c> and</c><01:49:43.010><c> then</c><01:49:43.580><c> the</c><01:49:43.820><c> values</c>

01:49:44.410 --> 01:49:44.420 align:start position:0%
legs the property and then the values
 

01:49:44.420 --> 01:49:47.050 align:start position:0%
legs the property and then the values
are<01:49:44.750><c> the</c><01:49:44.960><c> things</c><01:49:45.230><c> after</c><01:49:45.830><c> the</c><01:49:45.920><c> colons</c><01:49:46.340><c> here</c><01:49:46.640><c> so</c>

01:49:47.050 --> 01:49:47.060 align:start position:0%
are the things after the colons here so
 

01:49:47.060 --> 01:49:50.650 align:start position:0%
are the things after the colons here so
the<01:49:47.630><c> name</c><01:49:47.930><c> is</c><01:49:48.200><c> camper</c><01:49:48.980><c> the</c><01:49:49.250><c> legs</c><01:49:49.580><c> four</c><01:49:50.120><c> tails</c>

01:49:50.650 --> 01:49:50.660 align:start position:0%
the name is camper the legs four tails
 

01:49:50.660 --> 01:49:52.510 align:start position:0%
the name is camper the legs four tails
there's<01:49:50.960><c> like</c><01:49:51.110><c> one</c><01:49:51.350><c> tail</c><01:49:51.590><c> on</c><01:49:51.740><c> this</c><01:49:51.920><c> dog</c><01:49:52.190><c> and</c>

01:49:52.510 --> 01:49:52.520 align:start position:0%
there's like one tail on this dog and
 

01:49:52.520 --> 01:49:55.900 align:start position:0%
there's like one tail on this dog and
friends<01:49:53.480><c> are</c><01:49:53.660><c> everything</c><01:49:54.340><c> now</c><01:49:55.340><c> you</c><01:49:55.370><c> can</c><01:49:55.670><c> see</c>

01:49:55.900 --> 01:49:55.910 align:start position:0%
friends are everything now you can see
 

01:49:55.910 --> 01:49:58.630 align:start position:0%
friends are everything now you can see
that<01:49:56.270><c> with</c><01:49:57.110><c> the</c><01:49:57.260><c> properties</c><01:49:57.830><c> can</c><01:49:58.070><c> be</c><01:49:58.100><c> strings</c>

01:49:58.630 --> 01:49:58.640 align:start position:0%
that with the properties can be strings
 

01:49:58.640 --> 01:50:00.610 align:start position:0%
that with the properties can be strings
they<01:49:59.000><c> can</c><01:49:59.180><c> be</c><01:49:59.330><c> numbers</c><01:49:59.810><c> they</c><01:50:00.050><c> can</c><01:50:00.110><c> be</c><01:50:00.230><c> arrays</c>

01:50:00.610 --> 01:50:00.620 align:start position:0%
they can be numbers they can be arrays
 

01:50:00.620 --> 01:50:03.310 align:start position:0%
they can be numbers they can be arrays
they<01:50:01.400><c> can</c><01:50:01.610><c> be</c><01:50:01.730><c> any</c><01:50:01.970><c> data</c><01:50:02.270><c> type</c><01:50:02.600><c> in</c><01:50:02.840><c> JavaScript</c>

01:50:03.310 --> 01:50:03.320 align:start position:0%
they can be any data type in JavaScript
 

01:50:03.320 --> 01:50:06.790 align:start position:0%
they can be any data type in JavaScript
so<01:50:04.310><c> now</c><01:50:04.730><c> we</c><01:50:05.300><c> are</c><01:50:05.420><c> going</c><01:50:05.630><c> to</c><01:50:05.810><c> create</c><01:50:06.170><c> our</c><01:50:06.380><c> own</c>

01:50:06.790 --> 01:50:06.800 align:start position:0%
so now we are going to create our own
 

01:50:06.800 --> 01:50:09.810 align:start position:0%
so now we are going to create our own
dog<01:50:07.190><c> so</c><01:50:08.090><c> this</c><01:50:08.450><c> is</c><01:50:08.600><c> going</c><01:50:08.900><c> to</c><01:50:08.990><c> have</c><01:50:09.200><c> a</c><01:50:09.230><c> name</c>

01:50:09.810 --> 01:50:09.820 align:start position:0%
dog so this is going to have a name
 

01:50:09.820 --> 01:50:14.140 align:start position:0%
dog so this is going to have a name
personally<01:50:10.820><c> I</c><01:50:11.030><c> like</c><01:50:11.480><c> the</c><01:50:11.720><c> name</c><01:50:12.220><c> Quincy</c><01:50:13.220><c> so</c>

01:50:14.140 --> 01:50:14.150 align:start position:0%
personally I like the name Quincy so
 

01:50:14.150 --> 01:50:16.890 align:start position:0%
personally I like the name Quincy so
we'll<01:50:14.750><c> use</c><01:50:14.990><c> that</c><01:50:15.230><c> for</c><01:50:15.290><c> our</c><01:50:15.500><c> dog's</c><01:50:15.830><c> name</c><01:50:16.160><c> also</c>

01:50:16.890 --> 01:50:16.900 align:start position:0%
we'll use that for our dog's name also
 

01:50:16.900 --> 01:50:21.520 align:start position:0%
we'll use that for our dog's name also
we're<01:50:17.900><c> going</c><01:50:18.560><c> to</c><01:50:18.650><c> have</c><01:50:18.770><c> legs</c><01:50:20.530><c> unfortunately</c>

01:50:21.520 --> 01:50:21.530 align:start position:0%
we're going to have legs unfortunately
 

01:50:21.530 --> 01:50:23.830 align:start position:0%
we're going to have legs unfortunately
our<01:50:21.710><c> dog</c><01:50:22.070><c> has</c><01:50:22.280><c> had</c><01:50:22.460><c> an</c><01:50:22.700><c> accident</c><01:50:23.180><c> he</c><01:50:23.390><c> only</c><01:50:23.660><c> has</c>

01:50:23.830 --> 01:50:23.840 align:start position:0%
our dog has had an accident he only has
 

01:50:23.840 --> 01:50:28.000 align:start position:0%
our dog has had an accident he only has
three<01:50:24.170><c> legs</c><01:50:24.940><c> but</c><01:50:25.940><c> to</c><01:50:26.120><c> make</c><01:50:26.390><c> up</c><01:50:26.630><c> for</c><01:50:27.020><c> the</c><01:50:27.290><c> only</c>

01:50:28.000 --> 01:50:28.010 align:start position:0%
three legs but to make up for the only
 

01:50:28.010 --> 01:50:32.650 align:start position:0%
three legs but to make up for the only
having<01:50:28.310><c> three</c><01:50:28.580><c> legs</c><01:50:28.610><c> he</c><01:50:29.540><c> does</c><01:50:29.840><c> have</c><01:50:30.700><c> two</c><01:50:31.700><c> tails</c>

01:50:32.650 --> 01:50:32.660 align:start position:0%
having three legs he does have two tails
 

01:50:32.660 --> 01:50:37.540 align:start position:0%
having three legs he does have two tails
and<01:50:33.200><c> four</c><01:50:34.070><c> friends</c><01:50:35.860><c> another</c><01:50:36.860><c> unfortunate</c>

01:50:37.540 --> 01:50:37.550 align:start position:0%
and four friends another unfortunate
 

01:50:37.550 --> 01:50:40.960 align:start position:0%
and four friends another unfortunate
thing<01:50:37.970><c> it's</c><01:50:38.240><c> an</c><01:50:38.390><c> empty</c><01:50:38.840><c> array</c><01:50:39.470><c> he</c><01:50:39.980><c> has</c><01:50:40.280><c> no</c>

01:50:40.960 --> 01:50:40.970 align:start position:0%
thing it's an empty array he has no
 

01:50:40.970 --> 01:50:44.470 align:start position:0%
thing it's an empty array he has no
friends<01:50:41.840><c> okay</c><01:50:42.830><c> we've</c><01:50:43.100><c> now</c><01:50:43.130><c> created</c><01:50:43.790><c> our</c><01:50:44.150><c> own</c>

01:50:44.470 --> 01:50:44.480 align:start position:0%
friends okay we've now created our own
 

01:50:44.480 --> 01:50:48.960 align:start position:0%
friends okay we've now created our own
object

01:50:48.960 --> 01:50:48.970 align:start position:0%
 
 

01:50:48.970 --> 01:50:51.810 align:start position:0%
 
there<01:50:49.840><c> are</c><01:50:50.020><c> two</c><01:50:50.290><c> main</c><01:50:50.500><c> ways</c><01:50:50.740><c> to</c><01:50:50.800><c> access</c><01:50:51.670><c> a</c>

01:50:51.810 --> 01:50:51.820 align:start position:0%
there are two main ways to access a
 

01:50:51.820 --> 01:50:54.810 align:start position:0%
there are two main ways to access a
property<01:50:52.150><c> on</c><01:50:52.510><c> an</c><01:50:52.840><c> object</c><01:50:53.470><c> the</c><01:50:54.250><c> first</c><01:50:54.550><c> I</c><01:50:54.640><c> will</c>

01:50:54.810 --> 01:50:54.820 align:start position:0%
property on an object the first I will
 

01:50:54.820 --> 01:50:57.030 align:start position:0%
property on an object the first I will
talk<01:50:54.970><c> about</c><01:50:55.000><c> is</c><01:50:55.300><c> dot</c><01:50:55.570><c> notation</c><01:50:55.840><c> so</c><01:50:56.800><c> we</c><01:50:56.920><c> have</c>

01:50:57.030 --> 01:50:57.040 align:start position:0%
talk about is dot notation so we have
 

01:50:57.040 --> 01:50:59.910 align:start position:0%
talk about is dot notation so we have
this<01:50:57.160><c> test</c><01:50:57.490><c> object</c><01:50:58.030><c> and</c><01:50:58.240><c> we</c><01:50:58.720><c> have</c><01:50:58.870><c> hat</c><01:50:59.260><c> shirt</c>

01:50:59.910 --> 01:50:59.920 align:start position:0%
this test object and we have hat shirt
 

01:50:59.920 --> 01:51:02.310 align:start position:0%
this test object and we have hat shirt
and<01:51:00.280><c> shoes</c><01:51:01.090><c> and</c><01:51:01.420><c> we</c><01:51:01.480><c> want</c><01:51:01.660><c> to</c><01:51:01.720><c> find</c><01:51:01.930><c> out</c><01:51:02.110><c> the</c>

01:51:02.310 --> 01:51:02.320 align:start position:0%
and shoes and we want to find out the
 

01:51:02.320 --> 01:51:05.520 align:start position:0%
and shoes and we want to find out the
value<01:51:02.740><c> of</c><01:51:02.770><c> these</c><01:51:03.070><c> properties</c><01:51:03.550><c> so</c><01:51:04.260><c> right</c><01:51:05.260><c> here</c>

01:51:05.520 --> 01:51:05.530 align:start position:0%
value of these properties so right here
 

01:51:05.530 --> 01:51:07.440 align:start position:0%
value of these properties so right here
the<01:51:05.680><c> hat</c><01:51:05.920><c> value</c><01:51:06.160><c> we're</c><01:51:06.670><c> gonna</c><01:51:06.760><c> set</c><01:51:07.000><c> a</c><01:51:07.030><c> test</c>

01:51:07.440 --> 01:51:07.450 align:start position:0%
the hat value we're gonna set a test
 

01:51:07.450 --> 01:51:09.900 align:start position:0%
the hat value we're gonna set a test
object<01:51:07.660><c> now</c><01:51:08.440><c> here's</c><01:51:08.770><c> where</c><01:51:09.280><c> we</c><01:51:09.430><c> use</c><01:51:09.580><c> the</c><01:51:09.730><c> dot</c>

01:51:09.900 --> 01:51:09.910 align:start position:0%
object now here's where we use the dot
 

01:51:09.910 --> 01:51:12.390 align:start position:0%
object now here's where we use the dot
notation<01:51:09.940><c> we</c><01:51:10.780><c> just</c><01:51:10.990><c> put</c><01:51:11.200><c> a</c><01:51:11.230><c> dot</c><01:51:11.560><c> or</c><01:51:11.860><c> a</c><01:51:12.040><c> period</c>

01:51:12.390 --> 01:51:12.400 align:start position:0%
notation we just put a dot or a period
 

01:51:12.400 --> 01:51:14.640 align:start position:0%
notation we just put a dot or a period
and<01:51:12.730><c> then</c><01:51:13.420><c> I</c><01:51:13.540><c> put</c><01:51:13.750><c> the</c><01:51:13.870><c> name</c><01:51:14.020><c> of</c><01:51:14.170><c> the</c><01:51:14.230><c> property</c>

01:51:14.640 --> 01:51:14.650 align:start position:0%
and then I put the name of the property
 

01:51:14.650 --> 01:51:17.880 align:start position:0%
and then I put the name of the property
about<01:51:14.860><c> hat</c><01:51:15.130><c> and</c><01:51:15.570><c> then</c><01:51:16.570><c> for</c><01:51:16.810><c> the</c><01:51:16.900><c> shirt</c><01:51:17.200><c> value</c><01:51:17.680><c> I</c>

01:51:17.880 --> 01:51:17.890 align:start position:0%
about hat and then for the shirt value I
 

01:51:17.890 --> 01:51:21.840 align:start position:0%
about hat and then for the shirt value I
will<01:51:18.280><c> do</c><01:51:18.670><c> dot</c><01:51:19.270><c> shirt</c><01:51:19.960><c> so</c><01:51:20.830><c> see</c><01:51:21.220><c> this</c><01:51:21.460><c> word</c><01:51:21.700><c> right</c>

01:51:21.840 --> 01:51:21.850 align:start position:0%
will do dot shirt so see this word right
 

01:51:21.850 --> 01:51:23.880 align:start position:0%
will do dot shirt so see this word right
here<01:51:22.180><c> is</c><01:51:22.300><c> just</c><01:51:22.510><c> the</c><01:51:22.630><c> word</c><01:51:22.810><c> here</c><01:51:23.140><c> so</c><01:51:23.350><c> the</c><01:51:23.560><c> value</c>

01:51:23.880 --> 01:51:23.890 align:start position:0%
here is just the word here so the value
 

01:51:23.890 --> 01:51:26.550 align:start position:0%
here is just the word here so the value
of<01:51:23.920><c> hat</c><01:51:24.190><c> value</c><01:51:24.670><c> test</c><01:51:25.390><c> object</c><01:51:25.840><c> that</c><01:51:25.900><c> hat</c><01:51:26.170><c> is</c><01:51:26.350><c> now</c>

01:51:26.550 --> 01:51:26.560 align:start position:0%
of hat value test object that hat is now
 

01:51:26.560 --> 01:51:29.160 align:start position:0%
of hat value test object that hat is now
gonna<01:51:26.740><c> be</c><01:51:26.830><c> ball</c><01:51:27.220><c> cap</c><01:51:27.550><c> and</c><01:51:27.790><c> the</c><01:51:28.750><c> value</c><01:51:29.020><c> of</c><01:51:29.050><c> the</c>

01:51:29.160 --> 01:51:29.170 align:start position:0%
gonna be ball cap and the value of the
 

01:51:29.170 --> 01:51:36.100 align:start position:0%
gonna be ball cap and the value of the
shirt<01:51:29.470><c> value</c><01:51:30.010><c> is</c><01:51:30.190><c> going</c><01:51:30.760><c> to</c><01:51:30.850><c> be</c><01:51:31.080><c> jersey</c>

01:51:36.100 --> 01:51:36.110 align:start position:0%
 
 

01:51:36.110 --> 01:51:38.890 align:start position:0%
 
besides<01:51:36.890><c> using</c><01:51:37.250><c> dot</c><01:51:37.490><c> notation</c><01:51:37.520><c> you</c><01:51:38.480><c> can</c><01:51:38.510><c> also</c>

01:51:38.890 --> 01:51:38.900 align:start position:0%
besides using dot notation you can also
 

01:51:38.900 --> 01:51:42.190 align:start position:0%
besides using dot notation you can also
use<01:51:39.500><c> bracket</c><01:51:40.310><c> notation</c><01:51:40.460><c> to</c><01:51:41.210><c> access</c><01:51:41.960><c> a</c>

01:51:42.190 --> 01:51:42.200 align:start position:0%
use bracket notation to access a
 

01:51:42.200 --> 01:51:45.250 align:start position:0%
use bracket notation to access a
property<01:51:42.770><c> and</c><01:51:43.430><c> an</c><01:51:43.550><c> object</c><01:51:44.090><c> you</c><01:51:44.960><c> can</c><01:51:45.140><c> use</c>

01:51:45.250 --> 01:51:45.260 align:start position:0%
property and an object you can use
 

01:51:45.260 --> 01:51:48.220 align:start position:0%
property and an object you can use
bracket<01:51:45.830><c> notation</c><01:51:46.060><c> anytime</c><01:51:47.060><c> but</c><01:51:47.900><c> it</c><01:51:48.080><c> is</c>

01:51:48.220 --> 01:51:48.230 align:start position:0%
bracket notation anytime but it is
 

01:51:48.230 --> 01:51:51.310 align:start position:0%
bracket notation anytime but it is
required<01:51:48.470><c> if</c><01:51:49.400><c> the</c><01:51:50.090><c> name</c><01:51:50.330><c> has</c><01:51:50.540><c> a</c><01:51:50.570><c> space</c><01:51:50.960><c> in</c><01:51:51.230><c> it</c>

01:51:51.310 --> 01:51:51.320 align:start position:0%
required if the name has a space in it
 

01:51:51.320 --> 01:51:55.030 align:start position:0%
required if the name has a space in it
you<01:51:51.890><c> can</c><01:51:52.130><c> see</c><01:51:52.400><c> in</c><01:51:52.520><c> this</c><01:51:52.670><c> object</c><01:51:53.390><c> we</c><01:51:53.930><c> have</c><01:51:54.040><c> three</c>

01:51:55.030 --> 01:51:55.040 align:start position:0%
you can see in this object we have three
 

01:51:55.040 --> 01:51:57.310 align:start position:0%
you can see in this object we have three
properties<01:51:55.640><c> and</c><01:51:56.000><c> each</c><01:51:56.180><c> of</c><01:51:56.420><c> them</c><01:51:56.570><c> have</c><01:51:56.810><c> a</c><01:51:56.840><c> space</c>

01:51:57.310 --> 01:51:57.320 align:start position:0%
properties and each of them have a space
 

01:51:57.320 --> 01:52:00.340 align:start position:0%
properties and each of them have a space
so<01:51:58.190><c> to</c><01:51:58.250><c> get</c><01:51:58.880><c> the</c><01:51:59.090><c> value</c><01:51:59.540><c> of</c><01:51:59.570><c> these</c><01:51:59.750><c> properties</c>

01:52:00.340 --> 01:52:00.350 align:start position:0%
so to get the value of these properties
 

01:52:00.350 --> 01:52:02.500 align:start position:0%
so to get the value of these properties
we're<01:52:00.950><c> going</c><01:52:01.190><c> to</c><01:52:01.310><c> have</c><01:52:01.520><c> to</c><01:52:01.700><c> use</c><01:52:01.850><c> bracket</c>

01:52:02.500 --> 01:52:02.510 align:start position:0%
we're going to have to use bracket
 

01:52:02.510 --> 01:52:04.990 align:start position:0%
we're going to have to use bracket
notation<01:52:02.920><c> so</c><01:52:03.920><c> the</c><01:52:04.010><c> entre</c><01:52:04.430><c> value</c><01:52:04.820><c> we're</c><01:52:04.940><c> going</c>

01:52:04.990 --> 01:52:05.000 align:start position:0%
notation so the entre value we're going
 

01:52:05.000 --> 01:52:06.640 align:start position:0%
notation so the entre value we're going
to<01:52:05.090><c> test</c><01:52:05.420><c> object</c><01:52:05.960><c> that's</c><01:52:06.140><c> the</c><01:52:06.320><c> name</c><01:52:06.470><c> of</c><01:52:06.500><c> the</c>

01:52:06.640 --> 01:52:06.650 align:start position:0%
to test object that's the name of the
 

01:52:06.650 --> 01:52:08.590 align:start position:0%
to test object that's the name of the
object<01:52:06.800><c> and</c><01:52:07.370><c> then</c><01:52:07.880><c> we're</c><01:52:07.970><c> gonna</c><01:52:08.060><c> put</c><01:52:08.330><c> brackets</c>

01:52:08.590 --> 01:52:08.600 align:start position:0%
object and then we're gonna put brackets
 

01:52:08.600 --> 01:52:12.010 align:start position:0%
object and then we're gonna put brackets
kind<01:52:09.470><c> of</c><01:52:09.590><c> like</c><01:52:09.770><c> an</c><01:52:09.950><c> array</c><01:52:10.460><c> index</c><01:52:10.780><c> so</c><01:52:11.780><c> you</c><01:52:11.840><c> need</c>

01:52:12.010 --> 01:52:12.020 align:start position:0%
kind of like an array index so you need
 

01:52:12.020 --> 01:52:13.510 align:start position:0%
kind of like an array index so you need
the<01:52:12.080><c> opening</c><01:52:12.440><c> and</c><01:52:12.530><c> closing</c><01:52:12.860><c> brackets</c><01:52:12.890><c> and</c>

01:52:13.510 --> 01:52:13.520 align:start position:0%
the opening and closing brackets and
 

01:52:13.520 --> 01:52:17.050 align:start position:0%
the opening and closing brackets and
inside<01:52:14.330><c> we</c><01:52:15.230><c> will</c><01:52:15.620><c> put</c><01:52:15.980><c> the</c><01:52:16.190><c> name</c><01:52:16.400><c> of</c><01:52:16.760><c> the</c>

01:52:17.050 --> 01:52:17.060 align:start position:0%
inside we will put the name of the
 

01:52:17.060 --> 01:52:22.330 align:start position:0%
inside we will put the name of the
property<01:52:17.390><c> so</c><01:52:17.990><c> I'll</c><01:52:18.110><c> do</c><01:52:18.260><c> a</c><01:52:18.530><c> an</c><01:52:19.210><c> entree</c><01:52:20.210><c> and</c><01:52:21.340><c> then</c>

01:52:22.330 --> 01:52:22.340 align:start position:0%
property so I'll do a an entree and then
 

01:52:22.340 --> 01:52:24.580 align:start position:0%
property so I'll do a an entree and then
we<01:52:22.640><c> can</c><01:52:22.850><c> do</c><01:52:22.940><c> it</c><01:52:22.970><c> again</c><01:52:23.120><c> down</c><01:52:23.480><c> here</c><01:52:23.540><c> for</c><01:52:24.470><c> the</c>

01:52:24.580 --> 01:52:24.590 align:start position:0%
we can do it again down here for the
 

01:52:24.590 --> 01:52:27.760 align:start position:0%
we can do it again down here for the
drink<01:52:24.950><c> value</c><01:52:25.430><c> and</c><01:52:25.880><c> I'll</c><01:52:26.540><c> I'll</c><01:52:26.900><c> use</c><01:52:27.110><c> a</c><01:52:27.140><c> single</c>

01:52:27.760 --> 01:52:27.770 align:start position:0%
drink value and I'll I'll use a single
 

01:52:27.770 --> 01:52:29.110 align:start position:0%
drink value and I'll I'll use a single
quote<01:52:27.980><c> this</c><01:52:28.190><c> happens</c><01:52:28.490><c> have</c><01:52:28.610><c> a</c><01:52:28.640><c> double</c><01:52:28.940><c> quote</c>

01:52:29.110 --> 01:52:29.120 align:start position:0%
quote this happens have a double quote
 

01:52:29.120 --> 01:52:31.450 align:start position:0%
quote this happens have a double quote
to<01:52:29.330><c> show</c><01:52:29.510><c> that</c><01:52:29.660><c> each</c><01:52:29.900><c> of</c><01:52:29.930><c> those</c><01:52:30.230><c> will</c><01:52:30.680><c> work</c><01:52:30.710><c> the</c>

01:52:31.450 --> 01:52:31.460 align:start position:0%
to show that each of those will work the
 

01:52:31.460 --> 01:52:35.980 align:start position:0%
to show that each of those will work the
drink<01:52:32.290><c> and</c><01:52:33.880><c> then</c><01:52:34.880><c> we</c><01:52:35.060><c> need</c><01:52:35.270><c> the</c><01:52:35.450><c> closing</c>

01:52:35.980 --> 01:52:35.990 align:start position:0%
drink and then we need the closing
 

01:52:35.990 --> 01:52:40.900 align:start position:0%
drink and then we need the closing
brackets<01:52:36.530><c> here</c><01:52:37.870><c> so</c><01:52:38.870><c> now</c><01:52:39.080><c> Andre</c><01:52:39.830><c> value</c><01:52:40.250><c> is</c><01:52:40.460><c> set</c>

01:52:40.900 --> 01:52:40.910 align:start position:0%
brackets here so now Andre value is set
 

01:52:40.910 --> 01:52:44.230 align:start position:0%
brackets here so now Andre value is set
equal<01:52:41.090><c> hamburger</c><01:52:41.930><c> and</c><01:52:42.220><c> drink</c><01:52:43.220><c> value</c><01:52:43.640><c> is</c><01:52:43.820><c> set</c>

01:52:44.230 --> 01:52:44.240 align:start position:0%
equal hamburger and drink value is set
 

01:52:44.240 --> 01:52:49.529 align:start position:0%
equal hamburger and drink value is set
to<01:52:44.390><c> equal</c><01:52:44.540><c> water</c>

01:52:49.529 --> 01:52:49.539 align:start position:0%
 
 

01:52:49.539 --> 01:52:52.049 align:start position:0%
 
bracket<01:52:50.320><c> notation</c><01:52:50.469><c> can</c><01:52:51.070><c> also</c><01:52:51.280><c> be</c><01:52:51.610><c> used</c><01:52:51.880><c> to</c>

01:52:52.049 --> 01:52:52.059 align:start position:0%
bracket notation can also be used to
 

01:52:52.059 --> 01:52:54.209 align:start position:0%
bracket notation can also be used to
look<01:52:52.300><c> up</c><01:52:52.480><c> object</c><01:52:53.019><c> properties</c><01:52:53.559><c> using</c>

01:52:54.209 --> 01:52:54.219 align:start position:0%
look up object properties using
 

01:52:54.219 --> 01:52:56.910 align:start position:0%
look up object properties using
variables<01:52:55.179><c> so</c><01:52:55.840><c> here</c><01:52:56.139><c> we</c><01:52:56.289><c> have</c><01:52:56.440><c> this</c><01:52:56.590><c> test</c>

01:52:56.910 --> 01:52:56.920 align:start position:0%
variables so here we have this test
 

01:52:56.920 --> 01:52:58.790 align:start position:0%
variables so here we have this test
object<01:52:57.489><c> we</c><01:52:57.909><c> have</c><01:52:58.059><c> these</c><01:52:58.150><c> different</c><01:52:58.389><c> numbers</c>

01:52:58.790 --> 01:52:58.800 align:start position:0%
object we have these different numbers
 

01:52:58.800 --> 01:53:02.759 align:start position:0%
object we have these different numbers
associated<01:52:59.800><c> with</c><01:52:59.920><c> these</c><01:53:00.130><c> names</c><01:53:00.579><c> here</c><01:53:01.090><c> and</c><01:53:01.769><c> we</c>

01:53:02.759 --> 01:53:02.769 align:start position:0%
associated with these names here and we
 

01:53:02.769 --> 01:53:05.189 align:start position:0%
associated with these names here and we
are<01:53:02.889><c> going</c><01:53:03.099><c> to</c><01:53:03.219><c> set</c><01:53:03.610><c> this</c><01:53:03.789><c> variable</c><01:53:04.179><c> to</c><01:53:04.809><c> be</c><01:53:04.840><c> one</c>

01:53:05.189 --> 01:53:05.199 align:start position:0%
are going to set this variable to be one
 

01:53:05.199 --> 01:53:08.759 align:start position:0%
are going to set this variable to be one
of<01:53:05.289><c> the</c><01:53:05.380><c> numbers</c><01:53:05.769><c> so</c><01:53:06.429><c> I'll</c><01:53:06.579><c> set</c><01:53:06.909><c> this</c><01:53:07.150><c> to</c><01:53:07.389><c> be</c><01:53:07.769><c> 16</c>

01:53:08.759 --> 01:53:08.769 align:start position:0%
of the numbers so I'll set this to be 16
 

01:53:08.769 --> 01:53:13.350 align:start position:0%
of the numbers so I'll set this to be 16
so<01:53:09.760><c> now</c><01:53:10.210><c> we</c><01:53:10.840><c> can</c><01:53:11.139><c> in</c><01:53:11.349><c> this</c><01:53:11.500><c> test</c><01:53:11.889><c> object</c><01:53:12.400><c> 16</c><01:53:13.030><c> is</c>

01:53:13.350 --> 01:53:13.360 align:start position:0%
so now we can in this test object 16 is
 

01:53:13.360 --> 01:53:16.410 align:start position:0%
so now we can in this test object 16 is
Montana<01:53:14.260><c> and</c><01:53:14.650><c> we</c><01:53:15.400><c> can</c><01:53:15.670><c> look</c><01:53:15.909><c> that</c><01:53:16.059><c> up</c><01:53:16.179><c> using</c>

01:53:16.410 --> 01:53:16.420 align:start position:0%
Montana and we can look that up using
 

01:53:16.420 --> 01:53:18.180 align:start position:0%
Montana and we can look that up using
the<01:53:16.630><c> variable</c><01:53:17.139><c> name</c><01:53:17.289><c> instead</c><01:53:17.590><c> of</c><01:53:17.650><c> the</c><01:53:17.829><c> numbers</c>

01:53:18.180 --> 01:53:18.190 align:start position:0%
the variable name instead of the numbers
 

01:53:18.190 --> 01:53:20.250 align:start position:0%
the variable name instead of the numbers
so<01:53:18.219><c> instead</c><01:53:18.550><c> of</c><01:53:18.670><c> putting</c><01:53:18.880><c> 16</c><01:53:19.449><c> I'm</c><01:53:19.869><c> going</c><01:53:20.079><c> to</c>

01:53:20.250 --> 01:53:20.260 align:start position:0%
so instead of putting 16 I'm going to
 

01:53:20.260 --> 01:53:24.779 align:start position:0%
so instead of putting 16 I'm going to
put<01:53:20.500><c> player</c><01:53:21.250><c> number</c><01:53:21.909><c> in</c><01:53:22.030><c> here</c><01:53:22.360><c> and</c><01:53:22.920><c> now</c><01:53:23.920><c> player</c>

01:53:24.779 --> 01:53:24.789 align:start position:0%
put player number in here and now player
 

01:53:24.789 --> 01:53:29.100 align:start position:0%
put player number in here and now player
is<01:53:25.210><c> set</c><01:53:26.170><c> to</c><01:53:26.559><c> the</c><01:53:27.190><c> word</c><01:53:27.429><c> the</c><01:53:27.760><c> string</c><01:53:28.150><c> Montana</c>

01:53:29.100 --> 01:53:29.110 align:start position:0%
is set to the word the string Montana
 

01:53:29.110 --> 01:53:32.490 align:start position:0%
is set to the word the string Montana
and<01:53:29.440><c> we</c><01:53:29.920><c> use</c><01:53:30.190><c> this</c><01:53:30.400><c> variable</c><01:53:30.880><c> to</c><01:53:31.300><c> look</c><01:53:31.630><c> up</c><01:53:31.840><c> the</c>

01:53:32.490 --> 01:53:32.500 align:start position:0%
and we use this variable to look up the
 

01:53:32.500 --> 01:53:36.969 align:start position:0%
and we use this variable to look up the
object<01:53:33.039><c> property</c>

01:53:36.969 --> 01:53:36.979 align:start position:0%
 
 

01:53:36.979 --> 01:53:40.089 align:start position:0%
 
we<01:53:37.729><c> can</c><01:53:37.940><c> use</c><01:53:38.090><c> dot</c><01:53:38.329><c> notation</c><01:53:38.360><c> to</c><01:53:39.079><c> update</c><01:53:39.590><c> object</c>

01:53:40.089 --> 01:53:40.099 align:start position:0%
we can use dot notation to update object
 

01:53:40.099 --> 01:53:42.549 align:start position:0%
we can use dot notation to update object
properties<01:53:40.670><c> here</c><01:53:41.599><c> you</c><01:53:41.780><c> can</c><01:53:41.989><c> see</c><01:53:42.170><c> an</c><01:53:42.320><c> object</c>

01:53:42.549 --> 01:53:42.559 align:start position:0%
properties here you can see an object
 

01:53:42.559 --> 01:53:46.000 align:start position:0%
properties here you can see an object
called<01:53:43.039><c> our</c><01:53:43.249><c> dog</c><01:53:43.729><c> it</c><01:53:44.179><c> has</c><01:53:44.719><c> a</c><01:53:44.749><c> named</c><01:53:45.170><c> legs</c><01:53:45.530><c> tails</c>

01:53:46.000 --> 01:53:46.010 align:start position:0%
called our dog it has a named legs tails
 

01:53:46.010 --> 01:53:49.870 align:start position:0%
called our dog it has a named legs tails
friends<01:53:46.820><c> and</c><01:53:46.999><c> the</c><01:53:47.570><c> name</c><01:53:47.809><c> is</c><01:53:48.050><c> camper</c><01:53:48.880><c> however</c>

01:53:49.870 --> 01:53:49.880 align:start position:0%
friends and the name is camper however
 

01:53:49.880 --> 01:53:52.989 align:start position:0%
friends and the name is camper however
here<01:53:50.329><c> we</c><01:53:50.449><c> use</c><01:53:50.959><c> dot</c><01:53:51.229><c> notation</c><01:53:51.440><c> our</c><01:53:51.949><c> dog</c><01:53:52.309><c> name</c>

01:53:52.989 --> 01:53:52.999 align:start position:0%
here we use dot notation our dog name
 

01:53:52.999 --> 01:53:56.140 align:start position:0%
here we use dot notation our dog name
and<01:53:53.389><c> use</c><01:53:54.079><c> the</c><01:53:54.289><c> assignment</c><01:53:54.979><c> operator</c><01:53:55.150><c> the</c>

01:53:56.140 --> 01:53:56.150 align:start position:0%
and use the assignment operator the
 

01:53:56.150 --> 01:53:58.600 align:start position:0%
and use the assignment operator the
equal<01:53:56.539><c> sign</c><01:53:56.780><c> to</c><01:53:57.110><c> set</c><01:53:57.559><c> the</c><01:53:57.769><c> name</c><01:53:58.039><c> to</c><01:53:58.249><c> happy</c>

01:53:58.600 --> 01:53:58.610 align:start position:0%
equal sign to set the name to happy
 

01:53:58.610 --> 01:54:01.839 align:start position:0%
equal sign to set the name to happy
camper<01:53:59.119><c> so</c><01:53:59.900><c> if</c><01:54:00.289><c> we</c><01:54:00.679><c> did</c><01:54:00.829><c> console</c><01:54:01.249><c> dot</c><01:54:01.369><c> log</c><01:54:01.429><c> on</c>

01:54:01.839 --> 01:54:01.849 align:start position:0%
camper so if we did console dot log on
 

01:54:01.849 --> 01:54:03.969 align:start position:0%
camper so if we did console dot log on
our<01:54:02.090><c> dog</c><01:54:02.269><c> name</c><01:54:02.749><c> it</c><01:54:03.050><c> would</c><01:54:03.409><c> no</c><01:54:03.590><c> longer</c><01:54:03.619><c> be</c>

01:54:03.969 --> 01:54:03.979 align:start position:0%
our dog name it would no longer be
 

01:54:03.979 --> 01:54:06.819 align:start position:0%
our dog name it would no longer be
camper<01:54:04.579><c> it</c><01:54:04.760><c> would</c><01:54:04.880><c> be</c><01:54:05.030><c> happy</c><01:54:05.659><c> camper</c><01:54:06.110><c> well</c><01:54:06.650><c> we</c>

01:54:06.819 --> 01:54:06.829 align:start position:0%
camper it would be happy camper well we
 

01:54:06.829 --> 01:54:08.859 align:start position:0%
camper it would be happy camper well we
have<01:54:06.920><c> another</c><01:54:07.159><c> dog</c><01:54:07.369><c> here</c><01:54:07.760><c> with</c><01:54:08.269><c> a</c><01:54:08.300><c> name</c><01:54:08.599><c> of</c>

01:54:08.859 --> 01:54:08.869 align:start position:0%
have another dog here with a name of
 

01:54:08.869 --> 01:54:11.319 align:start position:0%
have another dog here with a name of
coder<01:54:09.229><c> but</c><01:54:09.920><c> we</c><01:54:10.039><c> want</c><01:54:10.219><c> to</c><01:54:10.309><c> change</c><01:54:10.579><c> the</c><01:54:10.820><c> name</c><01:54:11.059><c> to</c>

01:54:11.319 --> 01:54:11.329 align:start position:0%
coder but we want to change the name to
 

01:54:11.329 --> 01:54:13.810 align:start position:0%
coder but we want to change the name to
happy<01:54:12.229><c> coder</c><01:54:12.499><c> so</c><01:54:12.829><c> that's</c><01:54:13.400><c> what</c><01:54:13.550><c> I'll</c><01:54:13.610><c> do</c><01:54:13.789><c> right</c>

01:54:13.810 --> 01:54:13.820 align:start position:0%
happy coder so that's what I'll do right
 

01:54:13.820 --> 01:54:21.399 align:start position:0%
happy coder so that's what I'll do right
here<01:54:14.360><c> so</c><01:54:15.019><c> my</c><01:54:15.769><c> dog</c><01:54:16.280><c> dot</c><01:54:16.880><c> name</c><01:54:18.369><c> equals</c><01:54:20.409><c> happy</c>

01:54:21.399 --> 01:54:21.409 align:start position:0%
here so my dog dot name equals happy
 

01:54:21.409 --> 01:54:25.689 align:start position:0%
here so my dog dot name equals happy
coder<01:54:22.869><c> so</c><01:54:23.869><c> just</c><01:54:24.139><c> like</c><01:54:24.260><c> above</c><01:54:24.889><c> we</c><01:54:25.309><c> use</c><01:54:25.489><c> dot</c>

01:54:25.689 --> 01:54:25.699 align:start position:0%
coder so just like above we use dot
 

01:54:25.699 --> 01:54:28.390 align:start position:0%
coder so just like above we use dot
notation<01:54:25.729><c> to</c><01:54:26.269><c> set</c><01:54:27.050><c> the</c><01:54:27.229><c> object</c><01:54:27.380><c> property</c><01:54:28.070><c> to</c><01:54:28.369><c> a</c>

01:54:28.390 --> 01:54:28.400 align:start position:0%
notation to set the object property to a
 

01:54:28.400 --> 01:54:33.259 align:start position:0%
notation to set the object property to a
new<01:54:28.699><c> value</c>

01:54:33.259 --> 01:54:33.269 align:start position:0%
 
 

01:54:33.269 --> 01:54:36.109 align:start position:0%
 
you<01:54:33.869><c> can</c><01:54:34.109><c> add</c><01:54:34.349><c> new</c><01:54:34.619><c> properties</c><01:54:34.949><c> to</c><01:54:35.279><c> an</c><01:54:35.579><c> object</c>

01:54:36.109 --> 01:54:36.119 align:start position:0%
you can add new properties to an object
 

01:54:36.119 --> 01:54:38.349 align:start position:0%
you can add new properties to an object
using<01:54:36.329><c> dot</c><01:54:36.779><c> notation</c><01:54:36.809><c> or</c><01:54:37.649><c> bracket</c><01:54:38.189><c> notation</c>

01:54:38.349 --> 01:54:38.359 align:start position:0%
using dot notation or bracket notation
 

01:54:38.359 --> 01:54:41.119 align:start position:0%
using dot notation or bracket notation
so<01:54:39.359><c> here's</c><01:54:39.809><c> an</c><01:54:39.899><c> example</c><01:54:40.199><c> right</c><01:54:40.409><c> here</c><01:54:40.529><c> we</c><01:54:40.889><c> have</c>

01:54:41.119 --> 01:54:41.129 align:start position:0%
so here's an example right here we have
 

01:54:41.129 --> 01:54:44.269 align:start position:0%
so here's an example right here we have
this<01:54:41.339><c> object</c><01:54:41.729><c> our</c><01:54:42.329><c> dog</c><01:54:42.929><c> and</c><01:54:43.379><c> there's</c><01:54:44.010><c> four</c>

01:54:44.269 --> 01:54:44.279 align:start position:0%
this object our dog and there's four
 

01:54:44.279 --> 01:54:46.459 align:start position:0%
this object our dog and there's four
properties<01:54:44.939><c> here</c><01:54:45.359><c> but</c><01:54:45.809><c> down</c><01:54:45.989><c> here</c><01:54:46.019><c> we're</c>

01:54:46.459 --> 01:54:46.469 align:start position:0%
properties here but down here we're
 

01:54:46.469 --> 01:54:49.429 align:start position:0%
properties here but down here we're
adding<01:54:46.679><c> a</c><01:54:46.949><c> new</c><01:54:47.249><c> property</c><01:54:47.789><c> our</c><01:54:48.089><c> dog</c><01:54:48.689><c> bark</c>

01:54:49.429 --> 01:54:49.439 align:start position:0%
adding a new property our dog bark
 

01:54:49.439 --> 01:54:52.609 align:start position:0%
adding a new property our dog bark
equals<01:54:49.979><c> bow-wow</c><01:54:50.429><c> so</c><01:54:51.239><c> it</c><01:54:51.599><c> had</c><01:54:51.869><c> four</c><01:54:52.169><c> properties</c>

01:54:52.609 --> 01:54:52.619 align:start position:0%
equals bow-wow so it had four properties
 

01:54:52.619 --> 01:54:54.589 align:start position:0%
equals bow-wow so it had four properties
but<01:54:52.919><c> now</c><01:54:53.069><c> it</c><01:54:53.219><c> has</c><01:54:53.249><c> five</c><01:54:53.639><c> properties</c><01:54:53.969><c> as</c><01:54:54.449><c> the</c>

01:54:54.589 --> 01:54:54.599 align:start position:0%
but now it has five properties as the
 

01:54:54.599 --> 01:54:56.899 align:start position:0%
but now it has five properties as the
property<01:54:54.989><c> bark</c><01:54:55.289><c> as</c><01:54:55.559><c> well</c><01:54:55.799><c> now</c><01:54:56.639><c> down</c><01:54:56.879><c> here</c>

01:54:56.899 --> 01:54:56.909 align:start position:0%
property bark as well now down here
 

01:54:56.909 --> 01:54:59.809 align:start position:0%
property bark as well now down here
we'll<01:54:57.449><c> add</c><01:54:57.659><c> a</c><01:54:57.689><c> property</c><01:54:58.049><c> to</c><01:54:58.589><c> the</c><01:54:59.279><c> my</c><01:54:59.549><c> dog</c>

01:54:59.809 --> 01:54:59.819 align:start position:0%
we'll add a property to the my dog
 

01:54:59.819 --> 01:55:05.149 align:start position:0%
we'll add a property to the my dog
object<01:55:00.419><c> so</c><01:55:01.109><c> we</c><01:55:01.439><c> can</c><01:55:01.469><c> do</c><01:55:01.799><c> my</c><01:55:02.429><c> dog</c><01:55:02.849><c> and</c><01:55:03.919><c> then</c><01:55:04.919><c> here</c>

01:55:05.149 --> 01:55:05.159 align:start position:0%
object so we can do my dog and then here
 

01:55:05.159 --> 01:55:06.919 align:start position:0%
object so we can do my dog and then here
I'm<01:55:05.279><c> going</c><01:55:05.399><c> to</c><01:55:05.459><c> use</c><01:55:05.519><c> bracket</c><01:55:06.239><c> notation</c><01:55:06.329><c> set</c>

01:55:06.919 --> 01:55:06.929 align:start position:0%
I'm going to use bracket notation set
 

01:55:06.929 --> 01:55:10.879 align:start position:0%
I'm going to use bracket notation set
dot<01:55:07.169><c> notation</c><01:55:07.789><c> bark</c><01:55:09.169><c> I'm</c><01:55:10.169><c> going</c><01:55:10.469><c> to</c><01:55:10.529><c> set</c><01:55:10.679><c> that</c>

01:55:10.879 --> 01:55:10.889 align:start position:0%
dot notation bark I'm going to set that
 

01:55:10.889 --> 01:55:15.259 align:start position:0%
dot notation bark I'm going to set that
to<01:55:10.949><c> equal</c><01:55:12.079><c> booth</c><01:55:13.079><c> and</c><01:55:13.879><c> because</c><01:55:14.879><c> he's</c><01:55:14.999><c> yelling</c>

01:55:15.259 --> 01:55:15.269 align:start position:0%
to equal booth and because he's yelling
 

01:55:15.269 --> 01:55:17.419 align:start position:0%
to equal booth and because he's yelling
it<01:55:15.510><c> will</c><01:55:15.749><c> have</c><01:55:15.989><c> an</c><01:55:16.229><c> exclamation</c><01:55:16.649><c> point</c><01:55:17.189><c> and</c>

01:55:17.419 --> 01:55:17.429 align:start position:0%
it will have an exclamation point and
 

01:55:17.429 --> 01:55:22.899 align:start position:0%
it will have an exclamation point and
that's<01:55:17.879><c> how</c><01:55:17.999><c> you</c><01:55:18.059><c> add</c><01:55:18.269><c> properties</c><01:55:18.809><c> to</c><01:55:18.839><c> objects</c>

01:55:22.899 --> 01:55:22.909 align:start position:0%
 
 

01:55:22.909 --> 01:55:25.510 align:start position:0%
 
it's<01:55:23.600><c> simple</c><01:55:24.080><c> to</c><01:55:24.199><c> delete</c><01:55:24.530><c> a</c><01:55:24.620><c> property</c><01:55:25.190><c> from</c><01:55:25.370><c> an</c>

01:55:25.510 --> 01:55:25.520 align:start position:0%
it's simple to delete a property from an
 

01:55:25.520 --> 01:55:28.180 align:start position:0%
it's simple to delete a property from an
object<01:55:25.699><c> our</c><01:55:26.270><c> dog</c><01:55:27.199><c> object</c><01:55:27.800><c> has</c><01:55:27.949><c> all</c><01:55:28.100><c> these</c>

01:55:28.180 --> 01:55:28.190 align:start position:0%
object our dog object has all these
 

01:55:28.190 --> 01:55:30.580 align:start position:0%
object our dog object has all these
properties<01:55:28.699><c> and</c><01:55:29.000><c> with</c><01:55:29.630><c> the</c><01:55:29.810><c> delete</c><01:55:30.199><c> keyword</c>

01:55:30.580 --> 01:55:30.590 align:start position:0%
properties and with the delete keyword
 

01:55:30.590 --> 01:55:34.540 align:start position:0%
properties and with the delete keyword
delete<01:55:31.460><c> our</c><01:55:31.670><c> dog</c><01:55:32.090><c> bark</c><01:55:32.840><c> so</c><01:55:33.530><c> now</c><01:55:33.710><c> this</c><01:55:33.949><c> property</c>

01:55:34.540 --> 01:55:34.550 align:start position:0%
delete our dog bark so now this property
 

01:55:34.550 --> 01:55:36.790 align:start position:0%
delete our dog bark so now this property
here<01:55:34.850><c> the</c><01:55:35.120><c> bark</c><01:55:35.389><c> has</c><01:55:35.659><c> been</c><01:55:35.870><c> deleted</c><01:55:36.380><c> and</c><01:55:36.620><c> is</c><01:55:36.770><c> no</c>

01:55:36.790 --> 01:55:36.800 align:start position:0%
here the bark has been deleted and is no
 

01:55:36.800 --> 01:55:38.800 align:start position:0%
here the bark has been deleted and is no
longer<01:55:37.159><c> in</c><01:55:37.370><c> the</c><01:55:37.670><c> object</c><01:55:38.150><c> after</c><01:55:38.389><c> we</c><01:55:38.719><c> have</c>

01:55:38.800 --> 01:55:38.810 align:start position:0%
longer in the object after we have
 

01:55:38.810 --> 01:55:40.870 align:start position:0%
longer in the object after we have
deleted<01:55:39.110><c> it</c><01:55:39.290><c> so</c><01:55:39.949><c> we</c><01:55:40.070><c> can</c><01:55:40.190><c> do</c><01:55:40.280><c> the</c><01:55:40.370><c> same</c><01:55:40.580><c> thing</c>

01:55:40.870 --> 01:55:40.880 align:start position:0%
deleted it so we can do the same thing
 

01:55:40.880 --> 01:55:44.260 align:start position:0%
deleted it so we can do the same thing
down<01:55:41.090><c> here</c><01:55:41.510><c> and</c><01:55:41.690><c> this</c><01:55:42.500><c> time</c><01:55:42.770><c> we</c><01:55:43.699><c> will</c><01:55:43.940><c> delete</c>

01:55:44.260 --> 01:55:44.270 align:start position:0%
down here and this time we will delete
 

01:55:44.270 --> 01:55:49.180 align:start position:0%
down here and this time we will delete
the<01:55:44.330><c> Hills</c><01:55:45.230><c> property</c><01:55:45.800><c> my</c><01:55:46.790><c> dog</c><01:55:47.179><c> that</c><01:55:47.750><c> kills</c><01:55:48.320><c> so</c>

01:55:49.180 --> 01:55:49.190 align:start position:0%
the Hills property my dog that kills so
 

01:55:49.190 --> 01:55:51.760 align:start position:0%
the Hills property my dog that kills so
now<01:55:49.400><c> the</c><01:55:49.790><c> my</c><01:55:50.030><c> dog</c><01:55:50.360><c> object</c><01:55:51.020><c> no</c><01:55:51.230><c> longer</c><01:55:51.560><c> has</c><01:55:51.739><c> a</c>

01:55:51.760 --> 01:55:51.770 align:start position:0%
now the my dog object no longer has a
 

01:55:51.770 --> 01:55:56.510 align:start position:0%
now the my dog object no longer has a
tails<01:55:52.130><c> property</c>

01:55:56.510 --> 01:55:56.520 align:start position:0%
 
 

01:55:56.520 --> 01:55:58.950 align:start position:0%
 
objects<01:55:57.520><c> can</c><01:55:57.640><c> be</c><01:55:57.790><c> thought</c><01:55:57.970><c> of</c><01:55:58.030><c> as</c><01:55:58.210><c> a</c><01:55:58.270><c> key</c><01:55:58.600><c> value</c>

01:55:58.950 --> 01:55:58.960 align:start position:0%
objects can be thought of as a key value
 

01:55:58.960 --> 01:56:01.620 align:start position:0%
objects can be thought of as a key value
storage<01:55:59.290><c> like</c><01:55:59.680><c> a</c><01:55:59.710><c> dictionary</c><01:56:00.010><c> you</c><01:56:00.640><c> can</c><01:56:01.390><c> use</c><01:56:01.510><c> an</c>

01:56:01.620 --> 01:56:01.630 align:start position:0%
storage like a dictionary you can use an
 

01:56:01.630 --> 01:56:04.890 align:start position:0%
storage like a dictionary you can use an
object<01:56:01.840><c> to</c><01:56:02.200><c> look</c><01:56:02.530><c> up</c><01:56:02.710><c> values</c><01:56:03.310><c> so</c><01:56:04.000><c> in</c><01:56:04.390><c> this</c><01:56:04.630><c> case</c>

01:56:04.890 --> 01:56:04.900 align:start position:0%
object to look up values so in this case
 

01:56:04.900 --> 01:56:07.680 align:start position:0%
object to look up values so in this case
we<01:56:05.110><c> have</c><01:56:05.440><c> a</c><01:56:05.650><c> switch</c><01:56:06.550><c> statement</c><01:56:06.790><c> that</c><01:56:07.540><c> returns</c>

01:56:07.680 --> 01:56:07.690 align:start position:0%
we have a switch statement that returns
 

01:56:07.690 --> 01:56:10.620 align:start position:0%
we have a switch statement that returns
certain<01:56:08.410><c> values</c><01:56:08.860><c> so</c><01:56:09.490><c> when</c><01:56:09.640><c> you</c><01:56:09.700><c> pass</c><01:56:09.970><c> an</c><01:56:10.180><c> alpha</c>

01:56:10.620 --> 01:56:10.630 align:start position:0%
certain values so when you pass an alpha
 

01:56:10.630 --> 01:56:12.600 align:start position:0%
certain values so when you pass an alpha
to<01:56:10.840><c> the</c><01:56:10.870><c> function</c><01:56:11.350><c> it</c><01:56:11.530><c> returns</c><01:56:11.560><c> Adams</c><01:56:12.340><c> if</c><01:56:12.460><c> you</c>

01:56:12.600 --> 01:56:12.610 align:start position:0%
to the function it returns Adams if you
 

01:56:12.610 --> 01:56:16.230 align:start position:0%
to the function it returns Adams if you
pass<01:56:13.090><c> in</c><01:56:13.300><c> Bravo</c><01:56:13.840><c> it</c><01:56:14.050><c> returns</c><01:56:14.590><c> Boston</c><01:56:15.280><c> we</c><01:56:16.000><c> can</c>

01:56:16.230 --> 01:56:16.240 align:start position:0%
pass in Bravo it returns Boston we can
 

01:56:16.240 --> 01:56:19.320 align:start position:0%
pass in Bravo it returns Boston we can
replace<01:56:16.690><c> this</c><01:56:17.320><c> switch</c><01:56:17.800><c> statement</c><01:56:18.180><c> with</c><01:56:19.180><c> an</c>

01:56:19.320 --> 01:56:19.330 align:start position:0%
replace this switch statement with an
 

01:56:19.330 --> 01:56:22.350 align:start position:0%
replace this switch statement with an
object<01:56:19.690><c> and</c><01:56:20.350><c> use</c><01:56:20.920><c> the</c><01:56:21.130><c> object</c><01:56:21.700><c> for</c><01:56:21.940><c> lookups</c>

01:56:22.350 --> 01:56:22.360 align:start position:0%
object and use the object for lookups
 

01:56:22.360 --> 01:56:24.750 align:start position:0%
object and use the object for lookups
instead<01:56:22.840><c> of</c><01:56:22.930><c> the</c><01:56:23.080><c> switch</c><01:56:23.380><c> statement</c><01:56:23.730><c> let</c><01:56:24.730><c> me</c>

01:56:24.750 --> 01:56:24.760 align:start position:0%
instead of the switch statement let me
 

01:56:24.760 --> 01:56:27.360 align:start position:0%
instead of the switch statement let me
show<01:56:24.970><c> you</c><01:56:25.030><c> how</c><01:56:25.270><c> that's</c><01:56:25.450><c> done</c><01:56:25.780><c> I'm</c><01:56:26.260><c> going</c><01:56:27.010><c> to</c>

01:56:27.360 --> 01:56:27.370 align:start position:0%
show you how that's done I'm going to
 

01:56:27.370 --> 01:56:31.380 align:start position:0%
show you how that's done I'm going to
create<01:56:27.940><c> var</c><01:56:29.100><c> lookup</c><01:56:30.130><c> this</c><01:56:30.760><c> is</c><01:56:30.970><c> going</c><01:56:31.180><c> to</c><01:56:31.240><c> be</c><01:56:31.330><c> an</c>

01:56:31.380 --> 01:56:31.390 align:start position:0%
create var lookup this is going to be an
 

01:56:31.390 --> 01:56:35.250 align:start position:0%
create var lookup this is going to be an
object<01:56:31.630><c> here</c><01:56:32.170><c> and</c><01:56:32.790><c> the</c><01:56:33.790><c> object</c><01:56:34.390><c> is</c><01:56:34.600><c> going</c><01:56:35.170><c> to</c>

01:56:35.250 --> 01:56:35.260 align:start position:0%
object here and the object is going to
 

01:56:35.260 --> 01:56:37.950 align:start position:0%
object here and the object is going to
have<01:56:35.410><c> a</c><01:56:35.440><c> bunch</c><01:56:35.650><c> of</c><01:56:35.770><c> key</c><01:56:36.010><c> value</c><01:56:36.340><c> pairs</c><01:56:36.640><c> so</c><01:56:37.420><c> we</c>

01:56:37.950 --> 01:56:37.960 align:start position:0%
have a bunch of key value pairs so we
 

01:56:37.960 --> 01:56:43.820 align:start position:0%
have a bunch of key value pairs so we
have<01:56:38.170><c> alpha</c><01:56:38.440><c> and</c><01:56:39.180><c> that's</c><01:56:40.180><c> going</c><01:56:40.510><c> to</c><01:56:40.630><c> be</c><01:56:41.970><c> Adams</c>

01:56:43.820 --> 01:56:43.830 align:start position:0%
have alpha and that's going to be Adams
 

01:56:43.830 --> 01:56:51.810 align:start position:0%
have alpha and that's going to be Adams
and<01:56:45.300><c> then</c><01:56:46.300><c> we</c><01:56:46.720><c> have</c><01:56:47.310><c> Bravo</c><01:56:48.310><c> and</c><01:56:50.400><c> the</c><01:56:51.400><c> value</c><01:56:51.790><c> for</c>

01:56:51.810 --> 01:56:51.820 align:start position:0%
and then we have Bravo and the value for
 

01:56:51.820 --> 01:56:57.630 align:start position:0%
and then we have Bravo and the value for
Bravo<01:56:52.390><c> is</c><01:56:52.600><c> going</c><01:56:53.140><c> to</c><01:56:53.260><c> be</c><01:56:53.700><c> Boston</c><01:56:55.200><c> and</c><01:56:56.640><c> that's</c>

01:56:57.630 --> 01:56:57.640 align:start position:0%
Bravo is going to be Boston and that's
 

01:56:57.640 --> 01:57:01.100 align:start position:0%
Bravo is going to be Boston and that's
it<01:56:57.910><c> so</c><01:56:58.750><c> we</c><01:56:59.320><c> can</c><01:56:59.530><c> now</c><01:56:59.740><c> delete</c><01:57:00.430><c> this</c><01:57:00.670><c> whole</c>

01:57:01.100 --> 01:57:01.110 align:start position:0%
it so we can now delete this whole
 

01:57:01.110 --> 01:57:04.860 align:start position:0%
it so we can now delete this whole
switch<01:57:02.110><c> statement</c><01:57:02.740><c> and</c><01:57:03.210><c> now</c><01:57:04.210><c> we</c><01:57:04.270><c> can</c><01:57:04.630><c> say</c>

01:57:04.860 --> 01:57:04.870 align:start position:0%
switch statement and now we can say
 

01:57:04.870 --> 01:57:11.250 align:start position:0%
switch statement and now we can say
result<01:57:06.900><c> equals</c><01:57:08.940><c> lookup</c><01:57:09.940><c> in</c><01:57:10.150><c> bracket</c><01:57:11.140><c> notation</c>

01:57:11.250 --> 01:57:11.260 align:start position:0%
result equals lookup in bracket notation
 

01:57:11.260 --> 01:57:15.300 align:start position:0%
result equals lookup in bracket notation
we<01:57:12.100><c> put</c><01:57:12.430><c> the</c><01:57:12.670><c> value</c><01:57:13.090><c> that</c><01:57:13.360><c> was</c><01:57:13.540><c> passed</c><01:57:13.600><c> in</c><01:57:14.310><c> and</c>

01:57:15.300 --> 01:57:15.310 align:start position:0%
we put the value that was passed in and
 

01:57:15.310 --> 01:57:17.190 align:start position:0%
we put the value that was passed in and
I<01:57:15.370><c> forgot</c><01:57:15.700><c> one</c><01:57:15.940><c> thing</c><01:57:15.970><c> which</c><01:57:16.420><c> was</c><01:57:16.570><c> the</c><01:57:16.750><c> equal</c>

01:57:17.190 --> 01:57:17.200 align:start position:0%
I forgot one thing which was the equal
 

01:57:17.200 --> 01:57:20.550 align:start position:0%
I forgot one thing which was the equal
sign<01:57:17.470><c> here</c><01:57:17.670><c> because</c><01:57:18.670><c> lookup</c><01:57:19.420><c> equals</c><01:57:20.080><c> this</c>

01:57:20.550 --> 01:57:20.560 align:start position:0%
sign here because lookup equals this
 

01:57:20.560 --> 01:57:24.450 align:start position:0%
sign here because lookup equals this
object<01:57:20.860><c> and</c><01:57:21.400><c> let's</c><01:57:22.150><c> do</c><01:57:22.420><c> a</c><01:57:22.450><c> test</c><01:57:23.110><c> so</c><01:57:23.950><c> let</c><01:57:24.190><c> me</c><01:57:24.250><c> put</c>

01:57:24.450 --> 01:57:24.460 align:start position:0%
object and let's do a test so let me put
 

01:57:24.460 --> 01:57:27.960 align:start position:0%
object and let's do a test so let me put
console<01:57:25.120><c> dot</c><01:57:25.960><c> log</c><01:57:26.220><c> so</c><01:57:27.220><c> we</c><01:57:27.250><c> can</c><01:57:27.460><c> actually</c><01:57:27.550><c> see</c>

01:57:27.960 --> 01:57:27.970 align:start position:0%
console dot log so we can actually see
 

01:57:27.970 --> 01:57:31.740 align:start position:0%
console dot log so we can actually see
what<01:57:28.380><c> happens</c><01:57:29.380><c> here</c><01:57:29.710><c> so</c><01:57:30.400><c> if</c><01:57:30.670><c> we</c><01:57:31.090><c> do</c><01:57:31.180><c> charlie</c>

01:57:31.740 --> 01:57:31.750 align:start position:0%
what happens here so if we do charlie
 

01:57:31.750 --> 01:57:38.240 align:start position:0%
what happens here so if we do charlie
we're<01:57:32.380><c> gonna</c><01:57:32.500><c> get</c><01:57:32.800><c> Chicago</c><01:57:33.460><c> if</c><01:57:34.000><c> we</c><01:57:34.840><c> do</c><01:57:36.150><c> Foxtrot</c>

01:57:38.240 --> 01:57:38.250 align:start position:0%
we're gonna get Chicago if we do Foxtrot
 

01:57:38.250 --> 01:57:46.090 align:start position:0%
we're gonna get Chicago if we do Foxtrot
the<01:57:39.250><c> result</c><01:57:39.670><c> will</c><01:57:39.850><c> be</c><01:57:39.880><c> Frank</c><01:57:40.800><c> so</c><01:57:41.800><c> it</c><01:57:41.920><c> works</c>

01:57:46.090 --> 01:57:46.100 align:start position:0%
 
 

01:57:46.100 --> 01:57:48.340 align:start position:0%
 
you<01:57:46.850><c> can</c><01:57:47.000><c> check</c><01:57:47.270><c> if</c><01:57:47.420><c> an</c><01:57:47.540><c> object</c><01:57:47.750><c> has</c><01:57:48.320><c> a</c>

01:57:48.340 --> 01:57:48.350 align:start position:0%
you can check if an object has a
 

01:57:48.350 --> 01:57:51.580 align:start position:0%
you can check if an object has a
property<01:57:49.250><c> with</c><01:57:49.910><c> the</c><01:57:50.210><c> has</c><01:57:50.510><c> owned</c><01:57:50.900><c> property</c>

01:57:51.580 --> 01:57:51.590 align:start position:0%
property with the has owned property
 

01:57:51.590 --> 01:57:54.220 align:start position:0%
property with the has owned property
method<01:57:52.160><c> let</c><01:57:53.060><c> me</c><01:57:53.210><c> show</c><01:57:53.510><c> you</c><01:57:53.570><c> how</c><01:57:53.750><c> to</c><01:57:53.780><c> use</c><01:57:54.050><c> this</c>

01:57:54.220 --> 01:57:54.230 align:start position:0%
method let me show you how to use this
 

01:57:54.230 --> 01:57:57.100 align:start position:0%
method let me show you how to use this
method<01:57:54.560><c> and</c><01:57:55.010><c> finish</c><01:57:56.000><c> making</c><01:57:56.420><c> this</c><01:57:56.570><c> function</c>

01:57:57.100 --> 01:57:57.110 align:start position:0%
method and finish making this function
 

01:57:57.110 --> 01:57:59.560 align:start position:0%
method and finish making this function
where<01:57:57.590><c> we</c><01:57:57.620><c> check</c><01:57:58.100><c> if</c><01:57:58.370><c> an</c><01:57:58.610><c> object</c><01:57:58.880><c> has</c><01:57:59.360><c> a</c>

01:57:59.560 --> 01:57:59.570 align:start position:0%
where we check if an object has a
 

01:57:59.570 --> 01:58:02.020 align:start position:0%
where we check if an object has a
specific<01:58:00.200><c> property</c><01:58:00.500><c> if</c><01:58:00.950><c> it</c><01:58:01.460><c> doesn't</c><01:58:01.760><c> have</c><01:58:01.910><c> the</c>

01:58:02.020 --> 01:58:02.030 align:start position:0%
specific property if it doesn't have the
 

01:58:02.030 --> 01:58:05.020 align:start position:0%
specific property if it doesn't have the
property<01:58:02.510><c> will</c><01:58:02.810><c> return</c><01:58:03.200><c> not</c><01:58:03.560><c> found</c><01:58:03.950><c> so</c><01:58:04.730><c> let</c><01:58:04.910><c> me</c>

01:58:05.020 --> 01:58:05.030 align:start position:0%
property will return not found so let me
 

01:58:05.030 --> 01:58:06.850 align:start position:0%
property will return not found so let me
show<01:58:05.240><c> you</c><01:58:05.300><c> how</c><01:58:05.540><c> that's</c><01:58:05.720><c> going</c><01:58:06.020><c> to</c><01:58:06.110><c> work</c><01:58:06.170><c> we'll</c>

01:58:06.850 --> 01:58:06.860 align:start position:0%
show you how that's going to work we'll
 

01:58:06.860 --> 01:58:09.520 align:start position:0%
show you how that's going to work we'll
do<01:58:07.010><c> my</c><01:58:07.370><c> abs</c><01:58:07.790><c> that's</c><01:58:08.330><c> the</c><01:58:08.570><c> object</c><01:58:09.020><c> up</c><01:58:09.200><c> above</c>

01:58:09.520 --> 01:58:09.530 align:start position:0%
do my abs that's the object up above
 

01:58:09.530 --> 01:58:15.070 align:start position:0%
do my abs that's the object up above
dock<01:58:10.370><c> has</c><01:58:11.120><c> owned</c><01:58:11.740><c> dropped</c><01:58:12.740><c> 40</c><01:58:13.340><c> and</c><01:58:13.870><c> then</c><01:58:14.870><c> we</c>

01:58:15.070 --> 01:58:15.080 align:start position:0%
dock has owned dropped 40 and then we
 

01:58:15.080 --> 01:58:16.660 align:start position:0%
dock has owned dropped 40 and then we
pass<01:58:15.410><c> in</c><01:58:15.620><c> the</c><01:58:15.740><c> property</c><01:58:16.100><c> we're</c><01:58:16.190><c> gonna</c><01:58:16.280><c> check</c>

01:58:16.660 --> 01:58:16.670 align:start position:0%
pass in the property we're gonna check
 

01:58:16.670 --> 01:58:20.050 align:start position:0%
pass in the property we're gonna check
which<01:58:16.940><c> is</c><01:58:16.970><c> check</c><01:58:17.570><c> crop</c><01:58:18.490><c> this</c><01:58:19.490><c> is</c><01:58:19.700><c> either</c><01:58:19.820><c> gonna</c>

01:58:20.050 --> 01:58:20.060 align:start position:0%
which is check crop this is either gonna
 

01:58:20.060 --> 01:58:23.140 align:start position:0%
which is check crop this is either gonna
come<01:58:20.330><c> back</c><01:58:20.510><c> as</c><01:58:20.810><c> true</c><01:58:21.290><c> or</c><01:58:21.320><c> false</c><01:58:21.950><c> if</c><01:58:22.340><c> it</c><01:58:22.460><c> has</c><01:58:22.730><c> the</c>

01:58:23.140 --> 01:58:23.150 align:start position:0%
come back as true or false if it has the
 

01:58:23.150 --> 01:58:25.120 align:start position:0%
come back as true or false if it has the
property<01:58:23.660><c> so</c><01:58:24.110><c> let's</c><01:58:24.320><c> make</c><01:58:24.500><c> this</c><01:58:24.620><c> into</c><01:58:24.860><c> an</c><01:58:24.950><c> if</c>

01:58:25.120 --> 01:58:25.130 align:start position:0%
property so let's make this into an if
 

01:58:25.130 --> 01:58:29.050 align:start position:0%
property so let's make this into an if
statement<01:58:25.370><c> if</c><01:58:26.260><c> my</c><01:58:27.260><c> my</c><01:58:27.830><c> object</c><01:58:28.310><c> has</c><01:58:28.730><c> own</c>

01:58:29.050 --> 01:58:29.060 align:start position:0%
statement if my my object has own
 

01:58:29.060 --> 01:58:32.710 align:start position:0%
statement if my my object has own
property<01:58:29.660><c> check</c><01:58:29.960><c> crop</c><01:58:30.760><c> but</c><01:58:31.760><c> if</c><01:58:31.970><c> that's</c><01:58:32.270><c> true</c>

01:58:32.710 --> 01:58:32.720 align:start position:0%
property check crop but if that's true
 

01:58:32.720 --> 01:58:38.350 align:start position:0%
property check crop but if that's true
we're<01:58:33.440><c> going</c><01:58:33.470><c> to</c><01:58:33.770><c> return</c><01:58:34.510><c> my</c><01:58:35.510><c> ABS</c><01:58:36.100><c> and</c><01:58:37.360><c> then</c>

01:58:38.350 --> 01:58:38.360 align:start position:0%
we're going to return my ABS and then
 

01:58:38.360 --> 01:58:42.490 align:start position:0%
we're going to return my ABS and then
use<01:58:39.020><c> bracket</c><01:58:39.560><c> notation</c><01:58:40.090><c> check</c><01:58:41.090><c> crop</c><01:58:41.930><c> so</c><01:58:42.290><c> go</c>

01:58:42.490 --> 01:58:42.500 align:start position:0%
use bracket notation check crop so go
 

01:58:42.500 --> 01:58:44.290 align:start position:0%
use bracket notation check crop so go
we're<01:58:42.710><c> going</c><01:58:42.860><c> to</c><01:58:42.950><c> return</c><01:58:43.250><c> the</c><01:58:43.310><c> value</c><01:58:43.460><c> of</c><01:58:44.060><c> that</c>

01:58:44.290 --> 01:58:44.300 align:start position:0%
we're going to return the value of that
 

01:58:44.300 --> 01:58:52.920 align:start position:0%
we're going to return the value of that
property<01:58:45.040><c> else</c><01:58:46.870><c> we're</c><01:58:47.870><c> going</c><01:58:48.140><c> to</c><01:58:50.440><c> return</c><01:58:51.580><c> not</c>

01:58:52.920 --> 01:58:52.930 align:start position:0%
property else we're going to return not
 

01:58:52.930 --> 01:58:58.150 align:start position:0%
property else we're going to return not
found<01:58:55.360><c> so</c><01:58:56.360><c> let's</c><01:58:56.630><c> pick</c><01:58:56.900><c> up</c><01:58:57.020><c> this</c><01:58:57.230><c> other</c><01:58:57.560><c> return</c>

01:58:58.150 --> 01:58:58.160 align:start position:0%
found so let's pick up this other return
 

01:58:58.160 --> 01:59:03.370 align:start position:0%
found so let's pick up this other return
statement<01:58:58.670><c> and</c><01:58:59.440><c> I'll</c><01:59:00.440><c> do</c><01:59:00.560><c> a</c><01:59:00.590><c> test</c><01:59:01.900><c> so</c><01:59:02.900><c> when</c><01:59:03.260><c> we</c>

01:59:03.370 --> 01:59:03.380 align:start position:0%
statement and I'll do a test so when we
 

01:59:03.380 --> 01:59:07.180 align:start position:0%
statement and I'll do a test so when we
pass<01:59:03.650><c> in</c><01:59:03.860><c> gift</c><01:59:04.220><c> here</c><01:59:04.640><c> we</c><01:59:05.540><c> returned</c><01:59:05.990><c> pony</c><01:59:06.470><c> but</c>

01:59:07.180 --> 01:59:07.190 align:start position:0%
pass in gift here we returned pony but
 

01:59:07.190 --> 01:59:10.990 align:start position:0%
pass in gift here we returned pony but
let's<01:59:07.430><c> say</c><01:59:07.640><c> we</c><01:59:07.790><c> passed</c><01:59:08.120><c> in</c><01:59:08.420><c> hello</c><01:59:09.790><c> you</c><01:59:10.790><c> load</c>

01:59:10.990 --> 01:59:11.000 align:start position:0%
let's say we passed in hello you load
 

01:59:11.000 --> 01:59:18.270 align:start position:0%
let's say we passed in hello you load
that<01:59:11.030><c> not</c><01:59:11.960><c> found</c><01:59:12.820><c> okay</c><01:59:13.820><c> it</c><01:59:13.970><c> works</c>

01:59:18.270 --> 01:59:18.280 align:start position:0%
 
 

01:59:18.280 --> 01:59:21.240 align:start position:0%
 
a<01:59:18.690><c> JavaScript</c><01:59:19.690><c> object</c><01:59:19.780><c> is</c><01:59:20.350><c> a</c><01:59:20.500><c> way</c><01:59:20.710><c> to</c><01:59:20.770><c> store</c>

01:59:21.240 --> 01:59:21.250 align:start position:0%
a JavaScript object is a way to store
 

01:59:21.250 --> 01:59:24.750 align:start position:0%
a JavaScript object is a way to store
flexible<01:59:22.000><c> data</c><01:59:22.500><c> so</c><01:59:23.500><c> you</c><01:59:23.560><c> can</c><01:59:23.950><c> store</c><01:59:24.220><c> strings</c>

01:59:24.750 --> 01:59:24.760 align:start position:0%
flexible data so you can store strings
 

01:59:24.760 --> 01:59:28.590 align:start position:0%
flexible data so you can store strings
numbers<01:59:25.570><c> and</c><01:59:26.370><c> arrays</c><01:59:27.370><c> and</c><01:59:27.850><c> even</c><01:59:28.390><c> other</c>

01:59:28.590 --> 01:59:28.600 align:start position:0%
numbers and arrays and even other
 

01:59:28.600 --> 01:59:31.860 align:start position:0%
numbers and arrays and even other
objects<01:59:29.230><c> so</c><01:59:29.980><c> in</c><01:59:30.280><c> this</c><01:59:30.460><c> example</c><01:59:30.850><c> we</c><01:59:31.240><c> have</c><01:59:31.270><c> an</c>

01:59:31.860 --> 01:59:31.870 align:start position:0%
objects so in this example we have an
 

01:59:31.870 --> 01:59:34.080 align:start position:0%
objects so in this example we have an
array<01:59:32.350><c> called</c><01:59:32.620><c> MyMusic</c><01:59:33.340><c> we</c><01:59:33.550><c> can</c><01:59:33.790><c> see</c><01:59:33.910><c> it's</c><01:59:34.030><c> an</c>

01:59:34.080 --> 01:59:34.090 align:start position:0%
array called MyMusic we can see it's an
 

01:59:34.090 --> 01:59:36.060 align:start position:0%
array called MyMusic we can see it's an
array<01:59:34.300><c> because</c><01:59:34.480><c> we</c><01:59:34.660><c> have</c><01:59:34.900><c> the</c><01:59:35.080><c> open</c><01:59:35.590><c> break</c><01:59:35.800><c> and</c>

01:59:36.060 --> 01:59:36.070 align:start position:0%
array because we have the open break and
 

01:59:36.070 --> 01:59:39.140 align:start position:0%
array because we have the open break and
closed<01:59:36.370><c> bracket</c><01:59:36.910><c> but</c><01:59:37.540><c> inside</c><01:59:38.050><c> the</c><01:59:38.260><c> array</c><01:59:38.680><c> are</c>

01:59:39.140 --> 01:59:39.150 align:start position:0%
closed bracket but inside the array are
 

01:59:39.150 --> 01:59:42.330 align:start position:0%
closed bracket but inside the array are
objects<01:59:40.150><c> so</c><01:59:40.600><c> this</c><01:59:41.170><c> is</c><01:59:41.350><c> one</c><01:59:41.620><c> of</c><01:59:41.650><c> the</c><01:59:41.830><c> objects</c>

01:59:42.330 --> 01:59:42.340 align:start position:0%
objects so this is one of the objects
 

01:59:42.340 --> 01:59:43.890 align:start position:0%
objects so this is one of the objects
and<01:59:42.520><c> inside</c><01:59:42.790><c> the</c><01:59:42.910><c> objects</c><01:59:43.300><c> are</c><01:59:43.420><c> all</c><01:59:43.510><c> these</c><01:59:43.630><c> key</c>

01:59:43.890 --> 01:59:43.900 align:start position:0%
and inside the objects are all these key
 

01:59:43.900 --> 01:59:46.140 align:start position:0%
and inside the objects are all these key
value<01:59:44.260><c> pairs</c><01:59:44.650><c> with</c><01:59:45.310><c> the</c><01:59:45.520><c> strings</c><01:59:45.880><c> and</c><01:59:46.060><c> the</c>

01:59:46.140 --> 01:59:46.150 align:start position:0%
value pairs with the strings and the
 

01:59:46.150 --> 01:59:48.210 align:start position:0%
value pairs with the strings and the
numbers<01:59:46.510><c> and</c><01:59:46.660><c> so</c><01:59:46.840><c> on</c><01:59:46.990><c> so</c><01:59:47.560><c> I'm</c><01:59:47.800><c> going</c><01:59:47.980><c> to</c><01:59:48.010><c> add</c>

01:59:48.210 --> 01:59:48.220 align:start position:0%
numbers and so on so I'm going to add
 

01:59:48.220 --> 01:59:51.510 align:start position:0%
numbers and so on so I'm going to add
another<01:59:48.520><c> object</c><01:59:49.290><c> so</c><01:59:50.290><c> since</c><01:59:50.920><c> this</c><01:59:51.070><c> is</c><01:59:51.130><c> array</c>

01:59:51.510 --> 01:59:51.520 align:start position:0%
another object so since this is array
 

01:59:51.520 --> 01:59:53.490 align:start position:0%
another object so since this is array
after<01:59:51.910><c> each</c><01:59:52.090><c> element</c><01:59:52.630><c> in</c><01:59:52.690><c> an</c><01:59:52.840><c> array</c><01:59:52.930><c> you</c><01:59:53.170><c> have</c>

01:59:53.490 --> 01:59:53.500 align:start position:0%
after each element in an array you have
 

01:59:53.500 --> 01:59:54.930 align:start position:0%
after each element in an array you have
a<01:59:53.560><c> comma</c><01:59:53.830><c> so</c><01:59:54.070><c> I'm</c><01:59:54.130><c> gonna</c><01:59:54.250><c> add</c><01:59:54.400><c> a</c><01:59:54.430><c> comma</c><01:59:54.790><c> here</c>

01:59:54.930 --> 01:59:54.940 align:start position:0%
a comma so I'm gonna add a comma here
 

01:59:54.940 --> 01:59:58.200 align:start position:0%
a comma so I'm gonna add a comma here
and<01:59:55.290><c> then</c><01:59:56.290><c> I'm</c><01:59:56.530><c> going</c><01:59:56.770><c> to</c><01:59:56.860><c> add</c><01:59:57.070><c> my</c><01:59:57.430><c> next</c><01:59:57.880><c> record</c>

01:59:58.200 --> 01:59:58.210 align:start position:0%
and then I'm going to add my next record
 

01:59:58.210 --> 02:00:01.740 align:start position:0%
and then I'm going to add my next record
right<01:59:58.690><c> below</c><01:59:59.200><c> this</c><01:59:59.380><c> comment</c><01:59:59.980><c> here</c><02:00:00.340><c> and</c><02:00:00.720><c> we</c><02:00:01.720><c> are</c>

02:00:01.740 --> 02:00:01.750 align:start position:0%
right below this comment here and we are
 

02:00:01.750 --> 02:00:03.420 align:start position:0%
right below this comment here and we are
going<02:00:01.990><c> to</c><02:00:02.050><c> have</c><02:00:02.200><c> just</c><02:00:02.410><c> like</c><02:00:02.530><c> well</c><02:00:02.740><c> above</c><02:00:03.190><c> we're</c>

02:00:03.420 --> 02:00:03.430 align:start position:0%
going to have just like well above we're
 

02:00:03.430 --> 02:00:06.240 align:start position:0%
going to have just like well above we're
gonna<02:00:03.520><c> have</c><02:00:03.760><c> an</c><02:00:03.910><c> artist</c><02:00:04.360><c> the</c><02:00:05.230><c> artist</c><02:00:05.260><c> is</c><02:00:05.860><c> going</c>

02:00:06.240 --> 02:00:06.250 align:start position:0%
gonna have an artist the artist is going
 

02:00:06.250 --> 02:00:11.780 align:start position:0%
gonna have an artist the artist is going
to<02:00:06.550><c> be</c><02:00:06.820><c> Bo</c><02:00:07.320><c> Carnes</c><02:00:08.320><c> and</c><02:00:08.620><c> then</c><02:00:09.550><c> we</c><02:00:09.790><c> have</c><02:00:10.180><c> a</c><02:00:10.510><c> title</c>

02:00:11.780 --> 02:00:11.790 align:start position:0%
to be Bo Carnes and then we have a title
 

02:00:11.790 --> 02:00:18.240 align:start position:0%
to be Bo Carnes and then we have a title
the<02:00:12.790><c> title</c><02:00:13.260><c> will</c><02:00:14.260><c> be</c><02:00:14.290><c> a</c><02:00:14.500><c> serial</c><02:00:15.160><c> man</c><02:00:17.250><c> the</c>

02:00:18.240 --> 02:00:18.250 align:start position:0%
the title will be a serial man the
 

02:00:18.250 --> 02:00:29.340 align:start position:0%
the title will be a serial man the
release<02:00:18.880><c> year</c><02:00:22.530><c> will</c><02:00:23.530><c> be</c><02:00:26.520><c> 2003</c><02:00:27.520><c> and</c><02:00:28.350><c> for</c>

02:00:29.340 --> 02:00:29.350 align:start position:0%
release year will be 2003 and for
 

02:00:29.350 --> 02:00:34.290 align:start position:0%
release year will be 2003 and for
formats<02:00:32.250><c> this</c><02:00:33.250><c> is</c><02:00:33.460><c> going</c><02:00:33.730><c> to</c><02:00:33.820><c> be</c><02:00:33.940><c> an</c><02:00:34.030><c> array</c>

02:00:34.290 --> 02:00:34.300 align:start position:0%
formats this is going to be an array
 

02:00:34.300 --> 02:00:37.050 align:start position:0%
formats this is going to be an array
it's<02:00:35.200><c> just</c><02:00:35.380><c> like</c><02:00:35.530><c> above</c><02:00:35.830><c> so</c><02:00:36.100><c> we</c><02:00:36.220><c> can</c><02:00:36.550><c> have</c><02:00:36.760><c> any</c>

02:00:37.050 --> 02:00:37.060 align:start position:0%
it's just like above so we can have any
 

02:00:37.060 --> 02:00:41.990 align:start position:0%
it's just like above so we can have any
format<02:00:37.630><c> I'm</c><02:00:37.870><c> gonna</c><02:00:38.650><c> put</c><02:00:38.860><c> YouTube</c><02:00:39.790><c> video</c><02:00:40.770><c> and</c>

02:00:41.990 --> 02:00:42.000 align:start position:0%
format I'm gonna put YouTube video and
 

02:00:42.000 --> 02:00:47.490 align:start position:0%
format I'm gonna put YouTube video and
now<02:00:43.000><c> we've</c><02:00:43.630><c> created</c><02:00:43.930><c> a</c><02:00:44.520><c> second</c><02:00:45.520><c> object</c><02:00:46.120><c> in</c><02:00:46.900><c> our</c>

02:00:47.490 --> 02:00:47.500 align:start position:0%
now we've created a second object in our
 

02:00:47.500 --> 02:00:51.150 align:start position:0%
now we've created a second object in our
in<02:00:47.770><c> our</c><02:00:48.010><c> my</c><02:00:48.370><c> music</c><02:00:48.880><c> array</c><02:00:49.330><c> and</c><02:00:49.660><c> each</c><02:00:50.440><c> objects</c>

02:00:51.150 --> 02:00:51.160 align:start position:0%
in our my music array and each objects
 

02:00:51.160 --> 02:00:53.460 align:start position:0%
in our my music array and each objects
hold<02:00:51.340><c> data</c><02:00:51.610><c> in</c><02:00:51.940><c> a</c><02:00:52.240><c> property</c><02:00:52.690><c> which</c><02:00:52.960><c> is</c><02:00:53.080><c> the</c><02:00:53.230><c> key</c>

02:00:53.460 --> 02:00:53.470 align:start position:0%
hold data in a property which is the key
 

02:00:53.470 --> 02:00:56.310 align:start position:0%
hold data in a property which is the key
value<02:00:53.950><c> format</c><02:00:54.700><c> this</c><02:00:55.180><c> is</c><02:00:55.450><c> very</c><02:00:55.750><c> similar</c><02:00:56.140><c> to</c>

02:00:56.310 --> 02:00:56.320 align:start position:0%
value format this is very similar to
 

02:00:56.320 --> 02:01:02.850 align:start position:0%
value format this is very similar to
JSON<02:00:57.100><c> which</c><02:00:57.970><c> we</c><02:00:58.180><c> will</c><02:00:58.330><c> talk</c><02:00:58.540><c> more</c><02:00:58.750><c> about</c><02:00:58.810><c> later</c>

02:01:02.850 --> 02:01:02.860 align:start position:0%
 
 

02:01:02.860 --> 02:01:05.220 align:start position:0%
 
here<02:01:03.760><c> we</c><02:01:03.909><c> have</c><02:01:04.030><c> an</c><02:01:04.119><c> object</c><02:01:04.330><c> with</c><02:01:04.929><c> other</c>

02:01:05.220 --> 02:01:05.230 align:start position:0%
here we have an object with other
 

02:01:05.230 --> 02:01:08.669 align:start position:0%
here we have an object with other
objects<02:01:05.889><c> nested</c><02:01:06.610><c> inside</c><02:01:06.760><c> that</c><02:01:07.270><c> so</c><02:01:08.020><c> in</c><02:01:08.320><c> order</c>

02:01:08.669 --> 02:01:08.679 align:start position:0%
objects nested inside that so in order
 

02:01:08.679 --> 02:01:11.189 align:start position:0%
objects nested inside that so in order
to<02:01:08.830><c> access</c><02:01:09.550><c> sub</c><02:01:10.270><c> properties</c><02:01:10.840><c> of</c><02:01:10.960><c> an</c><02:01:11.050><c> object</c>

02:01:11.189 --> 02:01:11.199 align:start position:0%
to access sub properties of an object
 

02:01:11.199 --> 02:01:13.680 align:start position:0%
to access sub properties of an object
you<02:01:12.070><c> can</c><02:01:12.100><c> chain</c><02:01:12.639><c> together</c><02:01:12.850><c> the</c><02:01:13.239><c> dot</c><02:01:13.480><c> or</c>

02:01:13.680 --> 02:01:13.690 align:start position:0%
you can chain together the dot or
 

02:01:13.690 --> 02:01:16.140 align:start position:0%
you can chain together the dot or
bracket<02:01:14.290><c> notation</c><02:01:14.580><c> so</c><02:01:15.580><c> I'm</c><02:01:15.730><c> trying</c><02:01:15.940><c> to</c><02:01:16.030><c> get</c>

02:01:16.140 --> 02:01:16.150 align:start position:0%
bracket notation so I'm trying to get
 

02:01:16.150 --> 02:01:18.660 align:start position:0%
bracket notation so I'm trying to get
the<02:01:16.330><c> glove</c><02:01:16.659><c> box</c><02:01:17.010><c> contents</c><02:01:18.010><c> so</c><02:01:18.369><c> I'm</c><02:01:18.460><c> going</c><02:01:18.610><c> to</c>

02:01:18.660 --> 02:01:18.670 align:start position:0%
the glove box contents so I'm going to
 

02:01:18.670 --> 02:01:21.240 align:start position:0%
the glove box contents so I'm going to
take<02:01:18.969><c> away</c><02:01:19.360><c> this</c><02:01:19.600><c> undefined</c><02:01:20.290><c> here</c><02:01:20.679><c> and</c><02:01:20.830><c> I'll</c>

02:01:21.240 --> 02:01:21.250 align:start position:0%
take away this undefined here and I'll
 

02:01:21.250 --> 02:01:27.000 align:start position:0%
take away this undefined here and I'll
do<02:01:21.400><c> my</c><02:01:21.730><c> storage</c><02:01:22.469><c> dot</c><02:01:23.790><c> car</c><02:01:24.790><c> dot</c><02:01:25.570><c> inside</c><02:01:26.500><c> and</c>

02:01:27.000 --> 02:01:27.010 align:start position:0%
do my storage dot car dot inside and
 

02:01:27.010 --> 02:01:30.270 align:start position:0%
do my storage dot car dot inside and
then<02:01:27.940><c> now</c><02:01:28.230><c> the</c><02:01:29.230><c> next</c><02:01:29.560><c> thing</c><02:01:29.650><c> it's</c><02:01:29.830><c> it</c><02:01:29.949><c> with</c><02:01:30.250><c> a</c>

02:01:30.270 --> 02:01:30.280 align:start position:0%
then now the next thing it's it with a
 

02:01:30.280 --> 02:01:32.459 align:start position:0%
then now the next thing it's it with a
car<02:01:30.610><c> inside</c><02:01:31.210><c> the</c><02:01:31.449><c> last</c><02:01:31.659><c> thing</c><02:01:31.780><c> is</c><02:01:31.869><c> glove</c><02:01:32.170><c> box</c>

02:01:32.459 --> 02:01:32.469 align:start position:0%
car inside the last thing is glove box
 

02:01:32.469 --> 02:01:34.800 align:start position:0%
car inside the last thing is glove box
because<02:01:32.770><c> there's</c><02:01:33.670><c> a</c><02:01:33.760><c> space</c><02:01:34.090><c> here</c><02:01:34.420><c> we</c><02:01:34.570><c> have</c><02:01:34.690><c> to</c>

02:01:34.800 --> 02:01:34.810 align:start position:0%
because there's a space here we have to
 

02:01:34.810 --> 02:01:37.500 align:start position:0%
because there's a space here we have to
use<02:01:34.900><c> bracket</c><02:01:35.440><c> a</c><02:01:35.770><c> shin</c><02:01:36.010><c> so</c><02:01:36.699><c> I'm</c><02:01:37.030><c> gonna</c><02:01:37.300><c> use</c>

02:01:37.500 --> 02:01:37.510 align:start position:0%
use bracket a shin so I'm gonna use
 

02:01:37.510 --> 02:01:40.379 align:start position:0%
use bracket a shin so I'm gonna use
bracket<02:01:37.929><c> notation</c><02:01:38.050><c> on</c><02:01:38.590><c> the</c><02:01:38.619><c> end</c><02:01:38.889><c> here</c><02:01:39.280><c> and</c><02:01:39.520><c> say</c>

02:01:40.379 --> 02:01:40.389 align:start position:0%
bracket notation on the end here and say
 

02:01:40.389 --> 02:01:46.379 align:start position:0%
bracket notation on the end here and say
glove<02:01:41.190><c> box</c><02:01:42.190><c> and</c><02:01:43.290><c> now</c><02:01:44.290><c> if</c><02:01:44.619><c> we</c><02:01:44.980><c> run</c><02:01:45.429><c> this</c><02:01:45.699><c> C</c><02:01:46.239><c> we</c>

02:01:46.379 --> 02:01:46.389 align:start position:0%
glove box and now if we run this C we
 

02:01:46.389 --> 02:01:48.030 align:start position:0%
glove box and now if we run this C we
are<02:01:46.600><c> going</c><02:01:46.780><c> to</c><02:01:46.900><c> console</c><02:01:47.320><c> that</c><02:01:47.409><c> lock</c><02:01:47.619><c> so</c><02:01:47.650><c> let's</c>

02:01:48.030 --> 02:01:48.040 align:start position:0%
are going to console that lock so let's
 

02:01:48.040 --> 02:01:51.300 align:start position:0%
are going to console that lock so let's
see<02:01:48.159><c> if</c><02:01:48.219><c> we</c><02:01:48.310><c> get</c><02:01:48.460><c> the</c><02:01:48.580><c> contents</c><02:01:49.179><c> here</c><02:01:49.770><c> yep</c><02:01:50.860><c> Maps</c>

02:01:51.300 --> 02:01:51.310 align:start position:0%
see if we get the contents here yep Maps
 

02:01:51.310 --> 02:01:55.960 align:start position:0%
see if we get the contents here yep Maps
it<02:01:51.699><c> worked</c>

02:01:55.960 --> 02:01:55.970 align:start position:0%
 
 

02:01:55.970 --> 02:01:58.760 align:start position:0%
 
arrey<02:01:56.970><c> bracket</c><02:01:57.510><c> notation</c>

02:01:58.760 --> 02:01:58.770 align:start position:0%
arrey bracket notation
 

02:01:58.770 --> 02:02:01.310 align:start position:0%
arrey bracket notation
to<02:01:58.980><c> access</c><02:01:59.160><c> nested</c><02:01:59.940><c> arrays</c><02:02:00.240><c> you</c><02:02:00.840><c> can</c><02:02:01.020><c> see</c><02:02:01.200><c> we</c>

02:02:01.310 --> 02:02:01.320 align:start position:0%
to access nested arrays you can see we
 

02:02:01.320 --> 02:02:03.890 align:start position:0%
to access nested arrays you can see we
have<02:02:01.500><c> this</c><02:02:01.620><c> array</c><02:02:01.830><c> here</c><02:02:02.730><c> and</c><02:02:02.970><c> inside</c><02:02:03.720><c> this</c>

02:02:03.890 --> 02:02:03.900 align:start position:0%
have this array here and inside this
 

02:02:03.900 --> 02:02:06.350 align:start position:0%
have this array here and inside this
array<02:02:04.260><c> are</c><02:02:04.560><c> two</c><02:02:04.950><c> objects</c><02:02:05.490><c> the</c><02:02:05.610><c> first</c><02:02:05.640><c> elm</c><02:02:06.180><c> and</c>

02:02:06.350 --> 02:02:06.360 align:start position:0%
array are two objects the first elm and
 

02:02:06.360 --> 02:02:08.750 align:start position:0%
array are two objects the first elm and
the<02:02:06.510><c> array</c><02:02:06.720><c> is</c><02:02:06.960><c> this</c><02:02:07.170><c> object</c><02:02:07.410><c> the</c><02:02:08.070><c> second</c><02:02:08.580><c> elm</c>

02:02:08.750 --> 02:02:08.760 align:start position:0%
the array is this object the second elm
 

02:02:08.760 --> 02:02:11.750 align:start position:0%
the array is this object the second elm
and<02:02:08.880><c> array</c><02:02:09.120><c> is</c><02:02:09.270><c> this</c><02:02:09.660><c> object</c><02:02:09.930><c> and</c><02:02:10.470><c> then</c><02:02:11.130><c> inside</c>

02:02:11.750 --> 02:02:11.760 align:start position:0%
and array is this object and then inside
 

02:02:11.760 --> 02:02:15.800 align:start position:0%
and array is this object and then inside
the<02:02:12.000><c> object</c><02:02:12.510><c> we</c><02:02:12.720><c> have</c><02:02:12.750><c> a</c><02:02:13.290><c> key</c><02:02:14.160><c> value</c><02:02:14.730><c> pair</c><02:02:15.270><c> the</c>

02:02:15.800 --> 02:02:15.810 align:start position:0%
the object we have a key value pair the
 

02:02:15.810 --> 02:02:17.360 align:start position:0%
the object we have a key value pair the
key<02:02:16.050><c> is</c><02:02:16.170><c> less</c><02:02:16.380><c> and</c><02:02:16.560><c> the</c><02:02:16.590><c> value</c><02:02:17.010><c> is</c><02:02:17.130><c> another</c>

02:02:17.360 --> 02:02:17.370 align:start position:0%
key is less and the value is another
 

02:02:17.370 --> 02:02:20.300 align:start position:0%
key is less and the value is another
array<02:02:17.760><c> here</c><02:02:18.120><c> so</c><02:02:18.690><c> we</c><02:02:18.900><c> can</c><02:02:19.110><c> combine</c><02:02:19.380><c> dot</c>

02:02:20.300 --> 02:02:20.310 align:start position:0%
array here so we can combine dot
 

02:02:20.310 --> 02:02:23.780 align:start position:0%
array here so we can combine dot
notation<02:02:20.580><c> and</c><02:02:21.180><c> bracket</c><02:02:22.050><c> notation</c><02:02:22.310><c> to</c><02:02:23.310><c> access</c>

02:02:23.780 --> 02:02:23.790 align:start position:0%
notation and bracket notation to access
 

02:02:23.790 --> 02:02:25.970 align:start position:0%
notation and bracket notation to access
the<02:02:24.030><c> second</c><02:02:24.540><c> tree</c><02:02:24.870><c> that's</c><02:02:25.560><c> what</c><02:02:25.680><c> we're</c><02:02:25.800><c> trying</c>

02:02:25.970 --> 02:02:25.980 align:start position:0%
the second tree that's what we're trying
 

02:02:25.980 --> 02:02:29.690 align:start position:0%
the second tree that's what we're trying
to<02:02:26.100><c> do</c><02:02:26.250><c> here</c><02:02:26.670><c> so</c><02:02:26.870><c> let's</c><02:02:27.870><c> do</c><02:02:28.110><c> that</c><02:02:28.290><c> first</c><02:02:29.100><c> we</c>

02:02:29.690 --> 02:02:29.700 align:start position:0%
to do here so let's do that first we
 

02:02:29.700 --> 02:02:34.040 align:start position:0%
to do here so let's do that first we
need<02:02:29.940><c> to</c><02:02:30.150><c> do</c><02:02:30.480><c> my</c><02:02:30.840><c> plants</c><02:02:31.830><c> and</c><02:02:32.330><c> the</c><02:02:33.330><c> trees</c><02:02:33.630><c> are</c>

02:02:34.040 --> 02:02:34.050 align:start position:0%
need to do my plants and the trees are
 

02:02:34.050 --> 02:02:36.950 align:start position:0%
need to do my plants and the trees are
the<02:02:34.230><c> second</c><02:02:34.770><c> element</c><02:02:35.370><c> in</c><02:02:35.580><c> the</c><02:02:36.090><c> my</c><02:02:36.270><c> plant</c><02:02:36.630><c> array</c>

02:02:36.950 --> 02:02:36.960 align:start position:0%
the second element in the my plant array
 

02:02:36.960 --> 02:02:40.730 align:start position:0%
the second element in the my plant array
which<02:02:37.380><c> is</c><02:02:37.410><c> index</c><02:02:37.980><c> one</c><02:02:38.310><c> now</c><02:02:39.300><c> we</c><02:02:39.930><c> need</c><02:02:40.140><c> to</c><02:02:40.380><c> get</c>

02:02:40.730 --> 02:02:40.740 align:start position:0%
which is index one now we need to get
 

02:02:40.740 --> 02:02:44.090 align:start position:0%
which is index one now we need to get
though<02:02:41.250><c> the</c><02:02:41.640><c> list</c><02:02:41.970><c> so</c><02:02:42.930><c> the</c><02:02:43.350><c> list</c><02:02:43.650><c> of</c><02:02:43.830><c> trees</c>

02:02:44.090 --> 02:02:44.100 align:start position:0%
though the list so the list of trees
 

02:02:44.100 --> 02:02:46.700 align:start position:0%
though the list so the list of trees
here<02:02:44.370><c> so</c><02:02:44.580><c> I'm</c><02:02:44.670><c> going</c><02:02:44.790><c> to</c><02:02:44.880><c> do</c><02:02:44.940><c> dot</c><02:02:45.270><c> lists</c><02:02:46.170><c> and</c>

02:02:46.700 --> 02:02:46.710 align:start position:0%
here so I'm going to do dot lists and
 

02:02:46.710 --> 02:02:50.030 align:start position:0%
here so I'm going to do dot lists and
since<02:02:47.670><c> that</c><02:02:48.030><c> list</c><02:02:48.390><c> is</c><02:02:48.600><c> an</c><02:02:48.750><c> array</c><02:02:49.050><c> I</c><02:02:49.350><c> can</c><02:02:49.860><c> use</c>

02:02:50.030 --> 02:02:50.040 align:start position:0%
since that list is an array I can use
 

02:02:50.040 --> 02:02:53.330 align:start position:0%
since that list is an array I can use
the<02:02:50.220><c> bracket</c><02:02:50.730><c> notation</c><02:02:50.760><c> to</c><02:02:51.720><c> get</c><02:02:52.380><c> the</c><02:02:52.710><c> the</c>

02:02:53.330 --> 02:02:53.340 align:start position:0%
the bracket notation to get the the
 

02:02:53.340 --> 02:02:56.300 align:start position:0%
the bracket notation to get the the
second<02:02:54.000><c> list</c><02:02:54.300><c> element</c><02:02:54.900><c> which</c><02:02:55.320><c> again</c><02:02:55.680><c> is</c><02:02:55.860><c> array</c>

02:02:56.300 --> 02:02:56.310 align:start position:0%
second list element which again is array
 

02:02:56.310 --> 02:03:00.200 align:start position:0%
second list element which again is array
index<02:02:56.820><c> one</c><02:02:57.180><c> so</c><02:02:58.080><c> if</c><02:02:58.350><c> we</c><02:02:59.070><c> run</c><02:02:59.580><c> this</c><02:02:59.640><c> it's</c><02:03:00.120><c> going</c>

02:03:00.200 --> 02:03:00.210 align:start position:0%
index one so if we run this it's going
 

02:03:00.210 --> 02:03:02.510 align:start position:0%
index one so if we run this it's going
to<02:03:00.270><c> console</c><02:03:00.690><c> that</c><02:03:00.780><c> log</c><02:03:01.050><c> and</c><02:03:01.440><c> we</c><02:03:01.710><c> see</c><02:03:01.980><c> pine</c>

02:03:02.510 --> 02:03:02.520 align:start position:0%
to console that log and we see pine
 

02:03:02.520 --> 02:03:08.730 align:start position:0%
to console that log and we see pine
that's<02:03:03.150><c> the</c><02:03:03.480><c> second</c><02:03:03.960><c> tree</c><02:03:04.200><c> here</c>

02:03:08.730 --> 02:03:08.740 align:start position:0%
 
 

02:03:08.740 --> 02:03:11.070 align:start position:0%
 
this<02:03:09.580><c> is</c><02:03:09.760><c> a</c><02:03:09.790><c> coding</c><02:03:10.270><c> challenge</c><02:03:10.750><c> we're</c><02:03:10.990><c> gonna</c>

02:03:11.070 --> 02:03:11.080 align:start position:0%
this is a coding challenge we're gonna
 

02:03:11.080 --> 02:03:15.120 align:start position:0%
this is a coding challenge we're gonna
do<02:03:11.380><c> we're</c><02:03:12.160><c> giving</c><02:03:12.610><c> given</c><02:03:13.180><c> this</c><02:03:13.450><c> object</c><02:03:14.260><c> here</c>

02:03:15.120 --> 02:03:15.130 align:start position:0%
do we're giving given this object here
 

02:03:15.130 --> 02:03:18.870 align:start position:0%
do we're giving given this object here
which<02:03:15.280><c> is</c><02:03:15.820><c> a</c><02:03:15.850><c> record</c><02:03:16.510><c> collection</c><02:03:17.250><c> each</c><02:03:18.250><c> record</c>

02:03:18.870 --> 02:03:18.880 align:start position:0%
which is a record collection each record
 

02:03:18.880 --> 02:03:22.560 align:start position:0%
which is a record collection each record
has<02:03:19.330><c> an</c><02:03:19.570><c> ID</c><02:03:19.840><c> and</c><02:03:20.380><c> then</c><02:03:21.160><c> it</c><02:03:21.280><c> also</c><02:03:21.490><c> has</c><02:03:21.880><c> different</c>

02:03:22.560 --> 02:03:22.570 align:start position:0%
has an ID and then it also has different
 

02:03:22.570 --> 02:03:24.930 align:start position:0%
has an ID and then it also has different
pieces<02:03:23.440><c> of</c><02:03:23.560><c> information</c><02:03:23.770><c> about</c><02:03:24.280><c> the</c><02:03:24.550><c> record</c>

02:03:24.930 --> 02:03:24.940 align:start position:0%
pieces of information about the record
 

02:03:24.940 --> 02:03:27.120 align:start position:0%
pieces of information about the record
they<02:03:25.720><c> don't</c><02:03:25.930><c> all</c><02:03:26.050><c> have</c><02:03:26.080><c> the</c><02:03:26.350><c> same</c><02:03:26.560><c> information</c>

02:03:27.120 --> 02:03:27.130 align:start position:0%
they don't all have the same information
 

02:03:27.130 --> 02:03:30.060 align:start position:0%
they don't all have the same information
but<02:03:27.910><c> see</c><02:03:28.120><c> we</c><02:03:28.240><c> have</c><02:03:28.360><c> art</c><02:03:28.660><c> album</c><02:03:28.930><c> artist</c><02:03:29.620><c> tracks</c>

02:03:30.060 --> 02:03:30.070 align:start position:0%
but see we have art album artist tracks
 

02:03:30.070 --> 02:03:33.240 align:start position:0%
but see we have art album artist tracks
album<02:03:31.000><c> artist</c><02:03:31.300><c> tracks</c><02:03:31.770><c> this</c><02:03:32.770><c> just</c><02:03:33.070><c> says</c>

02:03:33.240 --> 02:03:33.250 align:start position:0%
album artist tracks this just says
 

02:03:33.250 --> 02:03:35.700 align:start position:0%
album artist tracks this just says
artist<02:03:33.730><c> tracks</c><02:03:34.120><c> and</c><02:03:34.390><c> this</c><02:03:34.480><c> just</c><02:03:34.750><c> has</c><02:03:34.990><c> album</c>

02:03:35.700 --> 02:03:35.710 align:start position:0%
artist tracks and this just has album
 

02:03:35.710 --> 02:03:39.270 align:start position:0%
artist tracks and this just has album
here<02:03:36.100><c> and</c><02:03:36.330><c> we</c><02:03:37.330><c> are</c><02:03:37.720><c> supposed</c><02:03:38.080><c> to</c><02:03:38.350><c> create</c><02:03:38.770><c> this</c>

02:03:39.270 --> 02:03:39.280 align:start position:0%
here and we are supposed to create this
 

02:03:39.280 --> 02:03:42.480 align:start position:0%
here and we are supposed to create this
update<02:03:40.210><c> records</c><02:03:40.870><c> function</c><02:03:41.680><c> where</c><02:03:42.070><c> we</c><02:03:42.280><c> can</c>

02:03:42.480 --> 02:03:42.490 align:start position:0%
update records function where we can
 

02:03:42.490 --> 02:03:45.780 align:start position:0%
update records function where we can
pass<02:03:42.760><c> in</c><02:03:43.060><c> the</c><02:03:43.210><c> ID</c><02:03:43.420><c> the</c><02:03:44.380><c> property</c><02:03:45.070><c> and</c><02:03:45.250><c> the</c>

02:03:45.780 --> 02:03:45.790 align:start position:0%
pass in the ID the property and the
 

02:03:45.790 --> 02:03:48.540 align:start position:0%
pass in the ID the property and the
value<02:03:46.300><c> and</c><02:03:46.570><c> it's</c><02:03:47.080><c> going</c><02:03:47.380><c> to</c><02:03:47.500><c> update</c><02:03:47.770><c> our</c>

02:03:48.540 --> 02:03:48.550 align:start position:0%
value and it's going to update our
 

02:03:48.550 --> 02:03:50.850 align:start position:0%
value and it's going to update our
record<02:03:49.180><c> collection</c><02:03:49.720><c> with</c><02:03:50.080><c> the</c><02:03:50.320><c> property</c><02:03:50.800><c> of</c>

02:03:50.850 --> 02:03:50.860 align:start position:0%
record collection with the property of
 

02:03:50.860 --> 02:03:53.190 align:start position:0%
record collection with the property of
the<02:03:50.920><c> value</c><02:03:51.310><c> so</c><02:03:51.910><c> for</c><02:03:52.150><c> instance</c><02:03:52.450><c> if</c><02:03:52.600><c> we</c><02:03:52.840><c> pass</c><02:03:53.050><c> in</c>

02:03:53.190 --> 02:03:53.200 align:start position:0%
the value so for instance if we pass in
 

02:03:53.200 --> 02:03:53.930 align:start position:0%
the value so for instance if we pass in
the<02:03:53.230><c> ID</c>

02:03:53.930 --> 02:03:53.940 align:start position:0%
the ID
 

02:03:53.940 --> 02:03:58.110 align:start position:0%
the ID
2468<02:03:55.090><c> and</c><02:03:55.390><c> we</c><02:03:55.900><c> put</c><02:03:56.200><c> the</c><02:03:56.530><c> property</c><02:03:57.280><c> artists</c><02:03:57.820><c> and</c>

02:03:58.110 --> 02:03:58.120 align:start position:0%
2468 and we put the property artists and
 

02:03:58.120 --> 02:04:00.870 align:start position:0%
2468 and we put the property artists and
if<02:03:58.600><c> we</c><02:03:58.750><c> set</c><02:03:58.990><c> a</c><02:03:59.020><c> different</c><02:03:59.200><c> value</c><02:03:59.410><c> like</c><02:04:00.370><c> Quincy</c>

02:04:00.870 --> 02:04:00.880 align:start position:0%
if we set a different value like Quincy
 

02:04:00.880 --> 02:04:03.500 align:start position:0%
if we set a different value like Quincy
or<02:04:01.330><c> something</c><02:04:01.720><c> like</c><02:04:01.810><c> that</c><02:04:01.870><c> then</c><02:04:02.830><c> we</c><02:04:03.130><c> should</c>

02:04:03.500 --> 02:04:03.510 align:start position:0%
or something like that then we should
 

02:04:03.510 --> 02:04:06.660 align:start position:0%
or something like that then we should
update<02:04:04.510><c> this</c><02:04:04.780><c> whole</c><02:04:05.050><c> object</c><02:04:05.260><c> so</c><02:04:06.070><c> now</c><02:04:06.400><c> it</c><02:04:06.640><c> says</c>

02:04:06.660 --> 02:04:06.670 align:start position:0%
update this whole object so now it says
 

02:04:06.670 --> 02:04:09.960 align:start position:0%
update this whole object so now it says
Quincy<02:04:07.360><c> instead</c><02:04:07.690><c> of</c><02:04:07.780><c> prints</c><02:04:08.290><c> and</c><02:04:08.760><c> we</c><02:04:09.760><c> should</c>

02:04:09.960 --> 02:04:09.970 align:start position:0%
Quincy instead of prints and we should
 

02:04:09.970 --> 02:04:12.720 align:start position:0%
Quincy instead of prints and we should
return<02:04:10.480><c> the</c><02:04:10.930><c> full</c><02:04:11.230><c> collection</c><02:04:11.560><c> so</c><02:04:12.460><c> it's</c><02:04:12.610><c> going</c>

02:04:12.720 --> 02:04:12.730 align:start position:0%
return the full collection so it's going
 

02:04:12.730 --> 02:04:14.580 align:start position:0%
return the full collection so it's going
to<02:04:12.790><c> update</c><02:04:12.940><c> the</c><02:04:13.210><c> collection</c><02:04:13.630><c> and</c><02:04:13.840><c> then</c><02:04:14.020><c> return</c>

02:04:14.580 --> 02:04:14.590 align:start position:0%
to update the collection and then return
 

02:04:14.590 --> 02:04:17.940 align:start position:0%
to update the collection and then return
the<02:04:14.890><c> collection</c><02:04:15.430><c> if</c><02:04:15.970><c> we</c><02:04:16.810><c> have</c><02:04:17.140><c> an</c><02:04:17.410><c> empty</c>

02:04:17.940 --> 02:04:17.950 align:start position:0%
the collection if we have an empty
 

02:04:17.950 --> 02:04:20.070 align:start position:0%
the collection if we have an empty
string<02:04:18.310><c> for</c><02:04:18.580><c> the</c><02:04:18.640><c> value</c><02:04:19.090><c> it</c><02:04:19.330><c> should</c><02:04:19.570><c> just</c>

02:04:20.070 --> 02:04:20.080 align:start position:0%
string for the value it should just
 

02:04:20.080 --> 02:04:23.580 align:start position:0%
string for the value it should just
completely<02:04:20.590><c> delete</c><02:04:21.220><c> that</c><02:04:21.460><c> property</c><02:04:22.210><c> also</c><02:04:22.780><c> if</c>

02:04:23.580 --> 02:04:23.590 align:start position:0%
completely delete that property also if
 

02:04:23.590 --> 02:04:26.910 align:start position:0%
completely delete that property also if
we<02:04:24.430><c> have</c><02:04:24.730><c> the</c><02:04:24.970><c> property</c><02:04:25.420><c> of</c><02:04:25.540><c> tracks</c><02:04:25.990><c> and</c><02:04:26.440><c> then</c>

02:04:26.910 --> 02:04:26.920 align:start position:0%
we have the property of tracks and then
 

02:04:26.920 --> 02:04:30.330 align:start position:0%
we have the property of tracks and then
we<02:04:27.100><c> have</c><02:04:27.220><c> a</c><02:04:27.250><c> value</c><02:04:27.580><c> instead</c><02:04:28.360><c> of</c><02:04:28.600><c> updating</c><02:04:29.340><c> the</c>

02:04:30.330 --> 02:04:30.340 align:start position:0%
we have a value instead of updating the
 

02:04:30.340 --> 02:04:33.960 align:start position:0%
we have a value instead of updating the
whole<02:04:30.700><c> tracks</c><02:04:31.330><c> here</c><02:04:32.260><c> with</c><02:04:32.530><c> what</c><02:04:32.800><c> we</c><02:04:32.830><c> put</c><02:04:33.310><c> in</c>

02:04:33.960 --> 02:04:33.970 align:start position:0%
whole tracks here with what we put in
 

02:04:33.970 --> 02:04:36.870 align:start position:0%
whole tracks here with what we put in
it's<02:04:34.480><c> just</c><02:04:34.840><c> going</c><02:04:35.050><c> to</c><02:04:35.230><c> add</c><02:04:35.530><c> the</c><02:04:36.100><c> track</c><02:04:36.460><c> to</c><02:04:36.850><c> the</c>

02:04:36.870 --> 02:04:36.880 align:start position:0%
it's just going to add the track to the
 

02:04:36.880 --> 02:04:40.290 align:start position:0%
it's just going to add the track to the
end<02:04:37.180><c> of</c><02:04:37.420><c> this</c><02:04:37.600><c> array</c><02:04:38.490><c> so</c><02:04:39.490><c> if</c><02:04:39.880><c> you</c><02:04:40.060><c> look</c><02:04:40.270><c> right</c>

02:04:40.290 --> 02:04:40.300 align:start position:0%
end of this array so if you look right
 

02:04:40.300 --> 02:04:42.870 align:start position:0%
end of this array so if you look right
here<02:04:40.480><c> it</c><02:04:40.870><c> says</c><02:04:41.440><c> the</c><02:04:41.830><c> comment</c><02:04:42.250><c> says</c><02:04:42.400><c> keep</c><02:04:42.730><c> a</c>

02:04:42.870 --> 02:04:42.880 align:start position:0%
here it says the comment says keep a
 

02:04:42.880 --> 02:04:46.320 align:start position:0%
here it says the comment says keep a
copy<02:04:43.210><c> of</c><02:04:43.510><c> the</c><02:04:43.690><c> collection</c><02:04:44.320><c> for</c><02:04:44.650><c> tests</c><02:04:45.460><c> this</c>

02:04:46.320 --> 02:04:46.330 align:start position:0%
copy of the collection for tests this
 

02:04:46.330 --> 02:04:49.230 align:start position:0%
copy of the collection for tests this
JSON<02:04:46.990><c> dot</c><02:04:47.320><c> parse</c><02:04:47.650><c> and</c><02:04:48.010><c> json</c><02:04:48.550><c> dot</c><02:04:48.820><c> stringify</c>

02:04:49.230 --> 02:04:49.240 align:start position:0%
JSON dot parse and json dot stringify
 

02:04:49.240 --> 02:04:53.010 align:start position:0%
JSON dot parse and json dot stringify
and<02:04:49.840><c> then</c><02:04:50.320><c> collection</c><02:04:51.100><c> this</c><02:04:51.790><c> is</c><02:04:51.850><c> just</c><02:04:52.420><c> a</c><02:04:52.630><c> fancy</c>

02:04:53.010 --> 02:04:53.020 align:start position:0%
and then collection this is just a fancy
 

02:04:53.020 --> 02:04:56.010 align:start position:0%
and then collection this is just a fancy
way<02:04:53.350><c> in</c><02:04:53.470><c> JavaScript</c><02:04:54.160><c> to</c><02:04:54.250><c> make</c><02:04:54.400><c> a</c><02:04:54.670><c> copy</c><02:04:55.300><c> of</c><02:04:55.540><c> the</c>

02:04:56.010 --> 02:04:56.020 align:start position:0%
way in JavaScript to make a copy of the
 

02:04:56.020 --> 02:04:59.520 align:start position:0%
way in JavaScript to make a copy of the
object<02:04:56.910><c> remember</c><02:04:57.910><c> in</c><02:04:58.120><c> our</c><02:04:58.540><c> function</c><02:04:59.230><c> we</c><02:04:59.500><c> are</c>

02:04:59.520 --> 02:04:59.530 align:start position:0%
object remember in our function we are
 

02:04:59.530 --> 02:05:01.910 align:start position:0%
object remember in our function we are
going<02:04:59.710><c> to</c><02:05:00.040><c> be</c><02:05:00.160><c> changing</c><02:05:00.940><c> the</c><02:05:00.970><c> collection</c>

02:05:01.910 --> 02:05:01.920 align:start position:0%
going to be changing the collection
 

02:05:01.920 --> 02:05:05.220 align:start position:0%
going to be changing the collection
object<02:05:02.920><c> but</c><02:05:03.550><c> we</c><02:05:03.580><c> want</c><02:05:04.030><c> to</c><02:05:04.150><c> have</c><02:05:04.300><c> a</c><02:05:04.360><c> copy</c><02:05:04.810><c> of</c><02:05:04.990><c> the</c>

02:05:05.220 --> 02:05:05.230 align:start position:0%
object but we want to have a copy of the
 

02:05:05.230 --> 02:05:07.770 align:start position:0%
object but we want to have a copy of the
original<02:05:05.860><c> object</c><02:05:06.070><c> before</c><02:05:06.580><c> anything</c><02:05:07.450><c> was</c>

02:05:07.770 --> 02:05:07.780 align:start position:0%
original object before anything was
 

02:05:07.780 --> 02:05:11.010 align:start position:0%
original object before anything was
changed<02:05:08.740><c> so</c><02:05:08.920><c> that's</c><02:05:09.340><c> what</c><02:05:09.520><c> that's</c><02:05:09.730><c> for</c><02:05:10.150><c> so</c>

02:05:11.010 --> 02:05:11.020 align:start position:0%
changed so that's what that's for so
 

02:05:11.020 --> 02:05:13.860 align:start position:0%
changed so that's what that's for so
let's<02:05:11.440><c> go</c><02:05:11.590><c> ahead</c><02:05:11.710><c> and</c><02:05:11.920><c> do</c><02:05:12.070><c> that</c><02:05:12.250><c> so</c><02:05:12.910><c> we're</c><02:05:13.690><c> just</c>

02:05:13.860 --> 02:05:13.870 align:start position:0%
let's go ahead and do that so we're just
 

02:05:13.870 --> 02:05:16.050 align:start position:0%
let's go ahead and do that so we're just
updating<02:05:14.050><c> this</c><02:05:14.530><c> function</c><02:05:14.980><c> here</c><02:05:15.280><c> this</c><02:05:15.580><c> update</c>

02:05:16.050 --> 02:05:16.060 align:start position:0%
updating this function here this update
 

02:05:16.060 --> 02:05:19.050 align:start position:0%
updating this function here this update
records<02:05:16.510><c> function</c><02:05:16.960><c> okay</c><02:05:17.530><c> so</c><02:05:17.590><c> let's</c><02:05:18.220><c> get</c><02:05:18.670><c> to</c>

02:05:19.050 --> 02:05:19.060 align:start position:0%
records function okay so let's get to
 

02:05:19.060 --> 02:05:22.709 align:start position:0%
records function okay so let's get to
this<02:05:19.330><c> so</c><02:05:19.990><c> we'll</c><02:05:20.140><c> do</c><02:05:20.260><c> if</c><02:05:21.060><c> value</c>

02:05:22.709 --> 02:05:22.719 align:start position:0%
this so we'll do if value
 

02:05:22.719 --> 02:05:26.489 align:start position:0%
this so we'll do if value
equals<02:05:23.679><c> equals</c><02:05:24.130><c> equals</c><02:05:24.659><c> blank</c><02:05:25.659><c> because</c><02:05:26.229><c> the</c>

02:05:26.489 --> 02:05:26.499 align:start position:0%
equals equals equals blank because the
 

02:05:26.499 --> 02:05:28.409 align:start position:0%
equals equals equals blank because the
first<02:05:26.709><c> condition</c><02:05:27.189><c> we</c><02:05:27.340><c> are</c><02:05:27.369><c> going</c><02:05:27.699><c> to</c><02:05:27.820><c> test</c><02:05:28.090><c> for</c>

02:05:28.409 --> 02:05:28.419 align:start position:0%
first condition we are going to test for
 

02:05:28.419 --> 02:05:31.350 align:start position:0%
first condition we are going to test for
is<02:05:28.630><c> if</c><02:05:29.169><c> we</c><02:05:29.320><c> need</c><02:05:29.499><c> to</c><02:05:29.650><c> delete</c><02:05:30.280><c> the</c><02:05:30.789><c> property</c>

02:05:31.350 --> 02:05:31.360 align:start position:0%
is if we need to delete the property
 

02:05:31.360 --> 02:05:33.390 align:start position:0%
is if we need to delete the property
remember<02:05:31.929><c> if</c><02:05:32.079><c> the</c><02:05:32.229><c> value</c><02:05:32.559><c> is</c><02:05:32.650><c> at</c><02:05:32.800><c> the</c><02:05:32.919><c> blank</c><02:05:33.189><c> we</c>

02:05:33.390 --> 02:05:33.400 align:start position:0%
remember if the value is at the blank we
 

02:05:33.400 --> 02:05:36.270 align:start position:0%
remember if the value is at the blank we
delete<02:05:33.820><c> that</c><02:05:34.030><c> property</c><02:05:34.539><c> so</c><02:05:35.169><c> if</c><02:05:35.439><c> the</c><02:05:35.829><c> value</c><02:05:36.130><c> is</c>

02:05:36.270 --> 02:05:36.280 align:start position:0%
delete that property so if the value is
 

02:05:36.280 --> 02:05:40.469 align:start position:0%
delete that property so if the value is
blank<02:05:36.699><c> we</c><02:05:37.510><c> are</c><02:05:37.659><c> going</c><02:05:37.989><c> to</c><02:05:38.199><c> delete</c><02:05:39.479><c> election</c>

02:05:40.469 --> 02:05:40.479 align:start position:0%
blank we are going to delete election
 

02:05:40.479 --> 02:05:44.429 align:start position:0%
blank we are going to delete election
and<02:05:40.719><c> then</c><02:05:41.619><c> we</c><02:05:41.769><c> have</c><02:05:41.889><c> to</c><02:05:42.010><c> use</c><02:05:42.099><c> bracket</c><02:05:42.550><c> n</c><02:05:43.119><c> ID</c><02:05:43.630><c> and</c>

02:05:44.429 --> 02:05:44.439 align:start position:0%
and then we have to use bracket n ID and
 

02:05:44.439 --> 02:05:50.129 align:start position:0%
and then we have to use bracket n ID and
then<02:05:45.719><c> try</c><02:05:46.719><c> the</c><02:05:47.159><c> collection</c><02:05:48.159><c> ID</c><02:05:48.489><c> crop</c><02:05:49.269><c> that's</c>

02:05:50.129 --> 02:05:50.139 align:start position:0%
then try the collection ID crop that's
 

02:05:50.139 --> 02:05:52.620 align:start position:0%
then try the collection ID crop that's
the<02:05:50.469><c> collection</c><02:05:50.919><c> here</c><02:05:51.189><c> if</c><02:05:51.340><c> we</c><02:05:51.699><c> pass</c><02:05:52.269><c> in</c><02:05:52.449><c> the</c><02:05:52.510><c> ID</c>

02:05:52.620 --> 02:05:52.630 align:start position:0%
the collection here if we pass in the ID
 

02:05:52.630 --> 02:05:55.350 align:start position:0%
the collection here if we pass in the ID
1248<02:05:53.559><c> it</c><02:05:53.709><c> will</c><02:05:53.800><c> go</c><02:05:53.919><c> to</c><02:05:53.979><c> there</c><02:05:54.219><c> the</c><02:05:54.669><c> property</c><02:05:55.269><c> if</c>

02:05:55.350 --> 02:05:55.360 align:start position:0%
1248 it will go to there the property if
 

02:05:55.360 --> 02:05:57.209 align:start position:0%
1248 it will go to there the property if
we<02:05:55.479><c> passed</c><02:05:55.749><c> an</c><02:05:55.959><c> album</c><02:05:56.439><c> for</c><02:05:56.619><c> the</c><02:05:56.679><c> property</c><02:05:57.130><c> will</c>

02:05:57.209 --> 02:05:57.219 align:start position:0%
we passed an album for the property will
 

02:05:57.219 --> 02:05:58.799 align:start position:0%
we passed an album for the property will
go<02:05:57.340><c> to</c><02:05:57.400><c> here</c><02:05:57.699><c> and</c><02:05:57.880><c> then</c><02:05:58.329><c> we'll</c><02:05:58.479><c> just</c><02:05:58.510><c> delete</c>

02:05:58.799 --> 02:05:58.809 align:start position:0%
go to here and then we'll just delete
 

02:05:58.809 --> 02:06:01.529 align:start position:0%
go to here and then we'll just delete
that<02:05:59.019><c> whole</c><02:05:59.439><c> thing</c><02:05:59.769><c> if</c><02:06:00.219><c> our</c><02:06:00.909><c> values</c><02:06:01.329><c> in</c><02:06:01.479><c> the</c>

02:06:01.529 --> 02:06:01.539 align:start position:0%
that whole thing if our values in the
 

02:06:01.539 --> 02:06:04.379 align:start position:0%
that whole thing if our values in the
empty<02:06:01.749><c> string</c><02:06:02.139><c> okay</c><02:06:03.099><c> the</c><02:06:03.249><c> next</c><02:06:03.459><c> condition</c><02:06:04.209><c> we</c>

02:06:04.379 --> 02:06:04.389 align:start position:0%
empty string okay the next condition we
 

02:06:04.389 --> 02:06:07.919 align:start position:0%
empty string okay the next condition we
have<02:06:04.570><c> to</c><02:06:04.599><c> look</c><02:06:04.959><c> for</c><02:06:05.289><c> is</c><02:06:05.559><c> if</c><02:06:06.429><c> the</c><02:06:07.329><c> property</c><02:06:07.900><c> is</c>

02:06:07.919 --> 02:06:07.929 align:start position:0%
have to look for is if the property is
 

02:06:07.929 --> 02:06:11.429 align:start position:0%
have to look for is if the property is
tracks<02:06:08.590><c> because</c><02:06:09.429><c> for</c><02:06:10.090><c> most</c><02:06:10.360><c> properties</c><02:06:10.719><c> we're</c>

02:06:11.429 --> 02:06:11.439 align:start position:0%
tracks because for most properties we're
 

02:06:11.439 --> 02:06:13.409 align:start position:0%
tracks because for most properties we're
just<02:06:11.650><c> going</c><02:06:11.800><c> to</c><02:06:11.860><c> override</c><02:06:12.489><c> that</c><02:06:12.849><c> property</c>

02:06:13.409 --> 02:06:13.419 align:start position:0%
just going to override that property
 

02:06:13.419 --> 02:06:14.839 align:start position:0%
just going to override that property
with<02:06:13.570><c> the</c><02:06:13.689><c> value</c><02:06:14.050><c> passed</c><02:06:14.289><c> into</c><02:06:14.559><c> the</c><02:06:14.739><c> function</c>

02:06:14.839 --> 02:06:14.849 align:start position:0%
with the value passed into the function
 

02:06:14.849 --> 02:06:18.179 align:start position:0%
with the value passed into the function
but<02:06:15.849><c> if</c><02:06:15.999><c> the</c><02:06:16.419><c> property</c><02:06:17.110><c> is</c><02:06:17.139><c> tracks</c><02:06:17.650><c> we</c><02:06:18.099><c> are</c>

02:06:18.179 --> 02:06:18.189 align:start position:0%
but if the property is tracks we are
 

02:06:18.189 --> 02:06:20.159 align:start position:0%
but if the property is tracks we are
going<02:06:18.400><c> to</c><02:06:18.489><c> push</c><02:06:18.909><c> on</c><02:06:19.150><c> to</c><02:06:19.419><c> the</c><02:06:19.510><c> end</c><02:06:19.659><c> of</c><02:06:19.809><c> the</c><02:06:19.900><c> array</c>

02:06:20.159 --> 02:06:20.169 align:start position:0%
going to push on to the end of the array
 

02:06:20.169 --> 02:06:25.699 align:start position:0%
going to push on to the end of the array
so<02:06:20.469><c> let's</c><02:06:21.429><c> do</c><02:06:21.550><c> an</c><02:06:21.639><c> else</c><02:06:21.849><c> if</c><02:06:22.059><c> else</c><02:06:22.599><c> if</c><02:06:23.939><c> prop</c>

02:06:25.699 --> 02:06:25.709 align:start position:0%
so let's do an else if else if prop
 

02:06:25.709 --> 02:06:32.489 align:start position:0%
so let's do an else if else if prop
equals<02:06:26.709><c> equals</c><02:06:27.070><c> equals</c><02:06:28.169><c> tracks</c><02:06:30.780><c> then</c><02:06:31.780><c> we</c><02:06:32.349><c> just</c>

02:06:32.489 --> 02:06:32.499 align:start position:0%
equals equals equals tracks then we just
 

02:06:32.499 --> 02:06:33.989 align:start position:0%
equals equals equals tracks then we just
have<02:06:32.590><c> to</c><02:06:32.709><c> push</c><02:06:32.979><c> on</c><02:06:33.159><c> to</c><02:06:33.340><c> the</c><02:06:33.429><c> end</c><02:06:33.550><c> of</c><02:06:33.669><c> the</c><02:06:33.789><c> array</c>

02:06:33.989 --> 02:06:33.999 align:start position:0%
have to push on to the end of the array
 

02:06:33.999 --> 02:06:38.399 align:start position:0%
have to push on to the end of the array
so<02:06:35.849><c> there's</c><02:06:36.849><c> also</c><02:06:37.179><c> another</c><02:06:37.479><c> condition</c><02:06:38.050><c> here</c>

02:06:38.399 --> 02:06:38.409 align:start position:0%
so there's also another condition here
 

02:06:38.409 --> 02:06:43.290 align:start position:0%
so there's also another condition here
which<02:06:38.530><c> is</c><02:06:38.979><c> if</c><02:06:39.419><c> the</c><02:06:40.419><c> tracks</c><02:06:41.110><c> property</c><02:06:42.070><c> is</c><02:06:42.300><c> empty</c>

02:06:43.290 --> 02:06:43.300 align:start position:0%
which is if the tracks property is empty
 

02:06:43.300 --> 02:06:46.620 align:start position:0%
which is if the tracks property is empty
if<02:06:43.769><c> the</c><02:06:44.769><c> tracks</c><02:06:45.130><c> property</c><02:06:45.789><c> is</c><02:06:45.880><c> empty</c><02:06:46.300><c> we</c><02:06:46.449><c> need</c>

02:06:46.620 --> 02:06:46.630 align:start position:0%
if the tracks property is empty we need
 

02:06:46.630 --> 02:06:48.779 align:start position:0%
if the tracks property is empty we need
to<02:06:46.780><c> create</c><02:06:47.110><c> it</c><02:06:47.349><c> here's</c><02:06:47.860><c> a</c><02:06:47.919><c> fancy</c><02:06:48.249><c> way</c><02:06:48.519><c> to</c><02:06:48.579><c> do</c>

02:06:48.779 --> 02:06:48.789 align:start position:0%
to create it here's a fancy way to do
 

02:06:48.789 --> 02:06:56.429 align:start position:0%
to create it here's a fancy way to do
that<02:06:49.030><c> collection</c><02:06:51.719><c> ID</c><02:06:54.030><c> props</c><02:06:55.030><c> so</c><02:06:56.019><c> if</c><02:06:56.139><c> prop</c>

02:06:56.429 --> 02:06:56.439 align:start position:0%
that collection ID props so if prop
 

02:06:56.439 --> 02:06:59.429 align:start position:0%
that collection ID props so if prop
equals<02:06:56.860><c> tracks</c><02:06:57.340><c> we</c><02:06:58.239><c> are</c><02:06:58.329><c> going</c><02:06:58.599><c> to</c><02:06:58.719><c> set</c><02:06:59.139><c> the</c>

02:06:59.429 --> 02:06:59.439 align:start position:0%
equals tracks we are going to set the
 

02:06:59.439 --> 02:07:01.669 align:start position:0%
equals tracks we are going to set the
tracks<02:06:59.829><c> because</c><02:07:00.309><c> we're</c><02:07:00.459><c> prop</c><02:07:00.880><c> is</c><02:07:01.119><c> going</c><02:07:01.419><c> to</c>

02:07:01.669 --> 02:07:01.679 align:start position:0%
tracks because we're prop is going to
 

02:07:01.679 --> 02:07:03.899 align:start position:0%
tracks because we're prop is going to
equal<02:07:02.679><c> track</c><02:07:03.189><c> we're</c><02:07:03.400><c> going</c><02:07:03.519><c> to</c><02:07:03.579><c> set</c><02:07:03.729><c> the</c>

02:07:03.899 --> 02:07:03.909 align:start position:0%
equal track we're going to set the
 

02:07:03.909 --> 02:07:06.929 align:start position:0%
equal track we're going to set the
tracks<02:07:04.360><c> to</c><02:07:04.869><c> equal</c><02:07:05.650><c> it's</c><02:07:06.459><c> going</c><02:07:06.699><c> to</c><02:07:06.760><c> either</c>

02:07:06.929 --> 02:07:06.939 align:start position:0%
tracks to equal it's going to either
 

02:07:06.939 --> 02:07:10.770 align:start position:0%
tracks to equal it's going to either
equal<02:07:07.419><c> itself</c><02:07:07.989><c> if</c><02:07:08.349><c> it</c><02:07:09.010><c> exists</c><02:07:09.699><c> or</c><02:07:09.969><c> if</c><02:07:10.659><c> it</c>

02:07:10.770 --> 02:07:10.780 align:start position:0%
equal itself if it exists or if it
 

02:07:10.780 --> 02:07:12.600 align:start position:0%
equal itself if it exists or if it
doesn't<02:07:11.139><c> exist</c><02:07:11.229><c> we're</c><02:07:11.739><c> going</c><02:07:11.979><c> to</c><02:07:12.099><c> create</c><02:07:12.429><c> it</c>

02:07:12.600 --> 02:07:12.610 align:start position:0%
doesn't exist we're going to create it
 

02:07:12.610 --> 02:07:19.620 align:start position:0%
doesn't exist we're going to create it
I'll<02:07:12.760><c> show</c><02:07:13.059><c> you</c><02:07:13.119><c> how</c><02:07:13.769><c> collection</c><02:07:16.019><c> ID</c><02:07:17.909><c> huh</c><02:07:18.909><c> it's</c>

02:07:19.620 --> 02:07:19.630 align:start position:0%
I'll show you how collection ID huh it's
 

02:07:19.630 --> 02:07:23.370 align:start position:0%
I'll show you how collection ID huh it's
gonna<02:07:19.719><c> equal</c><02:07:20.380><c> itself</c><02:07:20.800><c> or</c><02:07:21.989><c> that's</c><02:07:22.989><c> the</c><02:07:23.199><c> or</c>

02:07:23.370 --> 02:07:23.380 align:start position:0%
gonna equal itself or that's the or
 

02:07:23.380 --> 02:07:26.459 align:start position:0%
gonna equal itself or that's the or
operator<02:07:23.979><c> it's</c><02:07:24.459><c> going</c><02:07:24.760><c> to</c><02:07:24.849><c> equal</c><02:07:25.030><c> an</c><02:07:25.510><c> empty</c>

02:07:26.459 --> 02:07:26.469 align:start position:0%
operator it's going to equal an empty
 

02:07:26.469 --> 02:07:30.479 align:start position:0%
operator it's going to equal an empty
array<02:07:26.559><c> so</c><02:07:27.489><c> if</c><02:07:28.269><c> this</c><02:07:28.929><c> already</c><02:07:29.439><c> exists</c><02:07:30.070><c> we're</c>

02:07:30.479 --> 02:07:30.489 align:start position:0%
array so if this already exists we're
 

02:07:30.489 --> 02:07:34.259 align:start position:0%
array so if this already exists we're
gonna<02:07:30.610><c> set</c><02:07:30.909><c> to</c><02:07:31.059><c> equal</c><02:07:31.239><c> itself</c><02:07:32.459><c> but</c><02:07:33.459><c> if</c><02:07:33.669><c> itself</c>

02:07:34.259 --> 02:07:34.269 align:start position:0%
gonna set to equal itself but if itself
 

02:07:34.269 --> 02:07:35.890 align:start position:0%
gonna set to equal itself but if itself
doesn't<02:07:34.809><c> exist</c>

02:07:35.890 --> 02:07:35.900 align:start position:0%
doesn't exist
 

02:07:35.900 --> 02:07:38.080 align:start position:0%
doesn't exist
we'll<02:07:35.989><c> just</c><02:07:36.230><c> set</c><02:07:36.620><c> it</c><02:07:36.739><c> to</c><02:07:36.770><c> equal</c><02:07:36.920><c> and</c><02:07:37.550><c> empty</c>

02:07:38.080 --> 02:07:38.090 align:start position:0%
we'll just set it to equal and empty
 

02:07:38.090 --> 02:07:40.750 align:start position:0%
we'll just set it to equal and empty
array<02:07:38.390><c> so</c><02:07:39.140><c> that's</c><02:07:39.350><c> just</c><02:07:39.560><c> a</c><02:07:39.800><c> way</c><02:07:39.890><c> to</c><02:07:40.159><c> create</c>

02:07:40.750 --> 02:07:40.760 align:start position:0%
array so that's just a way to create
 

02:07:40.760 --> 02:07:42.850 align:start position:0%
array so that's just a way to create
that<02:07:41.090><c> property</c><02:07:42.020><c> if</c><02:07:42.230><c> it</c><02:07:42.440><c> doesn't</c><02:07:42.739><c> already</c>

02:07:42.850 --> 02:07:42.860 align:start position:0%
that property if it doesn't already
 

02:07:42.860 --> 02:07:45.850 align:start position:0%
that property if it doesn't already
exist<02:07:43.010><c> so</c><02:07:43.969><c> now</c><02:07:44.150><c> that</c><02:07:44.210><c> we</c><02:07:44.480><c> know</c><02:07:44.510><c> it</c><02:07:44.900><c> exists</c><02:07:45.469><c> we</c>

02:07:45.850 --> 02:07:45.860 align:start position:0%
exist so now that we know it exists we
 

02:07:45.860 --> 02:07:48.070 align:start position:0%
exist so now that we know it exists we
can<02:07:46.100><c> just</c><02:07:46.400><c> push</c><02:07:47.090><c> the</c><02:07:47.300><c> value</c><02:07:47.510><c> to</c><02:07:47.750><c> the</c><02:07:47.840><c> end</c><02:07:47.989><c> of</c>

02:07:48.070 --> 02:07:48.080 align:start position:0%
can just push the value to the end of
 

02:07:48.080 --> 02:07:48.669 align:start position:0%
can just push the value to the end of
the<02:07:48.140><c> array</c>

02:07:48.669 --> 02:07:48.679 align:start position:0%
the array
 

02:07:48.679 --> 02:07:56.860 align:start position:0%
the array
collection<02:07:50.620><c> ID</c><02:07:53.110><c> prop</c><02:07:54.110><c> and</c><02:07:55.300><c> we'll</c><02:07:56.300><c> just</c><02:07:56.480><c> do</c><02:07:56.690><c> the</c>

02:07:56.860 --> 02:07:56.870 align:start position:0%
collection ID prop and we'll just do the
 

02:07:56.870 --> 02:08:01.360 align:start position:0%
collection ID prop and we'll just do the
dot<02:07:57.170><c> push</c><02:07:57.679><c> and</c><02:07:58.929><c> then</c><02:07:59.929><c> put</c><02:08:00.500><c> in</c><02:08:00.650><c> the</c><02:08:00.920><c> parentheses</c>

02:08:01.360 --> 02:08:01.370 align:start position:0%
dot push and then put in the parentheses
 

02:08:01.370 --> 02:08:04.540 align:start position:0%
dot push and then put in the parentheses
the<02:08:01.610><c> value</c><02:08:02.060><c> so</c><02:08:02.960><c> we're</c><02:08:03.530><c> able</c><02:08:03.650><c> to</c><02:08:03.920><c> push</c><02:08:04.340><c> the</c>

02:08:04.540 --> 02:08:04.550 align:start position:0%
the value so we're able to push the
 

02:08:04.550 --> 02:08:06.640 align:start position:0%
the value so we're able to push the
value<02:08:04.969><c> that</c><02:08:05.120><c> was</c><02:08:05.270><c> passed</c><02:08:05.300><c> into</c><02:08:05.989><c> this</c><02:08:06.110><c> function</c>

02:08:06.640 --> 02:08:06.650 align:start position:0%
value that was passed into this function
 

02:08:06.650 --> 02:08:09.729 align:start position:0%
value that was passed into this function
onto<02:08:06.860><c> the</c><02:08:07.550><c> end</c><02:08:07.790><c> of</c><02:08:07.940><c> the</c><02:08:08.000><c> array</c><02:08:08.560><c> okay</c><02:08:09.560><c> there's</c>

02:08:09.729 --> 02:08:09.739 align:start position:0%
onto the end of the array okay there's
 

02:08:09.739 --> 02:08:13.330 align:start position:0%
onto the end of the array okay there's
only<02:08:09.800><c> one</c><02:08:10.159><c> last</c><02:08:10.429><c> condition</c><02:08:10.730><c> which</c><02:08:11.719><c> is</c><02:08:12.340><c> the</c>

02:08:13.330 --> 02:08:13.340 align:start position:0%
only one last condition which is the
 

02:08:13.340 --> 02:08:16.979 align:start position:0%
only one last condition which is the
just<02:08:13.610><c> kind</c><02:08:14.179><c> of</c><02:08:14.239><c> the</c><02:08:14.300><c> default</c><02:08:14.480><c> condition</c><02:08:14.900><c> else</c>

02:08:16.979 --> 02:08:16.989 align:start position:0%
just kind of the default condition else
 

02:08:16.989 --> 02:08:20.770 align:start position:0%
just kind of the default condition else
so<02:08:17.989><c> if</c><02:08:18.500><c> the</c><02:08:18.739><c> values</c><02:08:19.100><c> in</c><02:08:19.280><c> blank</c><02:08:19.610><c> and</c><02:08:19.880><c> the</c>

02:08:20.770 --> 02:08:20.780 align:start position:0%
so if the values in blank and the
 

02:08:20.780 --> 02:08:24.550 align:start position:0%
so if the values in blank and the
property<02:08:21.350><c> isn't</c><02:08:21.530><c> tracks</c><02:08:22.270><c> then</c><02:08:23.270><c> we</c><02:08:23.929><c> just</c><02:08:24.199><c> push</c>

02:08:24.550 --> 02:08:24.560 align:start position:0%
property isn't tracks then we just push
 

02:08:24.560 --> 02:08:28.300 align:start position:0%
property isn't tracks then we just push
the<02:08:24.770><c> value</c><02:08:24.980><c> onto</c><02:08:25.340><c> the</c><02:08:25.550><c> property</c><02:08:26.140><c> then</c><02:08:27.140><c> we</c><02:08:27.469><c> just</c>

02:08:28.300 --> 02:08:28.310 align:start position:0%
the value onto the property then we just
 

02:08:28.310 --> 02:08:31.630 align:start position:0%
the value onto the property then we just
set<02:08:28.820><c> the</c><02:08:29.000><c> property</c><02:08:29.540><c> to</c><02:08:29.929><c> equal</c><02:08:30.380><c> the</c><02:08:30.620><c> value</c><02:08:30.770><c> just</c>

02:08:31.630 --> 02:08:31.640 align:start position:0%
set the property to equal the value just
 

02:08:31.640 --> 02:08:39.399 align:start position:0%
set the property to equal the value just
like<02:08:31.730><c> this</c><02:08:32.030><c> collection</c><02:08:33.610><c> ID</c><02:08:36.250><c> prop</c><02:08:38.409><c> equals</c>

02:08:39.399 --> 02:08:39.409 align:start position:0%
like this collection ID prop equals
 

02:08:39.409 --> 02:08:45.580 align:start position:0%
like this collection ID prop equals
value<02:08:41.620><c> okay</c><02:08:42.650><c> let's</c><02:08:43.460><c> test</c><02:08:44.239><c> this</c><02:08:44.510><c> out</c><02:08:44.750><c> so</c><02:08:45.440><c> we</c>

02:08:45.580 --> 02:08:45.590 align:start position:0%
value okay let's test this out so we
 

02:08:45.590 --> 02:08:47.620 align:start position:0%
value okay let's test this out so we
already<02:08:45.860><c> have</c><02:08:45.980><c> this</c><02:08:46.100><c> example</c><02:08:46.489><c> down</c><02:08:46.820><c> here</c><02:08:46.880><c> but</c>

02:08:47.620 --> 02:08:47.630 align:start position:0%
already have this example down here but
 

02:08:47.630 --> 02:08:49.630 align:start position:0%
already have this example down here but
to<02:08:47.780><c> see</c><02:08:48.020><c> if</c><02:08:48.170><c> it</c><02:08:48.320><c> actually</c><02:08:48.350><c> worked</c><02:08:49.100><c> we're</c><02:08:49.400><c> going</c>

02:08:49.630 --> 02:08:49.640 align:start position:0%
to see if it actually worked we're going
 

02:08:49.640 --> 02:08:53.500 align:start position:0%
to see if it actually worked we're going
to<02:08:49.730><c> do</c><02:08:49.850><c> a</c><02:08:50.020><c> consult</c><02:08:51.020><c> log</c><02:08:51.860><c> so</c><02:08:52.670><c> we</c><02:08:52.699><c> can</c><02:08:52.940><c> see</c><02:08:53.210><c> the</c>

02:08:53.500 --> 02:08:53.510 align:start position:0%
to do a consult log so we can see the
 

02:08:53.510 --> 02:08:58.390 align:start position:0%
to do a consult log so we can see the
output<02:08:53.780><c> there</c><02:08:54.320><c> and</c><02:08:54.530><c> if</c><02:08:55.280><c> I</c><02:08:55.429><c> run</c><02:08:55.820><c> that</c><02:08:57.280><c> I'll</c><02:08:58.280><c> let</c>

02:08:58.390 --> 02:08:58.400 align:start position:0%
output there and if I run that I'll let
 

02:08:58.400 --> 02:08:59.950 align:start position:0%
output there and if I run that I'll let
me<02:08:58.550><c> open</c><02:08:58.760><c> up</c><02:08:58.940><c> the</c><02:08:59.060><c> console</c><02:08:59.449><c> so</c><02:08:59.540><c> I</c><02:08:59.570><c> can</c><02:08:59.750><c> really</c>

02:08:59.950 --> 02:08:59.960 align:start position:0%
me open up the console so I can really
 

02:08:59.960 --> 02:09:03.100 align:start position:0%
me open up the console so I can really
see<02:09:00.199><c> it</c><02:09:00.290><c> so</c><02:09:00.500><c> let's</c><02:09:01.159><c> see</c><02:09:01.850><c> what</c><02:09:01.969><c> we</c><02:09:02.090><c> changed</c><02:09:02.600><c> go</c>

02:09:03.100 --> 02:09:03.110 align:start position:0%
see it so let's see what we changed go
 

02:09:03.110 --> 02:09:06.939 align:start position:0%
see it so let's see what we changed go
to<02:09:03.170><c> 5</c><02:09:03.409><c> 4</c><02:09:03.620><c> 3</c><02:09:03.770><c> 9</c><02:09:04.010><c> and</c><02:09:04.540><c> we</c><02:09:05.540><c> set</c><02:09:05.840><c> the</c><02:09:06.050><c> artist</c><02:09:06.590><c> which</c>

02:09:06.939 --> 02:09:06.949 align:start position:0%
to 5 4 3 9 and we set the artist which
 

02:09:06.949 --> 02:09:09.010 align:start position:0%
to 5 4 3 9 and we set the artist which
didn't<02:09:07.340><c> previously</c><02:09:07.670><c> exist</c><02:09:07.909><c> to</c><02:09:08.540><c> ABBA</c>

02:09:09.010 --> 02:09:09.020 align:start position:0%
didn't previously exist to ABBA
 

02:09:09.020 --> 02:09:12.459 align:start position:0%
didn't previously exist to ABBA
so<02:09:09.590><c> let's</c><02:09:10.010><c> look</c><02:09:10.400><c> down</c><02:09:10.550><c> here</c><02:09:10.880><c> in</c><02:09:11.030><c> the</c><02:09:11.630><c> console</c><02:09:12.170><c> 5</c>

02:09:12.459 --> 02:09:12.469 align:start position:0%
so let's look down here in the console 5
 

02:09:12.469 --> 02:09:15.300 align:start position:0%
so let's look down here in the console 5
4<02:09:12.770><c> 3</c><02:09:12.800><c> 9</c><02:09:13.159><c> and</c><02:09:13.550><c> the</c><02:09:14.120><c> artist</c><02:09:14.480><c> is</c><02:09:14.600><c> ABBA</c>

02:09:15.300 --> 02:09:15.310 align:start position:0%
4 3 9 and the artist is ABBA
 

02:09:15.310 --> 02:09:18.370 align:start position:0%
4 3 9 and the artist is ABBA
let's<02:09:16.310><c> see</c><02:09:16.489><c> what</c><02:09:16.640><c> happens</c><02:09:17.090><c> when</c><02:09:17.390><c> we</c><02:09:17.659><c> add</c><02:09:17.929><c> a</c>

02:09:18.370 --> 02:09:18.380 align:start position:0%
let's see what happens when we add a
 

02:09:18.380 --> 02:09:21.490 align:start position:0%
let's see what happens when we add a
track<02:09:19.040><c> so</c><02:09:19.790><c> we'll</c><02:09:19.969><c> do</c><02:09:20.120><c> one</c><02:09:20.150><c> more</c><02:09:20.390><c> example</c><02:09:20.600><c> here</c>

02:09:21.490 --> 02:09:21.500 align:start position:0%
track so we'll do one more example here
 

02:09:21.500 --> 02:09:25.870 align:start position:0%
track so we'll do one more example here
I'll<02:09:22.190><c> just</c><02:09:22.429><c> put</c><02:09:22.730><c> right</c><02:09:22.909><c> above</c><02:09:23.179><c> here</c><02:09:24.130><c> 8</c><02:09:25.130><c> records</c>

02:09:25.870 --> 02:09:25.880 align:start position:0%
I'll just put right above here 8 records
 

02:09:25.880 --> 02:09:30.040 align:start position:0%
I'll just put right above here 8 records
and<02:09:26.420><c> I'm</c><02:09:27.020><c> going</c><02:09:27.290><c> to</c><02:09:27.350><c> pass</c><02:09:27.800><c> in</c><02:09:28.130><c> something</c><02:09:29.050><c> I'll</c>

02:09:30.040 --> 02:09:30.050 align:start position:0%
and I'm going to pass in something I'll
 

02:09:30.050 --> 02:09:37.950 align:start position:0%
and I'm going to pass in something I'll
pass<02:09:30.500><c> in</c><02:09:31.570><c> let's</c><02:09:32.570><c> see</c><02:09:32.810><c> the</c><02:09:33.230><c> ID</c><02:09:33.500><c> 2</c><02:09:34.370><c> 4</c><02:09:34.670><c> 6</c><02:09:34.850><c> 8</c><02:09:35.469><c> and</c>

02:09:37.950 --> 02:09:37.960 align:start position:0%
pass in let's see the ID 2 4 6 8 and
 

02:09:37.960 --> 02:09:42.340 align:start position:0%
pass in let's see the ID 2 4 6 8 and
we'll<02:09:38.960><c> pass</c><02:09:39.290><c> in</c><02:09:39.679><c> the</c><02:09:40.610><c> key</c><02:09:41.120><c> which</c><02:09:41.900><c> is</c><02:09:42.050><c> going</c><02:09:42.290><c> to</c>

02:09:42.340 --> 02:09:42.350 align:start position:0%
we'll pass in the key which is going to
 

02:09:42.350 --> 02:09:47.740 align:start position:0%
we'll pass in the key which is going to
be<02:09:42.469><c> tracks</c><02:09:43.370><c> and</c><02:09:44.260><c> then</c><02:09:45.280><c> for</c><02:09:46.280><c> the</c><02:09:46.969><c> value</c>

02:09:47.740 --> 02:09:47.750 align:start position:0%
be tracks and then for the value
 

02:09:47.750 --> 02:09:49.629 align:start position:0%
be tracks and then for the value
we'll<02:09:48.199><c> put</c><02:09:48.469><c> test</c>

02:09:49.629 --> 02:09:49.639 align:start position:0%
we'll put test
 

02:09:49.639 --> 02:09:53.770 align:start position:0%
we'll put test
so<02:09:50.619><c> let's</c><02:09:51.619><c> see</c><02:09:51.860><c> what</c><02:09:52.040><c> happens</c><02:09:52.489><c> here</c><02:09:52.790><c> if</c><02:09:53.090><c> we</c><02:09:53.510><c> run</c>

02:09:53.770 --> 02:09:53.780 align:start position:0%
so let's see what happens here if we run
 

02:09:53.780 --> 02:09:55.660 align:start position:0%
so let's see what happens here if we run
that<02:09:53.989><c> it's</c><02:09:54.440><c> gonna</c><02:09:54.619><c> update</c><02:09:54.800><c> the</c><02:09:54.980><c> record</c><02:09:55.369><c> here</c>

02:09:55.660 --> 02:09:55.670 align:start position:0%
that it's gonna update the record here
 

02:09:55.670 --> 02:09:57.399 align:start position:0%
that it's gonna update the record here
and<02:09:55.820><c> that's</c><02:09:56.270><c> gonna</c><02:09:56.389><c> update</c><02:09:56.570><c> the</c><02:09:56.690><c> record</c><02:09:57.020><c> again</c>

02:09:57.399 --> 02:09:57.409 align:start position:0%
and that's gonna update the record again
 

02:09:57.409 --> 02:09:59.379 align:start position:0%
and that's gonna update the record again
but<02:09:58.040><c> we</c><02:09:58.190><c> don't</c><02:09:58.340><c> care</c><02:09:58.550><c> about</c><02:09:58.580><c> that</c><02:09:58.880><c> one</c><02:09:59.119><c> we</c><02:09:59.239><c> may</c>

02:09:59.379 --> 02:09:59.389 align:start position:0%
but we don't care about that one we may
 

02:09:59.389 --> 02:10:00.669 align:start position:0%
but we don't care about that one we may
like<02:09:59.570><c> hear</c><02:09:59.780><c> that</c><02:09:59.869><c> it's</c><02:09:59.960><c> gonna</c><02:10:00.050><c> console</c><02:10:00.560><c> that</c>

02:10:00.669 --> 02:10:00.679 align:start position:0%
like hear that it's gonna console that
 

02:10:00.679 --> 02:10:04.270 align:start position:0%
like hear that it's gonna console that
log<02:10:00.980><c> what</c><02:10:01.369><c> the</c><02:10:01.699><c> final</c><02:10:02.179><c> value</c><02:10:02.510><c> is</c><02:10:02.540><c> so</c><02:10:03.380><c> if</c><02:10:03.710><c> we</c>

02:10:04.270 --> 02:10:04.280 align:start position:0%
log what the final value is so if we
 

02:10:04.280 --> 02:10:07.600 align:start position:0%
log what the final value is so if we
look<02:10:04.550><c> at</c><02:10:04.730><c> 2</c><02:10:05.000><c> 4</c><02:10:05.239><c> 6</c><02:10:05.449><c> 8</c><02:10:05.690><c> here</c><02:10:06.080><c> 2</c><02:10:06.590><c> 4</c><02:10:06.619><c> 6</c><02:10:06.949><c> 8</c><02:10:07.190><c> let's</c><02:10:07.369><c> see</c>

02:10:07.600 --> 02:10:07.610 align:start position:0%
look at 2 4 6 8 here 2 4 6 8 let's see
 

02:10:07.610 --> 02:10:10.060 align:start position:0%
look at 2 4 6 8 here 2 4 6 8 let's see
the<02:10:07.730><c> tracks</c><02:10:07.969><c> we</c><02:10:08.210><c> at</c><02:10:08.360><c> 1999</c><02:10:09.050><c> little</c><02:10:09.889><c> red</c>

02:10:10.060 --> 02:10:10.070 align:start position:0%
the tracks we at 1999 little red
 

02:10:10.070 --> 02:10:18.920 align:start position:0%
the tracks we at 1999 little red
Corvette<02:10:10.610><c> and</c><02:10:11.060><c> test</c><02:10:11.719><c> so</c><02:10:12.619><c> it's</c><02:10:13.100><c> working</c><02:10:13.429><c> great</c>

02:10:18.920 --> 02:10:18.930 align:start position:0%
 
 

02:10:18.930 --> 02:10:21.930 align:start position:0%
 
loop's<02:10:19.930><c> allow</c><02:10:20.500><c> you</c><02:10:20.560><c> to</c><02:10:20.980><c> run</c><02:10:21.220><c> the</c><02:10:21.430><c> same</c><02:10:21.640><c> code</c>

02:10:21.930 --> 02:10:21.940 align:start position:0%
loop's allow you to run the same code
 

02:10:21.940 --> 02:10:24.150 align:start position:0%
loop's allow you to run the same code
multiple<02:10:22.510><c> times</c><02:10:22.810><c> I'm</c><02:10:23.350><c> going</c><02:10:23.800><c> to</c><02:10:23.860><c> talk</c><02:10:23.980><c> to</c><02:10:24.100><c> you</c>

02:10:24.150 --> 02:10:24.160 align:start position:0%
multiple times I'm going to talk to you
 

02:10:24.160 --> 02:10:26.730 align:start position:0%
multiple times I'm going to talk to you
about<02:10:24.250><c> a</c><02:10:24.340><c> while</c><02:10:24.670><c> loop</c><02:10:25.120><c> that</c><02:10:25.630><c> runs</c><02:10:25.660><c> while</c><02:10:26.380><c> a</c>

02:10:26.730 --> 02:10:26.740 align:start position:0%
about a while loop that runs while a
 

02:10:26.740 --> 02:10:29.010 align:start position:0%
about a while loop that runs while a
specified<02:10:27.340><c> condition</c><02:10:27.550><c> is</c><02:10:27.880><c> true</c><02:10:28.210><c> and</c><02:10:28.420><c> stops</c>

02:10:29.010 --> 02:10:29.020 align:start position:0%
specified condition is true and stops
 

02:10:29.020 --> 02:10:31.980 align:start position:0%
specified condition is true and stops
once<02:10:29.380><c> it's</c><02:10:29.560><c> no</c><02:10:29.740><c> longer</c><02:10:29.770><c> true</c><02:10:30.100><c> so</c><02:10:31.030><c> we</c><02:10:31.660><c> are</c><02:10:31.780><c> going</c>

02:10:31.980 --> 02:10:31.990 align:start position:0%
once it's no longer true so we are going
 

02:10:31.990 --> 02:10:34.650 align:start position:0%
once it's no longer true so we are going
to<02:10:32.110><c> push</c><02:10:32.590><c> the</c><02:10:32.800><c> digit</c><02:10:33.100><c> 0</c><02:10:33.370><c> through</c><02:10:33.640><c> 4</c><02:10:33.910><c> on</c><02:10:34.180><c> to</c><02:10:34.480><c> this</c>

02:10:34.650 --> 02:10:34.660 align:start position:0%
to push the digit 0 through 4 on to this
 

02:10:34.660 --> 02:10:36.390 align:start position:0%
to push the digit 0 through 4 on to this
array<02:10:35.080><c> here's</c><02:10:35.950><c> how</c><02:10:36.100><c> it's</c><02:10:36.190><c> going</c><02:10:36.280><c> to</c><02:10:36.340><c> work</c>

02:10:36.390 --> 02:10:36.400 align:start position:0%
array here's how it's going to work
 

02:10:36.400 --> 02:10:41.610 align:start position:0%
array here's how it's going to work
while<02:10:37.410><c> it's</c><02:10:38.410><c> a</c><02:10:38.620><c> while</c><02:10:38.830><c> loop</c><02:10:39.100><c> while</c><02:10:39.760><c> I</c><02:10:40.180><c> is</c><02:10:41.110><c> less</c>

02:10:41.610 --> 02:10:41.620 align:start position:0%
while it's a while loop while I is less
 

02:10:41.620 --> 02:10:44.910 align:start position:0%
while it's a while loop while I is less
than<02:10:42.280><c> 5</c><02:10:43.060><c> and</c><02:10:43.540><c> we're</c><02:10:44.080><c> gonna</c><02:10:44.170><c> do</c><02:10:44.440><c> something</c>

02:10:44.910 --> 02:10:44.920 align:start position:0%
than 5 and we're gonna do something
 

02:10:44.920 --> 02:10:48.030 align:start position:0%
than 5 and we're gonna do something
while<02:10:45.460><c> that's</c><02:10:45.790><c> true</c><02:10:46.260><c> first</c><02:10:47.260><c> with</c><02:10:47.470><c> a</c><02:10:47.500><c> set</c><02:10:47.890><c> where</c>

02:10:48.030 --> 02:10:48.040 align:start position:0%
while that's true first with a set where
 

02:10:48.040 --> 02:10:53.430 align:start position:0%
while that's true first with a set where
I<02:10:48.070><c> I</c><02:10:48.400><c> starts</c><02:10:49.090><c> off</c><02:10:49.270><c> at</c><02:10:49.480><c> at</c><02:10:49.750><c> so</c><02:10:50.380><c> var</c><02:10:50.920><c> I</c><02:10:51.510><c> equals</c><02:10:52.510><c> 0</c>

02:10:53.430 --> 02:10:53.440 align:start position:0%
I I starts off at at so var I equals 0
 

02:10:53.440 --> 02:10:58.310 align:start position:0%
I I starts off at at so var I equals 0
so<02:10:54.130><c> while</c><02:10:54.460><c> I</c><02:10:54.790><c> is</c><02:10:54.910><c> less</c><02:10:55.240><c> m</c><02:10:55.810><c> 5</c><02:10:56.200><c> will</c><02:10:56.920><c> do</c><02:10:57.100><c> my</c><02:10:57.430><c> array</c>

02:10:58.310 --> 02:10:58.320 align:start position:0%
so while I is less m 5 will do my array
 

02:10:58.320 --> 02:11:02.780 align:start position:0%
so while I is less m 5 will do my array
push<02:10:59.520><c> hi</c><02:11:00.570><c> just</c><02:11:01.570><c> push</c><02:11:01.810><c> it</c><02:11:01.840><c> onto</c><02:11:02.050><c> the</c><02:11:02.170><c> array</c><02:11:02.440><c> and</c>

02:11:02.780 --> 02:11:02.790 align:start position:0%
push hi just push it onto the array and
 

02:11:02.790 --> 02:11:06.000 align:start position:0%
push hi just push it onto the array and
to<02:11:03.790><c> make</c><02:11:04.000><c> sure</c><02:11:04.030><c> this</c><02:11:04.480><c> loop</c><02:11:04.870><c> eventually</c><02:11:05.440><c> ends</c>

02:11:06.000 --> 02:11:06.010 align:start position:0%
to make sure this loop eventually ends
 

02:11:06.010 --> 02:11:08.490 align:start position:0%
to make sure this loop eventually ends
I'll<02:11:06.370><c> have</c><02:11:06.520><c> to</c><02:11:06.610><c> do</c><02:11:06.700><c> I</c><02:11:06.940><c> plus</c><02:11:07.840><c> plus</c><02:11:08.200><c> which</c>

02:11:08.490 --> 02:11:08.500 align:start position:0%
I'll have to do I plus plus which
 

02:11:08.500 --> 02:11:13.170 align:start position:0%
I'll have to do I plus plus which
increments<02:11:08.950><c> I</c><02:11:09.540><c> so</c><02:11:10.800><c> then</c><02:11:11.800><c> I</c><02:11:12.100><c> will</c><02:11:12.640><c> test</c><02:11:13.030><c> this</c>

02:11:13.170 --> 02:11:13.180 align:start position:0%
increments I so then I will test this
 

02:11:13.180 --> 02:11:16.410 align:start position:0%
increments I so then I will test this
out<02:11:13.390><c> by</c><02:11:13.750><c> doing</c><02:11:13.960><c> console</c><02:11:14.710><c> dot</c><02:11:14.950><c> log</c><02:11:15.010><c> and</c><02:11:15.940><c> I'm</c>

02:11:16.410 --> 02:11:16.420 align:start position:0%
out by doing console dot log and I'm
 

02:11:16.420 --> 02:11:19.050 align:start position:0%
out by doing console dot log and I'm
gonna<02:11:16.510><c> console</c><02:11:16.840><c> that</c><02:11:16.930><c> log</c><02:11:17.170><c> to</c><02:11:17.410><c> my</c><02:11:17.650><c> array</c><02:11:18.160><c> so</c>

02:11:19.050 --> 02:11:19.060 align:start position:0%
gonna console that log to my array so
 

02:11:19.060 --> 02:11:21.570 align:start position:0%
gonna console that log to my array so
let's<02:11:19.210><c> see</c><02:11:19.390><c> if</c><02:11:19.450><c> this</c><02:11:19.630><c> works</c><02:11:19.960><c> I'll</c><02:11:20.350><c> run</c><02:11:21.340><c> this</c>

02:11:21.570 --> 02:11:21.580 align:start position:0%
let's see if this works I'll run this
 

02:11:21.580 --> 02:11:24.990 align:start position:0%
let's see if this works I'll run this
and<02:11:21.850><c> check</c><02:11:22.420><c> the</c><02:11:22.570><c> console</c><02:11:22.990><c> 0</c><02:11:23.410><c> 1</c><02:11:23.680><c> 2</c><02:11:23.860><c> 3</c><02:11:23.890><c> 4</c><02:11:24.490><c> the</c>

02:11:24.990 --> 02:11:25.000 align:start position:0%
and check the console 0 1 2 3 4 the
 

02:11:25.000 --> 02:11:27.870 align:start position:0%
and check the console 0 1 2 3 4 the
while<02:11:25.240><c> loop</c><02:11:25.480><c> worked</c><02:11:26.400><c> every</c><02:11:27.400><c> time</c><02:11:27.430><c> we</c><02:11:27.760><c> went</c>

02:11:27.870 --> 02:11:27.880 align:start position:0%
while loop worked every time we went
 

02:11:27.880 --> 02:11:30.210 align:start position:0%
while loop worked every time we went
through<02:11:27.970><c> this</c><02:11:28.150><c> five</c><02:11:28.900><c> different</c><02:11:29.350><c> times</c><02:11:29.860><c> and</c>

02:11:30.210 --> 02:11:30.220 align:start position:0%
through this five different times and
 

02:11:30.220 --> 02:11:38.250 align:start position:0%
through this five different times and
pushed<02:11:30.700><c> 0</c><02:11:31.000><c> 1</c><02:11:31.270><c> 2</c><02:11:31.450><c> 3</c><02:11:31.480><c> &amp;</c><02:11:32.050><c> 4</c><02:11:32.310><c> onto</c><02:11:33.310><c> the</c><02:11:33.400><c> loop</c>

02:11:38.250 --> 02:11:38.260 align:start position:0%
 
 

02:11:38.260 --> 02:11:40.950 align:start position:0%
 
a<02:11:38.579><c> for-loop</c><02:11:39.579><c> is</c><02:11:39.789><c> the</c><02:11:39.969><c> most</c><02:11:40.179><c> common</c><02:11:40.659><c> type</c><02:11:40.929><c> of</c>

02:11:40.950 --> 02:11:40.960 align:start position:0%
a for-loop is the most common type of
 

02:11:40.960 --> 02:11:44.069 align:start position:0%
a for-loop is the most common type of
loop<02:11:41.440><c> in</c><02:11:41.679><c> JavaScript</c><02:11:42.489><c> so</c><02:11:43.000><c> here</c><02:11:43.389><c> is</c><02:11:43.570><c> an</c><02:11:43.690><c> example</c>

02:11:44.069 --> 02:11:44.079 align:start position:0%
loop in JavaScript so here is an example
 

02:11:44.079 --> 02:11:46.319 align:start position:0%
loop in JavaScript so here is an example
of<02:11:44.380><c> a</c><02:11:44.530><c> for</c><02:11:44.769><c> loop</c><02:11:44.829><c> you</c><02:11:45.550><c> start</c><02:11:45.820><c> with</c><02:11:45.940><c> the</c><02:11:46.059><c> keyword</c>

02:11:46.319 --> 02:11:46.329 align:start position:0%
of a for loop you start with the keyword
 

02:11:46.329 --> 02:11:48.270 align:start position:0%
of a for loop you start with the keyword
for<02:11:46.840><c> and</c><02:11:47.139><c> then</c><02:11:47.619><c> we</c><02:11:47.739><c> have</c><02:11:47.829><c> these</c><02:11:47.980><c> parentheses</c>

02:11:48.270 --> 02:11:48.280 align:start position:0%
for and then we have these parentheses
 

02:11:48.280 --> 02:11:50.819 align:start position:0%
for and then we have these parentheses
with<02:11:49.210><c> three</c><02:11:49.599><c> different</c><02:11:50.139><c> items</c><02:11:50.320><c> and</c><02:11:50.710><c> they're</c>

02:11:50.819 --> 02:11:50.829 align:start position:0%
with three different items and they're
 

02:11:50.829 --> 02:11:53.729 align:start position:0%
with three different items and they're
separated<02:11:51.159><c> by</c><02:11:51.539><c> semicolons</c><02:11:52.539><c> the</c><02:11:53.139><c> first</c><02:11:53.469><c> thing</c>

02:11:53.729 --> 02:11:53.739 align:start position:0%
separated by semicolons the first thing
 

02:11:53.739 --> 02:11:56.520 align:start position:0%
separated by semicolons the first thing
is<02:11:53.949><c> the</c><02:11:54.280><c> initialization</c><02:11:55.079><c> then</c><02:11:56.079><c> we</c><02:11:56.260><c> have</c><02:11:56.380><c> the</c>

02:11:56.520 --> 02:11:56.530 align:start position:0%
is the initialization then we have the
 

02:11:56.530 --> 02:11:59.310 align:start position:0%
is the initialization then we have the
condition<02:11:57.099><c> then</c><02:11:57.909><c> we</c><02:11:58.150><c> have</c><02:11:58.449><c> the</c><02:11:58.809><c> final</c>

02:11:59.310 --> 02:11:59.320 align:start position:0%
condition then we have the final
 

02:11:59.320 --> 02:12:02.759 align:start position:0%
condition then we have the final
expression<02:12:00.099><c> so</c><02:12:00.789><c> the</c><02:12:01.119><c> initialization</c><02:12:01.769><c> happens</c>

02:12:02.759 --> 02:12:02.769 align:start position:0%
expression so the initialization happens
 

02:12:02.769 --> 02:12:05.089 align:start position:0%
expression so the initialization happens
before<02:12:03.250><c> any</c><02:12:03.519><c> of</c><02:12:03.699><c> the</c><02:12:03.820><c> code</c><02:12:04.119><c> inside</c><02:12:04.480><c> the</c><02:12:04.539><c> loop</c>

02:12:05.089 --> 02:12:05.099 align:start position:0%
before any of the code inside the loop
 

02:12:05.099 --> 02:12:09.810 align:start position:0%
before any of the code inside the loop
runs<02:12:06.099><c> so</c><02:12:06.820><c> we</c><02:12:07.480><c> will</c><02:12:07.659><c> start</c><02:12:08.079><c> by</c><02:12:08.469><c> initializing</c><02:12:08.980><c> I</c>

02:12:09.810 --> 02:12:09.820 align:start position:0%
runs so we will start by initializing I
 

02:12:09.820 --> 02:12:13.830 align:start position:0%
runs so we will start by initializing I
to<02:12:10.139><c> equal</c><02:12:11.139><c> 0</c><02:12:11.530><c> so</c><02:12:11.829><c> this</c><02:12:12.579><c> is</c><02:12:12.789><c> what</c><02:12:13.090><c> most</c><02:12:13.420><c> for</c>

02:12:13.830 --> 02:12:13.840 align:start position:0%
to equal 0 so this is what most for
 

02:12:13.840 --> 02:12:16.229 align:start position:0%
to equal 0 so this is what most for
loops<02:12:14.110><c> start</c><02:12:14.769><c> with</c><02:12:15.010><c> is</c><02:12:15.219><c> you</c><02:12:15.639><c> have</c><02:12:15.730><c> a</c><02:12:15.760><c> variable</c>

02:12:16.229 --> 02:12:16.239 align:start position:0%
loops start with is you have a variable
 

02:12:16.239 --> 02:12:17.640 align:start position:0%
loops start with is you have a variable
that<02:12:16.360><c> you're</c><02:12:16.539><c> going</c><02:12:16.659><c> to</c><02:12:16.719><c> initialize</c><02:12:17.110><c> for</c><02:12:17.500><c> the</c>

02:12:17.640 --> 02:12:17.650 align:start position:0%
that you're going to initialize for the
 

02:12:17.650 --> 02:12:20.609 align:start position:0%
that you're going to initialize for the
for<02:12:17.889><c> loop</c><02:12:18.130><c> then</c><02:12:18.880><c> the</c><02:12:19.210><c> next</c><02:12:19.809><c> thing</c><02:12:20.019><c> is</c><02:12:20.260><c> the</c>

02:12:20.609 --> 02:12:20.619 align:start position:0%
for loop then the next thing is the
 

02:12:20.619 --> 02:12:24.299 align:start position:0%
for loop then the next thing is the
condition<02:12:21.280><c> so</c><02:12:22.000><c> once</c><02:12:22.869><c> this</c><02:12:23.139><c> evaluates</c><02:12:24.039><c> to</c>

02:12:24.299 --> 02:12:24.309 align:start position:0%
condition so once this evaluates to
 

02:12:24.309 --> 02:12:27.629 align:start position:0%
condition so once this evaluates to
false<02:12:24.340><c> we</c><02:12:25.269><c> break</c><02:12:25.659><c> out</c><02:12:25.900><c> of</c><02:12:25.929><c> the</c><02:12:26.139><c> loop</c><02:12:26.170><c> so</c><02:12:27.010><c> while</c>

02:12:27.629 --> 02:12:27.639 align:start position:0%
false we break out of the loop so while
 

02:12:27.639 --> 02:12:31.229 align:start position:0%
false we break out of the loop so while
I<02:12:27.969><c> is</c><02:12:28.090><c> less</c><02:12:28.809><c> than</c><02:12:28.869><c> 5</c><02:12:29.500><c> we'll</c><02:12:30.190><c> continue</c><02:12:30.460><c> to</c><02:12:30.940><c> run</c>

02:12:31.229 --> 02:12:31.239 align:start position:0%
I is less than 5 we'll continue to run
 

02:12:31.239 --> 02:12:33.290 align:start position:0%
I is less than 5 we'll continue to run
through<02:12:31.659><c> the</c><02:12:31.809><c> loop</c><02:12:32.050><c> over</c><02:12:32.590><c> and</c><02:12:32.739><c> over</c><02:12:33.039><c> until</c>

02:12:33.290 --> 02:12:33.300 align:start position:0%
through the loop over and over until
 

02:12:33.300 --> 02:12:35.729 align:start position:0%
through the loop over and over until
this<02:12:34.300><c> is</c><02:12:34.449><c> false</c><02:12:34.780><c> and</c><02:12:35.079><c> we</c><02:12:35.139><c> break</c><02:12:35.380><c> out</c><02:12:35.530><c> of</c><02:12:35.559><c> the</c>

02:12:35.729 --> 02:12:35.739 align:start position:0%
this is false and we break out of the
 

02:12:35.739 --> 02:12:38.370 align:start position:0%
this is false and we break out of the
loop<02:12:35.769><c> the</c><02:12:36.579><c> final</c><02:12:37.000><c> thing</c><02:12:37.269><c> is</c><02:12:37.449><c> what</c><02:12:37.989><c> we</c><02:12:38.110><c> do</c><02:12:38.260><c> at</c>

02:12:38.370 --> 02:12:38.380 align:start position:0%
loop the final thing is what we do at
 

02:12:38.380 --> 02:12:41.100 align:start position:0%
loop the final thing is what we do at
the<02:12:38.530><c> end</c><02:12:38.559><c> of</c><02:12:38.949><c> each</c><02:12:39.190><c> iteration</c><02:12:39.579><c> at</c><02:12:40.449><c> the</c><02:12:40.869><c> end</c><02:12:41.019><c> of</c>

02:12:41.100 --> 02:12:41.110 align:start position:0%
the end of each iteration at the end of
 

02:12:41.110 --> 02:12:44.040 align:start position:0%
the end of each iteration at the end of
each<02:12:41.199><c> iteration</c><02:12:41.380><c> we</c><02:12:42.280><c> will</c><02:12:42.309><c> increment</c><02:12:42.909><c> I</c><02:12:43.239><c> by</c><02:12:43.300><c> 1</c>

02:12:44.040 --> 02:12:44.050 align:start position:0%
each iteration we will increment I by 1
 

02:12:44.050 --> 02:12:46.560 align:start position:0%
each iteration we will increment I by 1
in<02:12:44.320><c> this</c><02:12:44.619><c> example</c><02:12:45.010><c> we</c><02:12:45.400><c> are</c><02:12:45.519><c> filling</c><02:12:45.969><c> our</c><02:12:46.150><c> array</c>

02:12:46.560 --> 02:12:46.570 align:start position:0%
in this example we are filling our array
 

02:12:46.570 --> 02:12:49.589 align:start position:0%
in this example we are filling our array
with<02:12:47.019><c> the</c><02:12:47.050><c> numbers</c><02:12:47.530><c> 0</c><02:12:47.980><c> through</c><02:12:48.099><c> 4</c><02:12:48.760><c> I'm</c><02:12:49.119><c> going</c>

02:12:49.589 --> 02:12:49.599 align:start position:0%
with the numbers 0 through 4 I'm going
 

02:12:49.599 --> 02:12:51.479 align:start position:0%
with the numbers 0 through 4 I'm going
to<02:12:49.659><c> do</c><02:12:49.750><c> another</c><02:12:50.019><c> example</c><02:12:50.199><c> where</c><02:12:50.920><c> we</c><02:12:51.039><c> fill</c><02:12:51.309><c> an</c>

02:12:51.479 --> 02:12:51.489 align:start position:0%
to do another example where we fill an
 

02:12:51.489 --> 02:12:54.149 align:start position:0%
to do another example where we fill an
array<02:12:51.730><c> with</c><02:12:52.030><c> the</c><02:12:52.150><c> numbers</c><02:12:52.539><c> 1</c><02:12:52.929><c> through</c><02:12:53.199><c> 5</c><02:12:53.440><c> so</c>

02:12:54.149 --> 02:12:54.159 align:start position:0%
array with the numbers 1 through 5 so
 

02:12:54.159 --> 02:12:56.430 align:start position:0%
array with the numbers 1 through 5 so
we'll<02:12:54.610><c> start</c><02:12:54.849><c> with</c><02:12:54.909><c> for</c><02:12:55.300><c> now</c><02:12:56.050><c> we're</c><02:12:56.349><c> gonna</c>

02:12:56.430 --> 02:12:56.440 align:start position:0%
we'll start with for now we're gonna
 

02:12:56.440 --> 02:13:00.870 align:start position:0%
we'll start with for now we're gonna
initialize<02:12:57.340><c> I</c><02:12:57.820><c> to</c><02:12:58.679><c> equal</c><02:12:59.679><c> 1</c><02:13:00.099><c> we're</c><02:13:00.550><c> starting</c>

02:13:00.870 --> 02:13:00.880 align:start position:0%
initialize I to equal 1 we're starting
 

02:13:00.880 --> 02:13:02.910 align:start position:0%
initialize I to equal 1 we're starting
with<02:13:00.969><c> 1</c><02:13:01.239><c> instead</c><02:13:01.539><c> of</c><02:13:01.599><c> 0</c><02:13:01.840><c> this</c><02:13:02.050><c> time</c><02:13:02.289><c> and</c><02:13:02.619><c> we're</c>

02:13:02.910 --> 02:13:02.920 align:start position:0%
with 1 instead of 0 this time and we're
 

02:13:02.920 --> 02:13:06.390 align:start position:0%
with 1 instead of 0 this time and we're
gonna<02:13:03.039><c> do</c><02:13:03.159><c> I</c><02:13:03.429><c> is</c><02:13:03.789><c> less</c><02:13:04.420><c> than</c><02:13:04.750><c> 6</c><02:13:05.440><c> so</c><02:13:05.739><c> while</c><02:13:06.070><c> I</c><02:13:06.099><c> is</c>

02:13:06.390 --> 02:13:06.400 align:start position:0%
gonna do I is less than 6 so while I is
 

02:13:06.400 --> 02:13:10.080 align:start position:0%
gonna do I is less than 6 so while I is
less<02:13:06.579><c> than</c><02:13:06.820><c> 6</c><02:13:07.300><c> or</c><02:13:07.449><c> until</c><02:13:07.900><c> I</c><02:13:08.139><c> is</c><02:13:08.530><c> more</c><02:13:08.980><c> than</c><02:13:09.190><c> 6</c><02:13:09.519><c> we</c>

02:13:10.080 --> 02:13:10.090 align:start position:0%
less than 6 or until I is more than 6 we
 

02:13:10.090 --> 02:13:12.149 align:start position:0%
less than 6 or until I is more than 6 we
are<02:13:10.119><c> going</c><02:13:10.659><c> to</c><02:13:10.960><c> run</c><02:13:11.440><c> all</c><02:13:11.590><c> the</c><02:13:11.739><c> code</c><02:13:11.949><c> in</c><02:13:12.070><c> this</c>

02:13:12.149 --> 02:13:12.159 align:start position:0%
are going to run all the code in this
 

02:13:12.159 --> 02:13:15.540 align:start position:0%
are going to run all the code in this
loop<02:13:12.489><c> and</c><02:13:12.789><c> at</c><02:13:13.449><c> the</c><02:13:13.570><c> end</c><02:13:13.780><c> of</c><02:13:13.989><c> each</c><02:13:14.260><c> iteration</c><02:13:14.550><c> we</c>

02:13:15.540 --> 02:13:15.550 align:start position:0%
loop and at the end of each iteration we
 

02:13:15.550 --> 02:13:19.799 align:start position:0%
loop and at the end of each iteration we
are<02:13:15.670><c> going</c><02:13:15.940><c> to</c><02:13:16.030><c> increment</c><02:13:16.389><c> I</c><02:13:17.099><c> now</c><02:13:18.099><c> I</c><02:13:18.449><c> can</c><02:13:19.449><c> just</c>

02:13:19.799 --> 02:13:19.809 align:start position:0%
are going to increment I now I can just
 

02:13:19.809 --> 02:13:23.870 align:start position:0%
are going to increment I now I can just
do<02:13:19.989><c> what</c><02:13:20.170><c> we</c><02:13:20.590><c> have</c><02:13:20.739><c> before</c><02:13:21.099><c> my</c><02:13:21.550><c> array</c><02:13:22.239><c> dot</c><02:13:22.690><c> push</c>

02:13:23.870 --> 02:13:23.880 align:start position:0%
do what we have before my array dot push
 

02:13:23.880 --> 02:13:27.959 align:start position:0%
do what we have before my array dot push
hi<02:13:25.050><c> so</c><02:13:26.050><c> the</c><02:13:26.230><c> final</c><02:13:26.530><c> thing</c><02:13:26.710><c> we</c><02:13:26.860><c> will</c><02:13:27.250><c> do</c><02:13:27.460><c> is</c><02:13:27.639><c> test</c>

02:13:27.959 --> 02:13:27.969 align:start position:0%
hi so the final thing we will do is test
 

02:13:27.969 --> 02:13:30.620 align:start position:0%
hi so the final thing we will do is test
this<02:13:28.210><c> I</c><02:13:28.449><c> will</c><02:13:28.630><c> do</c><02:13:28.750><c> console</c><02:13:29.409><c> dot</c><02:13:29.710><c> log</c><02:13:29.769><c> and</c><02:13:30.579><c> put</c>

02:13:30.620 --> 02:13:30.630 align:start position:0%
this I will do console dot log and put
 

02:13:30.630 --> 02:13:34.740 align:start position:0%
this I will do console dot log and put
my<02:13:31.630><c> array</c><02:13:32.349><c> inside</c><02:13:32.829><c> here</c><02:13:33.309><c> and</c><02:13:33.460><c> I'll</c><02:13:34.179><c> just</c><02:13:34.360><c> load</c>

02:13:34.740 --> 02:13:34.750 align:start position:0%
my array inside here and I'll just load
 

02:13:34.750 --> 02:13:37.140 align:start position:0%
my array inside here and I'll just load
this<02:13:35.050><c> and</c><02:13:35.289><c> see</c><02:13:35.619><c> what</c><02:13:35.739><c> we</c><02:13:35.889><c> see</c><02:13:36.130><c> in</c><02:13:36.340><c> the</c><02:13:36.639><c> console</c>

02:13:37.140 --> 02:13:37.150 align:start position:0%
this and see what we see in the console
 

02:13:37.150 --> 02:13:42.450 align:start position:0%
this and see what we see in the console
1<02:13:37.960><c> 2</c><02:13:38.260><c> 3</c><02:13:38.590><c> 4</c><02:13:38.980><c> 5</c><02:13:39.280><c> it</c><02:13:40.030><c> worked</c><02:13:40.329><c> we</c><02:13:40.869><c> iterated</c><02:13:41.530><c> 5</c>

02:13:42.450 --> 02:13:42.460 align:start position:0%
1 2 3 4 5 it worked we iterated 5
 

02:13:42.460 --> 02:13:45.270 align:start position:0%
1 2 3 4 5 it worked we iterated 5
different<02:13:42.699><c> times</c><02:13:43.090><c> and</c><02:13:43.510><c> each</c><02:13:44.019><c> time</c><02:13:44.050><c> we</c><02:13:44.860><c> pushed</c>

02:13:45.270 --> 02:13:45.280 align:start position:0%
different times and each time we pushed
 

02:13:45.280 --> 02:13:48.209 align:start position:0%
different times and each time we pushed
a<02:13:45.579><c> new</c><02:13:46.000><c> digit</c><02:13:46.539><c> on</c><02:13:46.690><c> to</c><02:13:46.989><c> the</c><02:13:47.110><c> array</c><02:13:47.349><c> and</c><02:13:47.650><c> at</c><02:13:48.099><c> the</c>

02:13:48.209 --> 02:13:48.219 align:start position:0%
a new digit on to the array and at the
 

02:13:48.219 --> 02:13:50.819 align:start position:0%
a new digit on to the array and at the
end<02:13:48.429><c> of</c><02:13:48.550><c> each</c><02:13:48.639><c> iteration</c><02:13:48.909><c> we</c><02:13:49.650><c> incremented</c><02:13:50.650><c> I</c>

02:13:50.819 --> 02:13:50.829 align:start position:0%
end of each iteration we incremented I
 

02:13:50.829 --> 02:13:51.990 align:start position:0%
end of each iteration we incremented I
so

02:13:51.990 --> 02:13:52.000 align:start position:0%
so
 

02:13:52.000 --> 02:13:58.450 align:start position:0%
so
it<02:13:52.090><c> pushed</c><02:13:52.480><c> a</c><02:13:52.690><c> larger</c><02:13:53.590><c> number</c><02:13:54.280><c> onto</c><02:13:54.490><c> the</c><02:13:54.790><c> array</c>

02:13:58.450 --> 02:13:58.460 align:start position:0%
 
 

02:13:58.460 --> 02:14:01.390 align:start position:0%
 
loop's<02:13:59.420><c> don't</c><02:13:59.840><c> just</c><02:14:00.050><c> have</c><02:14:00.230><c> to</c><02:14:00.260><c> increment</c><02:14:00.590><c> one</c>

02:14:01.390 --> 02:14:01.400 align:start position:0%
loop's don't just have to increment one
 

02:14:01.400 --> 02:14:02.260 align:start position:0%
loop's don't just have to increment one
at<02:14:01.520><c> a</c><02:14:01.580><c> time</c>

02:14:02.260 --> 02:14:02.270 align:start position:0%
at a time
 

02:14:02.270 --> 02:14:05.170 align:start position:0%
at a time
look<02:14:02.840><c> at</c><02:14:02.960><c> this</c><02:14:03.110><c> for</c><02:14:03.440><c> loop</c><02:14:03.680><c> here</c><02:14:04.040><c> we</c><02:14:04.700><c> have</c><02:14:04.969><c> our</c>

02:14:05.170 --> 02:14:05.180 align:start position:0%
look at this for loop here we have our
 

02:14:05.180 --> 02:14:07.510 align:start position:0%
look at this for loop here we have our
initialization<02:14:05.630><c> where</c><02:14:06.290><c> we</c><02:14:06.620><c> initialize</c><02:14:07.250><c> I</c><02:14:07.489><c> to</c>

02:14:07.510 --> 02:14:07.520 align:start position:0%
initialization where we initialize I to
 

02:14:07.520 --> 02:14:11.200 align:start position:0%
initialization where we initialize I to
0<02:14:07.910><c> and</c><02:14:08.510><c> then</c><02:14:09.290><c> we</c><02:14:09.590><c> are</c><02:14:09.710><c> going</c><02:14:09.950><c> to</c><02:14:10.310><c> run</c><02:14:10.820><c> the</c><02:14:11.000><c> loop</c>

02:14:11.200 --> 02:14:11.210 align:start position:0%
0 and then we are going to run the loop
 

02:14:11.210 --> 02:14:15.010 align:start position:0%
0 and then we are going to run the loop
until<02:14:11.780><c> I</c><02:14:12.080><c> is</c><02:14:12.140><c> less</c><02:14:12.920><c> than</c><02:14:12.980><c> 10</c><02:14:13.280><c> and</c><02:14:14.020><c> finally</c>

02:14:15.010 --> 02:14:15.020 align:start position:0%
until I is less than 10 and finally
 

02:14:15.020 --> 02:14:16.540 align:start position:0%
until I is less than 10 and finally
there<02:14:15.380><c> are</c><02:14:15.410><c> increment</c><02:14:16.130><c> instead</c><02:14:16.430><c> of</c>

02:14:16.540 --> 02:14:16.550 align:start position:0%
there are increment instead of
 

02:14:16.550 --> 02:14:19.240 align:start position:0%
there are increment instead of
incrementing<02:14:17.210><c> I</c><02:14:17.390><c> by</c><02:14:17.600><c> 1</c><02:14:17.960><c> we're</c><02:14:18.380><c> incrementing</c><02:14:18.800><c> I</c>

02:14:19.240 --> 02:14:19.250 align:start position:0%
incrementing I by 1 we're incrementing I
 

02:14:19.250 --> 02:14:23.170 align:start position:0%
incrementing I by 1 we're incrementing I
by<02:14:19.850><c> 2</c><02:14:20.230><c> so</c><02:14:21.230><c> now</c><02:14:21.770><c> this</c><02:14:22.160><c> is</c><02:14:22.219><c> going</c><02:14:22.550><c> to</c><02:14:22.640><c> push</c><02:14:23.000><c> all</c>

02:14:23.170 --> 02:14:23.180 align:start position:0%
by 2 so now this is going to push all
 

02:14:23.180 --> 02:14:25.720 align:start position:0%
by 2 so now this is going to push all
the<02:14:23.480><c> even</c><02:14:23.960><c> numbers</c><02:14:23.989><c> onto</c><02:14:24.560><c> the</c><02:14:24.830><c> array</c><02:14:25.070><c> we</c><02:14:25.700><c> have</c>

02:14:25.720 --> 02:14:25.730 align:start position:0%
the even numbers onto the array we have
 

02:14:25.730 --> 02:14:27.640 align:start position:0%
the even numbers onto the array we have
console<02:14:26.210><c> dot</c><02:14:26.300><c> log</c><02:14:26.360><c> so</c><02:14:26.810><c> let's</c><02:14:26.960><c> log</c><02:14:27.230><c> it</c><02:14:27.410><c> out</c><02:14:27.530><c> and</c>

02:14:27.640 --> 02:14:27.650 align:start position:0%
console dot log so let's log it out and
 

02:14:27.650 --> 02:14:30.850 align:start position:0%
console dot log so let's log it out and
see<02:14:27.800><c> what</c><02:14:27.890><c> it</c><02:14:27.980><c> looks</c><02:14:28.160><c> like</c><02:14:28.300><c> 0</c><02:14:29.300><c> 2</c><02:14:29.420><c> 4</c><02:14:30.020><c> 6</c><02:14:30.260><c> 8</c><02:14:30.469><c> I'm</c>

02:14:30.850 --> 02:14:30.860 align:start position:0%
see what it looks like 0 2 4 6 8 I'm
 

02:14:30.860 --> 02:14:33.160 align:start position:0%
see what it looks like 0 2 4 6 8 I'm
going<02:14:31.640><c> to</c><02:14:32.000><c> write</c><02:14:32.150><c> another</c><02:14:32.270><c> loop</c><02:14:32.719><c> right</c><02:14:32.930><c> now</c>

02:14:33.160 --> 02:14:33.170 align:start position:0%
going to write another loop right now
 

02:14:33.170 --> 02:14:36.340 align:start position:0%
going to write another loop right now
that<02:14:33.680><c> creates</c><02:14:34.550><c> an</c><02:14:34.730><c> array</c><02:14:34.850><c> of</c><02:14:35.150><c> odd</c><02:14:35.360><c> numbers</c><02:14:35.719><c> so</c>

02:14:36.340 --> 02:14:36.350 align:start position:0%
that creates an array of odd numbers so
 

02:14:36.350 --> 02:14:43.060 align:start position:0%
that creates an array of odd numbers so
let's<02:14:37.010><c> do</c><02:14:37.219><c> that</c><02:14:37.370><c> for</c><02:14:39.100><c> VAR</c><02:14:40.100><c> i</c><02:14:40.870><c> equals</c><02:14:41.870><c> 1</c><02:14:42.739><c> we'll</c>

02:14:43.060 --> 02:14:43.070 align:start position:0%
let's do that for VAR i equals 1 we'll
 

02:14:43.070 --> 02:14:48.790 align:start position:0%
let's do that for VAR i equals 1 we'll
start<02:14:43.280><c> at</c><02:14:43.400><c> 1</c><02:14:43.780><c> while</c><02:14:44.780><c> I</c><02:14:45.050><c> is</c><02:14:45.710><c> less</c><02:14:46.130><c> than</c><02:14:46.840><c> 10</c>

02:14:48.790 --> 02:14:48.800 align:start position:0%
start at 1 while I is less than 10
 

02:14:48.800 --> 02:14:54.270 align:start position:0%
start at 1 while I is less than 10
I<02:14:48.830><c> can</c><02:14:49.130><c> use</c><02:14:49.250><c> 10</c><02:14:49.520><c> again</c><02:14:49.820><c> I'm</c><02:14:50.450><c> gonna</c><02:14:50.840><c> do</c><02:14:51.050><c> I</c><02:14:52.450><c> plus</c>

02:14:54.270 --> 02:14:54.280 align:start position:0%
I can use 10 again I'm gonna do I plus
 

02:14:54.280 --> 02:14:59.080 align:start position:0%
I can use 10 again I'm gonna do I plus
equal<02:14:56.260><c> to</c><02:14:57.260><c> so</c><02:14:58.040><c> we're</c><02:14:58.160><c> still</c><02:14:58.400><c> going</c><02:14:58.520><c> to</c><02:14:58.580><c> skip</c>

02:14:59.080 --> 02:14:59.090 align:start position:0%
equal to so we're still going to skip
 

02:14:59.090 --> 02:15:00.970 align:start position:0%
equal to so we're still going to skip
count<02:14:59.270><c> by</c><02:14:59.390><c> twos</c><02:14:59.780><c> but</c><02:15:00.080><c> since</c><02:15:00.320><c> we're</c><02:15:00.469><c> starting</c>

02:15:00.970 --> 02:15:00.980 align:start position:0%
count by twos but since we're starting
 

02:15:00.980 --> 02:15:03.400 align:start position:0%
count by twos but since we're starting
at<02:15:01.250><c> 1</c><02:15:01.640><c> instead</c><02:15:01.910><c> of</c><02:15:01.969><c> 0</c><02:15:02.060><c> this</c><02:15:03.020><c> should</c><02:15:03.200><c> give</c><02:15:03.380><c> us</c>

02:15:03.400 --> 02:15:03.410 align:start position:0%
at 1 instead of 0 this should give us
 

02:15:03.410 --> 02:15:06.550 align:start position:0%
at 1 instead of 0 this should give us
the<02:15:03.530><c> odd</c><02:15:03.950><c> numbers</c><02:15:04.580><c> so</c><02:15:05.270><c> let's</c><02:15:05.570><c> see</c><02:15:06.350><c> what's</c>

02:15:06.550 --> 02:15:06.560 align:start position:0%
the odd numbers so let's see what's
 

02:15:06.560 --> 02:15:09.760 align:start position:0%
the odd numbers so let's see what's
gonna<02:15:06.650><c> be</c><02:15:06.800><c> inside</c><02:15:07.280><c> our</c><02:15:07.460><c> loop</c><02:15:07.670><c> my</c><02:15:08.510><c> array</c><02:15:09.290><c> dot</c>

02:15:09.760 --> 02:15:09.770 align:start position:0%
gonna be inside our loop my array dot
 

02:15:09.770 --> 02:15:15.040 align:start position:0%
gonna be inside our loop my array dot
plush<02:15:10.989><c> and</c><02:15:11.989><c> I'll</c><02:15:12.140><c> just</c><02:15:12.290><c> put</c><02:15:12.500><c> I</c><02:15:12.710><c> there</c><02:15:13.810><c> so</c><02:15:14.810><c> let's</c>

02:15:15.040 --> 02:15:15.050 align:start position:0%
plush and I'll just put I there so let's
 

02:15:15.050 --> 02:15:16.450 align:start position:0%
plush and I'll just put I there so let's
log<02:15:15.320><c> this</c><02:15:15.530><c> out</c><02:15:15.710><c> and</c><02:15:15.890><c> see</c><02:15:16.040><c> if</c><02:15:16.130><c> we</c><02:15:16.190><c> did</c><02:15:16.340><c> it</c><02:15:16.430><c> right</c>

02:15:16.450 --> 02:15:16.460 align:start position:0%
log this out and see if we did it right
 

02:15:16.460 --> 02:15:21.880 align:start position:0%
log this out and see if we did it right
console<02:15:17.239><c> dot</c><02:15:17.510><c> log</c><02:15:18.160><c> my</c><02:15:19.160><c> array</c><02:15:20.060><c> and</c><02:15:20.900><c> I'll</c><02:15:21.560><c> run</c>

02:15:21.880 --> 02:15:21.890 align:start position:0%
console dot log my array and I'll run
 

02:15:21.890 --> 02:15:30.470 align:start position:0%
console dot log my array and I'll run
that<02:15:22.930><c> 1</c><02:15:23.930><c> 3</c><02:15:24.350><c> 5</c><02:15:24.680><c> 7</c><02:15:25.100><c> 9</c><02:15:25.420><c> it</c><02:15:26.420><c> worked</c>

02:15:30.470 --> 02:15:30.480 align:start position:0%
 
 

02:15:30.480 --> 02:15:33.350 align:start position:0%
 
a<02:15:30.980><c> for-loop</c><02:15:31.980><c> can</c><02:15:32.190><c> also</c><02:15:32.370><c> be</c><02:15:32.670><c> used</c><02:15:32.940><c> to</c><02:15:33.030><c> count</c>

02:15:33.350 --> 02:15:33.360 align:start position:0%
a for-loop can also be used to count
 

02:15:33.360 --> 02:15:35.780 align:start position:0%
a for-loop can also be used to count
backwards<02:15:33.720><c> so</c><02:15:34.590><c> if</c><02:15:34.680><c> we</c><02:15:34.800><c> see</c><02:15:35.040><c> this</c><02:15:35.250><c> for</c><02:15:35.610><c> loop</c>

02:15:35.780 --> 02:15:35.790 align:start position:0%
backwards so if we see this for loop
 

02:15:35.790 --> 02:15:39.140 align:start position:0%
backwards so if we see this for loop
here<02:15:36.180><c> we're</c><02:15:36.690><c> initializing</c><02:15:37.080><c> I</c><02:15:37.650><c> to</c><02:15:37.790><c> 10</c><02:15:38.790><c> we're</c>

02:15:39.140 --> 02:15:39.150 align:start position:0%
here we're initializing I to 10 we're
 

02:15:39.150 --> 02:15:42.110 align:start position:0%
here we're initializing I to 10 we're
starting<02:15:39.600><c> at</c><02:15:39.720><c> 10</c><02:15:40.080><c> and</c><02:15:40.380><c> we're</c><02:15:40.830><c> going</c><02:15:41.130><c> back</c><02:15:41.160><c> to</c><02:15:41.790><c> 0</c>

02:15:42.110 --> 02:15:42.120 align:start position:0%
starting at 10 and we're going back to 0
 

02:15:42.120 --> 02:15:44.270 align:start position:0%
starting at 10 and we're going back to 0
so<02:15:42.720><c> we're</c><02:15:42.960><c> gonna</c><02:15:43.110><c> iterate</c><02:15:43.530><c> through</c><02:15:43.830><c> this</c><02:15:43.980><c> loop</c>

02:15:44.270 --> 02:15:44.280 align:start position:0%
so we're gonna iterate through this loop
 

02:15:44.280 --> 02:15:47.840 align:start position:0%
so we're gonna iterate through this loop
while<02:15:44.700><c> I</c><02:15:45.060><c> is</c><02:15:45.320><c> more</c><02:15:46.320><c> than</c><02:15:46.650><c> 0</c><02:15:47.400><c> we're</c><02:15:47.670><c> going</c><02:15:47.700><c> to</c>

02:15:47.840 --> 02:15:47.850 align:start position:0%
while I is more than 0 we're going to
 

02:15:47.850 --> 02:15:50.210 align:start position:0%
while I is more than 0 we're going to
keep<02:15:48.030><c> iterating</c><02:15:48.300><c> and</c><02:15:48.780><c> at</c><02:15:49.380><c> the</c><02:15:49.530><c> end</c><02:15:49.739><c> of</c><02:15:49.980><c> each</c>

02:15:50.210 --> 02:15:50.220 align:start position:0%
keep iterating and at the end of each
 

02:15:50.220 --> 02:15:52.400 align:start position:0%
keep iterating and at the end of each
iteration<02:15:50.400><c> we're</c><02:15:51.210><c> gonna</c><02:15:51.330><c> decrement</c><02:15:52.290><c> I</c>

02:15:52.400 --> 02:15:52.410 align:start position:0%
iteration we're gonna decrement I
 

02:15:52.410 --> 02:15:54.830 align:start position:0%
iteration we're gonna decrement I
instead<02:15:53.040><c> of</c><02:15:53.130><c> increment</c><02:15:53.700><c> it</c><02:15:53.850><c> we're</c><02:15:54.420><c> gonna</c><02:15:54.540><c> go</c>

02:15:54.830 --> 02:15:54.840 align:start position:0%
instead of increment it we're gonna go
 

02:15:54.840 --> 02:15:58.520 align:start position:0%
instead of increment it we're gonna go
down<02:15:55.140><c> by</c><02:15:55.470><c> 2</c><02:15:55.530><c> i</c><02:15:56.330><c> minus</c><02:15:57.330><c> equals</c><02:15:57.810><c> 2</c><02:15:58.020><c> means</c><02:15:58.320><c> i</c>

02:15:58.520 --> 02:15:58.530 align:start position:0%
down by 2 i minus equals 2 means i
 

02:15:58.530 --> 02:16:01.430 align:start position:0%
down by 2 i minus equals 2 means i
equals<02:15:58.950><c> I</c><02:15:59.130><c> minus</c><02:15:59.160><c> 2</c><02:15:59.520><c> so</c><02:16:00.510><c> we're</c><02:16:01.020><c> gonna</c><02:16:01.140><c> continue</c>

02:16:01.430 --> 02:16:01.440 align:start position:0%
equals I minus 2 so we're gonna continue
 

02:16:01.440 --> 02:16:03.590 align:start position:0%
equals I minus 2 so we're gonna continue
pushing<02:16:02.010><c> the</c><02:16:02.280><c> lower</c><02:16:02.550><c> and</c><02:16:02.820><c> lower</c><02:16:02.970><c> numbers</c><02:16:03.420><c> onto</c>

02:16:03.590 --> 02:16:03.600 align:start position:0%
pushing the lower and lower numbers onto
 

02:16:03.600 --> 02:16:06.110 align:start position:0%
pushing the lower and lower numbers onto
the<02:16:03.930><c> array</c><02:16:04.170><c> until</c><02:16:04.710><c> I</c><02:16:04.770><c> is</c><02:16:04.920><c> less</c><02:16:05.250><c> than</c><02:16:05.310><c> 0</c><02:16:05.820><c> so</c>

02:16:06.110 --> 02:16:06.120 align:start position:0%
the array until I is less than 0 so
 

02:16:06.120 --> 02:16:08.210 align:start position:0%
the array until I is less than 0 so
let's<02:16:06.780><c> log</c><02:16:07.110><c> this</c><02:16:07.380><c> out</c><02:16:07.590><c> and</c><02:16:07.770><c> see</c><02:16:07.920><c> what</c><02:16:08.040><c> our</c>

02:16:08.210 --> 02:16:08.220 align:start position:0%
let's log this out and see what our
 

02:16:08.220 --> 02:16:12.640 align:start position:0%
let's log this out and see what our
array<02:16:08.640><c> becomes</c><02:16:09.180><c> you</c><02:16:09.600><c> can</c><02:16:09.750><c> see</c><02:16:09.989><c> 10</c><02:16:10.530><c> 8</c><02:16:10.950><c> 6</c><02:16:11.520><c> 4</c><02:16:12.150><c> 2</c>

02:16:12.640 --> 02:16:12.650 align:start position:0%
array becomes you can see 10 8 6 4 2
 

02:16:12.650 --> 02:16:15.140 align:start position:0%
array becomes you can see 10 8 6 4 2
well<02:16:13.650><c> I'm</c><02:16:13.890><c> gonna</c><02:16:14.160><c> write</c><02:16:14.340><c> another</c><02:16:14.580><c> one</c><02:16:14.880><c> where</c>

02:16:15.140 --> 02:16:15.150 align:start position:0%
well I'm gonna write another one where
 

02:16:15.150 --> 02:16:17.300 align:start position:0%
well I'm gonna write another one where
we're<02:16:15.360><c> gonna</c><02:16:15.480><c> push</c><02:16:15.870><c> the</c><02:16:16.080><c> odd</c><02:16:16.260><c> numbers</c><02:16:16.770><c> from</c><02:16:17.010><c> 9</c>

02:16:17.300 --> 02:16:17.310 align:start position:0%
we're gonna push the odd numbers from 9
 

02:16:17.310 --> 02:16:21.080 align:start position:0%
we're gonna push the odd numbers from 9
through<02:16:17.820><c> 1</c><02:16:18.150><c> to</c><02:16:18.810><c> my</c><02:16:19.020><c> I</c><02:16:19.050><c> took</c><02:16:19.650><c> the</c><02:16:19.890><c> my</c><02:16:20.070><c> array</c><02:16:20.370><c> so</c>

02:16:21.080 --> 02:16:21.090 align:start position:0%
through 1 to my I took the my array so
 

02:16:21.090 --> 02:16:24.710 align:start position:0%
through 1 to my I took the my array so
another<02:16:21.810><c> for</c><02:16:22.170><c> loop</c><02:16:22.410><c> and</c><02:16:22.680><c> I'm</c><02:16:23.640><c> going</c><02:16:23.670><c> to</c><02:16:24.150><c> do</c><02:16:24.330><c> VAR</c>

02:16:24.710 --> 02:16:24.720 align:start position:0%
another for loop and I'm going to do VAR
 

02:16:24.720 --> 02:16:28.190 align:start position:0%
another for loop and I'm going to do VAR
I<02:16:25.110><c> equals</c><02:16:26.010><c> 9</c><02:16:26.430><c> because</c><02:16:27.120><c> we</c><02:16:27.270><c> want</c><02:16:27.450><c> to</c><02:16:27.480><c> start</c><02:16:27.810><c> at</c><02:16:27.900><c> 9</c>

02:16:28.190 --> 02:16:28.200 align:start position:0%
I equals 9 because we want to start at 9
 

02:16:28.200 --> 02:16:32.120 align:start position:0%
I equals 9 because we want to start at 9
now<02:16:28.890><c> we'll</c><02:16:29.100><c> still</c><02:16:29.370><c> do</c><02:16:29.520><c> I</c><02:16:29.550><c> is</c><02:16:29.960><c> more</c><02:16:30.960><c> than</c><02:16:31.170><c> 0</c><02:16:31.620><c> so</c>

02:16:32.120 --> 02:16:32.130 align:start position:0%
now we'll still do I is more than 0 so
 

02:16:32.130 --> 02:16:34.250 align:start position:0%
now we'll still do I is more than 0 so
while<02:16:32.460><c> I</c><02:16:32.700><c> is</c><02:16:32.760><c> more</c><02:16:33.210><c> than</c><02:16:33.360><c> 0</c><02:16:33.660><c> we're</c><02:16:33.900><c> gonna</c><02:16:34.019><c> keep</c>

02:16:34.250 --> 02:16:34.260 align:start position:0%
while I is more than 0 we're gonna keep
 

02:16:34.260 --> 02:16:36.500 align:start position:0%
while I is more than 0 we're gonna keep
going<02:16:34.559><c> through</c><02:16:34.710><c> this</c><02:16:34.800><c> array</c><02:16:34.980><c> and</c><02:16:35.429><c> we'll</c><02:16:36.030><c> do</c><02:16:36.179><c> I</c>

02:16:36.500 --> 02:16:36.510 align:start position:0%
going through this array and we'll do I
 

02:16:36.510 --> 02:16:38.330 align:start position:0%
going through this array and we'll do I
and<02:16:36.870><c> we</c><02:16:37.349><c> just</c><02:16:37.530><c> everything</c><02:16:37.889><c> else</c><02:16:37.950><c> is</c><02:16:38.160><c> really</c>

02:16:38.330 --> 02:16:38.340 align:start position:0%
and we just everything else is really
 

02:16:38.340 --> 02:16:42.919 align:start position:0%
and we just everything else is really
the<02:16:38.519><c> same</c><02:16:38.760><c> -</c><02:16:39.150><c> equals</c><02:16:40.519><c> 2</c><02:16:41.519><c> and</c><02:16:41.880><c> this</c><02:16:42.660><c> is</c><02:16:42.719><c> gonna</c>

02:16:42.919 --> 02:16:42.929 align:start position:0%
the same - equals 2 and this is gonna
 

02:16:42.929 --> 02:16:46.280 align:start position:0%
the same - equals 2 and this is gonna
get<02:16:43.200><c> all</c><02:16:43.260><c> the</c><02:16:43.710><c> odd</c><02:16:44.010><c> numbers</c><02:16:44.179><c> onto</c><02:16:45.179><c> the</c><02:16:46.050><c> array</c>

02:16:46.280 --> 02:16:46.290 align:start position:0%
get all the odd numbers onto the array
 

02:16:46.290 --> 02:16:50.120 align:start position:0%
get all the odd numbers onto the array
so<02:16:46.920><c> we</c><02:16:46.950><c> just</c><02:16:47.219><c> have</c><02:16:47.340><c> to</c><02:16:47.429><c> do</c><02:16:47.550><c> my</c><02:16:47.719><c> array</c><02:16:48.719><c> dot</c><02:16:49.530><c> push</c>

02:16:50.120 --> 02:16:50.130 align:start position:0%
so we just have to do my array dot push
 

02:16:50.130 --> 02:16:53.900 align:start position:0%
so we just have to do my array dot push
and<02:16:50.519><c> then</c><02:16:51.179><c> push</c><02:16:51.510><c> on</c><02:16:51.690><c> the</c><02:16:51.750><c> I</c><02:16:51.929><c> there</c><02:16:52.469><c> and</c><02:16:52.910><c> I'll</c>

02:16:53.900 --> 02:16:53.910 align:start position:0%
and then push on the I there and I'll
 

02:16:53.910 --> 02:16:57.350 align:start position:0%
and then push on the I there and I'll
just<02:16:53.969><c> console</c><02:16:54.660><c> that</c><02:16:54.780><c> log</c><02:16:55.340><c> so</c><02:16:56.340><c> we</c><02:16:56.490><c> can</c><02:16:56.670><c> see</c><02:16:57.000><c> what</c>

02:16:57.350 --> 02:16:57.360 align:start position:0%
just console that log so we can see what
 

02:16:57.360 --> 02:17:02.500 align:start position:0%
just console that log so we can see what
it<02:16:57.480><c> ended</c><02:16:57.750><c> up</c><02:16:57.840><c> as</c><02:16:58.110><c> my</c><02:16:59.010><c> array</c><02:16:59.880><c> and</c><02:17:00.690><c> I'll</c><02:17:01.650><c> run</c><02:17:02.010><c> the</c>

02:17:02.500 --> 02:17:02.510 align:start position:0%
it ended up as my array and I'll run the
 

02:17:02.510 --> 02:17:11.480 align:start position:0%
it ended up as my array and I'll run the
code<02:17:03.510><c> 9</c><02:17:04.440><c> 7</c><02:17:05.070><c> 5</c><02:17:05.340><c> 3</c><02:17:05.400><c> 1</c><02:17:06.080><c> we</c><02:17:07.080><c> did</c><02:17:07.260><c> it</c>

02:17:11.480 --> 02:17:11.490 align:start position:0%
 
 

02:17:11.490 --> 02:17:14.390 align:start position:0%
 
it<02:17:11.670><c> is</c><02:17:12.240><c> common</c><02:17:12.630><c> in</c><02:17:12.720><c> JavaScript</c><02:17:13.470><c> to</c><02:17:13.800><c> iterate</c>

02:17:14.390 --> 02:17:14.400 align:start position:0%
it is common in JavaScript to iterate
 

02:17:14.400 --> 02:17:17.090 align:start position:0%
it is common in JavaScript to iterate
through<02:17:14.430><c> the</c><02:17:14.760><c> contents</c><02:17:15.600><c> of</c><02:17:15.720><c> an</c><02:17:15.930><c> array</c><02:17:16.200><c> so</c><02:17:16.920><c> look</c>

02:17:17.090 --> 02:17:17.100 align:start position:0%
through the contents of an array so look
 

02:17:17.100 --> 02:17:19.370 align:start position:0%
through the contents of an array so look
at<02:17:17.250><c> this</c><02:17:17.370><c> example</c><02:17:17.480><c> we</c><02:17:18.480><c> have</c><02:17:18.510><c> this</c><02:17:18.750><c> array</c><02:17:19.020><c> here</c>

02:17:19.370 --> 02:17:19.380 align:start position:0%
at this example we have this array here
 

02:17:19.380 --> 02:17:22.160 align:start position:0%
at this example we have this array here
before<02:17:20.190><c> we</c><02:17:20.460><c> were</c><02:17:20.670><c> are</c><02:17:20.880><c> always</c><02:17:21.450><c> adding</c><02:17:21.990><c> items</c>

02:17:22.160 --> 02:17:22.170 align:start position:0%
before we were are always adding items
 

02:17:22.170 --> 02:17:24.110 align:start position:0%
before we were are always adding items
to<02:17:22.410><c> the</c><02:17:22.620><c> array</c><02:17:22.830><c> but</c><02:17:23.370><c> this</c><02:17:23.550><c> time</c><02:17:23.760><c> the</c><02:17:23.910><c> array</c>

02:17:24.110 --> 02:17:24.120 align:start position:0%
to the array but this time the array
 

02:17:24.120 --> 02:17:27.140 align:start position:0%
to the array but this time the array
already<02:17:24.450><c> exists</c><02:17:24.900><c> right</c><02:17:25.380><c> here</c><02:17:25.620><c> our</c><02:17:25.860><c> array</c><02:17:26.160><c> 9</c><02:17:26.700><c> 10</c>

02:17:27.140 --> 02:17:27.150 align:start position:0%
already exists right here our array 9 10
 

02:17:27.150 --> 02:17:32.510 align:start position:0%
already exists right here our array 9 10
11<02:17:27.330><c> 12</c><02:17:27.720><c> so</c><02:17:28.710><c> we</c><02:17:29.430><c> are</c><02:17:29.610><c> going</c><02:17:29.970><c> to</c><02:17:30.090><c> start</c><02:17:30.600><c> at</c><02:17:30.870><c> 0</c><02:17:31.520><c> but</c>

02:17:32.510 --> 02:17:32.520 align:start position:0%
11 12 so we are going to start at 0 but
 

02:17:32.520 --> 02:17:34.970 align:start position:0%
11 12 so we are going to start at 0 but
now<02:17:32.820><c> instead</c><02:17:33.810><c> of</c><02:17:33.870><c> going</c><02:17:34.170><c> to</c><02:17:34.470><c> a</c><02:17:34.500><c> specific</c>

02:17:34.970 --> 02:17:34.980 align:start position:0%
now instead of going to a specific
 

02:17:34.980 --> 02:17:38.450 align:start position:0%
now instead of going to a specific
number<02:17:35.790><c> of</c><02:17:36.000><c> iterations</c><02:17:36.810><c> we</c><02:17:37.470><c> are</c><02:17:37.680><c> going</c><02:17:37.980><c> to</c><02:17:38.220><c> the</c>

02:17:38.450 --> 02:17:38.460 align:start position:0%
number of iterations we are going to the
 

02:17:38.460 --> 02:17:41.990 align:start position:0%
number of iterations we are going to the
our<02:17:38.730><c> array</c><02:17:39.240><c> dot</c><02:17:39.540><c> length</c><02:17:40.020><c> so</c><02:17:40.770><c> the</c><02:17:41.160><c> length</c><02:17:41.430><c> is</c><02:17:41.580><c> 4</c>

02:17:41.990 --> 02:17:42.000 align:start position:0%
our array dot length so the length is 4
 

02:17:42.000 --> 02:17:44.480 align:start position:0%
our array dot length so the length is 4
here<02:17:42.480><c> but</c><02:17:42.720><c> if</c><02:17:42.810><c> we</c><02:17:42.870><c> added</c><02:17:43.230><c> elements</c><02:17:44.100><c> to</c><02:17:44.310><c> this</c>

02:17:44.480 --> 02:17:44.490 align:start position:0%
here but if we added elements to this
 

02:17:44.490 --> 02:17:47.000 align:start position:0%
here but if we added elements to this
array<02:17:44.850><c> that</c><02:17:45.510><c> means</c><02:17:45.780><c> this</c><02:17:46.020><c> loop</c><02:17:46.350><c> would</c><02:17:46.530><c> just</c><02:17:46.740><c> go</c>

02:17:47.000 --> 02:17:47.010 align:start position:0%
array that means this loop would just go
 

02:17:47.010 --> 02:17:49.580 align:start position:0%
array that means this loop would just go
even<02:17:47.370><c> longer</c><02:17:47.760><c> until</c><02:17:48.420><c> we</c><02:17:48.660><c> went</c><02:17:48.900><c> through</c><02:17:49.200><c> every</c>

02:17:49.580 --> 02:17:49.590 align:start position:0%
even longer until we went through every
 

02:17:49.590 --> 02:17:51.770 align:start position:0%
even longer until we went through every
element<02:17:49.980><c> of</c><02:17:50.190><c> that</c><02:17:50.340><c> array</c><02:17:50.490><c> and</c><02:17:50.910><c> then</c><02:17:51.540><c> at</c><02:17:51.660><c> the</c>

02:17:51.770 --> 02:17:51.780 align:start position:0%
element of that array and then at the
 

02:17:51.780 --> 02:17:55.130 align:start position:0%
element of that array and then at the
end<02:17:51.810><c> we're</c><02:17:52.320><c> going</c><02:17:52.530><c> to</c><02:17:52.650><c> increment</c><02:17:53.310><c> I</c><02:17:53.790><c> by</c><02:17:54.090><c> 1</c><02:17:54.840><c> at</c>

02:17:55.130 --> 02:17:55.140 align:start position:0%
end we're going to increment I by 1 at
 

02:17:55.140 --> 02:17:57.350 align:start position:0%
end we're going to increment I by 1 at
the<02:17:55.410><c> end</c><02:17:55.470><c> of</c><02:17:55.650><c> each</c><02:17:55.770><c> iteration</c><02:17:55.880><c> so</c><02:17:56.880><c> look</c><02:17:57.150><c> what</c>

02:17:57.350 --> 02:17:57.360 align:start position:0%
the end of each iteration so look what
 

02:17:57.360 --> 02:17:59.750 align:start position:0%
the end of each iteration so look what
we're<02:17:57.510><c> doing</c><02:17:57.780><c> inside</c><02:17:58.200><c> the</c><02:17:58.410><c> array</c><02:17:58.620><c> we're</c><02:17:59.370><c> doing</c>

02:17:59.750 --> 02:17:59.760 align:start position:0%
we're doing inside the array we're doing
 

02:17:59.760 --> 02:18:03.020 align:start position:0%
we're doing inside the array we're doing
our<02:18:00.000><c> total</c><02:18:00.600><c> that</c><02:18:01.380><c> starts</c><02:18:01.830><c> out</c><02:18:01.980><c> at</c><02:18:02.160><c> 0</c><02:18:02.490><c> up</c><02:18:02.700><c> here</c>

02:18:03.020 --> 02:18:03.030 align:start position:0%
our total that starts out at 0 up here
 

02:18:03.030 --> 02:18:05.450 align:start position:0%
our total that starts out at 0 up here
and<02:18:03.210><c> we're</c><02:18:03.600><c> doing</c><02:18:03.660><c> plus</c><02:18:04.110><c> equals</c><02:18:04.650><c> that</c><02:18:05.160><c> means</c>

02:18:05.450 --> 02:18:05.460 align:start position:0%
and we're doing plus equals that means
 

02:18:05.460 --> 02:18:07.580 align:start position:0%
and we're doing plus equals that means
we're<02:18:05.610><c> going</c><02:18:05.700><c> to</c><02:18:05.790><c> do</c><02:18:05.880><c> our</c><02:18:05.910><c> total</c><02:18:06.780><c> equals</c><02:18:07.350><c> our</c>

02:18:07.580 --> 02:18:07.590 align:start position:0%
we're going to do our total equals our
 

02:18:07.590 --> 02:18:10.760 align:start position:0%
we're going to do our total equals our
total<02:18:08.130><c> plus</c><02:18:08.610><c> something</c><02:18:09.420><c> else</c><02:18:09.720><c> so</c><02:18:10.440><c> we're</c><02:18:10.650><c> gonna</c>

02:18:10.760 --> 02:18:10.770 align:start position:0%
total plus something else so we're gonna
 

02:18:10.770 --> 02:18:14.210 align:start position:0%
total plus something else so we're gonna
keep<02:18:11.130><c> adding</c><02:18:11.370><c> to</c><02:18:11.910><c> the</c><02:18:11.940><c> total</c><02:18:12.530><c> whatever</c><02:18:13.530><c> is</c><02:18:13.830><c> in</c>

02:18:14.210 --> 02:18:14.220 align:start position:0%
keep adding to the total whatever is in
 

02:18:14.220 --> 02:18:17.680 align:start position:0%
keep adding to the total whatever is in
the<02:18:14.460><c> array</c><02:18:14.730><c> at</c><02:18:15.000><c> that</c><02:18:15.420><c> index</c><02:18:16.020><c> so</c><02:18:16.440><c> our</c><02:18:16.770><c> array</c><02:18:17.250><c> I</c>

02:18:17.680 --> 02:18:17.690 align:start position:0%
the array at that index so our array I
 

02:18:17.690 --> 02:18:22.570 align:start position:0%
the array at that index so our array I
so<02:18:18.690><c> it</c><02:18:18.900><c> starts</c><02:18:19.260><c> at</c><02:18:19.350><c> 0</c><02:18:19.740><c> and</c><02:18:19.830><c> then</c><02:18:20.550><c> it</c><02:18:20.670><c> goes</c><02:18:20.850><c> 1</c><02:18:21.330><c> 2</c><02:18:21.900><c> 3</c>

02:18:22.570 --> 02:18:22.580 align:start position:0%
so it starts at 0 and then it goes 1 2 3
 

02:18:22.580 --> 02:18:26.180 align:start position:0%
so it starts at 0 and then it goes 1 2 3
until<02:18:23.580><c> it</c><02:18:23.700><c> gets</c><02:18:23.940><c> to</c><02:18:24.240><c> 4</c><02:18:25.020><c> which</c><02:18:25.590><c> is</c><02:18:25.800><c> the</c><02:18:25.950><c> length</c>

02:18:26.180 --> 02:18:26.190 align:start position:0%
until it gets to 4 which is the length
 

02:18:26.190 --> 02:18:28.130 align:start position:0%
until it gets to 4 which is the length
of<02:18:26.340><c> the</c><02:18:26.430><c> array</c><02:18:26.670><c> and</c><02:18:26.880><c> it</c><02:18:26.970><c> doesn't</c><02:18:27.390><c> even</c><02:18:27.510><c> run</c><02:18:27.960><c> the</c>

02:18:28.130 --> 02:18:28.140 align:start position:0%
of the array and it doesn't even run the
 

02:18:28.140 --> 02:18:31.940 align:start position:0%
of the array and it doesn't even run the
iteration<02:18:28.770><c> at</c><02:18:28.980><c> 4</c><02:18:29.340><c> and</c><02:18:29.670><c> there</c><02:18:30.390><c> is</c><02:18:30.570><c> no</c><02:18:30.810><c> index</c><02:18:31.470><c> 4</c>

02:18:31.940 --> 02:18:31.950 align:start position:0%
iteration at 4 and there is no index 4
 

02:18:31.950 --> 02:18:36.320 align:start position:0%
iteration at 4 and there is no index 4
on<02:18:32.280><c> the</c><02:18:32.550><c> array</c><02:18:32.850><c> remember</c><02:18:33.450><c> it's</c><02:18:33.600><c> 0</c><02:18:33.900><c> 1</c><02:18:34.200><c> 2</c><02:18:35.040><c> 3</c><02:18:35.610><c> so</c>

02:18:36.320 --> 02:18:36.330 align:start position:0%
on the array remember it's 0 1 2 3 so
 

02:18:36.330 --> 02:18:37.850 align:start position:0%
on the array remember it's 0 1 2 3 so
this<02:18:36.540><c> is</c><02:18:36.660><c> just</c><02:18:36.780><c> going</c><02:18:37.020><c> to</c><02:18:37.110><c> add</c><02:18:37.230><c> up</c><02:18:37.500><c> all</c><02:18:37.680><c> those</c>

02:18:37.850 --> 02:18:37.860 align:start position:0%
this is just going to add up all those
 

02:18:37.860 --> 02:18:40.820 align:start position:0%
this is just going to add up all those
numbers<02:18:37.920><c> if</c><02:18:38.610><c> we</c><02:18:39.180><c> run</c><02:18:39.480><c> this</c><02:18:39.660><c> we</c><02:18:39.960><c> can</c><02:18:40.170><c> see</c><02:18:40.410><c> it</c>

02:18:40.820 --> 02:18:40.830 align:start position:0%
numbers if we run this we can see it
 

02:18:40.830 --> 02:18:43.190 align:start position:0%
numbers if we run this we can see it
adds<02:18:41.040><c> up</c><02:18:41.250><c> to</c><02:18:41.280><c> 42</c><02:18:42.030><c> I'm</c><02:18:42.600><c> gonna</c><02:18:42.870><c> write</c><02:18:42.990><c> another</c>

02:18:43.190 --> 02:18:43.200 align:start position:0%
adds up to 42 I'm gonna write another
 

02:18:43.200 --> 02:18:45.170 align:start position:0%
adds up to 42 I'm gonna write another
for<02:18:43.530><c> loop</c><02:18:43.680><c> down</c><02:18:43.890><c> here</c><02:18:44.190><c> that's</c><02:18:44.430><c> going</c><02:18:44.730><c> to</c><02:18:44.880><c> add</c>

02:18:45.170 --> 02:18:45.180 align:start position:0%
for loop down here that's going to add
 

02:18:45.180 --> 02:18:47.990 align:start position:0%
for loop down here that's going to add
up<02:18:45.420><c> all</c><02:18:45.630><c> the</c><02:18:45.750><c> numbers</c><02:18:45.780><c> in</c><02:18:46.230><c> this</c><02:18:46.620><c> array</c><02:18:46.950><c> here</c><02:18:47.280><c> so</c>

02:18:47.990 --> 02:18:48.000 align:start position:0%
up all the numbers in this array here so
 

02:18:48.000 --> 02:18:54.680 align:start position:0%
up all the numbers in this array here so
we'll<02:18:48.660><c> do</c><02:18:48.810><c> for</c><02:18:49.490><c> our</c><02:18:50.490><c> I</c><02:18:51.380><c> equals</c><02:18:52.380><c> 0</c><02:18:53.220><c> and</c><02:18:53.610><c> then</c><02:18:54.570><c> we</c>

02:18:54.680 --> 02:18:54.690 align:start position:0%
we'll do for our I equals 0 and then we
 

02:18:54.690 --> 02:19:00.430 align:start position:0%
we'll do for our I equals 0 and then we
do<02:18:54.810><c> I</c><02:18:55.110><c> is</c><02:18:55.500><c> less</c><02:18:56.310><c> than</c><02:18:57.140><c> my</c><02:18:58.140><c> array</c><02:18:58.920><c> dot</c><02:18:59.670><c> length</c>

02:19:00.430 --> 02:19:00.440 align:start position:0%
do I is less than my array dot length
 

02:19:00.440 --> 02:19:07.070 align:start position:0%
do I is less than my array dot length
and<02:19:02.150><c> I</c><02:19:03.150><c> plus</c><02:19:04.140><c> plus</c><02:19:04.880><c> so</c><02:19:05.880><c> just</c><02:19:06.270><c> like</c><02:19:06.420><c> before</c><02:19:06.450><c> for</c>

02:19:07.070 --> 02:19:07.080 align:start position:0%
and I plus plus so just like before for
 

02:19:07.080 --> 02:19:10.430 align:start position:0%
and I plus plus so just like before for
each<02:19:07.680><c> element</c><02:19:08.190><c> in</c><02:19:08.490><c> my</c><02:19:09.240><c> array</c><02:19:09.540><c> we're</c><02:19:10.080><c> gonna</c><02:19:10.170><c> do</c>

02:19:10.430 --> 02:19:10.440 align:start position:0%
each element in my array we're gonna do
 

02:19:10.440 --> 02:19:14.880 align:start position:0%
each element in my array we're gonna do
a<02:19:10.710><c> my</c><02:19:11.370><c> we're</c><02:19:12.330><c> going</c><02:19:12.450><c> to</c><02:19:12.510><c> do</c><02:19:12.570><c> a</c><02:19:12.600><c> total</c>

02:19:14.880 --> 02:19:14.890 align:start position:0%
a my we're going to do a total
 

02:19:14.890 --> 02:19:21.480 align:start position:0%
a my we're going to do a total
plus<02:19:15.280><c> equals</c><02:19:16.560><c> my</c><02:19:17.560><c> array</c><02:19:18.900><c> index</c><02:19:19.900><c> I</c><02:19:20.081><c> so</c><02:19:20.621><c> we</c><02:19:21.461><c> have</c>

02:19:21.480 --> 02:19:21.490 align:start position:0%
plus equals my array index I so we have
 

02:19:21.490 --> 02:19:23.970 align:start position:0%
plus equals my array index I so we have
to<02:19:21.850><c> initialize</c><02:19:22.421><c> the</c><02:19:22.900><c> total</c><02:19:23.291><c> variable</c><02:19:23.770><c> right</c>

02:19:23.970 --> 02:19:23.980 align:start position:0%
to initialize the total variable right
 

02:19:23.980 --> 02:19:28.920 align:start position:0%
to initialize the total variable right
up<02:19:24.131><c> here</c><02:19:24.461><c> so</c><02:19:24.940><c> the</c><02:19:25.150><c> VAR</c><02:19:25.510><c> total</c><02:19:26.610><c> equals</c><02:19:27.610><c> zero</c><02:19:28.541><c> and</c>

02:19:28.920 --> 02:19:28.930 align:start position:0%
up here so the VAR total equals zero and
 

02:19:28.930 --> 02:19:31.111 align:start position:0%
up here so the VAR total equals zero and
then<02:19:29.591><c> at</c><02:19:29.680><c> the</c><02:19:29.831><c> end</c><02:19:29.860><c> we</c><02:19:30.371><c> can</c><02:19:30.551><c> just</c><02:19:30.760><c> we'll</c><02:19:31.091><c> just</c>

02:19:31.111 --> 02:19:31.121 align:start position:0%
then at the end we can just we'll just
 

02:19:31.121 --> 02:19:34.770 align:start position:0%
then at the end we can just we'll just
console<02:19:31.871><c> dot</c><02:19:32.081><c> log</c><02:19:32.140><c> that</c><02:19:33.131><c> out</c><02:19:33.310><c> to</c><02:19:33.940><c> see</c><02:19:34.301><c> what</c><02:19:34.570><c> the</c>

02:19:34.770 --> 02:19:34.780 align:start position:0%
console dot log that out to see what the
 

02:19:34.780 --> 02:19:40.111 align:start position:0%
console dot log that out to see what the
total<02:19:35.081><c> is</c><02:19:36.660><c> so</c><02:19:37.660><c> if</c><02:19:38.020><c> I</c><02:19:38.140><c> just</c><02:19:38.410><c> run</c><02:19:39.310><c> this</c><02:19:39.520><c> we</c><02:19:39.910><c> can</c>

02:19:40.111 --> 02:19:40.121 align:start position:0%
total is so if I just run this we can
 

02:19:40.121 --> 02:19:45.960 align:start position:0%
total is so if I just run this we can
see<02:19:40.331><c> that</c><02:19:40.541><c> the</c><02:19:40.751><c> total</c><02:19:40.961><c> this</c><02:19:41.171><c> time</c><02:19:41.410><c> is</c><02:19:41.650><c> 20</c>

02:19:45.960 --> 02:19:45.970 align:start position:0%
 
 

02:19:45.970 --> 02:19:48.690 align:start position:0%
 
if<02:19:46.080><c> you</c><02:19:47.080><c> have</c><02:19:47.260><c> a</c><02:19:47.290><c> multi-dimensional</c><02:19:48.040><c> or</c>

02:19:48.690 --> 02:19:48.700 align:start position:0%
if you have a multi-dimensional or
 

02:19:48.700 --> 02:19:51.360 align:start position:0%
if you have a multi-dimensional or
nested<02:19:49.480><c> array</c><02:19:49.900><c> you</c><02:19:50.530><c> can</c><02:19:50.561><c> use</c><02:19:50.980><c> nested</c>

02:19:51.360 --> 02:19:51.370 align:start position:0%
nested array you can use nested
 

02:19:51.370 --> 02:19:53.970 align:start position:0%
nested array you can use nested
for-loops<02:19:52.000><c> to</c><02:19:52.660><c> access</c><02:19:53.200><c> all</c><02:19:53.381><c> the</c><02:19:53.440><c> array</c>

02:19:53.970 --> 02:19:53.980 align:start position:0%
for-loops to access all the array
 

02:19:53.980 --> 02:19:56.131 align:start position:0%
for-loops to access all the array
elements<02:19:54.580><c> so</c><02:19:55.120><c> for</c><02:19:55.360><c> instance</c><02:19:55.721><c> we</c><02:19:55.900><c> have</c><02:19:55.931><c> this</c>

02:19:56.131 --> 02:19:56.141 align:start position:0%
elements so for instance we have this
 

02:19:56.141 --> 02:19:58.650 align:start position:0%
elements so for instance we have this
multiply<02:19:56.681><c> off</c><02:19:56.860><c> function</c><02:19:57.521><c> it's</c><02:19:58.061><c> defined</c><02:19:58.511><c> up</c>

02:19:58.650 --> 02:19:58.660 align:start position:0%
multiply off function it's defined up
 

02:19:58.660 --> 02:20:00.421 align:start position:0%
multiply off function it's defined up
here<02:19:58.690><c> but</c><02:19:59.171><c> we're</c><02:19:59.320><c> calling</c><02:19:59.530><c> it</c><02:19:59.801><c> here</c><02:20:00.131><c> and</c><02:20:00.280><c> we're</c>

02:20:00.421 --> 02:20:00.431 align:start position:0%
here but we're calling it here and we're
 

02:20:00.431 --> 02:20:03.301 align:start position:0%
here but we're calling it here and we're
passing<02:20:01.000><c> in</c><02:20:01.210><c> this</c><02:20:01.780><c> multi-dimensional</c><02:20:02.530><c> array</c>

02:20:03.301 --> 02:20:03.311 align:start position:0%
passing in this multi-dimensional array
 

02:20:03.311 --> 02:20:05.911 align:start position:0%
passing in this multi-dimensional array
which<02:20:04.210><c> is</c><02:20:04.360><c> basically</c><02:20:04.690><c> an</c><02:20:04.870><c> array</c><02:20:04.960><c> with</c><02:20:05.591><c> arrays</c>

02:20:05.911 --> 02:20:05.921 align:start position:0%
which is basically an array with arrays
 

02:20:05.921 --> 02:20:08.730 align:start position:0%
which is basically an array with arrays
inside<02:20:06.370><c> the</c><02:20:06.551><c> array</c><02:20:06.790><c> so</c><02:20:07.540><c> inside</c><02:20:08.290><c> the</c><02:20:08.500><c> first</c>

02:20:08.730 --> 02:20:08.740 align:start position:0%
inside the array so inside the first
 

02:20:08.740 --> 02:20:13.320 align:start position:0%
inside the array so inside the first
array<02:20:09.070><c> there</c><02:20:09.280><c> are</c><02:20:09.341><c> three</c><02:20:09.580><c> elements</c><02:20:09.761><c> 1</c><02:20:10.771><c> 2</c><02:20:11.940><c> 3</c><02:20:12.940><c> and</c>

02:20:13.320 --> 02:20:13.330 align:start position:0%
array there are three elements 1 2 3 and
 

02:20:13.330 --> 02:20:14.791 align:start position:0%
array there are three elements 1 2 3 and
you<02:20:13.391><c> can</c><02:20:13.450><c> see</c><02:20:13.570><c> each</c><02:20:13.841><c> of</c><02:20:13.990><c> those</c><02:20:14.110><c> elements</c><02:20:14.351><c> are</c>

02:20:14.791 --> 02:20:14.801 align:start position:0%
you can see each of those elements are
 

02:20:14.801 --> 02:20:16.711 align:start position:0%
you can see each of those elements are
an<02:20:14.950><c> array</c><02:20:15.190><c> with</c><02:20:15.580><c> their</c><02:20:15.790><c> own</c><02:20:16.000><c> set</c><02:20:16.301><c> of</c><02:20:16.330><c> elements</c>

02:20:16.711 --> 02:20:16.721 align:start position:0%
an array with their own set of elements
 

02:20:16.721 --> 02:20:19.140 align:start position:0%
an array with their own set of elements
so<02:20:17.620><c> we</c><02:20:17.801><c> are</c><02:20:17.891><c> going</c><02:20:18.131><c> to</c><02:20:18.221><c> use</c><02:20:18.370><c> nested</c><02:20:18.671><c> for-loops</c>

02:20:19.140 --> 02:20:19.150 align:start position:0%
so we are going to use nested for-loops
 

02:20:19.150 --> 02:20:21.810 align:start position:0%
so we are going to use nested for-loops
within<02:20:19.811><c> this</c><02:20:19.960><c> multiply</c><02:20:20.471><c> all</c><02:20:20.681><c> function</c><02:20:21.311><c> to</c>

02:20:21.810 --> 02:20:21.820 align:start position:0%
within this multiply all function to
 

02:20:21.820 --> 02:20:25.230 align:start position:0%
within this multiply all function to
multiply<02:20:22.360><c> every</c><02:20:22.900><c> number</c><02:20:23.650><c> in</c><02:20:24.040><c> these</c><02:20:24.641><c> nested</c>

02:20:25.230 --> 02:20:25.240 align:start position:0%
multiply every number in these nested
 

02:20:25.240 --> 02:20:27.690 align:start position:0%
multiply every number in these nested
arrays<02:20:25.480><c> here</c><02:20:25.841><c> so</c><02:20:26.591><c> let's</c><02:20:26.921><c> get</c><02:20:27.040><c> started</c><02:20:27.431><c> we're</c>

02:20:27.690 --> 02:20:27.700 align:start position:0%
arrays here so let's get started we're
 

02:20:27.700 --> 02:20:30.150 align:start position:0%
arrays here so let's get started we're
going<02:20:27.820><c> to</c><02:20:27.910><c> start</c><02:20:28.120><c> with</c><02:20:28.181><c> a</c><02:20:28.240><c> for</c><02:20:28.540><c> loop</c><02:20:28.721><c> and</c><02:20:29.500><c> it's</c>

02:20:30.150 --> 02:20:30.160 align:start position:0%
going to start with a for loop and it's
 

02:20:30.160 --> 02:20:31.560 align:start position:0%
going to start with a for loop and it's
going<02:20:30.311><c> to</c><02:20:30.400><c> look</c><02:20:30.551><c> just</c><02:20:30.610><c> like</c><02:20:30.971><c> the</c><02:20:31.120><c> other</c><02:20:31.150><c> four</c>

02:20:31.560 --> 02:20:31.570 align:start position:0%
going to look just like the other four
 

02:20:31.570 --> 02:20:34.560 align:start position:0%
going to look just like the other four
loops<02:20:31.841><c> that</c><02:20:31.990><c> we</c><02:20:32.141><c> started</c><02:20:32.591><c> I</c><02:20:32.801><c> equals</c><02:20:33.400><c> 0</c><02:20:34.150><c> we're</c>

02:20:34.560 --> 02:20:34.570 align:start position:0%
loops that we started I equals 0 we're
 

02:20:34.570 --> 02:20:37.381 align:start position:0%
loops that we started I equals 0 we're
going<02:20:34.721><c> to</c><02:20:34.780><c> initialize</c><02:20:35.381><c> I</c><02:20:35.591><c> to</c><02:20:35.620><c> 0</c><02:20:36.011><c> and</c><02:20:36.391><c> then</c>

02:20:37.381 --> 02:20:37.391 align:start position:0%
going to initialize I to 0 and then
 

02:20:37.391 --> 02:20:41.331 align:start position:0%
going to initialize I to 0 and then
we're<02:20:37.900><c> gonna</c><02:20:38.110><c> say</c><02:20:38.500><c> while</c><02:20:39.040><c> I</c><02:20:39.341><c> is</c><02:20:39.761><c> less</c><02:20:40.120><c> than</c><02:20:40.570><c> our</c>

02:20:41.331 --> 02:20:41.341 align:start position:0%
we're gonna say while I is less than our
 

02:20:41.341 --> 02:20:45.541 align:start position:0%
we're gonna say while I is less than our
length<02:20:42.341><c> and</c><02:20:43.801><c> then</c><02:20:44.801><c> we're</c><02:20:45.070><c> just</c><02:20:45.101><c> going</c><02:20:45.460><c> to</c>

02:20:45.541 --> 02:20:45.551 align:start position:0%
length and then we're just going to
 

02:20:45.551 --> 02:20:48.381 align:start position:0%
length and then we're just going to
increment<02:20:45.790><c> I</c><02:20:46.181><c> at</c><02:20:46.570><c> the</c><02:20:47.051><c> end</c><02:20:47.230><c> of</c><02:20:47.440><c> each</c><02:20:47.620><c> iteration</c>

02:20:48.381 --> 02:20:48.391 align:start position:0%
increment I at the end of each iteration
 

02:20:48.391 --> 02:20:51.541 align:start position:0%
increment I at the end of each iteration
now<02:20:49.391><c> are</c><02:20:49.811><c> that</c><02:20:50.561><c> linked</c><02:20:50.950><c> that's</c><02:20:51.250><c> going</c><02:20:51.490><c> to</c>

02:20:51.541 --> 02:20:51.551 align:start position:0%
now are that linked that's going to
 

02:20:51.551 --> 02:20:54.091 align:start position:0%
now are that linked that's going to
start<02:20:51.851><c> off</c><02:20:52.030><c> as</c><02:20:52.330><c> 3</c><02:20:52.870><c> because</c><02:20:53.230><c> we're</c><02:20:53.410><c> passing</c><02:20:53.921><c> in</c>

02:20:54.091 --> 02:20:54.101 align:start position:0%
start off as 3 because we're passing in
 

02:20:54.101 --> 02:20:57.631 align:start position:0%
start off as 3 because we're passing in
this<02:20:54.400><c> array</c><02:20:54.971><c> and</c><02:20:55.710><c> the</c><02:20:56.710><c> first</c><02:20:57.040><c> level</c><02:20:57.280><c> of</c><02:20:57.460><c> the</c>

02:20:57.631 --> 02:20:57.641 align:start position:0%
this array and the first level of the
 

02:20:57.641 --> 02:21:00.780 align:start position:0%
this array and the first level of the
array<02:20:57.851><c> there's</c><02:20:58.181><c> just</c><02:20:58.360><c> 1</c><02:20:58.631><c> 2</c><02:20:59.051><c> 3</c><02:20:59.410><c> elements</c><02:21:00.280><c> so</c>

02:21:00.780 --> 02:21:00.790 align:start position:0%
array there's just 1 2 3 elements so
 

02:21:00.790 --> 02:21:03.780 align:start position:0%
array there's just 1 2 3 elements so
that's<02:21:00.971><c> gonna</c><02:21:01.120><c> be</c><02:21:01.210><c> 3</c><02:21:01.660><c> but</c><02:21:02.381><c> now</c><02:21:02.980><c> we're</c><02:21:03.400><c> gonna</c><02:21:03.521><c> go</c>

02:21:03.780 --> 02:21:03.790 align:start position:0%
that's gonna be 3 but now we're gonna go
 

02:21:03.790 --> 02:21:06.720 align:start position:0%
that's gonna be 3 but now we're gonna go
inside<02:21:04.511><c> this</c><02:21:04.870><c> for</c><02:21:05.261><c> loop</c><02:21:05.500><c> and</c><02:21:05.710><c> create</c><02:21:06.250><c> another</c>

02:21:06.720 --> 02:21:06.730 align:start position:0%
inside this for loop and create another
 

02:21:06.730 --> 02:21:11.251 align:start position:0%
inside this for loop and create another
for<02:21:07.330><c> loop</c><02:21:07.570><c> so</c><02:21:08.410><c> we're</c><02:21:08.921><c> gonna</c><02:21:09.070><c> do</c><02:21:09.190><c> VAR</c><02:21:09.490><c> J</c><02:21:10.301><c> equals</c>

02:21:11.251 --> 02:21:11.261 align:start position:0%
for loop so we're gonna do VAR J equals
 

02:21:11.261 --> 02:21:14.371 align:start position:0%
for loop so we're gonna do VAR J equals
0<02:21:12.190><c> normally</c><02:21:13.091><c> its</c><02:21:13.240><c> standard</c><02:21:13.660><c> practice</c><02:21:13.811><c> to</c><02:21:14.200><c> call</c>

02:21:14.371 --> 02:21:14.381 align:start position:0%
0 normally its standard practice to call
 

02:21:14.381 --> 02:21:15.900 align:start position:0%
0 normally its standard practice to call
the<02:21:14.561><c> variable</c><02:21:14.860><c> that</c><02:21:15.011><c> we're</c><02:21:15.221><c> incrementing</c><02:21:15.521><c> I</c>

02:21:15.900 --> 02:21:15.910 align:start position:0%
the variable that we're incrementing I
 

02:21:15.910 --> 02:21:18.541 align:start position:0%
the variable that we're incrementing I
but<02:21:16.631><c> we</c><02:21:16.721><c> already</c><02:21:16.900><c> have</c><02:21:17.141><c> an</c><02:21:17.261><c> eye</c><02:21:17.530><c> within</c><02:21:18.190><c> this</c>

02:21:18.541 --> 02:21:18.551 align:start position:0%
but we already have an eye within this
 

02:21:18.551 --> 02:21:20.911 align:start position:0%
but we already have an eye within this
scope<02:21:18.940><c> so</c><02:21:19.511><c> we</c><02:21:19.811><c> need</c><02:21:19.990><c> to</c><02:21:20.110><c> create</c><02:21:20.320><c> another</c><02:21:20.471><c> name</c>

02:21:20.911 --> 02:21:20.921 align:start position:0%
scope so we need to create another name
 

02:21:20.921 --> 02:21:22.770 align:start position:0%
scope so we need to create another name
and<02:21:21.280><c> it's</c><02:21:21.490><c> pretty</c><02:21:21.820><c> standard</c><02:21:22.061><c> to</c><02:21:22.391><c> call</c><02:21:22.601><c> the</c>

02:21:22.770 --> 02:21:22.780 align:start position:0%
and it's pretty standard to call the
 

02:21:22.780 --> 02:21:26.551 align:start position:0%
and it's pretty standard to call the
next<02:21:23.080><c> variable</c><02:21:23.921><c> J</c><02:21:24.280><c> because</c><02:21:25.120><c> J</c><02:21:25.301><c> is</c><02:21:25.391><c> after</c><02:21:25.690><c> I</c><02:21:25.721><c> so</c>

02:21:26.551 --> 02:21:26.561 align:start position:0%
next variable J because J is after I so
 

02:21:26.561 --> 02:21:29.911 align:start position:0%
next variable J because J is after I so
now<02:21:27.101><c> we're</c><02:21:27.370><c> gonna</c><02:21:27.460><c> do</c><02:21:27.641><c> J</c><02:21:28.061><c> while</c><02:21:28.721><c> J</c><02:21:29.021><c> is</c><02:21:29.261><c> less</c>

02:21:29.911 --> 02:21:29.921 align:start position:0%
now we're gonna do J while J is less
 

02:21:29.921 --> 02:21:31.980 align:start position:0%
now we're gonna do J while J is less
than<02:21:30.280><c> now</c><02:21:31.030><c> this</c><02:21:31.240><c> is</c><02:21:31.360><c> where</c><02:21:31.480><c> it</c><02:21:31.570><c> gets</c><02:21:31.660><c> a</c><02:21:31.841><c> little</c>

02:21:31.980 --> 02:21:31.990 align:start position:0%
than now this is where it gets a little
 

02:21:31.990 --> 02:21:35.131 align:start position:0%
than now this is where it gets a little
tricky<02:21:32.500><c> we're</c><02:21:33.070><c> gonna</c><02:21:33.280><c> do</c><02:21:33.761><c> while</c><02:21:34.120><c> a</c><02:21:34.360><c> is</c><02:21:34.841><c> less</c>

02:21:35.131 --> 02:21:35.141 align:start position:0%
tricky we're gonna do while a is less
 

02:21:35.141 --> 02:21:40.801 align:start position:0%
tricky we're gonna do while a is less
than<02:21:35.440><c> our</c><02:21:36.030><c> index</c><02:21:37.030><c> I</c><02:21:37.681><c> dot</c><02:21:38.681><c> length</c><02:21:39.570><c> also</c><02:21:40.570><c> we're</c>

02:21:40.801 --> 02:21:40.811 align:start position:0%
than our index I dot length also we're
 

02:21:40.811 --> 02:21:44.310 align:start position:0%
than our index I dot length also we're
gonna<02:21:40.900><c> increment</c><02:21:41.171><c> J</c><02:21:41.410><c> here</c><02:21:42.070><c> so</c><02:21:43.061><c> this</c><02:21:43.721><c> is</c><02:21:43.990><c> going</c>

02:21:44.310 --> 02:21:44.320 align:start position:0%
gonna increment J here so this is going
 

02:21:44.320 --> 02:21:46.950 align:start position:0%
gonna increment J here so this is going
to<02:21:44.530><c> change</c><02:21:44.830><c> so</c><02:21:45.311><c> first</c><02:21:45.610><c> the</c><02:21:46.091><c> first</c><02:21:46.120><c> iteration</c>

02:21:46.950 --> 02:21:46.960 align:start position:0%
to change so first the first iteration
 

02:21:46.960 --> 02:21:49.140 align:start position:0%
to change so first the first iteration
of<02:21:47.110><c> this</c><02:21:47.290><c> outer</c><02:21:47.471><c> for</c><02:21:48.070><c> loop</c><02:21:48.101><c> we're</c><02:21:48.730><c> looking</c><02:21:49.061><c> at</c>

02:21:49.140 --> 02:21:49.150 align:start position:0%
of this outer for loop we're looking at
 

02:21:49.150 --> 02:21:50.850 align:start position:0%
of this outer for loop we're looking at
the<02:21:49.271><c> length</c><02:21:49.450><c> of</c><02:21:49.631><c> this</c><02:21:49.750><c> array</c><02:21:50.080><c> then</c><02:21:50.650><c> we're</c>

02:21:50.850 --> 02:21:50.860 align:start position:0%
the length of this array then we're
 

02:21:50.860 --> 02:21:52.110 align:start position:0%
the length of this array then we're
linking<02:21:50.980><c> looking</c><02:21:51.521><c> at</c><02:21:51.610><c> the</c><02:21:51.700><c> length</c><02:21:51.851><c> of</c><02:21:52.000><c> this</c>

02:21:52.110 --> 02:21:52.120 align:start position:0%
linking looking at the length of this
 

02:21:52.120 --> 02:21:54.060 align:start position:0%
linking looking at the length of this
array<02:21:52.421><c> then</c><02:21:53.021><c> we're</c><02:21:53.261><c> looking</c><02:21:53.591><c> at</c><02:21:53.740><c> the</c><02:21:53.860><c> length</c>

02:21:54.060 --> 02:21:54.070 align:start position:0%
array then we're looking at the length
 

02:21:54.070 --> 02:21:56.581 align:start position:0%
array then we're looking at the length
of<02:21:54.311><c> this</c><02:21:54.521><c> array</c><02:21:54.820><c> the</c><02:21:55.511><c> index</c><02:21:56.080><c> is</c><02:21:56.230><c> going</c><02:21:56.351><c> to</c><02:21:56.500><c> be</c>

02:21:56.581 --> 02:21:56.591 align:start position:0%
of this array the index is going to be
 

02:21:56.591 --> 02:21:57.900 align:start position:0%
of this array the index is going to be
different<02:21:56.801><c> every</c><02:21:56.980><c> time</c><02:21:57.311><c> so</c><02:21:57.521><c> we're</c><02:21:57.641><c> going</c><02:21:57.761><c> to</c>

02:21:57.900 --> 02:21:57.910 align:start position:0%
different every time so we're going to
 

02:21:57.910 --> 02:21:59.990 align:start position:0%
different every time so we're going to
be<02:21:58.120><c> going</c><02:21:58.601><c> to</c><02:21:58.750><c> each</c><02:21:59.200><c> different</c>

02:21:59.990 --> 02:22:00.000 align:start position:0%
be going to each different
 

02:22:00.000 --> 02:22:04.230 align:start position:0%
be going to each different
inside<02:22:01.000><c> the</c><02:22:01.210><c> nested</c><02:22:01.540><c> array</c><02:22:02.101><c> so</c><02:22:03.101><c> at</c><02:22:03.580><c> this</c><02:22:03.910><c> point</c>

02:22:04.230 --> 02:22:04.240 align:start position:0%
inside the nested array so at this point
 

02:22:04.240 --> 02:22:07.410 align:start position:0%
inside the nested array so at this point
we<02:22:05.050><c> just</c><02:22:05.080><c> have</c><02:22:05.500><c> to</c><02:22:05.920><c> multiply</c><02:22:06.730><c> all</c><02:22:07.120><c> the</c><02:22:07.300><c> numbers</c>

02:22:07.410 --> 02:22:07.420 align:start position:0%
we just have to multiply all the numbers
 

02:22:07.420 --> 02:22:09.631 align:start position:0%
we just have to multiply all the numbers
together<02:22:07.720><c> so</c><02:22:08.410><c> we</c><02:22:08.561><c> already</c><02:22:08.830><c> have</c><02:22:08.950><c> the</c><02:22:09.130><c> product</c>

02:22:09.631 --> 02:22:09.641 align:start position:0%
together so we already have the product
 

02:22:09.641 --> 02:22:11.490 align:start position:0%
together so we already have the product
that<02:22:09.760><c> we've</c><02:22:09.880><c> defined</c><02:22:10.271><c> above</c><02:22:10.630><c> so</c><02:22:11.230><c> we're</c><02:22:11.380><c> gonna</c>

02:22:11.490 --> 02:22:11.500 align:start position:0%
that we've defined above so we're gonna
 

02:22:11.500 --> 02:22:15.540 align:start position:0%
that we've defined above so we're gonna
do<02:22:11.590><c> product</c><02:22:12.160><c> x</c><02:22:13.170><c> equals</c><02:22:14.170><c> which</c><02:22:15.160><c> is</c><02:22:15.280><c> just</c><02:22:15.431><c> gonna</c>

02:22:15.540 --> 02:22:15.550 align:start position:0%
do product x equals which is just gonna
 

02:22:15.550 --> 02:22:17.790 align:start position:0%
do product x equals which is just gonna
multiply<02:22:15.790><c> everything</c><02:22:16.420><c> together</c><02:22:16.570><c> and</c><02:22:17.110><c> we're</c>

02:22:17.790 --> 02:22:17.800 align:start position:0%
multiply everything together and we're
 

02:22:17.800 --> 02:22:24.540 align:start position:0%
multiply everything together and we're
going<02:22:18.070><c> to</c><02:22:18.160><c> do</c><02:22:18.280><c> our</c><02:22:18.700><c> eye</c><02:22:21.750><c> Hey</c><02:22:22.780><c> so</c><02:22:23.771><c> the</c><02:22:24.280><c> eye</c>

02:22:24.540 --> 02:22:24.550 align:start position:0%
going to do our eye Hey so the eye
 

02:22:24.550 --> 02:22:28.410 align:start position:0%
going to do our eye Hey so the eye
references<02:22:25.480><c> the</c><02:22:25.811><c> outer</c><02:22:26.760><c> array</c><02:22:27.760><c> and</c><02:22:28.090><c> the</c><02:22:28.181><c> J</c>

02:22:28.410 --> 02:22:28.420 align:start position:0%
references the outer array and the J
 

02:22:28.420 --> 02:22:32.280 align:start position:0%
references the outer array and the J
references<02:22:29.290><c> the</c><02:22:29.800><c> inner</c><02:22:30.130><c> array</c><02:22:30.870><c> within</c><02:22:31.870><c> the</c>

02:22:32.280 --> 02:22:32.290 align:start position:0%
references the inner array within the
 

02:22:32.290 --> 02:22:35.040 align:start position:0%
references the inner array within the
what<02:22:32.470><c> we're</c><02:22:32.620><c> passing</c><02:22:33.040><c> in</c><02:22:33.190><c> and</c><02:22:33.460><c> now</c><02:22:34.330><c> we're</c><02:22:34.870><c> done</c>

02:22:35.040 --> 02:22:35.050 align:start position:0%
what we're passing in and now we're done
 

02:22:35.050 --> 02:22:38.250 align:start position:0%
what we're passing in and now we're done
so<02:22:35.771><c> let's</c><02:22:36.700><c> we</c><02:22:37.181><c> have</c><02:22:37.510><c> the</c><02:22:37.630><c> console</c><02:22:38.080><c> dot</c><02:22:38.200><c> log</c>

02:22:38.250 --> 02:22:38.260 align:start position:0%
so let's we have the console dot log
 

02:22:38.260 --> 02:22:40.020 align:start position:0%
so let's we have the console dot log
here<02:22:38.800><c> so</c><02:22:38.980><c> let's</c><02:22:39.130><c> run</c><02:22:39.400><c> this</c><02:22:39.521><c> and</c><02:22:39.760><c> see</c><02:22:39.790><c> what</c>

02:22:40.020 --> 02:22:40.030 align:start position:0%
here so let's run this and see what
 

02:22:40.030 --> 02:22:48.070 align:start position:0%
here so let's run this and see what
happens<02:22:40.090><c> and</c><02:22:42.720><c> 5040</c>

02:22:48.070 --> 02:22:48.080 align:start position:0%
 
 

02:22:48.080 --> 02:22:50.650 align:start position:0%
 
next<02:22:48.890><c> I'm</c><02:22:49.010><c> going</c><02:22:49.280><c> to</c><02:22:49.340><c> talk</c><02:22:49.580><c> about</c><02:22:49.729><c> do-while</c>

02:22:50.650 --> 02:22:50.660 align:start position:0%
next I'm going to talk about do-while
 

02:22:50.660 --> 02:22:53.380 align:start position:0%
next I'm going to talk about do-while
loops<02:22:51.140><c> now</c><02:22:51.770><c> we</c><02:22:51.830><c> already</c><02:22:52.280><c> talked</c><02:22:52.700><c> about</c><02:22:53.000><c> while</c>

02:22:53.380 --> 02:22:53.390 align:start position:0%
loops now we already talked about while
 

02:22:53.390 --> 02:22:55.809 align:start position:0%
loops now we already talked about while
loops<02:22:53.840><c> and</c><02:22:54.170><c> I'm</c><02:22:54.710><c> gonna</c><02:22:54.859><c> review</c><02:22:55.280><c> this</c><02:22:55.490><c> while</c>

02:22:55.809 --> 02:22:55.819 align:start position:0%
loops and I'm gonna review this while
 

02:22:55.819 --> 02:22:57.520 align:start position:0%
loops and I'm gonna review this while
loop<02:22:56.120><c> and</c><02:22:56.390><c> then</c><02:22:56.810><c> I</c><02:22:56.870><c> will</c><02:22:57.020><c> tell</c><02:22:57.200><c> you</c><02:22:57.319><c> how</c><02:22:57.500><c> a</c>

02:22:57.520 --> 02:22:57.530 align:start position:0%
loop and then I will tell you how a
 

02:22:57.530 --> 02:23:00.040 align:start position:0%
loop and then I will tell you how a
do-while<02:22:58.310><c> loop</c><02:22:58.670><c> is</c><02:22:58.910><c> different</c><02:22:59.569><c> than</c><02:22:59.750><c> a</c><02:22:59.840><c> while</c>

02:23:00.040 --> 02:23:00.050 align:start position:0%
do-while loop is different than a while
 

02:23:00.050 --> 02:23:04.059 align:start position:0%
do-while loop is different than a while
loop<02:23:00.319><c> so</c><02:23:00.620><c> this</c><02:23:01.370><c> while</c><02:23:01.729><c> loop</c><02:23:02.120><c> first</c><02:23:02.830><c> checks</c><02:23:03.830><c> the</c>

02:23:04.059 --> 02:23:04.069 align:start position:0%
loop so this while loop first checks the
 

02:23:04.069 --> 02:23:07.570 align:start position:0%
loop so this while loop first checks the
condition<02:23:04.670><c> before</c><02:23:05.300><c> it</c><02:23:05.899><c> runs</c><02:23:06.200><c> any</c><02:23:06.530><c> code</c><02:23:07.040><c> within</c>

02:23:07.570 --> 02:23:07.580 align:start position:0%
condition before it runs any code within
 

02:23:07.580 --> 02:23:12.010 align:start position:0%
condition before it runs any code within
the<02:23:08.330><c> loop</c><02:23:08.540><c> a</c><02:23:08.840><c> do</c><02:23:09.830><c> while</c><02:23:10.160><c> loop</c><02:23:10.220><c> will</c><02:23:11.120><c> always</c><02:23:11.330><c> run</c>

02:23:12.010 --> 02:23:12.020 align:start position:0%
the loop a do while loop will always run
 

02:23:12.020 --> 02:23:15.550 align:start position:0%
the loop a do while loop will always run
at<02:23:12.229><c> least</c><02:23:12.470><c> one</c><02:23:13.160><c> time</c><02:23:13.640><c> and</c><02:23:14.000><c> then</c><02:23:14.090><c> it</c><02:23:14.810><c> will</c><02:23:15.290><c> check</c>

02:23:15.550 --> 02:23:15.560 align:start position:0%
at least one time and then it will check
 

02:23:15.560 --> 02:23:19.090 align:start position:0%
at least one time and then it will check
the<02:23:15.620><c> condition</c><02:23:15.920><c> so</c><02:23:16.880><c> here</c><02:23:17.720><c> we</c><02:23:18.140><c> have</c><02:23:18.439><c> this</c><02:23:18.710><c> empty</c>

02:23:19.090 --> 02:23:19.100 align:start position:0%
the condition so here we have this empty
 

02:23:19.100 --> 02:23:22.179 align:start position:0%
the condition so here we have this empty
array<02:23:19.340><c> we</c><02:23:19.490><c> have</c><02:23:19.520><c> I</c><02:23:19.819><c> equals</c><02:23:20.300><c> 10</c><02:23:20.660><c> so</c><02:23:21.229><c> while</c><02:23:21.800><c> I</c><02:23:22.069><c> is</c>

02:23:22.179 --> 02:23:22.189 align:start position:0%
array we have I equals 10 so while I is
 

02:23:22.189 --> 02:23:26.200 align:start position:0%
array we have I equals 10 so while I is
less<02:23:22.819><c> than</c><02:23:23.359><c> 5</c><02:23:23.720><c> well</c><02:23:24.649><c> I</c><02:23:24.890><c> is</c><02:23:25.100><c> not</c><02:23:25.370><c> less</c><02:23:25.640><c> than</c><02:23:25.670><c> 5</c><02:23:26.000><c> so</c>

02:23:26.200 --> 02:23:26.210 align:start position:0%
less than 5 well I is not less than 5 so
 

02:23:26.210 --> 02:23:27.880 align:start position:0%
less than 5 well I is not less than 5 so
it's<02:23:26.359><c> not</c><02:23:26.479><c> gonna</c><02:23:26.660><c> do</c><02:23:26.810><c> anything</c><02:23:27.080><c> let's</c><02:23:27.710><c> see</c>

02:23:27.880 --> 02:23:27.890 align:start position:0%
it's not gonna do anything let's see
 

02:23:27.890 --> 02:23:30.760 align:start position:0%
it's not gonna do anything let's see
what<02:23:28.040><c> happens</c><02:23:28.430><c> so</c><02:23:28.970><c> we</c><02:23:29.210><c> see</c><02:23:29.420><c> it</c><02:23:29.689><c> logged</c><02:23:30.080><c> out</c><02:23:30.260><c> 10</c>

02:23:30.760 --> 02:23:30.770 align:start position:0%
what happens so we see it logged out 10
 

02:23:30.770 --> 02:23:33.460 align:start position:0%
what happens so we see it logged out 10
and<02:23:31.100><c> then</c><02:23:31.310><c> an</c><02:23:31.430><c> empty</c><02:23:31.670><c> array</c><02:23:32.330><c> because</c><02:23:33.050><c> I</c>

02:23:33.460 --> 02:23:33.470 align:start position:0%
and then an empty array because I
 

02:23:33.470 --> 02:23:35.800 align:start position:0%
and then an empty array because I
started<02:23:34.010><c> as</c><02:23:34.160><c> 10</c><02:23:34.460><c> and</c><02:23:34.729><c> my</c><02:23:35.000><c> array</c><02:23:35.270><c> started</c><02:23:35.750><c> as</c>

02:23:35.800 --> 02:23:35.810 align:start position:0%
started as 10 and my array started as
 

02:23:35.810 --> 02:23:37.389 align:start position:0%
started as 10 and my array started as
this<02:23:35.870><c> empty</c><02:23:36.080><c> erase</c><02:23:36.410><c> you</c><02:23:36.649><c> were</c><02:23:36.740><c> logging</c><02:23:36.979><c> the</c><02:23:37.220><c> I</c>

02:23:37.389 --> 02:23:37.399 align:start position:0%
this empty erase you were logging the I
 

02:23:37.399 --> 02:23:40.389 align:start position:0%
this empty erase you were logging the I
and<02:23:37.760><c> my</c><02:23:38.240><c> array</c><02:23:38.540><c> with</c><02:23:39.319><c> a</c><02:23:39.350><c> do-while</c><02:23:39.830><c> loop</c><02:23:40.130><c> it's</c>

02:23:40.389 --> 02:23:40.399 align:start position:0%
and my array with a do-while loop it's
 

02:23:40.399 --> 02:23:42.969 align:start position:0%
and my array with a do-while loop it's
different<02:23:40.819><c> so</c><02:23:41.270><c> what</c><02:23:41.390><c> I'm</c><02:23:41.450><c> going</c><02:23:41.569><c> to</c><02:23:41.600><c> do</c><02:23:41.780><c> is</c><02:23:41.990><c> cut</c>

02:23:42.969 --> 02:23:42.979 align:start position:0%
different so what I'm going to do is cut
 

02:23:42.979 --> 02:23:45.130 align:start position:0%
different so what I'm going to do is cut
this<02:23:43.310><c> line</c><02:23:43.880><c> up</c><02:23:44.120><c> here</c><02:23:44.450><c> and</c><02:23:44.510><c> put</c><02:23:44.840><c> it</c><02:23:44.899><c> at</c><02:23:44.960><c> the</c><02:23:45.020><c> end</c>

02:23:45.130 --> 02:23:45.140 align:start position:0%
this line up here and put it at the end
 

02:23:45.140 --> 02:23:47.830 align:start position:0%
this line up here and put it at the end
and<02:23:45.649><c> then</c><02:23:46.430><c> at</c><02:23:46.520><c> the</c><02:23:46.640><c> beginning</c><02:23:46.760><c> I'm</c><02:23:47.359><c> gonna</c><02:23:47.600><c> put</c>

02:23:47.830 --> 02:23:47.840 align:start position:0%
and then at the beginning I'm gonna put
 

02:23:47.840 --> 02:23:51.099 align:start position:0%
and then at the beginning I'm gonna put
the<02:23:47.990><c> keyword</c><02:23:48.530><c> do</c><02:23:49.220><c> in</c><02:23:49.580><c> a</c><02:23:49.850><c> do-while</c><02:23:50.240><c> loop</c><02:23:50.569><c> this</c>

02:23:51.099 --> 02:23:51.109 align:start position:0%
the keyword do in a do-while loop this
 

02:23:51.109 --> 02:23:53.950 align:start position:0%
the keyword do in a do-while loop this
is<02:23:51.290><c> always</c><02:23:51.710><c> run</c><02:23:51.979><c> at</c><02:23:52.160><c> least</c><02:23:52.340><c> once</c><02:23:52.819><c> before</c><02:23:53.359><c> it</c>

02:23:53.950 --> 02:23:53.960 align:start position:0%
is always run at least once before it
 

02:23:53.960 --> 02:23:55.960 align:start position:0%
is always run at least once before it
checks<02:23:54.229><c> the</c><02:23:54.350><c> condition</c><02:23:54.560><c> so</c><02:23:55.310><c> first</c><02:23:55.640><c> it's</c><02:23:55.819><c> going</c>

02:23:55.960 --> 02:23:55.970 align:start position:0%
checks the condition so first it's going
 

02:23:55.970 --> 02:23:58.059 align:start position:0%
checks the condition so first it's going
to<02:23:56.120><c> do</c><02:23:56.270><c> these</c><02:23:56.479><c> things</c><02:23:56.780><c> and</c><02:23:56.990><c> then</c><02:23:57.680><c> it's</c><02:23:57.890><c> going</c>

02:23:58.059 --> 02:23:58.069 align:start position:0%
to do these things and then it's going
 

02:23:58.069 --> 02:24:00.160 align:start position:0%
to do these things and then it's going
to<02:23:58.160><c> check</c><02:23:58.370><c> the</c><02:23:58.550><c> condition</c><02:23:59.060><c> in</c><02:23:59.210><c> this</c><02:23:59.660><c> case</c><02:23:59.720><c> it's</c>

02:24:00.160 --> 02:24:00.170 align:start position:0%
to check the condition in this case it's
 

02:24:00.170 --> 02:24:01.750 align:start position:0%
to check the condition in this case it's
going<02:24:00.319><c> to</c><02:24:00.410><c> find</c><02:24:00.649><c> out</c><02:24:00.770><c> the</c><02:24:00.890><c> condition</c><02:24:01.100><c> as</c><02:24:01.430><c> false</c>

02:24:01.750 --> 02:24:01.760 align:start position:0%
going to find out the condition as false
 

02:24:01.760 --> 02:24:03.580 align:start position:0%
going to find out the condition as false
and<02:24:02.060><c> it's</c><02:24:02.540><c> going</c><02:24:02.810><c> to</c><02:24:02.960><c> break</c><02:24:03.229><c> out</c><02:24:03.380><c> of</c><02:24:03.410><c> the</c><02:24:03.560><c> loop</c>

02:24:03.580 --> 02:24:03.590 align:start position:0%
and it's going to break out of the loop
 

02:24:03.590 --> 02:24:05.520 align:start position:0%
and it's going to break out of the loop
let's<02:24:04.189><c> see</c><02:24:04.370><c> what</c><02:24:04.460><c> happens</c><02:24:04.790><c> here</c>

02:24:05.520 --> 02:24:05.530 align:start position:0%
let's see what happens here
 

02:24:05.530 --> 02:24:10.240 align:start position:0%
let's see what happens here
see<02:24:06.530><c> now</c><02:24:06.859><c> I</c><02:24:06.890><c> is</c><02:24:07.189><c> 11</c><02:24:08.060><c> and</c><02:24:08.270><c> the</c><02:24:08.750><c> array</c><02:24:09.020><c> has</c><02:24:09.649><c> the</c><02:24:09.979><c> 10</c>

02:24:10.240 --> 02:24:10.250 align:start position:0%
see now I is 11 and the array has the 10
 

02:24:10.250 --> 02:24:14.801 align:start position:0%
see now I is 11 and the array has the 10
added<02:24:10.700><c> to</c><02:24:10.850><c> it</c>

02:24:14.801 --> 02:24:14.811 align:start position:0%
 
 

02:24:14.811 --> 02:24:18.371 align:start position:0%
 
this<02:24:15.591><c> is</c><02:24:15.860><c> a</c><02:24:15.891><c> coding</c><02:24:16.551><c> challenge</c><02:24:17.120><c> we</c><02:24:17.841><c> have</c><02:24:18.110><c> this</c>

02:24:18.371 --> 02:24:18.381 align:start position:0%
this is a coding challenge we have this
 

02:24:18.381 --> 02:24:21.220 align:start position:0%
this is a coding challenge we have this
array<02:24:18.891><c> of</c><02:24:19.070><c> objects</c><02:24:19.610><c> in</c><02:24:19.761><c> our</c><02:24:20.030><c> context</c><02:24:20.811><c> lists</c>

02:24:21.220 --> 02:24:21.230 align:start position:0%
array of objects in our context lists
 

02:24:21.230 --> 02:24:23.921 align:start position:0%
array of objects in our context lists
and<02:24:21.381><c> you'll</c><02:24:22.131><c> see</c><02:24:22.370><c> each</c><02:24:22.610><c> object</c><02:24:23.330><c> is</c><02:24:23.511><c> one</c><02:24:23.780><c> of</c><02:24:23.870><c> our</c>

02:24:23.921 --> 02:24:23.931 align:start position:0%
and you'll see each object is one of our
 

02:24:23.931 --> 02:24:26.201 align:start position:0%
and you'll see each object is one of our
contacts<02:24:24.410><c> with</c><02:24:24.650><c> the</c><02:24:25.041><c> first</c><02:24:25.311><c> name</c><02:24:25.551><c> a</c><02:24:25.580><c> last</c><02:24:25.910><c> name</c>

02:24:26.201 --> 02:24:26.211 align:start position:0%
contacts with the first name a last name
 

02:24:26.211 --> 02:24:29.381 align:start position:0%
contacts with the first name a last name
a<02:24:26.271><c> number</c><02:24:26.631><c> and</c><02:24:27.021><c> likes</c><02:24:27.530><c> so</c><02:24:28.341><c> these</c><02:24:28.940><c> are</c><02:24:29.091><c> key</c>

02:24:29.381 --> 02:24:29.391 align:start position:0%
a number and likes so these are key
 

02:24:29.391 --> 02:24:32.320 align:start position:0%
a number and likes so these are key
value<02:24:29.421><c> pairs</c><02:24:30.110><c> here</c><02:24:30.561><c> so</c><02:24:31.221><c> what</c><02:24:31.551><c> we</c><02:24:31.761><c> want</c><02:24:32.030><c> to</c><02:24:32.120><c> do</c>

02:24:32.320 --> 02:24:32.330 align:start position:0%
value pairs here so what we want to do
 

02:24:32.330 --> 02:24:35.860 align:start position:0%
value pairs here so what we want to do
is<02:24:32.570><c> create</c><02:24:33.351><c> this</c><02:24:33.681><c> lookup</c><02:24:34.461><c> profile</c><02:24:35.240><c> function</c>

02:24:35.860 --> 02:24:35.870 align:start position:0%
is create this lookup profile function
 

02:24:35.870 --> 02:24:38.621 align:start position:0%
is create this lookup profile function
where<02:24:36.320><c> we</c><02:24:36.440><c> pass</c><02:24:36.740><c> in</c><02:24:37.101><c> a</c><02:24:37.251><c> name</c><02:24:37.671><c> this</c><02:24:38.120><c> is</c><02:24:38.150><c> a</c><02:24:38.301><c> first</c>

02:24:38.621 --> 02:24:38.631 align:start position:0%
where we pass in a name this is a first
 

02:24:38.631 --> 02:24:41.501 align:start position:0%
where we pass in a name this is a first
name<02:24:38.870><c> and</c><02:24:39.141><c> the</c><02:24:39.711><c> property</c><02:24:40.280><c> and</c><02:24:40.521><c> it's</c><02:24:41.150><c> going</c><02:24:41.360><c> to</c>

02:24:41.501 --> 02:24:41.511 align:start position:0%
name and the property and it's going to
 

02:24:41.511 --> 02:24:43.810 align:start position:0%
name and the property and it's going to
return<02:24:41.900><c> the</c><02:24:42.141><c> value</c><02:24:42.471><c> of</c><02:24:42.501><c> that</c><02:24:42.650><c> property</c><02:24:42.950><c> for</c>

02:24:43.810 --> 02:24:43.820 align:start position:0%
return the value of that property for
 

02:24:43.820 --> 02:24:46.390 align:start position:0%
return the value of that property for
instance<02:24:44.211><c> if</c><02:24:44.421><c> we</c><02:24:44.931><c> pass</c><02:24:45.171><c> in</c><02:24:45.410><c> the</c><02:24:45.440><c> name</c><02:24:45.650><c> christen</c>

02:24:46.390 --> 02:24:46.400 align:start position:0%
instance if we pass in the name christen
 

02:24:46.400 --> 02:24:49.211 align:start position:0%
instance if we pass in the name christen
here<02:24:46.791><c> and</c><02:24:47.001><c> we</c><02:24:47.721><c> pass</c><02:24:48.021><c> in</c><02:24:48.261><c> the</c><02:24:48.291><c> property</c><02:24:48.950><c> of</c><02:24:49.160><c> a</c>

02:24:49.211 --> 02:24:49.221 align:start position:0%
here and we pass in the property of a
 

02:24:49.221 --> 02:24:52.841 align:start position:0%
here and we pass in the property of a
number<02:24:49.881><c> it</c><02:24:50.330><c> should</c><02:24:50.480><c> return</c><02:24:51.080><c> unknown</c><02:24:51.830><c> if</c><02:24:52.221><c> we</c>

02:24:52.841 --> 02:24:52.851 align:start position:0%
number it should return unknown if we
 

02:24:52.851 --> 02:24:56.081 align:start position:0%
number it should return unknown if we
pass<02:24:53.181><c> in</c><02:24:53.450><c> the</c><02:24:53.480><c> first</c><02:24:54.021><c> name</c><02:24:54.261><c> of</c><02:24:54.820><c> Sherlock</c><02:24:55.820><c> up</c>

02:24:56.081 --> 02:24:56.091 align:start position:0%
pass in the first name of Sherlock up
 

02:24:56.091 --> 02:25:00.041 align:start position:0%
pass in the first name of Sherlock up
here<02:24:56.421><c> and</c><02:24:56.601><c> we</c><02:24:57.110><c> return</c><02:24:57.620><c> the</c><02:24:57.830><c> property</c><02:24:58.101><c> and</c><02:24:59.051><c> we</c>

02:25:00.041 --> 02:25:00.051 align:start position:0%
here and we return the property and we
 

02:25:00.051 --> 02:25:02.440 align:start position:0%
here and we return the property and we
pass<02:25:00.320><c> in</c><02:25:00.561><c> the</c><02:25:00.681><c> property</c><02:25:01.160><c> of</c><02:25:01.251><c> likes</c><02:25:01.580><c> it</c><02:25:01.940><c> should</c>

02:25:02.440 --> 02:25:02.450 align:start position:0%
pass in the property of likes it should
 

02:25:02.450 --> 02:25:04.930 align:start position:0%
pass in the property of likes it should
return<02:25:02.811><c> the</c><02:25:02.961><c> array</c><02:25:03.230><c> intriguing</c><02:25:04.101><c> cases</c><02:25:04.521><c> and</c>

02:25:04.930 --> 02:25:04.940 align:start position:0%
return the array intriguing cases and
 

02:25:04.940 --> 02:25:08.230 align:start position:0%
return the array intriguing cases and
violin<02:25:05.870><c> if</c><02:25:06.351><c> the</c><02:25:06.980><c> name</c><02:25:07.221><c> that's</c><02:25:07.521><c> passed</c><02:25:07.791><c> in</c><02:25:08.030><c> does</c>

02:25:08.230 --> 02:25:08.240 align:start position:0%
violin if the name that's passed in does
 

02:25:08.240 --> 02:25:10.661 align:start position:0%
violin if the name that's passed in does
not<02:25:08.271><c> correspond</c><02:25:09.021><c> to</c><02:25:09.051><c> any</c><02:25:09.230><c> context</c><02:25:10.101><c> then</c><02:25:10.551><c> our</c>

02:25:10.661 --> 02:25:10.671 align:start position:0%
not correspond to any context then our
 

02:25:10.671 --> 02:25:13.121 align:start position:0%
not correspond to any context then our
functions<02:25:11.120><c> to</c><02:25:11.240><c> return</c><02:25:11.601><c> no</c><02:25:11.961><c> such</c><02:25:12.230><c> contact</c><02:25:12.801><c> and</c>

02:25:13.121 --> 02:25:13.131 align:start position:0%
functions to return no such contact and
 

02:25:13.131 --> 02:25:15.400 align:start position:0%
functions to return no such contact and
if<02:25:13.700><c> there's</c><02:25:13.910><c> no</c><02:25:14.030><c> property</c><02:25:14.511><c> it</c><02:25:14.780><c> should</c><02:25:15.080><c> return</c>

02:25:15.400 --> 02:25:15.410 align:start position:0%
if there's no property it should return
 

02:25:15.410 --> 02:25:18.011 align:start position:0%
if there's no property it should return
no<02:25:15.830><c> such</c><02:25:16.160><c> property</c><02:25:16.730><c> so</c><02:25:17.450><c> let's</c><02:25:17.660><c> go</c><02:25:17.811><c> to</c><02:25:17.900><c> this</c>

02:25:18.011 --> 02:25:18.021 align:start position:0%
no such property so let's go to this
 

02:25:18.021 --> 02:25:20.350 align:start position:0%
no such property so let's go to this
function<02:25:18.471><c> here</c><02:25:18.740><c> and</c><02:25:18.950><c> start</c><02:25:19.461><c> creating</c><02:25:19.791><c> it</c><02:25:20.150><c> so</c>

02:25:20.350 --> 02:25:20.360 align:start position:0%
function here and start creating it so
 

02:25:20.360 --> 02:25:21.730 align:start position:0%
function here and start creating it so
the<02:25:20.631><c> first</c><02:25:20.900><c> thing</c><02:25:21.110><c> we're</c><02:25:21.291><c> going</c><02:25:21.381><c> to</c><02:25:21.440><c> have</c><02:25:21.501><c> to</c>

02:25:21.730 --> 02:25:21.740 align:start position:0%
the first thing we're going to have to
 

02:25:21.740 --> 02:25:24.220 align:start position:0%
the first thing we're going to have to
do<02:25:21.891><c> is</c><02:25:22.041><c> iterate</c><02:25:22.311><c> through</c><02:25:23.120><c> each</c><02:25:23.391><c> element</c><02:25:24.110><c> in</c>

02:25:24.220 --> 02:25:24.230 align:start position:0%
do is iterate through each element in
 

02:25:24.230 --> 02:25:27.551 align:start position:0%
do is iterate through each element in
the<02:25:24.561><c> contacts</c><02:25:25.160><c> list</c><02:25:25.660><c> so</c><02:25:26.660><c> let's</c><02:25:26.841><c> make</c><02:25:27.051><c> a</c><02:25:27.080><c> for</c>

02:25:27.551 --> 02:25:27.561 align:start position:0%
the contacts list so let's make a for
 

02:25:27.561 --> 02:25:35.161 align:start position:0%
the contacts list so let's make a for
loop<02:25:27.740><c> so</c><02:25:28.221><c> for</c><02:25:29.230><c> bar</c><02:25:30.431><c> VAR</c><02:25:31.431><c> I</c><02:25:32.471><c> equals</c><02:25:33.471><c> 0</c>

02:25:35.161 --> 02:25:35.171 align:start position:0%
loop so for bar VAR I equals 0
 

02:25:35.171 --> 02:25:45.310 align:start position:0%
loop so for bar VAR I equals 0
while<02:25:36.171><c> I</c><02:25:36.410><c> is</c><02:25:36.950><c> less</c><02:25:37.521><c> than</c><02:25:39.251><c> contacts</c><02:25:42.190><c> length</c><02:25:44.320><c> and</c>

02:25:45.310 --> 02:25:45.320 align:start position:0%
while I is less than contacts length and
 

02:25:45.320 --> 02:25:47.470 align:start position:0%
while I is less than contacts length and
at<02:25:45.561><c> the</c><02:25:45.681><c> end</c><02:25:45.891><c> of</c><02:25:46.070><c> each</c><02:25:46.280><c> iteration</c><02:25:46.311><c> we'll</c><02:25:47.030><c> do</c><02:25:47.211><c> i</c>

02:25:47.470 --> 02:25:47.480 align:start position:0%
at the end of each iteration we'll do i
 

02:25:47.480 --> 02:25:51.131 align:start position:0%
at the end of each iteration we'll do i
+<02:25:47.931><c> +</c><02:25:48.230><c> to</c><02:25:48.381><c> increment</c><02:25:48.681><c> that</c><02:25:49.690><c> so</c><02:25:50.690><c> for</c><02:25:50.931><c> each</c><02:25:51.110><c> of</c>

02:25:51.131 --> 02:25:51.141 align:start position:0%
+ + to increment that so for each of
 

02:25:51.141 --> 02:25:52.930 align:start position:0%
+ + to increment that so for each of
these<02:25:51.351><c> contacts</c><02:25:52.011><c> the</c><02:25:52.280><c> first</c><02:25:52.610><c> thing</c><02:25:52.820><c> we're</c>

02:25:52.930 --> 02:25:52.940 align:start position:0%
these contacts the first thing we're
 

02:25:52.940 --> 02:25:56.411 align:start position:0%
these contacts the first thing we're
going<02:25:53.030><c> to</c><02:25:53.091><c> check</c><02:25:53.391><c> is</c><02:25:53.631><c> if</c><02:25:54.291><c> the</c><02:25:55.011><c> name</c><02:25:55.341><c> is</c><02:25:55.761><c> a</c><02:25:55.820><c> name</c>

02:25:56.411 --> 02:25:56.421 align:start position:0%
going to check is if the name is a name
 

02:25:56.421 --> 02:26:06.460 align:start position:0%
going to check is if the name is a name
in<02:25:56.721><c> this</c><02:25:56.870><c> list</c><02:25:57.261><c> so</c><02:25:57.671><c> if</c><02:25:59.561><c> contacts</c><02:26:00.561><c> I</c>

02:26:06.460 --> 02:26:06.470 align:start position:0%
 
 

02:26:06.470 --> 02:26:12.460 align:start position:0%
 
first<02:26:06.950><c> name</c><02:26:09.069><c> equals</c><02:26:10.069><c> equals</c><02:26:10.340><c> equals</c><02:26:11.200><c> the</c><02:26:12.200><c> name</c>

02:26:12.460 --> 02:26:12.470 align:start position:0%
first name equals equals equals the name
 

02:26:12.470 --> 02:26:14.590 align:start position:0%
first name equals equals equals the name
that<02:26:12.710><c> was</c><02:26:12.830><c> passed</c><02:26:13.130><c> in</c><02:26:13.430><c> so</c><02:26:14.300><c> we're</c><02:26:14.420><c> checking</c>

02:26:14.590 --> 02:26:14.600 align:start position:0%
that was passed in so we're checking
 

02:26:14.600 --> 02:26:16.330 align:start position:0%
that was passed in so we're checking
each<02:26:14.989><c> eye</c><02:26:15.170><c> to</c><02:26:15.200><c> see</c><02:26:15.620><c> if</c><02:26:15.680><c> was</c><02:26:15.859><c> the</c><02:26:15.950><c> name</c><02:26:16.100><c> that</c><02:26:16.250><c> was</c>

02:26:16.330 --> 02:26:16.340 align:start position:0%
each eye to see if was the name that was
 

02:26:16.340 --> 02:26:20.769 align:start position:0%
each eye to see if was the name that was
passed<02:26:16.670><c> in</c><02:26:16.970><c> and</c><02:26:18.160><c> if</c><02:26:19.160><c> so</c><02:26:19.580><c> we're</c><02:26:20.270><c> going</c><02:26:20.450><c> to</c><02:26:20.540><c> do</c>

02:26:20.769 --> 02:26:20.779 align:start position:0%
passed in and if so we're going to do
 

02:26:20.779 --> 02:26:23.469 align:start position:0%
passed in and if so we're going to do
something<02:26:21.520><c> now</c><02:26:22.520><c> if</c><02:26:22.850><c> now</c><02:26:23.120><c> we're</c><02:26:23.270><c> gonna</c><02:26:23.390><c> do</c>

02:26:23.469 --> 02:26:23.479 align:start position:0%
something now if now we're gonna do
 

02:26:23.479 --> 02:26:25.389 align:start position:0%
something now if now we're gonna do
something<02:26:23.660><c> else</c><02:26:23.870><c> so</c><02:26:24.020><c> let's</c><02:26:24.229><c> do</c><02:26:24.439><c> that</c><02:26:24.590><c> now</c>

02:26:25.389 --> 02:26:25.399 align:start position:0%
something else so let's do that now
 

02:26:25.399 --> 02:26:27.550 align:start position:0%
something else so let's do that now
remember<02:26:26.000><c> if</c><02:26:26.239><c> the</c><02:26:26.600><c> name</c><02:26:26.779><c> that</c><02:26:27.020><c> was</c><02:26:27.109><c> passed</c><02:26:27.350><c> in</c>

02:26:27.550 --> 02:26:27.560 align:start position:0%
remember if the name that was passed in
 

02:26:27.560 --> 02:26:29.380 align:start position:0%
remember if the name that was passed in
is<02:26:27.800><c> not</c><02:26:27.950><c> in</c><02:26:28.130><c> the</c><02:26:28.279><c> array</c><02:26:28.550><c> we're</c><02:26:29.029><c> going</c><02:26:29.060><c> to</c>

02:26:29.380 --> 02:26:29.390 align:start position:0%
is not in the array we're going to
 

02:26:29.390 --> 02:26:35.979 align:start position:0%
is not in the array we're going to
return<02:26:30.489><c> no</c><02:26:31.489><c> such</c><02:26:32.029><c> contact</c><02:26:34.630><c> however</c><02:26:35.630><c> if</c><02:26:35.750><c> it</c><02:26:35.870><c> is</c>

02:26:35.979 --> 02:26:35.989 align:start position:0%
return no such contact however if it is
 

02:26:35.989 --> 02:26:36.940 align:start position:0%
return no such contact however if it is
in<02:26:36.170><c> the</c><02:26:36.260><c> array</c><02:26:36.439><c> we're</c><02:26:36.529><c> gonna</c><02:26:36.680><c> do</c><02:26:36.739><c> something</c>

02:26:36.940 --> 02:26:36.950 align:start position:0%
in the array we're gonna do something
 

02:26:36.950 --> 02:26:39.519 align:start position:0%
in the array we're gonna do something
else<02:26:37.189><c> if</c><02:26:37.580><c> the</c><02:26:38.060><c> name</c><02:26:38.270><c> is</c><02:26:38.510><c> in</c><02:26:38.689><c> the</c><02:26:38.779><c> context</c><02:26:39.319><c> list</c>

02:26:39.519 --> 02:26:39.529 align:start position:0%
else if the name is in the context list
 

02:26:39.529 --> 02:26:41.440 align:start position:0%
else if the name is in the context list
we're<02:26:39.739><c> going</c><02:26:40.010><c> to</c><02:26:40.130><c> return</c><02:26:40.520><c> the</c><02:26:40.729><c> value</c><02:26:41.180><c> of</c><02:26:41.210><c> the</c>

02:26:41.440 --> 02:26:41.450 align:start position:0%
we're going to return the value of the
 

02:26:41.450 --> 02:26:44.219 align:start position:0%
we're going to return the value of the
property<02:26:41.899><c> that</c><02:26:41.960><c> was</c><02:26:42.140><c> passed</c><02:26:42.439><c> in</c><02:26:42.680><c> so</c><02:26:43.279><c> return</c>

02:26:44.219 --> 02:26:44.229 align:start position:0%
property that was passed in so return
 

02:26:44.229 --> 02:26:45.610 align:start position:0%
property that was passed in so return
contacts

02:26:45.610 --> 02:26:45.620 align:start position:0%
contacts
 

02:26:45.620 --> 02:26:50.229 align:start position:0%
contacts
I<02:26:47.380><c> dropped</c><02:26:48.380><c> so</c><02:26:49.370><c> this</c><02:26:49.550><c> will</c><02:26:49.729><c> return</c><02:26:50.060><c> the</c><02:26:50.120><c> value</c>

02:26:50.229 --> 02:26:50.239 align:start position:0%
I dropped so this will return the value
 

02:26:50.239 --> 02:26:51.969 align:start position:0%
I dropped so this will return the value
of<02:26:50.689><c> that</c><02:26:50.840><c> property</c><02:26:51.140><c> that</c><02:26:51.319><c> was</c><02:26:51.500><c> passed</c><02:26:51.739><c> in</c>

02:26:51.969 --> 02:26:51.979 align:start position:0%
of that property that was passed in
 

02:26:51.979 --> 02:26:53.920 align:start position:0%
of that property that was passed in
however<02:26:52.790><c> there</c><02:26:53.000><c> is</c><02:26:53.060><c> another</c><02:26:53.090><c> case</c><02:26:53.630><c> which</c><02:26:53.899><c> is</c>

02:26:53.920 --> 02:26:53.930 align:start position:0%
however there is another case which is
 

02:26:53.930 --> 02:26:56.979 align:start position:0%
however there is another case which is
if<02:26:54.260><c> the</c><02:26:54.830><c> property</c><02:26:55.340><c> does</c><02:26:55.550><c> not</c><02:26:55.580><c> exist</c><02:26:56.149><c> we</c><02:26:56.600><c> return</c>

02:26:56.979 --> 02:26:56.989 align:start position:0%
if the property does not exist we return
 

02:26:56.989 --> 02:27:00.400 align:start position:0%
if the property does not exist we return
no<02:26:57.229><c> such</c><02:26:57.529><c> property</c><02:26:58.330><c> so</c><02:26:59.330><c> a</c><02:26:59.359><c> fancy</c><02:26:59.899><c> way</c><02:27:00.109><c> in</c>

02:27:00.400 --> 02:27:00.410 align:start position:0%
no such property so a fancy way in
 

02:27:00.410 --> 02:27:03.610 align:start position:0%
no such property so a fancy way in
JavaScript<02:27:01.100><c> of</c><02:27:01.279><c> saying</c><02:27:01.630><c> use</c><02:27:02.630><c> this</c><02:27:02.989><c> value</c><02:27:03.500><c> if</c>

02:27:03.610 --> 02:27:03.620 align:start position:0%
JavaScript of saying use this value if
 

02:27:03.620 --> 02:27:06.070 align:start position:0%
JavaScript of saying use this value if
it<02:27:03.739><c> exists</c><02:27:04.310><c> but</c><02:27:04.790><c> otherwise</c><02:27:05.359><c> use</c><02:27:05.660><c> a</c><02:27:05.689><c> different</c>

02:27:06.070 --> 02:27:06.080 align:start position:0%
it exists but otherwise use a different
 

02:27:06.080 --> 02:27:08.440 align:start position:0%
it exists but otherwise use a different
value<02:27:06.319><c> is</c><02:27:06.680><c> to</c><02:27:07.100><c> use</c><02:27:07.279><c> the</c><02:27:07.460><c> or</c><02:27:07.609><c> operator</c>

02:27:08.440 --> 02:27:08.450 align:start position:0%
value is to use the or operator
 

02:27:08.450 --> 02:27:12.610 align:start position:0%
value is to use the or operator
so<02:27:09.050><c> we'll</c><02:27:09.560><c> say</c><02:27:09.770><c> return</c><02:27:10.220><c> contact</c><02:27:11.120><c> I</c><02:27:11.300><c> prop</c><02:27:11.630><c> or</c><02:27:11.960><c> if</c>

02:27:12.610 --> 02:27:12.620 align:start position:0%
so we'll say return contact I prop or if
 

02:27:12.620 --> 02:27:15.820 align:start position:0%
so we'll say return contact I prop or if
it<02:27:12.979><c> doesn't</c><02:27:13.279><c> exist</c><02:27:13.609><c> we're</c><02:27:14.180><c> gonna</c><02:27:14.300><c> return</c><02:27:14.830><c> no</c>

02:27:15.820 --> 02:27:15.830 align:start position:0%
it doesn't exist we're gonna return no
 

02:27:15.830 --> 02:27:19.900 align:start position:0%
it doesn't exist we're gonna return no
such<02:27:16.600><c> property</c><02:27:18.160><c> and</c><02:27:19.160><c> just</c><02:27:19.460><c> so</c><02:27:19.520><c> you</c><02:27:19.580><c> know</c><02:27:19.640><c> there</c>

02:27:19.900 --> 02:27:19.910 align:start position:0%
such property and just so you know there
 

02:27:19.910 --> 02:27:22.000 align:start position:0%
such property and just so you know there
would<02:27:20.000><c> be</c><02:27:20.029><c> a</c><02:27:20.120><c> way</c><02:27:20.359><c> to</c><02:27:20.390><c> do</c><02:27:20.779><c> this</c><02:27:20.960><c> without</c><02:27:21.140><c> using</c>

02:27:22.000 --> 02:27:22.010 align:start position:0%
would be a way to do this without using
 

02:27:22.010 --> 02:27:25.660 align:start position:0%
would be a way to do this without using
this<02:27:22.550><c> or</c><02:27:22.819><c> operator</c><02:27:23.479><c> as</c><02:27:23.750><c> long</c><02:27:24.529><c> as</c><02:27:24.830><c> that</c><02:27:25.430><c> your</c>

02:27:25.660 --> 02:27:25.670 align:start position:0%
this or operator as long as that your
 

02:27:25.670 --> 02:27:28.120 align:start position:0%
this or operator as long as that your
code<02:27:26.000><c> passes</c><02:27:26.450><c> the</c><02:27:26.840><c> requirements</c><02:27:27.590><c> that's</c><02:27:27.890><c> all</c>

02:27:28.120 --> 02:27:28.130 align:start position:0%
code passes the requirements that's all
 

02:27:28.130 --> 02:27:29.170 align:start position:0%
code passes the requirements that's all
that's<02:27:28.310><c> important</c>

02:27:29.170 --> 02:27:29.180 align:start position:0%
that's important
 

02:27:29.180 --> 02:27:31.210 align:start position:0%
that's important
there's<02:27:29.450><c> many</c><02:27:29.750><c> ways</c><02:27:29.840><c> of</c><02:27:30.140><c> doing</c><02:27:30.200><c> this</c><02:27:30.560><c> but</c>

02:27:31.210 --> 02:27:31.220 align:start position:0%
there's many ways of doing this but
 

02:27:31.220 --> 02:27:33.040 align:start position:0%
there's many ways of doing this but
let's<02:27:31.460><c> check</c><02:27:31.729><c> it</c><02:27:31.939><c> so</c><02:27:32.270><c> right</c><02:27:32.450><c> now</c><02:27:32.689><c> we</c><02:27:32.750><c> have</c><02:27:33.020><c> our</c>

02:27:33.040 --> 02:27:33.050 align:start position:0%
let's check it so right now we have our
 

02:27:33.050 --> 02:27:35.260 align:start position:0%
let's check it so right now we have our
lookup<02:27:33.470><c> profile</c><02:27:33.950><c> we're</c><02:27:34.430><c> passing</c><02:27:34.760><c> a</c><02:27:34.790><c> Maki</c><02:27:35.090><c> row</c>

02:27:35.260 --> 02:27:35.270 align:start position:0%
lookup profile we're passing a Maki row
 

02:27:35.270 --> 02:27:36.700 align:start position:0%
lookup profile we're passing a Maki row
and<02:27:35.390><c> we're</c><02:27:35.479><c> trying</c><02:27:35.689><c> to</c><02:27:35.750><c> find</c><02:27:35.930><c> the</c><02:27:36.140><c> likes</c><02:27:36.380><c> and</c>

02:27:36.700 --> 02:27:36.710 align:start position:0%
and we're trying to find the likes and
 

02:27:36.710 --> 02:27:39.840 align:start position:0%
and we're trying to find the likes and
we're<02:27:37.220><c> constantly</c><02:27:37.489><c> logging</c><02:27:38.479><c> the</c><02:27:38.600><c> data</c><02:27:38.840><c> and</c>

02:27:39.840 --> 02:27:39.850 align:start position:0%
we're constantly logging the data and
 

02:27:39.850 --> 02:27:43.630 align:start position:0%
we're constantly logging the data and
pizza<02:27:40.850><c> coding</c><02:27:41.450><c> brownie</c><02:27:42.020><c> points</c><02:27:42.500><c> so</c><02:27:43.310><c> what</c><02:27:43.520><c> if</c>

02:27:43.630 --> 02:27:43.640 align:start position:0%
pizza coding brownie points so what if
 

02:27:43.640 --> 02:27:46.090 align:start position:0%
pizza coding brownie points so what if
we<02:27:43.729><c> passed</c><02:27:44.060><c> in</c><02:27:44.330><c> something</c><02:27:44.810><c> else</c><02:27:45.020><c> if</c><02:27:45.260><c> we</c><02:27:45.739><c> passed</c>

02:27:46.090 --> 02:27:46.100 align:start position:0%
we passed in something else if we passed
 

02:27:46.100 --> 02:27:56.570 align:start position:0%
we passed in something else if we passed
in<02:27:46.430><c> Sherlock</c><02:27:47.270><c> a</c><02:27:48.580><c> pass</c><02:27:49.580><c> in</c><02:27:49.880><c> last</c><02:27:50.300><c> name</c>

02:27:56.570 --> 02:27:56.580 align:start position:0%
 
 

02:27:56.580 --> 02:27:59.030 align:start position:0%
 
contact<02:27:57.090><c> well</c><02:27:57.570><c> that's</c><02:27:57.840><c> working</c><02:27:58.050><c> because</c><02:27:58.680><c> I</c>

02:27:59.030 --> 02:27:59.040 align:start position:0%
contact well that's working because I
 

02:27:59.040 --> 02:28:03.380 align:start position:0%
contact well that's working because I
spelled<02:27:59.550><c> Sherlock</c><02:28:00.180><c> wrong</c><02:28:00.480><c> this</c><02:28:01.170><c> is</c><02:28:01.410><c> e</c><02:28:02.150><c> so</c><02:28:03.150><c> it's</c>

02:28:03.380 --> 02:28:03.390 align:start position:0%
spelled Sherlock wrong this is e so it's
 

02:28:03.390 --> 02:28:04.960 align:start position:0%
spelled Sherlock wrong this is e so it's
good<02:28:03.600><c> the</c><02:28:03.690><c> way</c><02:28:03.811><c> a</c><02:28:04.050><c> good</c><02:28:04.290><c> way</c><02:28:04.410><c> to</c><02:28:04.470><c> test</c><02:28:04.740><c> that</c>

02:28:04.960 --> 02:28:04.970 align:start position:0%
good the way a good way to test that
 

02:28:04.970 --> 02:28:08.450 align:start position:0%
good the way a good way to test that
Holmes<02:28:05.970><c> and</c><02:28:06.420><c> the</c><02:28:07.410><c> last</c><02:28:07.650><c> thing</c><02:28:07.830><c> we'll</c><02:28:07.950><c> check</c><02:28:08.220><c> is</c>

02:28:08.450 --> 02:28:08.460 align:start position:0%
Holmes and the last thing we'll check is
 

02:28:08.460 --> 02:28:10.400 align:start position:0%
Holmes and the last thing we'll check is
if<02:28:08.640><c> we</c><02:28:08.790><c> pass</c><02:28:09.061><c> in</c><02:28:09.210><c> a</c><02:28:09.271><c> property</c><02:28:09.840><c> that</c><02:28:09.960><c> does</c><02:28:10.260><c> not</c>

02:28:10.400 --> 02:28:10.410 align:start position:0%
if we pass in a property that does not
 

02:28:10.410 --> 02:28:15.020 align:start position:0%
if we pass in a property that does not
exist<02:28:11.090><c> I'll</c><02:28:12.090><c> just</c><02:28:12.390><c> say</c><02:28:12.630><c> hello</c><02:28:13.140><c> and</c><02:28:13.730><c> no</c><02:28:14.730><c> such</c>

02:28:15.020 --> 02:28:15.030 align:start position:0%
exist I'll just say hello and no such
 

02:28:15.030 --> 02:28:20.860 align:start position:0%
exist I'll just say hello and no such
property<02:28:15.540><c> so</c><02:28:16.230><c> our</c><02:28:16.561><c> function</c><02:28:16.920><c> works</c>

02:28:20.860 --> 02:28:20.870 align:start position:0%
 
 

02:28:20.870 --> 02:28:23.830 align:start position:0%
 
there<02:28:21.740><c> is</c><02:28:21.890><c> a</c><02:28:21.920><c> simple</c><02:28:22.311><c> way</c><02:28:22.610><c> to</c><02:28:22.640><c> create</c><02:28:23.150><c> a</c><02:28:23.480><c> random</c>

02:28:23.830 --> 02:28:23.840 align:start position:0%
there is a simple way to create a random
 

02:28:23.840 --> 02:28:26.710 align:start position:0%
there is a simple way to create a random
decimal<02:28:24.620><c> number</c><02:28:24.980><c> in</c><02:28:25.190><c> JavaScript</c><02:28:25.910><c> it's</c><02:28:26.420><c> with</c>

02:28:26.710 --> 02:28:26.720 align:start position:0%
decimal number in JavaScript it's with
 

02:28:26.720 --> 02:28:30.551 align:start position:0%
decimal number in JavaScript it's with
the<02:28:26.930><c> math</c><02:28:27.230><c> dot</c><02:28:27.590><c> random</c><02:28:27.880><c> function</c><02:28:28.880><c> so</c><02:28:29.720><c> we</c><02:28:30.351><c> have</c>

02:28:30.551 --> 02:28:30.561 align:start position:0%
the math dot random function so we have
 

02:28:30.561 --> 02:28:32.650 align:start position:0%
the math dot random function so we have
this<02:28:30.710><c> function</c><02:28:31.040><c> here</c><02:28:31.311><c> which</c><02:28:31.970><c> is</c><02:28:32.180><c> says</c><02:28:32.330><c> random</c>

02:28:32.650 --> 02:28:32.660 align:start position:0%
this function here which is says random
 

02:28:32.660 --> 02:28:34.841 align:start position:0%
this function here which is says random
function<02:28:33.080><c> and</c><02:28:33.260><c> it's</c><02:28:33.771><c> returning</c><02:28:33.950><c> zero</c>

02:28:34.841 --> 02:28:34.851 align:start position:0%
function and it's returning zero
 

02:28:34.851 --> 02:28:37.570 align:start position:0%
function and it's returning zero
currently<02:28:35.601><c> but</c><02:28:36.230><c> we're</c><02:28:36.410><c> gonna</c><02:28:36.561><c> use</c><02:28:36.890><c> the</c><02:28:37.160><c> math</c>

02:28:37.570 --> 02:28:37.580 align:start position:0%
currently but we're gonna use the math
 

02:28:37.580 --> 02:28:41.830 align:start position:0%
currently but we're gonna use the math
dot<02:28:38.120><c> random</c><02:28:38.260><c> function</c><02:28:39.260><c> and</c><02:28:40.420><c> you</c><02:28:41.420><c> will</c><02:28:41.570><c> see</c>

02:28:41.830 --> 02:28:41.840 align:start position:0%
dot random function and you will see
 

02:28:41.840 --> 02:28:44.500 align:start position:0%
dot random function and you will see
that<02:28:42.110><c> when</c><02:28:42.351><c> I</c><02:28:42.380><c> run</c><02:28:42.890><c> this</c><02:28:43.160><c> we</c><02:28:43.760><c> have</c><02:28:43.970><c> zero</c><02:28:44.271><c> point</c>

02:28:44.500 --> 02:28:44.510 align:start position:0%
that when I run this we have zero point
 

02:28:44.510 --> 02:28:46.330 align:start position:0%
that when I run this we have zero point
two<02:28:44.720><c> three</c><02:28:44.870><c> eight</c><02:28:45.050><c> one</c><02:28:45.080><c> three</c><02:28:45.530><c> seven</c><02:28:45.860><c> four</c><02:28:46.311><c> one</c>

02:28:46.330 --> 02:28:46.340 align:start position:0%
two three eight one three seven four one
 

02:28:46.340 --> 02:28:48.341 align:start position:0%
two three eight one three seven four one
and<02:28:46.730><c> so</c><02:28:46.910><c> on</c><02:28:47.061><c> so</c><02:28:47.601><c> it's</c><02:28:47.811><c> always</c><02:28:48.050><c> going</c><02:28:48.170><c> to</c><02:28:48.260><c> be</c><02:28:48.320><c> a</c>

02:28:48.341 --> 02:28:48.351 align:start position:0%
and so on so it's always going to be a
 

02:28:48.351 --> 02:28:50.350 align:start position:0%
and so on so it's always going to be a
number<02:28:48.530><c> between</c><02:28:48.830><c> zero</c><02:28:49.460><c> and</c><02:28:49.521><c> it</c><02:28:49.700><c> could</c><02:28:49.940><c> be</c><02:28:50.061><c> zero</c>

02:28:50.350 --> 02:28:50.360 align:start position:0%
number between zero and it could be zero
 

02:28:50.360 --> 02:28:52.480 align:start position:0%
number between zero and it could be zero
between<02:28:50.870><c> zero</c><02:28:51.290><c> and</c><02:28:51.320><c> one</c><02:28:51.620><c> but</c><02:28:51.650><c> it</c><02:28:52.010><c> could</c><02:28:52.250><c> not</c><02:28:52.430><c> be</c>

02:28:52.480 --> 02:28:52.490 align:start position:0%
between zero and one but it could not be
 

02:28:52.490 --> 02:28:56.739 align:start position:0%
between zero and one but it could not be
one

02:28:56.739 --> 02:28:56.749 align:start position:0%
 
 

02:28:56.749 --> 02:28:59.179 align:start position:0%
 
often<02:28:57.749><c> you</c><02:28:57.899><c> want</c><02:28:58.109><c> a</c><02:28:58.199><c> random</c><02:28:58.680><c> hole</c><02:28:58.949><c> number</c>

02:28:59.179 --> 02:28:59.189 align:start position:0%
often you want a random hole number
 

02:28:59.189 --> 02:29:02.449 align:start position:0%
often you want a random hole number
instead<02:28:59.699><c> of</c><02:28:59.819><c> a</c><02:28:59.999><c> random</c><02:29:00.300><c> decimal</c><02:29:01.140><c> number</c><02:29:01.560><c> that</c>

02:29:02.449 --> 02:29:02.459 align:start position:0%
instead of a random decimal number that
 

02:29:02.459 --> 02:29:04.909 align:start position:0%
instead of a random decimal number that
can<02:29:02.699><c> be</c><02:29:02.789><c> accomplished</c><02:29:03.390><c> with</c><02:29:03.659><c> math</c><02:29:04.079><c> dot</c><02:29:04.439><c> floor</c>

02:29:04.909 --> 02:29:04.919 align:start position:0%
can be accomplished with math dot floor
 

02:29:04.919 --> 02:29:07.969 align:start position:0%
can be accomplished with math dot floor
we<02:29:05.550><c> have</c><02:29:05.699><c> mat</c><02:29:05.939><c> that</c><02:29:06.119><c> floor</c><02:29:06.449><c> here</c><02:29:06.779><c> this</c><02:29:07.260><c> rounds</c>

02:29:07.969 --> 02:29:07.979 align:start position:0%
we have mat that floor here this rounds
 

02:29:07.979 --> 02:29:10.819 align:start position:0%
we have mat that floor here this rounds
down<02:29:08.220><c> to</c><02:29:08.579><c> the</c><02:29:08.699><c> nearest</c><02:29:08.819><c> whole</c><02:29:09.300><c> number</c><02:29:09.359><c> so</c><02:29:10.319><c> we</c>

02:29:10.819 --> 02:29:10.829 align:start position:0%
down to the nearest whole number so we
 

02:29:10.829 --> 02:29:15.439 align:start position:0%
down to the nearest whole number so we
pass<02:29:11.249><c> in</c><02:29:11.810><c> math</c><02:29:12.810><c> dot</c><02:29:13.169><c> random</c><02:29:13.550><c> times</c><02:29:14.550><c> 20</c><02:29:15.239><c> and</c>

02:29:15.439 --> 02:29:15.449 align:start position:0%
pass in math dot random times 20 and
 

02:29:15.449 --> 02:29:17.869 align:start position:0%
pass in math dot random times 20 and
then<02:29:16.050><c> we</c><02:29:16.140><c> round</c><02:29:16.470><c> down</c><02:29:16.739><c> to</c><02:29:17.100><c> the</c><02:29:17.279><c> nearest</c><02:29:17.430><c> whole</c>

02:29:17.869 --> 02:29:17.879 align:start position:0%
then we round down to the nearest whole
 

02:29:17.879 --> 02:29:20.599 align:start position:0%
then we round down to the nearest whole
number<02:29:17.959><c> this</c><02:29:18.959><c> is</c><02:29:19.199><c> going</c><02:29:19.470><c> to</c><02:29:19.590><c> create</c><02:29:19.829><c> a</c><02:29:20.129><c> random</c>

02:29:20.599 --> 02:29:20.609 align:start position:0%
number this is going to create a random
 

02:29:20.609 --> 02:29:24.559 align:start position:0%
number this is going to create a random
whole<02:29:21.180><c> number</c><02:29:21.600><c> between</c><02:29:21.930><c> 0</c><02:29:22.560><c> and</c><02:29:22.649><c> 19</c><02:29:23.569><c> remember</c>

02:29:24.559 --> 02:29:24.569 align:start position:0%
whole number between 0 and 19 remember
 

02:29:24.569 --> 02:29:27.979 align:start position:0%
whole number between 0 and 19 remember
math<02:29:24.840><c> dot</c><02:29:25.109><c> random</c><02:29:25.220><c> can</c><02:29:26.220><c> never</c><02:29:26.459><c> be</c><02:29:26.699><c> 1</c><02:29:27.029><c> it</c><02:29:27.419><c> can</c><02:29:27.930><c> be</c>

02:29:27.979 --> 02:29:27.989 align:start position:0%
math dot random can never be 1 it can be
 

02:29:27.989 --> 02:29:31.219 align:start position:0%
math dot random can never be 1 it can be
0<02:29:28.529><c> but</c><02:29:29.069><c> it</c><02:29:29.189><c> can</c><02:29:29.340><c> never</c><02:29:29.459><c> be</c><02:29:29.729><c> quite</c><02:29:30.029><c> 1</c><02:29:30.419><c> so</c><02:29:30.899><c> when</c><02:29:31.050><c> we</c>

02:29:31.219 --> 02:29:31.229 align:start position:0%
0 but it can never be quite 1 so when we
 

02:29:31.229 --> 02:29:35.000 align:start position:0%
0 but it can never be quite 1 so when we
multiply<02:29:31.499><c> it</c><02:29:32.010><c> by</c><02:29:32.399><c> 20</c><02:29:32.899><c> we</c><02:29:33.899><c> are</c><02:29:34.020><c> going</c><02:29:34.319><c> to</c><02:29:34.499><c> get</c><02:29:34.800><c> a</c>

02:29:35.000 --> 02:29:35.010 align:start position:0%
multiply it by 20 we are going to get a
 

02:29:35.010 --> 02:29:38.569 align:start position:0%
multiply it by 20 we are going to get a
number<02:29:35.909><c> between</c><02:29:36.209><c> 0</c><02:29:36.479><c> and</c><02:29:37.409><c> 20</c><02:29:38.159><c> but</c><02:29:38.340><c> not</c>

02:29:38.569 --> 02:29:38.579 align:start position:0%
number between 0 and 20 but not
 

02:29:38.579 --> 02:29:41.540 align:start position:0%
number between 0 and 20 but not
including<02:29:39.149><c> 20</c><02:29:39.600><c> then</c><02:29:40.140><c> we</c><02:29:40.260><c> round</c><02:29:40.560><c> down</c><02:29:40.709><c> which</c>

02:29:41.540 --> 02:29:41.550 align:start position:0%
including 20 then we round down which
 

02:29:41.550 --> 02:29:45.050 align:start position:0%
including 20 then we round down which
will<02:29:41.760><c> end</c><02:29:41.970><c> up</c><02:29:42.119><c> being</c><02:29:42.390><c> 0</c><02:29:42.930><c> to</c><02:29:43.079><c> 19</c><02:29:43.709><c> so</c><02:29:44.579><c> let</c><02:29:44.789><c> me</c><02:29:44.909><c> show</c>

02:29:45.050 --> 02:29:45.060 align:start position:0%
will end up being 0 to 19 so let me show
 

02:29:45.060 --> 02:29:46.760 align:start position:0%
will end up being 0 to 19 so let me show
you<02:29:45.119><c> another</c><02:29:45.300><c> example</c><02:29:45.479><c> where</c><02:29:46.199><c> we're</c><02:29:46.379><c> going</c><02:29:46.680><c> to</c>

02:29:46.760 --> 02:29:46.770 align:start position:0%
you another example where we're going to
 

02:29:46.770 --> 02:29:49.580 align:start position:0%
you another example where we're going to
get<02:29:46.949><c> a</c><02:29:47.129><c> random</c><02:29:47.459><c> whole</c><02:29:47.909><c> number</c><02:29:48.270><c> between</c><02:29:48.479><c> 0</c><02:29:49.109><c> &amp;</c><02:29:49.289><c> 9</c>

02:29:49.580 --> 02:29:49.590 align:start position:0%
get a random whole number between 0 &amp; 9
 

02:29:49.590 --> 02:29:52.760 align:start position:0%
get a random whole number between 0 &amp; 9
it<02:29:50.249><c> looks</c><02:29:50.909><c> just</c><02:29:51.060><c> like</c><02:29:51.180><c> this</c><02:29:51.569><c> so</c><02:29:52.109><c> we're</c><02:29:52.649><c> going</c>

02:29:52.760 --> 02:29:52.770 align:start position:0%
it looks just like this so we're going
 

02:29:52.770 --> 02:29:55.519 align:start position:0%
it looks just like this so we're going
to<02:29:52.949><c> modify</c><02:29:53.249><c> this</c><02:29:53.609><c> function</c><02:29:54.149><c> so</c><02:29:54.329><c> this</c><02:29:54.959><c> math</c><02:29:55.260><c> dot</c>

02:29:55.519 --> 02:29:55.529 align:start position:0%
to modify this function so this math dot
 

02:29:55.529 --> 02:29:57.849 align:start position:0%
to modify this function so this math dot
random<02:29:55.579><c> we're</c><02:29:56.579><c> going</c><02:29:56.789><c> to</c><02:29:56.909><c> pass</c><02:29:57.239><c> that</c><02:29:57.510><c> into</c>

02:29:57.849 --> 02:29:57.859 align:start position:0%
random we're going to pass that into
 

02:29:57.859 --> 02:30:01.819 align:start position:0%
random we're going to pass that into
math.floor<02:30:00.199><c> so</c><02:30:01.199><c> I</c><02:30:01.229><c> have</c><02:30:01.379><c> to</c><02:30:01.499><c> put</c><02:30:01.709><c> the</c>

02:30:01.819 --> 02:30:01.829 align:start position:0%
math.floor so I have to put the
 

02:30:01.829 --> 02:30:03.559 align:start position:0%
math.floor so I have to put the
parentheses<02:30:02.430><c> because</c><02:30:02.699><c> we're</c><02:30:02.789><c> passing</c><02:30:03.300><c> it</c><02:30:03.390><c> in</c>

02:30:03.559 --> 02:30:03.569 align:start position:0%
parentheses because we're passing it in
 

02:30:03.569 --> 02:30:06.229 align:start position:0%
parentheses because we're passing it in
to<02:30:03.930><c> that</c><02:30:04.109><c> function</c><02:30:04.409><c> and</c><02:30:04.890><c> it's</c><02:30:05.640><c> math</c><02:30:05.909><c> dot</c>

02:30:06.229 --> 02:30:06.239 align:start position:0%
to that function and it's math dot
 

02:30:06.239 --> 02:30:10.309 align:start position:0%
to that function and it's math dot
random<02:30:06.890><c> times</c><02:30:08.090><c> 10</c><02:30:09.090><c> and</c><02:30:09.449><c> that's</c><02:30:09.869><c> going</c><02:30:10.109><c> to</c><02:30:10.169><c> give</c>

02:30:10.309 --> 02:30:10.319 align:start position:0%
random times 10 and that's going to give
 

02:30:10.319 --> 02:30:13.819 align:start position:0%
random times 10 and that's going to give
us<02:30:10.350><c> a</c><02:30:10.590><c> random</c><02:30:10.829><c> number</c><02:30:11.340><c> between</c><02:30:11.520><c> 0</c><02:30:12.149><c> &amp;</c><02:30:12.419><c> 9</c><02:30:12.479><c> so</c><02:30:13.050><c> if</c><02:30:13.709><c> I</c>

02:30:13.819 --> 02:30:13.829 align:start position:0%
us a random number between 0 &amp; 9 so if I
 

02:30:13.829 --> 02:30:18.380 align:start position:0%
us a random number between 0 &amp; 9 so if I
reload<02:30:14.220><c> this</c><02:30:14.489><c> you</c><02:30:14.609><c> can</c><02:30:14.760><c> see</c><02:30:14.909><c> 9</c><02:30:15.209><c> 5</c><02:30:16.100><c> 4</c><02:30:17.100><c> 1</c><02:30:17.489><c> every</c>

02:30:18.380 --> 02:30:18.390 align:start position:0%
reload this you can see 9 5 4 1 every
 

02:30:18.390 --> 02:30:20.000 align:start position:0%
reload this you can see 9 5 4 1 every
time<02:30:18.539><c> I</c><02:30:18.659><c> load</c><02:30:18.840><c> it</c><02:30:19.020><c> it's</c><02:30:19.199><c> a</c><02:30:19.350><c> different</c><02:30:19.649><c> random</c>

02:30:20.000 --> 02:30:20.010 align:start position:0%
time I load it it's a different random
 

02:30:20.010 --> 02:30:24.210 align:start position:0%
time I load it it's a different random
number

02:30:24.210 --> 02:30:24.220 align:start position:0%
 
 

02:30:24.220 --> 02:30:26.700 align:start position:0%
 
you<02:30:25.120><c> can</c><02:30:25.300><c> also</c><02:30:25.479><c> generate</c><02:30:25.989><c> random</c><02:30:26.290><c> whole</c>

02:30:26.700 --> 02:30:26.710 align:start position:0%
you can also generate random whole
 

02:30:26.710 --> 02:30:29.070 align:start position:0%
you can also generate random whole
numbers<02:30:27.100><c> within</c><02:30:27.460><c> a</c><02:30:27.670><c> range</c><02:30:27.910><c> so</c><02:30:28.300><c> look</c><02:30:28.840><c> at</c><02:30:28.960><c> this</c>

02:30:29.070 --> 02:30:29.080 align:start position:0%
numbers within a range so look at this
 

02:30:29.080 --> 02:30:31.559 align:start position:0%
numbers within a range so look at this
function<02:30:29.439><c> here</c><02:30:29.560><c> our</c><02:30:29.950><c> random</c><02:30:30.460><c> range</c><02:30:30.700><c> it</c><02:30:31.029><c> takes</c>

02:30:31.559 --> 02:30:31.569 align:start position:0%
function here our random range it takes
 

02:30:31.569 --> 02:30:34.019 align:start position:0%
function here our random range it takes
a<02:30:31.720><c> minimum</c><02:30:32.080><c> number</c><02:30:32.350><c> and</c><02:30:32.710><c> a</c><02:30:33.100><c> maximum</c><02:30:33.550><c> number</c>

02:30:34.019 --> 02:30:34.029 align:start position:0%
a minimum number and a maximum number
 

02:30:34.029 --> 02:30:36.360 align:start position:0%
a minimum number and a maximum number
and<02:30:34.239><c> then</c><02:30:34.960><c> it</c><02:30:35.229><c> just</c><02:30:35.439><c> runs</c><02:30:35.739><c> through</c><02:30:35.920><c> this</c>

02:30:36.360 --> 02:30:36.370 align:start position:0%
and then it just runs through this
 

02:30:36.370 --> 02:30:39.719 align:start position:0%
and then it just runs through this
calculation<02:30:36.700><c> here</c><02:30:37.600><c> so</c><02:30:38.410><c> we</c><02:30:38.890><c> have</c><02:30:39.100><c> the</c><02:30:39.220><c> math</c><02:30:39.430><c> dot</c>

02:30:39.719 --> 02:30:39.729 align:start position:0%
calculation here so we have the math dot
 

02:30:39.729 --> 02:30:42.300 align:start position:0%
calculation here so we have the math dot
random<02:30:39.760><c> and</c><02:30:40.450><c> we</c><02:30:40.870><c> multiply</c><02:30:41.080><c> it</c><02:30:41.380><c> by</c><02:30:41.560><c> the</c><02:30:41.710><c> max</c>

02:30:42.300 --> 02:30:42.310 align:start position:0%
random and we multiply it by the max
 

02:30:42.310 --> 02:30:44.309 align:start position:0%
random and we multiply it by the max
number<02:30:42.520><c> minus</c><02:30:42.880><c> the</c><02:30:42.910><c> min</c><02:30:43.149><c> number</c><02:30:43.420><c> plus</c><02:30:43.660><c> 1</c><02:30:44.020><c> and</c>

02:30:44.309 --> 02:30:44.319 align:start position:0%
number minus the min number plus 1 and
 

02:30:44.319 --> 02:30:47.790 align:start position:0%
number minus the min number plus 1 and
then<02:30:45.040><c> we</c><02:30:45.340><c> get</c><02:30:45.760><c> the</c><02:30:45.910><c> floor</c><02:30:46.270><c> which</c><02:30:46.689><c> is</c><02:30:46.800><c> rounding</c>

02:30:47.790 --> 02:30:47.800 align:start position:0%
then we get the floor which is rounding
 

02:30:47.800 --> 02:30:49.979 align:start position:0%
then we get the floor which is rounding
down<02:30:48.010><c> and</c><02:30:48.370><c> we</c><02:30:48.489><c> add</c><02:30:48.670><c> all</c><02:30:48.700><c> that</c><02:30:49.120><c> to</c><02:30:49.420><c> our</c><02:30:49.569><c> minimum</c>

02:30:49.979 --> 02:30:49.989 align:start position:0%
down and we add all that to our minimum
 

02:30:49.989 --> 02:30:53.580 align:start position:0%
down and we add all that to our minimum
number<02:30:50.319><c> so</c><02:30:51.010><c> this</c><02:30:51.340><c> is</c><02:30:51.550><c> just</c><02:30:51.760><c> a</c><02:30:52.029><c> calculation</c><02:30:52.779><c> to</c>

02:30:53.580 --> 02:30:53.590 align:start position:0%
number so this is just a calculation to
 

02:30:53.590 --> 02:30:55.679 align:start position:0%
number so this is just a calculation to
get<02:30:53.859><c> a</c><02:30:53.920><c> random</c><02:30:54.460><c> number</c><02:30:54.609><c> between</c><02:30:54.939><c> the</c><02:30:55.390><c> min</c><02:30:55.660><c> and</c>

02:30:55.679 --> 02:30:55.689 align:start position:0%
get a random number between the min and
 

02:30:55.689 --> 02:30:59.969 align:start position:0%
get a random number between the min and
Max<02:30:56.430><c> so</c><02:30:57.430><c> as</c><02:30:57.729><c> practice</c><02:30:58.540><c> I'm</c><02:30:58.779><c> going</c><02:30:59.080><c> to</c><02:30:59.290><c> rewrite</c>

02:30:59.969 --> 02:30:59.979 align:start position:0%
Max so as practice I'm going to rewrite
 

02:30:59.979 --> 02:31:02.280 align:start position:0%
Max so as practice I'm going to rewrite
it<02:31:00.220><c> down</c><02:31:00.370><c> here</c><02:31:00.520><c> so</c><02:31:01.210><c> we</c><02:31:01.390><c> have</c><02:31:01.510><c> the</c><02:31:01.630><c> random</c><02:31:01.840><c> range</c>

02:31:02.280 --> 02:31:02.290 align:start position:0%
it down here so we have the random range
 

02:31:02.290 --> 02:31:04.590 align:start position:0%
it down here so we have the random range
and<02:31:02.560><c> instead</c><02:31:03.010><c> of</c><02:31:03.100><c> our</c><02:31:03.340><c> men</c><02:31:03.609><c> and</c><02:31:03.790><c> our</c><02:31:03.880><c> max</c><02:31:04.239><c> we</c>

02:31:04.590 --> 02:31:04.600 align:start position:0%
and instead of our men and our max we
 

02:31:04.600 --> 02:31:06.750 align:start position:0%
and instead of our men and our max we
have<02:31:04.720><c> my</c><02:31:04.960><c> men</c><02:31:05.200><c> and</c><02:31:05.319><c> my</c><02:31:05.500><c> max</c><02:31:05.800><c> however</c><02:31:06.370><c> the</c>

02:31:06.750 --> 02:31:06.760 align:start position:0%
have my men and my max however the
 

02:31:06.760 --> 02:31:08.849 align:start position:0%
have my men and my max however the
equation<02:31:07.239><c> is</c><02:31:07.330><c> going</c><02:31:07.479><c> to</c><02:31:07.630><c> be</c><02:31:07.720><c> the</c><02:31:07.870><c> same</c><02:31:08.140><c> so</c><02:31:08.739><c> we</c>

02:31:08.849 --> 02:31:08.859 align:start position:0%
equation is going to be the same so we
 

02:31:08.859 --> 02:31:11.550 align:start position:0%
equation is going to be the same so we
have<02:31:08.979><c> math</c><02:31:09.279><c> dot</c><02:31:09.609><c> floor</c><02:31:10.140><c> you</c><02:31:11.140><c> can</c><02:31:11.319><c> take</c><02:31:11.529><c> a</c>

02:31:11.550 --> 02:31:11.560 align:start position:0%
have math dot floor you can take a
 

02:31:11.560 --> 02:31:13.620 align:start position:0%
have math dot floor you can take a
chance<02:31:11.680><c> to</c><02:31:12.340><c> actually</c><02:31:12.819><c> just</c><02:31:12.939><c> look</c><02:31:13.180><c> over</c><02:31:13.540><c> the</c>

02:31:13.620 --> 02:31:13.630 align:start position:0%
chance to actually just look over the
 

02:31:13.630 --> 02:31:16.110 align:start position:0%
chance to actually just look over the
equation<02:31:14.170><c> and</c><02:31:14.380><c> see</c><02:31:14.920><c> if</c><02:31:15.010><c> you</c><02:31:15.160><c> can</c><02:31:15.399><c> understand</c>

02:31:16.110 --> 02:31:16.120 align:start position:0%
equation and see if you can understand
 

02:31:16.120 --> 02:31:22.469 align:start position:0%
equation and see if you can understand
how<02:31:16.359><c> it</c><02:31:16.390><c> works</c><02:31:16.810><c> my</c><02:31:17.680><c> max</c><02:31:18.390><c> -</c><02:31:19.390><c> my</c><02:31:20.290><c> men</c><02:31:20.800><c> and</c><02:31:21.330><c> then</c><02:31:22.330><c> we</c>

02:31:22.469 --> 02:31:22.479 align:start position:0%
how it works my max - my men and then we
 

02:31:22.479 --> 02:31:26.309 align:start position:0%
how it works my max - my men and then we
just<02:31:22.720><c> have</c><02:31:22.960><c> to</c><02:31:22.989><c> do</c><02:31:23.710><c> plus</c><02:31:24.279><c> one</c><02:31:25.120><c> and</c><02:31:25.390><c> then</c><02:31:26.109><c> this</c>

02:31:26.309 --> 02:31:26.319 align:start position:0%
just have to do plus one and then this
 

02:31:26.319 --> 02:31:30.150 align:start position:0%
just have to do plus one and then this
whole<02:31:26.560><c> thing</c><02:31:26.620><c> is</c><02:31:27.250><c> going</c><02:31:27.460><c> to</c><02:31:27.550><c> be</c><02:31:27.700><c> plus</c><02:31:28.600><c> my</c><02:31:29.529><c> men</c>

02:31:30.150 --> 02:31:30.160 align:start position:0%
whole thing is going to be plus my men
 

02:31:30.160 --> 02:31:34.620 align:start position:0%
whole thing is going to be plus my men
so<02:31:31.029><c> we</c><02:31:31.420><c> already</c><02:31:31.600><c> have</c><02:31:31.899><c> this</c><02:31:32.200><c> example</c><02:31:33.300><c> test</c><02:31:34.300><c> set</c>

02:31:34.620 --> 02:31:34.630 align:start position:0%
so we already have this example test set
 

02:31:34.630 --> 02:31:36.540 align:start position:0%
so we already have this example test set
up<02:31:34.750><c> down</c><02:31:34.899><c> here</c><02:31:35.229><c> random</c><02:31:35.710><c> range</c><02:31:35.859><c> between</c><02:31:36.010><c> 5</c><02:31:36.370><c> and</c>

02:31:36.540 --> 02:31:36.550 align:start position:0%
up down here random range between 5 and
 

02:31:36.550 --> 02:31:38.910 align:start position:0%
up down here random range between 5 and
15<02:31:36.910><c> and</c><02:31:37.090><c> we're</c><02:31:37.210><c> going</c><02:31:37.330><c> to</c><02:31:37.390><c> log</c><02:31:37.660><c> it</c><02:31:37.840><c> out</c><02:31:37.930><c> here</c><02:31:38.290><c> so</c>

02:31:38.910 --> 02:31:38.920 align:start position:0%
15 and we're going to log it out here so
 

02:31:38.920 --> 02:31:42.809 align:start position:0%
15 and we're going to log it out here so
let's<02:31:39.100><c> try</c><02:31:39.250><c> that</c><02:31:39.310><c> 11</c><02:31:39.850><c> 6</c><02:31:40.710><c> 7</c><02:31:41.710><c> see</c><02:31:42.189><c> every</c><02:31:42.489><c> number</c>

02:31:42.809 --> 02:31:42.819 align:start position:0%
let's try that 11 6 7 see every number
 

02:31:42.819 --> 02:31:48.740 align:start position:0%
let's try that 11 6 7 see every number
is<02:31:42.910><c> between</c><02:31:43.180><c> 5</c><02:31:43.810><c> and</c><02:31:44.050><c> 15</c><02:31:44.439><c> whenever</c><02:31:44.800><c> I</c><02:31:44.950><c> run</c><02:31:45.189><c> it</c>

02:31:48.740 --> 02:31:48.750 align:start position:0%
 
 

02:31:48.750 --> 02:31:51.679 align:start position:0%
 
another<02:31:49.649><c> useful</c><02:31:49.920><c> function</c><02:31:50.310><c> is</c><02:31:50.790><c> the</c><02:31:51.090><c> parse</c><02:31:51.390><c> int</c>

02:31:51.679 --> 02:31:51.689 align:start position:0%
another useful function is the parse int
 

02:31:51.689 --> 02:31:54.650 align:start position:0%
another useful function is the parse int
function<02:31:52.109><c> it</c><02:31:52.710><c> takes</c><02:31:53.220><c> a</c><02:31:53.370><c> string</c><02:31:53.670><c> and</c><02:31:54.000><c> returns</c>

02:31:54.650 --> 02:31:54.660 align:start position:0%
function it takes a string and returns
 

02:31:54.660 --> 02:31:57.050 align:start position:0%
function it takes a string and returns
an<02:31:54.960><c> integer</c><02:31:55.470><c> a</c><02:31:55.920><c> lot</c><02:31:56.430><c> of</c><02:31:56.550><c> times</c><02:31:56.729><c> you</c><02:31:56.850><c> want</c><02:31:56.939><c> to</c>

02:31:57.050 --> 02:31:57.060 align:start position:0%
an integer a lot of times you want to
 

02:31:57.060 --> 02:31:58.429 align:start position:0%
an integer a lot of times you want to
make<02:31:57.210><c> sure</c><02:31:57.420><c> you're</c><02:31:57.600><c> dealing</c><02:31:57.870><c> with</c><02:31:57.960><c> integers</c>

02:31:58.429 --> 02:31:58.439 align:start position:0%
make sure you're dealing with integers
 

02:31:58.439 --> 02:32:00.110 align:start position:0%
make sure you're dealing with integers
and<02:31:58.590><c> not</c><02:31:58.739><c> strings</c><02:31:59.160><c> for</c><02:31:59.819><c> different</c>

02:32:00.110 --> 02:32:00.120 align:start position:0%
and not strings for different
 

02:32:00.120 --> 02:32:01.820 align:start position:0%
and not strings for different
calculations<02:32:00.779><c> and</c><02:32:00.960><c> things</c><02:32:01.170><c> like</c><02:32:01.319><c> that</c>

02:32:01.820 --> 02:32:01.830 align:start position:0%
calculations and things like that
 

02:32:01.830 --> 02:32:04.400 align:start position:0%
calculations and things like that
if<02:32:02.340><c> the</c><02:32:02.939><c> string</c><02:32:03.270><c> cannot</c><02:32:03.569><c> be</c><02:32:03.779><c> converted</c><02:32:04.109><c> into</c>

02:32:04.400 --> 02:32:04.410 align:start position:0%
if the string cannot be converted into
 

02:32:04.410 --> 02:32:07.760 align:start position:0%
if the string cannot be converted into
an<02:32:04.590><c> integer</c><02:32:04.859><c> it</c><02:32:05.279><c> returns</c><02:32:05.729><c> in</c><02:32:05.970><c> a</c><02:32:06.390><c> in</c><02:32:06.689><c> for</c><02:32:07.200><c> not</c><02:32:07.470><c> a</c>

02:32:07.760 --> 02:32:07.770 align:start position:0%
an integer it returns in a in for not a
 

02:32:07.770 --> 02:32:10.010 align:start position:0%
an integer it returns in a in for not a
number<02:32:08.220><c> so</c><02:32:08.640><c> let</c><02:32:08.760><c> me</c><02:32:08.850><c> show</c><02:32:09.000><c> you</c><02:32:09.029><c> how</c><02:32:09.330><c> it</c><02:32:09.479><c> works</c>

02:32:10.010 --> 02:32:10.020 align:start position:0%
number so let me show you how it works
 

02:32:10.020 --> 02:32:13.099 align:start position:0%
number so let me show you how it works
from<02:32:10.500><c> this</c><02:32:10.649><c> convert</c><02:32:11.189><c> to</c><02:32:11.550><c> integer</c><02:32:12.029><c> function</c><02:32:12.689><c> we</c>

02:32:13.099 --> 02:32:13.109 align:start position:0%
from this convert to integer function we
 

02:32:13.109 --> 02:32:15.769 align:start position:0%
from this convert to integer function we
are<02:32:13.140><c> going</c><02:32:13.260><c> to</c><02:32:13.590><c> return</c><02:32:14.390><c> and</c><02:32:15.390><c> we're</c><02:32:15.540><c> going</c><02:32:15.720><c> to</c>

02:32:15.769 --> 02:32:15.779 align:start position:0%
are going to return and we're going to
 

02:32:15.779 --> 02:32:18.110 align:start position:0%
are going to return and we're going to
return<02:32:16.200><c> the</c><02:32:16.260><c> string</c><02:32:16.859><c> except</c><02:32:17.760><c> we're</c><02:32:17.910><c> going</c><02:32:18.060><c> to</c>

02:32:18.110 --> 02:32:18.120 align:start position:0%
return the string except we're going to
 

02:32:18.120 --> 02:32:20.120 align:start position:0%
return the string except we're going to
convert<02:32:18.420><c> it</c><02:32:18.540><c> into</c><02:32:18.660><c> an</c><02:32:18.840><c> integer</c><02:32:19.050><c> first</c><02:32:19.590><c> so</c>

02:32:20.120 --> 02:32:20.130 align:start position:0%
convert it into an integer first so
 

02:32:20.130 --> 02:32:24.440 align:start position:0%
convert it into an integer first so
we'll<02:32:20.310><c> do</c><02:32:20.489><c> parse</c><02:32:21.470><c> int</c><02:32:22.470><c> and</c><02:32:22.859><c> then</c><02:32:23.729><c> I'll</c><02:32:23.819><c> pass</c><02:32:24.120><c> in</c>

02:32:24.440 --> 02:32:24.450 align:start position:0%
we'll do parse int and then I'll pass in
 

02:32:24.450 --> 02:32:28.550 align:start position:0%
we'll do parse int and then I'll pass in
the<02:32:24.840><c> string</c><02:32:25.229><c> now</c><02:32:26.189><c> it</c><02:32:26.640><c> was</c><02:32:26.970><c> a</c><02:32:27.270><c> string</c><02:32:27.779><c> because</c>

02:32:28.550 --> 02:32:28.560 align:start position:0%
the string now it was a string because
 

02:32:28.560 --> 02:32:30.139 align:start position:0%
the string now it was a string because
you<02:32:28.800><c> can</c><02:32:28.950><c> see</c><02:32:29.130><c> here</c><02:32:29.340><c> we're</c><02:32:29.520><c> passing</c><02:32:29.939><c> in</c><02:32:30.029><c> the</c>

02:32:30.139 --> 02:32:30.149 align:start position:0%
you can see here we're passing in the
 

02:32:30.149 --> 02:32:32.389 align:start position:0%
you can see here we're passing in the
string<02:32:30.540><c> of</c><02:32:30.810><c> the</c><02:32:31.080><c> 56</c><02:32:31.620><c> but</c><02:32:32.040><c> it's</c><02:32:32.160><c> going</c><02:32:32.340><c> to</c>

02:32:32.389 --> 02:32:32.399 align:start position:0%
string of the 56 but it's going to
 

02:32:32.399 --> 02:32:38.989 align:start position:0%
string of the 56 but it's going to
return<02:32:32.850><c> it</c><02:32:33.029><c> as</c><02:32:33.180><c> a</c><02:32:33.569><c> number</c><02:32:34.109><c> and</c><02:32:34.260><c> integer</c>

02:32:38.989 --> 02:32:38.999 align:start position:0%
 
 

02:32:38.999 --> 02:32:41.330 align:start position:0%
 
the<02:32:39.329><c> person</c><02:32:39.840><c> function</c><02:32:40.350><c> can</c><02:32:40.590><c> also</c><02:32:40.680><c> be</c><02:32:40.890><c> used</c>

02:32:41.330 --> 02:32:41.340 align:start position:0%
the person function can also be used
 

02:32:41.340 --> 02:32:44.540 align:start position:0%
the person function can also be used
with<02:32:41.579><c> a</c><02:32:41.819><c> radix</c><02:32:42.329><c> the</c><02:32:43.109><c> radix</c><02:32:43.619><c> specifies</c><02:32:44.249><c> the</c>

02:32:44.540 --> 02:32:44.550 align:start position:0%
with a radix the radix specifies the
 

02:32:44.550 --> 02:32:47.359 align:start position:0%
with a radix the radix specifies the
base<02:32:44.789><c> of</c><02:32:45.090><c> the</c><02:32:45.329><c> number</c><02:32:45.689><c> in</c><02:32:45.899><c> the</c><02:32:46.170><c> string</c><02:32:46.529><c> such</c><02:32:47.189><c> as</c>

02:32:47.359 --> 02:32:47.369 align:start position:0%
base of the number in the string such as
 

02:32:47.369 --> 02:32:51.380 align:start position:0%
base of the number in the string such as
base<02:32:47.670><c> 2</c><02:32:47.999><c> or</c><02:32:48.329><c> base</c><02:32:48.930><c> 7</c><02:32:49.649><c> or</c><02:32:49.770><c> base</c><02:32:49.949><c> 8</c><02:32:50.220><c> a</c><02:32:50.640><c> base</c><02:32:51.119><c> 2</c>

02:32:51.380 --> 02:32:51.390 align:start position:0%
base 2 or base 7 or base 8 a base 2
 

02:32:51.390 --> 02:32:53.359 align:start position:0%
base 2 or base 7 or base 8 a base 2
would<02:32:51.600><c> be</c><02:32:51.630><c> binary</c><02:32:52.140><c> so</c><02:32:52.770><c> that's</c><02:32:53.010><c> one</c><02:32:53.220><c> of</c><02:32:53.249><c> the</c>

02:32:53.359 --> 02:32:53.369 align:start position:0%
would be binary so that's one of the
 

02:32:53.369 --> 02:32:55.729 align:start position:0%
would be binary so that's one of the
most<02:32:53.520><c> common</c><02:32:53.999><c> ones</c><02:32:54.149><c> to</c><02:32:54.420><c> use</c><02:32:54.689><c> now</c><02:32:55.350><c> the</c><02:32:55.409><c> default</c>

02:32:55.729 --> 02:32:55.739 align:start position:0%
most common ones to use now the default
 

02:32:55.739 --> 02:32:57.199 align:start position:0%
most common ones to use now the default
is<02:32:56.130><c> base</c><02:32:56.520><c> 10</c>

02:32:57.199 --> 02:32:57.209 align:start position:0%
is base 10
 

02:32:57.209 --> 02:32:59.540 align:start position:0%
is base 10
that's<02:32:57.569><c> what</c><02:32:57.869><c> we</c><02:32:58.050><c> use</c><02:32:58.350><c> normally</c><02:32:59.159><c> every</c><02:32:59.340><c> day</c>

02:32:59.540 --> 02:32:59.550 align:start position:0%
that's what we use normally every day
 

02:32:59.550 --> 02:33:01.250 align:start position:0%
that's what we use normally every day
but<02:32:59.999><c> let</c><02:33:00.180><c> me</c><02:33:00.300><c> show</c><02:33:00.510><c> you</c><02:33:00.569><c> how</c><02:33:00.840><c> that</c><02:33:00.899><c> would</c><02:33:01.199><c> work</c>

02:33:01.250 --> 02:33:01.260 align:start position:0%
but let me show you how that would work
 

02:33:01.260 --> 02:33:04.040 align:start position:0%
but let me show you how that would work
we're<02:33:02.189><c> gonna</c><02:33:02.399><c> convert</c><02:33:02.850><c> this</c><02:33:03.119><c> number</c><02:33:03.600><c> which</c><02:33:03.869><c> is</c>

02:33:04.040 --> 02:33:04.050 align:start position:0%
we're gonna convert this number which is
 

02:33:04.050 --> 02:33:07.429 align:start position:0%
we're gonna convert this number which is
a<02:33:04.079><c> binary</c><02:33:04.560><c> number</c><02:33:04.979><c> to</c><02:33:05.789><c> an</c><02:33:05.939><c> integer</c><02:33:06.119><c> so</c><02:33:06.810><c> we'll</c>

02:33:07.429 --> 02:33:07.439 align:start position:0%
a binary number to an integer so we'll
 

02:33:07.439 --> 02:33:12.410 align:start position:0%
a binary number to an integer so we'll
do<02:33:07.619><c> return</c><02:33:08.159><c> and</c><02:33:09.289><c> I</c><02:33:10.289><c> will</c><02:33:10.529><c> do</c><02:33:11.010><c> the</c><02:33:11.189><c> parse</c><02:33:11.550><c> and</c>

02:33:12.410 --> 02:33:12.420 align:start position:0%
do return and I will do the parse and
 

02:33:12.420 --> 02:33:16.370 align:start position:0%
do return and I will do the parse and
I'll<02:33:13.079><c> pass</c><02:33:13.800><c> in</c><02:33:14.130><c> this</c><02:33:14.850><c> string</c><02:33:15.239><c> as</c><02:33:15.420><c> before</c><02:33:15.869><c> but</c>

02:33:16.370 --> 02:33:16.380 align:start position:0%
I'll pass in this string as before but
 

02:33:16.380 --> 02:33:18.080 align:start position:0%
I'll pass in this string as before but
now<02:33:16.439><c> we'll</c><02:33:16.709><c> have</c><02:33:16.800><c> a</c><02:33:16.920><c> second</c><02:33:17.430><c> argument</c><02:33:17.640><c> after</c>

02:33:18.080 --> 02:33:18.090 align:start position:0%
now we'll have a second argument after
 

02:33:18.090 --> 02:33:20.449 align:start position:0%
now we'll have a second argument after
the<02:33:18.329><c> comma</c><02:33:18.659><c> which</c><02:33:19.499><c> is</c><02:33:19.770><c> going</c><02:33:20.039><c> to</c><02:33:20.100><c> be</c><02:33:20.279><c> the</c>

02:33:20.449 --> 02:33:20.459 align:start position:0%
the comma which is going to be the
 

02:33:20.459 --> 02:33:22.819 align:start position:0%
the comma which is going to be the
number<02:33:20.760><c> 2</c><02:33:21.060><c> so</c><02:33:21.840><c> and</c><02:33:21.959><c> so</c><02:33:22.079><c> the</c><02:33:22.229><c> default</c><02:33:22.380><c> of</c><02:33:22.649><c> base</c>

02:33:22.819 --> 02:33:22.829 align:start position:0%
number 2 so and so the default of base
 

02:33:22.829 --> 02:33:26.120 align:start position:0%
number 2 so and so the default of base
10<02:33:23.220><c> will</c><02:33:23.609><c> be</c><02:33:23.789><c> passing</c><02:33:24.479><c> it</c><02:33:24.689><c> as</c><02:33:24.840><c> base</c><02:33:25.079><c> 2</c><02:33:25.409><c> so</c><02:33:25.680><c> the</c>

02:33:26.120 --> 02:33:26.130 align:start position:0%
10 will be passing it as base 2 so the
 

02:33:26.130 --> 02:33:27.769 align:start position:0%
10 will be passing it as base 2 so the
computer<02:33:26.550><c> knows</c><02:33:26.579><c> that</c><02:33:26.999><c> this</c><02:33:27.180><c> is</c><02:33:27.390><c> a</c><02:33:27.420><c> binary</c>

02:33:27.769 --> 02:33:27.779 align:start position:0%
computer knows that this is a binary
 

02:33:27.779 --> 02:33:32.381 align:start position:0%
computer knows that this is a binary
number

02:33:32.381 --> 02:33:32.391 align:start position:0%
 
 

02:33:32.391 --> 02:33:35.201 align:start position:0%
 
I<02:33:32.480><c> love</c><02:33:33.200><c> the</c><02:33:33.440><c> ternary</c><02:33:33.860><c> operator</c><02:33:34.400><c> it's</c><02:33:34.940><c> like</c><02:33:35.181><c> a</c>

02:33:35.201 --> 02:33:35.211 align:start position:0%
I love the ternary operator it's like a
 

02:33:35.211 --> 02:33:39.011 align:start position:0%
I love the ternary operator it's like a
one-line<02:33:35.931><c> if-else</c><02:33:36.820><c> expression</c><02:33:37.820><c> now</c><02:33:38.421><c> this</c><02:33:38.841><c> is</c>

02:33:39.011 --> 02:33:39.021 align:start position:0%
one-line if-else expression now this is
 

02:33:39.021 --> 02:33:40.961 align:start position:0%
one-line if-else expression now this is
what<02:33:39.171><c> it</c><02:33:39.291><c> looks</c><02:33:39.591><c> like</c><02:33:39.801><c> you</c><02:33:40.461><c> have</c><02:33:40.730><c> your</c>

02:33:40.961 --> 02:33:40.971 align:start position:0%
what it looks like you have your
 

02:33:40.971 --> 02:33:43.571 align:start position:0%
what it looks like you have your
condition<02:33:41.631><c> just</c><02:33:42.501><c> like</c><02:33:42.711><c> in</c><02:33:42.860><c> an</c><02:33:42.950><c> if</c><02:33:43.251><c> statement</c>

02:33:43.571 --> 02:33:43.581 align:start position:0%
condition just like in an if statement
 

02:33:43.581 --> 02:33:46.600 align:start position:0%
condition just like in an if statement
and<02:33:44.150><c> then</c><02:33:44.780><c> you</c><02:33:44.961><c> would</c><02:33:45.081><c> have</c><02:33:45.320><c> a</c><02:33:45.561><c> question</c><02:33:46.101><c> mark</c>

02:33:46.600 --> 02:33:46.610 align:start position:0%
and then you would have a question mark
 

02:33:46.610 --> 02:33:50.020 align:start position:0%
and then you would have a question mark
after<02:33:47.200><c> the</c><02:33:48.200><c> question</c><02:33:48.740><c> mark</c><02:33:49.011><c> you</c><02:33:49.521><c> have</c><02:33:49.820><c> what's</c>

02:33:50.020 --> 02:33:50.030 align:start position:0%
after the question mark you have what's
 

02:33:50.030 --> 02:33:51.900 align:start position:0%
after the question mark you have what's
gonna<02:33:50.150><c> happen</c><02:33:50.660><c> if</c><02:33:50.841><c> the</c><02:33:51.110><c> condition</c><02:33:51.591><c> is</c><02:33:51.681><c> true</c>

02:33:51.900 --> 02:33:51.910 align:start position:0%
gonna happen if the condition is true
 

02:33:51.910 --> 02:33:55.060 align:start position:0%
gonna happen if the condition is true
then<02:33:52.910><c> you</c><02:33:53.091><c> have</c><02:33:53.211><c> a</c><02:33:53.240><c> colon</c><02:33:53.721><c> then</c><02:33:54.591><c> you</c><02:33:54.831><c> have</c>

02:33:55.060 --> 02:33:55.070 align:start position:0%
then you have a colon then you have
 

02:33:55.070 --> 02:33:57.131 align:start position:0%
then you have a colon then you have
what's<02:33:55.311><c> going</c><02:33:55.461><c> to</c><02:33:55.490><c> happen</c><02:33:55.971><c> if</c><02:33:56.150><c> the</c><02:33:56.541><c> condition</c>

02:33:57.131 --> 02:33:57.141 align:start position:0%
what's going to happen if the condition
 

02:33:57.141 --> 02:34:00.791 align:start position:0%
what's going to happen if the condition
is<02:33:57.410><c> false</c><02:33:58.091><c> so</c><02:33:59.091><c> we</c><02:33:59.271><c> can</c><02:33:59.450><c> replace</c><02:33:59.631><c> an</c><02:34:00.171><c> if-else</c>

02:34:00.791 --> 02:34:00.801 align:start position:0%
is false so we can replace an if-else
 

02:34:00.801 --> 02:34:03.581 align:start position:0%
is false so we can replace an if-else
statement<02:34:01.400><c> like</c><02:34:01.551><c> this</c><02:34:01.851><c> into</c><02:34:02.601><c> something</c><02:34:02.871><c> using</c>

02:34:03.581 --> 02:34:03.591 align:start position:0%
statement like this into something using
 

02:34:03.591 --> 02:34:05.980 align:start position:0%
statement like this into something using
the<02:34:03.860><c> ternary</c><02:34:04.461><c> operator</c><02:34:05.001><c> so</c><02:34:05.450><c> here</c><02:34:05.690><c> we</c><02:34:05.841><c> have</c>

02:34:05.980 --> 02:34:05.990 align:start position:0%
the ternary operator so here we have
 

02:34:05.990 --> 02:34:08.051 align:start position:0%
the ternary operator so here we have
this<02:34:06.141><c> if</c><02:34:06.351><c> this</c><02:34:06.621><c> condition</c><02:34:07.190><c> is</c><02:34:07.311><c> true</c><02:34:07.610><c> we're</c>

02:34:08.051 --> 02:34:08.061 align:start position:0%
this if this condition is true we're
 

02:34:08.061 --> 02:34:10.180 align:start position:0%
this if this condition is true we're
going<02:34:08.091><c> to</c><02:34:08.240><c> return</c><02:34:08.511><c> true</c><02:34:08.900><c> else</c><02:34:09.081><c> we're</c><02:34:10.011><c> going</c><02:34:10.131><c> to</c>

02:34:10.180 --> 02:34:10.190 align:start position:0%
going to return true else we're going to
 

02:34:10.190 --> 02:34:13.241 align:start position:0%
going to return true else we're going to
return<02:34:10.521><c> false</c><02:34:10.940><c> let's</c><02:34:11.271><c> change</c><02:34:12.021><c> this</c><02:34:12.351><c> so</c><02:34:13.011><c> now</c>

02:34:13.241 --> 02:34:13.251 align:start position:0%
return false let's change this so now
 

02:34:13.251 --> 02:34:15.131 align:start position:0%
return false let's change this so now
we're<02:34:13.400><c> going</c><02:34:13.490><c> to</c><02:34:13.551><c> use</c><02:34:13.730><c> the</c><02:34:13.940><c> ternary</c><02:34:14.450><c> operator</c>

02:34:15.131 --> 02:34:15.141 align:start position:0%
we're going to use the ternary operator
 

02:34:15.141 --> 02:34:18.060 align:start position:0%
we're going to use the ternary operator
so<02:34:15.621><c> now</c><02:34:15.771><c> it's</c><02:34:15.921><c> just</c><02:34:16.011><c> going</c><02:34:16.190><c> to</c><02:34:16.280><c> say</c><02:34:16.490><c> return</c><02:34:17.301><c> a</c>

02:34:18.060 --> 02:34:18.070 align:start position:0%
so now it's just going to say return a
 

02:34:18.070 --> 02:34:21.341 align:start position:0%
so now it's just going to say return a
equals<02:34:19.070><c> equals</c><02:34:19.371><c> B</c><02:34:20.150><c> that's</c><02:34:20.450><c> the</c><02:34:20.751><c> condition</c>

02:34:21.341 --> 02:34:21.351 align:start position:0%
equals equals B that's the condition
 

02:34:21.351 --> 02:34:24.281 align:start position:0%
equals equals B that's the condition
then<02:34:21.860><c> we</c><02:34:21.891><c> use</c><02:34:22.131><c> the</c><02:34:22.311><c> question</c><02:34:22.791><c> mark</c><02:34:22.820><c> so</c><02:34:23.721><c> if</c><02:34:24.081><c> it's</c>

02:34:24.281 --> 02:34:24.291 align:start position:0%
then we use the question mark so if it's
 

02:34:24.291 --> 02:34:28.631 align:start position:0%
then we use the question mark so if it's
true<02:34:24.621><c> we're</c><02:34:25.131><c> going</c><02:34:25.160><c> to</c><02:34:25.551><c> return</c><02:34:25.910><c> true</c><02:34:26.721><c> and</c><02:34:27.641><c> then</c>

02:34:28.631 --> 02:34:28.641 align:start position:0%
true we're going to return true and then
 

02:34:28.641 --> 02:34:30.850 align:start position:0%
true we're going to return true and then
we've<02:34:28.910><c> have</c><02:34:29.091><c> a</c><02:34:29.121><c> colon</c><02:34:29.660><c> and</c><02:34:29.841><c> after</c><02:34:30.351><c> the</c><02:34:30.471><c> colon</c>

02:34:30.850 --> 02:34:30.860 align:start position:0%
we've have a colon and after the colon
 

02:34:30.860 --> 02:34:33.071 align:start position:0%
we've have a colon and after the colon
we<02:34:31.011><c> have</c><02:34:31.221><c> what's</c><02:34:31.461><c> going</c><02:34:31.610><c> to</c><02:34:31.641><c> happen</c><02:34:32.091><c> if</c><02:34:32.360><c> it's</c>

02:34:33.071 --> 02:34:33.081 align:start position:0%
we have what's going to happen if it's
 

02:34:33.081 --> 02:34:34.841 align:start position:0%
we have what's going to happen if it's
false<02:34:33.381><c> which</c><02:34:33.921><c> is</c><02:34:34.101><c> we're</c><02:34:34.280><c> going</c><02:34:34.400><c> to</c><02:34:34.461><c> return</c>

02:34:34.841 --> 02:34:34.851 align:start position:0%
false which is we're going to return
 

02:34:34.851 --> 02:34:35.890 align:start position:0%
false which is we're going to return
false

02:34:35.890 --> 02:34:35.900 align:start position:0%
false
 

02:34:35.900 --> 02:34:38.591 align:start position:0%
false
now<02:34:36.891><c> I'm</c><02:34:37.011><c> we</c><02:34:37.131><c> honest</c><02:34:37.431><c> you</c><02:34:37.610><c> would</c><02:34:37.761><c> never</c><02:34:38.061><c> write</c>

02:34:38.591 --> 02:34:38.601 align:start position:0%
now I'm we honest you would never write
 

02:34:38.601 --> 02:34:40.900 align:start position:0%
now I'm we honest you would never write
a<02:34:38.811><c> line</c><02:34:39.110><c> like</c><02:34:39.320><c> this</c><02:34:39.530><c> in</c><02:34:39.711><c> real</c><02:34:39.860><c> life</c><02:34:39.910><c> because</c>

02:34:40.900 --> 02:34:40.910 align:start position:0%
a line like this in real life because
 

02:34:40.910 --> 02:34:45.310 align:start position:0%
a line like this in real life because
you<02:34:41.271><c> could</c><02:34:41.450><c> just</c><02:34:41.480><c> write</c><02:34:41.871><c> return</c><02:34:42.320><c> a</c><02:34:44.320><c> equals</c>

02:34:45.310 --> 02:34:45.320 align:start position:0%
you could just write return a equals
 

02:34:45.320 --> 02:34:49.690 align:start position:0%
you could just write return a equals
equals<02:34:45.621><c> equals</c><02:34:46.131><c> B</c><02:34:46.940><c> and</c><02:34:47.681><c> this</c><02:34:48.681><c> lines</c><02:34:49.070><c> actually</c>

02:34:49.690 --> 02:34:49.700 align:start position:0%
equals equals B and this lines actually
 

02:34:49.700 --> 02:34:51.400 align:start position:0%
equals equals B and this lines actually
going<02:34:49.881><c> to</c><02:34:49.971><c> do</c><02:34:50.121><c> the</c><02:34:50.271><c> same</c><02:34:50.511><c> thing</c><02:34:50.751><c> as</c><02:34:50.900><c> this</c><02:34:51.110><c> line</c>

02:34:51.400 --> 02:34:51.410 align:start position:0%
going to do the same thing as this line
 

02:34:51.410 --> 02:34:53.230 align:start position:0%
going to do the same thing as this line
however<02:34:52.221><c> I</c><02:34:52.371><c> just</c><02:34:52.671><c> wanted</c><02:34:52.881><c> to</c><02:34:52.971><c> give</c><02:34:53.091><c> you</c><02:34:53.211><c> a</c>

02:34:53.230 --> 02:34:53.240 align:start position:0%
however I just wanted to give you a
 

02:34:53.240 --> 02:34:55.961 align:start position:0%
however I just wanted to give you a
simple<02:34:53.660><c> example</c><02:34:53.841><c> of</c><02:34:54.501><c> using</c><02:34:54.591><c> the</c><02:34:55.371><c> ternary</c>

02:34:55.961 --> 02:34:55.971 align:start position:0%
simple example of using the ternary
 

02:34:55.971 --> 02:35:00.250 align:start position:0%
simple example of using the ternary
operator

02:35:00.250 --> 02:35:00.260 align:start position:0%
 
 

02:35:00.260 --> 02:35:01.990 align:start position:0%
 
one<02:35:01.160><c> of</c><02:35:01.280><c> the</c><02:35:01.370><c> great</c><02:35:01.580><c> things</c><02:35:01.880><c> about</c>

02:35:01.990 --> 02:35:02.000 align:start position:0%
one of the great things about
 

02:35:02.000 --> 02:35:04.720 align:start position:0%
one of the great things about
conditional<02:35:02.720><c> or</c><02:35:02.900><c> ternary</c><02:35:03.440><c> operators</c><02:35:04.190><c> is</c><02:35:04.400><c> that</c>

02:35:04.720 --> 02:35:04.730 align:start position:0%
conditional or ternary operators is that
 

02:35:04.730 --> 02:35:06.341 align:start position:0%
conditional or ternary operators is that
you<02:35:04.820><c> can</c><02:35:05.061><c> nest</c><02:35:05.420><c> them</c><02:35:05.630><c> within</c><02:35:05.840><c> each</c><02:35:06.110><c> other</c>

02:35:06.341 --> 02:35:06.351 align:start position:0%
you can nest them within each other
 

02:35:06.351 --> 02:35:09.220 align:start position:0%
you can nest them within each other
which<02:35:06.860><c> gives</c><02:35:07.160><c> them</c><02:35:07.340><c> even</c><02:35:07.820><c> more</c><02:35:08.061><c> power</c><02:35:08.450><c> so</c>

02:35:09.220 --> 02:35:09.230 align:start position:0%
which gives them even more power so
 

02:35:09.230 --> 02:35:10.600 align:start position:0%
which gives them even more power so
we're<02:35:09.440><c> going</c><02:35:09.561><c> to</c><02:35:09.620><c> read</c><02:35:09.800><c> write</c><02:35:10.101><c> a</c><02:35:10.130><c> function</c>

02:35:10.600 --> 02:35:10.610 align:start position:0%
we're going to read write a function
 

02:35:10.610 --> 02:35:13.301 align:start position:0%
we're going to read write a function
here<02:35:10.880><c> the</c><02:35:11.181><c> function</c><02:35:11.570><c> check</c><02:35:11.960><c> sign</c><02:35:12.410><c> and</c><02:35:12.830><c> it's</c>

02:35:13.301 --> 02:35:13.311 align:start position:0%
here the function check sign and it's
 

02:35:13.311 --> 02:35:15.761 align:start position:0%
here the function check sign and it's
going<02:35:13.521><c> to</c><02:35:13.820><c> return</c><02:35:14.271><c> the</c><02:35:14.601><c> string</c><02:35:14.870><c> positive</c><02:35:15.590><c> if</c>

02:35:15.761 --> 02:35:15.771 align:start position:0%
going to return the string positive if
 

02:35:15.771 --> 02:35:18.131 align:start position:0%
going to return the string positive if
this<02:35:15.950><c> number</c><02:35:16.250><c> is</c><02:35:16.370><c> positive</c><02:35:16.780><c> negative</c><02:35:17.780><c> if</c><02:35:17.960><c> if</c>

02:35:18.131 --> 02:35:18.141 align:start position:0%
this number is positive negative if if
 

02:35:18.141 --> 02:35:21.220 align:start position:0%
this number is positive negative if if
the<02:35:18.440><c> number</c><02:35:18.710><c> is</c><02:35:18.740><c> negative</c><02:35:18.980><c> or</c><02:35:19.400><c> zero</c><02:35:20.300><c> and</c><02:35:20.570><c> we're</c>

02:35:21.220 --> 02:35:21.230 align:start position:0%
the number is negative or zero and we're
 

02:35:21.230 --> 02:35:24.131 align:start position:0%
the number is negative or zero and we're
gonna<02:35:21.320><c> use</c><02:35:21.681><c> a</c><02:35:21.980><c> nested</c><02:35:22.641><c> conditional</c><02:35:23.271><c> operator</c>

02:35:24.131 --> 02:35:24.141 align:start position:0%
gonna use a nested conditional operator
 

02:35:24.141 --> 02:35:27.970 align:start position:0%
gonna use a nested conditional operator
so<02:35:24.650><c> here</c><02:35:25.431><c> it</c><02:35:25.521><c> is</c><02:35:25.641><c> return</c><02:35:26.450><c> and</c><02:35:26.780><c> first</c><02:35:27.740><c> we're</c>

02:35:27.970 --> 02:35:27.980 align:start position:0%
so here it is return and first we're
 

02:35:27.980 --> 02:35:30.850 align:start position:0%
so here it is return and first we're
going<02:35:28.070><c> to</c><02:35:28.160><c> check</c><02:35:28.400><c> if</c><02:35:28.641><c> num</c><02:35:28.940><c> is</c><02:35:29.271><c> more</c><02:35:29.990><c> than</c><02:35:30.230><c> zero</c>

02:35:30.850 --> 02:35:30.860 align:start position:0%
going to check if num is more than zero
 

02:35:30.860 --> 02:35:33.881 align:start position:0%
going to check if num is more than zero
and<02:35:31.160><c> then</c><02:35:32.150><c> we'll</c><02:35:32.300><c> use</c><02:35:32.601><c> the</c><02:35:32.840><c> ternary</c><02:35:33.290><c> operator</c>

02:35:33.881 --> 02:35:33.891 align:start position:0%
and then we'll use the ternary operator
 

02:35:33.891 --> 02:35:37.060 align:start position:0%
and then we'll use the ternary operator
if<02:35:34.040><c> so</c><02:35:34.610><c> the</c><02:35:35.120><c> first</c><02:35:35.450><c> thing</c><02:35:35.840><c> after</c><02:35:36.260><c> the</c><02:35:36.410><c> question</c>

02:35:37.060 --> 02:35:37.070 align:start position:0%
if so the first thing after the question
 

02:35:37.070 --> 02:35:39.490 align:start position:0%
if so the first thing after the question
mark<02:35:37.250><c> is</c><02:35:37.370><c> if</c><02:35:37.521><c> it's</c><02:35:37.670><c> true</c><02:35:37.940><c> if</c><02:35:38.181><c> it's</c><02:35:38.780><c> true</c><02:35:39.170><c> we're</c>

02:35:39.490 --> 02:35:39.500 align:start position:0%
mark is if it's true if it's true we're
 

02:35:39.500 --> 02:35:44.381 align:start position:0%
mark is if it's true if it's true we're
gonna<02:35:39.710><c> return</c><02:35:40.101><c> positive</c><02:35:41.230><c> if</c><02:35:42.230><c> it's</c><02:35:43.030><c> false</c><02:35:44.030><c> if</c>

02:35:44.381 --> 02:35:44.391 align:start position:0%
gonna return positive if it's false if
 

02:35:44.391 --> 02:35:47.020 align:start position:0%
gonna return positive if it's false if
the<02:35:44.870><c> number</c><02:35:45.170><c> is</c><02:35:45.200><c> not</c><02:35:45.710><c> more</c><02:35:46.010><c> than</c><02:35:46.040><c> zero</c><02:35:46.490><c> we'll</c>

02:35:47.020 --> 02:35:47.030 align:start position:0%
the number is not more than zero we'll
 

02:35:47.030 --> 02:35:48.910 align:start position:0%
the number is not more than zero we'll
do<02:35:47.181><c> something</c><02:35:47.420><c> else</c><02:35:47.690><c> but</c><02:35:48.170><c> here's</c><02:35:48.530><c> where</c><02:35:48.710><c> we're</c>

02:35:48.910 --> 02:35:48.920 align:start position:0%
do something else but here's where we're
 

02:35:48.920 --> 02:35:51.671 align:start position:0%
do something else but here's where we're
going<02:35:49.190><c> to</c><02:35:49.311><c> have</c><02:35:49.340><c> another</c><02:35:50.050><c> ternary</c><02:35:51.050><c> operator</c>

02:35:51.671 --> 02:35:51.681 align:start position:0%
going to have another ternary operator
 

02:35:51.681 --> 02:35:55.120 align:start position:0%
going to have another ternary operator
we're<02:35:52.250><c> gonna</c><02:35:52.340><c> check</c><02:35:52.670><c> if</c><02:35:52.910><c> num</c><02:35:53.271><c> is</c><02:35:53.740><c> less</c><02:35:54.740><c> than</c>

02:35:55.120 --> 02:35:55.130 align:start position:0%
we're gonna check if num is less than
 

02:35:55.130 --> 02:35:58.120 align:start position:0%
we're gonna check if num is less than
zero<02:35:55.670><c> so</c><02:35:56.450><c> if</c><02:35:56.660><c> the</c><02:35:56.780><c> number</c><02:35:57.110><c> is</c><02:35:57.141><c> less</c><02:35:57.260><c> than</c><02:35:57.530><c> zero</c>

02:35:58.120 --> 02:35:58.130 align:start position:0%
zero so if the number is less than zero
 

02:35:58.130 --> 02:35:59.950 align:start position:0%
zero so if the number is less than zero
well<02:35:58.700><c> if</c><02:35:58.820><c> that's</c><02:35:58.940><c> true</c><02:35:59.120><c> we</c><02:35:59.601><c> have</c><02:35:59.690><c> to</c><02:35:59.780><c> have</c><02:35:59.870><c> the</c>

02:35:59.950 --> 02:35:59.960 align:start position:0%
well if that's true we have to have the
 

02:35:59.960 --> 02:36:01.720 align:start position:0%
well if that's true we have to have the
question<02:36:00.380><c> mark</c><02:36:00.530><c> for</c><02:36:00.771><c> the</c><02:36:00.860><c> ternary</c><02:36:01.250><c> operator</c>

02:36:01.720 --> 02:36:01.730 align:start position:0%
question mark for the ternary operator
 

02:36:01.730 --> 02:36:05.131 align:start position:0%
question mark for the ternary operator
if<02:36:01.940><c> that's</c><02:36:02.510><c> true</c><02:36:02.870><c> we're</c><02:36:03.410><c> going</c><02:36:03.440><c> to</c><02:36:03.920><c> return</c>

02:36:05.131 --> 02:36:05.141 align:start position:0%
if that's true we're going to return
 

02:36:05.141 --> 02:36:10.030 align:start position:0%
if that's true we're going to return
negative<02:36:06.141><c> and</c><02:36:06.460><c> if</c><02:36:07.460><c> it's</c><02:36:08.000><c> false</c><02:36:08.830><c> that's</c><02:36:09.830><c> where</c>

02:36:10.030 --> 02:36:10.040 align:start position:0%
negative and if it's false that's where
 

02:36:10.040 --> 02:36:12.040 align:start position:0%
negative and if it's false that's where
the<02:36:10.101><c> colon</c><02:36:10.431><c> comes</c><02:36:10.700><c> in</c><02:36:10.970><c> we're</c><02:36:11.480><c> going</c><02:36:11.630><c> to</c><02:36:11.690><c> return</c>

02:36:12.040 --> 02:36:12.050 align:start position:0%
the colon comes in we're going to return
 

02:36:12.050 --> 02:36:16.660 align:start position:0%
the colon comes in we're going to return
zero<02:36:13.780><c> so</c><02:36:14.780><c> let's</c><02:36:15.290><c> do</c><02:36:15.470><c> this</c><02:36:15.620><c> check</c><02:36:15.950><c> sign</c><02:36:16.250><c> I'm</c>

02:36:16.660 --> 02:36:16.670 align:start position:0%
zero so let's do this check sign I'm
 

02:36:16.670 --> 02:36:18.850 align:start position:0%
zero so let's do this check sign I'm
going<02:36:16.851><c> to</c><02:36:16.970><c> do</c><02:36:17.030><c> a</c><02:36:17.061><c> console</c><02:36:17.690><c> about</c><02:36:17.900><c> log</c><02:36:18.380><c> so</c><02:36:18.771><c> we</c>

02:36:18.850 --> 02:36:18.860 align:start position:0%
going to do a console about log so we
 

02:36:18.860 --> 02:36:22.841 align:start position:0%
going to do a console about log so we
can<02:36:19.040><c> see</c><02:36:19.340><c> what</c><02:36:19.580><c> this</c><02:36:19.790><c> returns</c><02:36:20.330><c> here</c><02:36:20.780><c> and</c><02:36:21.851><c> we</c>

02:36:22.841 --> 02:36:22.851 align:start position:0%
can see what this returns here and we
 

02:36:22.851 --> 02:36:25.210 align:start position:0%
can see what this returns here and we
can<02:36:23.030><c> see</c><02:36:23.300><c> this</c><02:36:23.870><c> is</c><02:36:24.021><c> going</c><02:36:24.200><c> to</c><02:36:24.260><c> return</c><02:36:24.530><c> positive</c>

02:36:25.210 --> 02:36:25.220 align:start position:0%
can see this is going to return positive
 

02:36:25.220 --> 02:36:28.091 align:start position:0%
can see this is going to return positive
if<02:36:25.460><c> we</c><02:36:26.000><c> have</c><02:36:26.210><c> a</c><02:36:26.240><c> negative</c><02:36:26.601><c> number</c><02:36:26.840><c> here</c><02:36:27.561><c> it's</c>

02:36:28.091 --> 02:36:28.101 align:start position:0%
if we have a negative number here it's
 

02:36:28.101 --> 02:36:30.580 align:start position:0%
if we have a negative number here it's
going<02:36:28.280><c> to</c><02:36:28.340><c> return</c><02:36:28.700><c> negative</c><02:36:29.000><c> or</c><02:36:29.420><c> if</c><02:36:30.021><c> we</c><02:36:30.170><c> have</c><02:36:30.410><c> a</c>

02:36:30.580 --> 02:36:30.590 align:start position:0%
going to return negative or if we have a
 

02:36:30.590 --> 02:36:33.910 align:start position:0%
going to return negative or if we have a
zero<02:36:31.280><c> it's</c><02:36:31.910><c> going</c><02:36:32.000><c> to</c><02:36:32.210><c> return</c><02:36:32.540><c> zero</c><02:36:33.230><c> now</c>

02:36:33.910 --> 02:36:33.920 align:start position:0%
zero it's going to return zero now
 

02:36:33.920 --> 02:36:37.631 align:start position:0%
zero it's going to return zero now
you'll<02:36:34.160><c> see</c><02:36:34.490><c> that</c><02:36:35.170><c> after</c><02:36:36.170><c> this</c><02:36:36.950><c> :</c>

02:36:37.631 --> 02:36:37.641 align:start position:0%
you'll see that after this :
 

02:36:37.641 --> 02:36:41.560 align:start position:0%
you'll see that after this :
we<02:36:38.360><c> have</c><02:36:38.601><c> an</c><02:36:38.750><c> entire</c><02:36:39.200><c> ternary</c><02:36:40.101><c> operator</c><02:36:40.670><c> so</c><02:36:41.240><c> if</c>

02:36:41.560 --> 02:36:41.570 align:start position:0%
we have an entire ternary operator so if
 

02:36:41.570 --> 02:36:44.591 align:start position:0%
we have an entire ternary operator so if
this<02:36:41.900><c> is</c><02:36:42.170><c> true</c><02:36:42.740><c> we</c><02:36:43.250><c> just</c><02:36:43.280><c> return</c><02:36:43.730><c> positive</c><02:36:44.330><c> if</c>

02:36:44.591 --> 02:36:44.601 align:start position:0%
this is true we just return positive if
 

02:36:44.601 --> 02:36:48.160 align:start position:0%
this is true we just return positive if
it's<02:36:45.230><c> false</c><02:36:45.650><c> then</c><02:36:46.370><c> we</c><02:36:46.431><c> do</c><02:36:46.730><c> everything</c><02:36:47.601><c> here</c>

02:36:48.160 --> 02:36:48.170 align:start position:0%
it's false then we do everything here
 

02:36:48.170 --> 02:36:50.591 align:start position:0%
it's false then we do everything here
which<02:36:48.620><c> is</c><02:36:48.800><c> another</c><02:36:49.160><c> ternary</c><02:36:49.670><c> operator</c><02:36:50.120><c> where</c>

02:36:50.591 --> 02:36:50.601 align:start position:0%
which is another ternary operator where
 

02:36:50.601 --> 02:36:52.690 align:start position:0%
which is another ternary operator where
it<02:36:50.690><c> checks</c><02:36:50.990><c> if</c><02:36:51.170><c> this</c><02:36:51.440><c> is</c><02:36:51.650><c> true</c><02:36:51.950><c> and</c><02:36:52.190><c> if</c><02:36:52.521><c> that's</c>

02:36:52.690 --> 02:36:52.700 align:start position:0%
it checks if this is true and if that's
 

02:36:52.700 --> 02:36:54.370 align:start position:0%
it checks if this is true and if that's
true<02:36:53.090><c> we</c><02:36:53.271><c> return</c><02:36:53.570><c> negative</c><02:36:53.780><c> and</c><02:36:54.170><c> if</c><02:36:54.230><c> it's</c>

02:36:54.370 --> 02:36:54.380 align:start position:0%
true we return negative and if it's
 

02:36:54.380 --> 02:37:00.201 align:start position:0%
true we return negative and if it's
false<02:36:54.681><c> we</c><02:36:54.800><c> to</c><02:36:55.010><c> return</c><02:36:55.400><c> zero</c>

02:37:00.201 --> 02:37:00.211 align:start position:0%
 
 

02:37:00.211 --> 02:37:02.631 align:start position:0%
 
for<02:37:00.780><c> a</c><02:37:00.811><c> long</c><02:37:00.990><c> time</c><02:37:01.261><c> in</c><02:37:01.440><c> JavaScript</c><02:37:02.161><c> if</c><02:37:02.341><c> you</c>

02:37:02.631 --> 02:37:02.641 align:start position:0%
for a long time in JavaScript if you
 

02:37:02.641 --> 02:37:04.940 align:start position:0%
for a long time in JavaScript if you
were<02:37:02.761><c> going</c><02:37:03.030><c> to</c><02:37:03.150><c> declare</c><02:37:03.601><c> a</c><02:37:03.661><c> variable</c><02:37:04.110><c> you</c><02:37:04.681><c> had</c>

02:37:04.940 --> 02:37:04.950 align:start position:0%
were going to declare a variable you had
 

02:37:04.950 --> 02:37:08.060 align:start position:0%
were going to declare a variable you had
to<02:37:05.161><c> use</c><02:37:05.400><c> the</c><02:37:05.671><c> VAR</c><02:37:06.001><c> keyword</c><02:37:06.591><c> but</c><02:37:07.591><c> starting</c><02:37:08.041><c> with</c>

02:37:08.060 --> 02:37:08.070 align:start position:0%
to use the VAR keyword but starting with
 

02:37:08.070 --> 02:37:13.371 align:start position:0%
to use the VAR keyword but starting with
es6<02:37:08.851><c> in</c><02:37:09.650><c> 2015</c><02:37:10.700><c> we</c><02:37:11.700><c> can</c><02:37:12.091><c> now</c><02:37:12.271><c> declare</c><02:37:12.601><c> variables</c>

02:37:13.371 --> 02:37:13.381 align:start position:0%
es6 in 2015 we can now declare variables
 

02:37:13.381 --> 02:37:16.701 align:start position:0%
es6 in 2015 we can now declare variables
with<02:37:13.650><c> let</c><02:37:14.041><c> and</c><02:37:14.280><c> Const</c><02:37:15.061><c> as</c><02:37:15.240><c> well</c><02:37:15.871><c> over</c><02:37:16.561><c> the</c><02:37:16.681><c> next</c>

02:37:16.701 --> 02:37:16.711 align:start position:0%
with let and Const as well over the next
 

02:37:16.711 --> 02:37:19.281 align:start position:0%
with let and Const as well over the next
few<02:37:17.041><c> lessons</c><02:37:17.251><c> I</c><02:37:17.610><c> will</c><02:37:17.820><c> be</c><02:37:18.001><c> talking</c><02:37:18.360><c> about</c><02:37:18.541><c> what</c>

02:37:19.281 --> 02:37:19.291 align:start position:0%
few lessons I will be talking about what
 

02:37:19.291 --> 02:37:20.901 align:start position:0%
few lessons I will be talking about what
let<02:37:19.561><c> and</c><02:37:19.740><c> constitute</c><02:37:20.311><c> that</c><02:37:20.521><c> it's</c><02:37:20.641><c> different</c>

02:37:20.901 --> 02:37:20.911 align:start position:0%
let and constitute that it's different
 

02:37:20.911 --> 02:37:23.720 align:start position:0%
let and constitute that it's different
than<02:37:21.240><c> var</c><02:37:21.480><c> but</c><02:37:22.261><c> one</c><02:37:22.621><c> of</c><02:37:22.650><c> the</c><02:37:22.891><c> things</c><02:37:23.190><c> is</c><02:37:23.461><c> that</c>

02:37:23.720 --> 02:37:23.730 align:start position:0%
than var but one of the things is that
 

02:37:23.730 --> 02:37:26.350 align:start position:0%
than var but one of the things is that
let<02:37:24.331><c> does</c><02:37:24.780><c> not</c><02:37:24.990><c> let</c><02:37:25.291><c> you</c><02:37:25.471><c> declare</c><02:37:26.041><c> a</c><02:37:26.070><c> variable</c>

02:37:26.350 --> 02:37:26.360 align:start position:0%
let does not let you declare a variable
 

02:37:26.360 --> 02:37:29.301 align:start position:0%
let does not let you declare a variable
twice<02:37:27.360><c> so</c><02:37:28.051><c> let's</c><02:37:28.320><c> look</c><02:37:28.471><c> at</c><02:37:28.591><c> this</c><02:37:28.681><c> example</c><02:37:28.891><c> we</c>

02:37:29.301 --> 02:37:29.311 align:start position:0%
twice so let's look at this example we
 

02:37:29.311 --> 02:37:31.371 align:start position:0%
twice so let's look at this example we
have<02:37:29.341><c> var</c><02:37:29.641><c> cat</c><02:37:29.911><c> name</c><02:37:30.091><c> equals</c><02:37:30.391><c> Quincy</c><02:37:30.841><c> and</c><02:37:31.051><c> then</c>

02:37:31.371 --> 02:37:31.381 align:start position:0%
have var cat name equals Quincy and then
 

02:37:31.381 --> 02:37:34.461 align:start position:0%
have var cat name equals Quincy and then
down<02:37:31.530><c> here</c><02:37:31.561><c> var</c><02:37:32.161><c> cat</c><02:37:32.431><c> name</c><02:37:32.641><c> equals</c><02:37:33.061><c> Bo</c><02:37:33.391><c> and</c><02:37:33.721><c> if</c>

02:37:34.461 --> 02:37:34.471 align:start position:0%
down here var cat name equals Bo and if
 

02:37:34.471 --> 02:37:36.501 align:start position:0%
down here var cat name equals Bo and if
I<02:37:34.591><c> just</c><02:37:34.801><c> run</c><02:37:35.011><c> this</c><02:37:35.190><c> code</c><02:37:35.490><c> you'll</c><02:37:36.030><c> see</c><02:37:36.121><c> that</c>

02:37:36.501 --> 02:37:36.511 align:start position:0%
I just run this code you'll see that
 

02:37:36.511 --> 02:37:38.180 align:start position:0%
I just run this code you'll see that
nothing<02:37:36.990><c> is</c><02:37:37.110><c> happening</c><02:37:37.141><c> it's</c><02:37:37.740><c> just</c><02:37:37.831><c> allowing</c>

02:37:38.180 --> 02:37:38.190 align:start position:0%
nothing is happening it's just allowing
 

02:37:38.190 --> 02:37:40.850 align:start position:0%
nothing is happening it's just allowing
us<02:37:38.551><c> to</c><02:37:38.671><c> set</c><02:37:39.181><c> the</c><02:37:39.211><c> cat</c><02:37:39.570><c> name</c><02:37:39.780><c> twice</c><02:37:40.200><c> and</c><02:37:40.501><c> to</c>

02:37:40.850 --> 02:37:40.860 align:start position:0%
us to set the cat name twice and to
 

02:37:40.860 --> 02:37:42.671 align:start position:0%
us to set the cat name twice and to
clear<02:37:41.101><c> it</c><02:37:41.280><c> twice</c><02:37:41.551><c> with</c><02:37:41.761><c> the</c><02:37:41.791><c> VAR</c><02:37:42.301><c> keyword</c>

02:37:42.671 --> 02:37:42.681 align:start position:0%
clear it twice with the VAR keyword
 

02:37:42.681 --> 02:37:45.741 align:start position:0%
clear it twice with the VAR keyword
however<02:37:43.681><c> if</c><02:37:43.860><c> we</c><02:37:43.980><c> change</c><02:37:44.011><c> this</c><02:37:44.581><c> to</c><02:37:44.851><c> let</c><02:37:45.150><c> we're</c>

02:37:45.741 --> 02:37:45.751 align:start position:0%
however if we change this to let we're
 

02:37:45.751 --> 02:37:48.051 align:start position:0%
however if we change this to let we're
gonna<02:37:45.900><c> change</c><02:37:46.230><c> all</c><02:37:46.471><c> the</c><02:37:46.860><c> var</c><02:37:47.131><c> to</c><02:37:47.400><c> let</c><02:37:47.671><c> and</c>

02:37:48.051 --> 02:37:48.061 align:start position:0%
gonna change all the var to let and
 

02:37:48.061 --> 02:37:51.921 align:start position:0%
gonna change all the var to let and
you'll<02:37:48.931><c> see</c><02:37:49.371><c> that</c><02:37:50.371><c> when</c><02:37:51.091><c> we</c><02:37:51.240><c> load</c><02:37:51.751><c> it</c><02:37:51.841><c> again</c>

02:37:51.921 --> 02:37:51.931 align:start position:0%
you'll see that when we load it again
 

02:37:51.931 --> 02:37:53.211 align:start position:0%
you'll see that when we load it again
you'll<02:37:52.320><c> see</c><02:37:52.440><c> an</c><02:37:52.530><c> error</c>

02:37:53.211 --> 02:37:53.221 align:start position:0%
you'll see an error
 

02:37:53.221 --> 02:37:56.810 align:start position:0%
you'll see an error
duplicate<02:37:54.030><c> declaration</c><02:37:54.661><c> cat</c><02:37:54.961><c> name</c><02:37:55.261><c> so</c><02:37:56.011><c> this</c>

02:37:56.810 --> 02:37:56.820 align:start position:0%
duplicate declaration cat name so this
 

02:37:56.820 --> 02:37:58.611 align:start position:0%
duplicate declaration cat name so this
is<02:37:57.091><c> good</c><02:37:57.480><c> that's</c><02:37:57.721><c> creating</c><02:37:58.141><c> this</c><02:37:58.261><c> error</c>

02:37:58.611 --> 02:37:58.621 align:start position:0%
is good that's creating this error
 

02:37:58.621 --> 02:38:01.551 align:start position:0%
is good that's creating this error
because<02:37:59.371><c> you</c><02:38:00.150><c> usually</c><02:38:00.570><c> don't</c><02:38:01.051><c> want</c><02:38:01.320><c> to</c>

02:38:01.551 --> 02:38:01.561 align:start position:0%
because you usually don't want to
 

02:38:01.561 --> 02:38:04.341 align:start position:0%
because you usually don't want to
declare<02:38:02.101><c> a</c><02:38:02.400><c> variable</c><02:38:02.791><c> two</c><02:38:03.331><c> times</c><02:38:03.721><c> in</c><02:38:04.021><c> the</c><02:38:04.110><c> same</c>

02:38:04.341 --> 02:38:04.351 align:start position:0%
declare a variable two times in the same
 

02:38:04.351 --> 02:38:08.151 align:start position:0%
declare a variable two times in the same
scope<02:38:04.831><c> so</c><02:38:05.610><c> this</c><02:38:06.511><c> allows</c><02:38:07.141><c> your</c><02:38:07.351><c> program</c><02:38:07.860><c> to</c>

02:38:08.151 --> 02:38:08.161 align:start position:0%
scope so this allows your program to
 

02:38:08.161 --> 02:38:09.770 align:start position:0%
scope so this allows your program to
give<02:38:08.490><c> you</c><02:38:08.610><c> an</c><02:38:08.700><c> error</c><02:38:09.001><c> to</c><02:38:09.240><c> tell</c><02:38:09.450><c> you</c><02:38:09.631><c> that</c>

02:38:09.770 --> 02:38:09.780 align:start position:0%
give you an error to tell you that
 

02:38:09.780 --> 02:38:12.350 align:start position:0%
give you an error to tell you that
you've<02:38:09.931><c> done</c><02:38:10.230><c> something</c><02:38:10.591><c> wrong</c><02:38:11.011><c> now</c><02:38:11.940><c> you</c><02:38:12.001><c> can</c>

02:38:12.350 --> 02:38:12.360 align:start position:0%
you've done something wrong now you can
 

02:38:12.360 --> 02:38:14.541 align:start position:0%
you've done something wrong now you can
still<02:38:12.601><c> reset</c><02:38:13.261><c> it</c><02:38:13.440><c> so</c><02:38:13.471><c> if</c><02:38:13.740><c> we</c><02:38:13.921><c> didn't</c><02:38:14.190><c> use</c><02:38:14.311><c> the</c>

02:38:14.541 --> 02:38:14.551 align:start position:0%
still reset it so if we didn't use the
 

02:38:14.551 --> 02:38:17.690 align:start position:0%
still reset it so if we didn't use the
word<02:38:14.581><c> let</c><02:38:14.971><c> here</c><02:38:15.391><c> we</c><02:38:15.871><c> could</c><02:38:16.110><c> just</c><02:38:16.411><c> set</c><02:38:17.041><c> the</c><02:38:17.400><c> cat</c>

02:38:17.690 --> 02:38:17.700 align:start position:0%
word let here we could just set the cat
 

02:38:17.700 --> 02:38:19.821 align:start position:0%
word let here we could just set the cat
name<02:38:17.881><c> variable</c><02:38:18.421><c> and</c><02:38:18.811><c> now</c><02:38:19.291><c> we're</c><02:38:19.530><c> not</c><02:38:19.561><c> gonna</c>

02:38:19.821 --> 02:38:19.831 align:start position:0%
name variable and now we're not gonna
 

02:38:19.831 --> 02:38:21.890 align:start position:0%
name variable and now we're not gonna
get<02:38:20.070><c> an</c><02:38:20.221><c> error</c><02:38:20.641><c> in</c><02:38:20.881><c> this</c><02:38:21.360><c> case</c><02:38:21.661><c> we're</c>

02:38:21.890 --> 02:38:21.900 align:start position:0%
get an error in this case we're
 

02:38:21.900 --> 02:38:23.810 align:start position:0%
get an error in this case we're
declaring<02:38:22.471><c> the</c><02:38:22.591><c> variable</c><02:38:22.621><c> here</c><02:38:23.190><c> to</c><02:38:23.280><c> be</c><02:38:23.371><c> Quincy</c>

02:38:23.810 --> 02:38:23.820 align:start position:0%
declaring the variable here to be Quincy
 

02:38:23.820 --> 02:38:25.911 align:start position:0%
declaring the variable here to be Quincy
and<02:38:24.030><c> we're</c><02:38:24.271><c> setting</c><02:38:24.631><c> the</c><02:38:24.811><c> same</c><02:38:25.081><c> variable</c><02:38:25.650><c> to</c><02:38:25.891><c> a</c>

02:38:25.911 --> 02:38:25.921 align:start position:0%
and we're setting the same variable to a
 

02:38:25.921 --> 02:38:28.970 align:start position:0%
and we're setting the same variable to a
new<02:38:26.581><c> name</c><02:38:26.911><c> here</c><02:38:27.841><c> this</c><02:38:28.200><c> is</c><02:38:28.261><c> one</c><02:38:28.530><c> of</c><02:38:28.561><c> the</c><02:38:28.740><c> few</c>

02:38:28.970 --> 02:38:28.980 align:start position:0%
new name here this is one of the few
 

02:38:28.980 --> 02:38:32.661 align:start position:0%
new name here this is one of the few
reasons<02:38:29.221><c> that</c><02:38:29.581><c> many</c><02:38:30.570><c> people</c><02:38:31.171><c> only</c><02:38:31.681><c> use</c><02:38:32.041><c> Latin</c>

02:38:32.661 --> 02:38:32.671 align:start position:0%
reasons that many people only use Latin
 

02:38:32.671 --> 02:38:35.751 align:start position:0%
reasons that many people only use Latin
Const<02:38:33.421><c> and</c><02:38:33.570><c> never</c><02:38:34.411><c> use</c><02:38:34.711><c> var</c><02:38:35.011><c> to</c><02:38:35.431><c> declare</c>

02:38:35.751 --> 02:38:35.761 align:start position:0%
Const and never use var to declare
 

02:38:35.761 --> 02:38:38.121 align:start position:0%
Const and never use var to declare
variables<02:38:36.331><c> another</c><02:38:37.200><c> thing</c><02:38:37.471><c> in</c><02:38:37.650><c> this</c><02:38:37.740><c> code</c><02:38:38.011><c> you</c>

02:38:38.121 --> 02:38:38.131 align:start position:0%
variables another thing in this code you
 

02:38:38.131 --> 02:38:41.631 align:start position:0%
variables another thing in this code you
can<02:38:38.280><c> see</c><02:38:38.431><c> is</c><02:38:38.671><c> use</c><02:38:39.240><c> strict</c><02:38:39.931><c> now</c><02:38:40.591><c> this</c><02:38:40.980><c> enables</c>

02:38:41.631 --> 02:38:41.641 align:start position:0%
can see is use strict now this enables
 

02:38:41.641 --> 02:38:44.331 align:start position:0%
can see is use strict now this enables
strict<02:38:42.091><c> mode</c><02:38:42.360><c> which</c><02:38:42.961><c> caches</c><02:38:43.501><c> common</c><02:38:43.980><c> coding</c>

02:38:44.331 --> 02:38:44.341 align:start position:0%
strict mode which caches common coding
 

02:38:44.341 --> 02:38:48.051 align:start position:0%
strict mode which caches common coding
mistakes<02:38:44.610><c> and</c><02:38:45.211><c> unsafe</c><02:38:45.780><c> actions</c><02:38:46.471><c> so</c><02:38:47.251><c> a</c><02:38:47.610><c> lot</c><02:38:47.940><c> of</c>

02:38:48.051 --> 02:38:48.061 align:start position:0%
mistakes and unsafe actions so a lot of
 

02:38:48.061 --> 02:38:50.690 align:start position:0%
mistakes and unsafe actions so a lot of
people<02:38:48.360><c> will</c><02:38:48.690><c> use</c><02:38:48.721><c> use</c><02:38:49.200><c> strict</c><02:38:49.681><c> at</c><02:38:49.891><c> the</c><02:38:50.251><c> top</c><02:38:50.490><c> of</c>

02:38:50.690 --> 02:38:50.700 align:start position:0%
people will use use strict at the top of
 

02:38:50.700 --> 02:38:53.060 align:start position:0%
people will use use strict at the top of
a<02:38:50.791><c> full</c><02:38:51.030><c> JavaScript</c><02:38:51.421><c> file</c><02:38:51.931><c> or</c><02:38:52.230><c> maybe</c><02:38:52.621><c> just</c><02:38:52.891><c> in</c>

02:38:53.060 --> 02:38:53.070 align:start position:0%
a full JavaScript file or maybe just in
 

02:38:53.070 --> 02:38:56.241 align:start position:0%
a full JavaScript file or maybe just in
a<02:38:53.221><c> function</c><02:38:53.820><c> to</c><02:38:54.391><c> catch</c><02:38:54.811><c> coding</c><02:38:55.291><c> mistakes</c><02:38:55.650><c> such</c>

02:38:56.241 --> 02:38:56.251 align:start position:0%
a function to catch coding mistakes such
 

02:38:56.251 --> 02:38:58.881 align:start position:0%
a function to catch coding mistakes such
as<02:38:56.280><c> if</c><02:38:56.700><c> you</c><02:38:57.061><c> create</c><02:38:57.601><c> a</c><02:38:57.690><c> variable</c><02:38:58.261><c> and</c><02:38:58.530><c> don't</c>

02:38:58.881 --> 02:38:58.891 align:start position:0%
as if you create a variable and don't
 

02:38:58.891 --> 02:39:05.490 align:start position:0%
as if you create a variable and don't
declare<02:38:59.490><c> it</c><02:38:59.730><c> with</c><02:38:59.881><c> varla</c><02:39:00.480><c> a</c><02:39:00.511><c> Const</c>

02:39:05.490 --> 02:39:05.500 align:start position:0%
 
 

02:39:05.500 --> 02:39:07.710 align:start position:0%
 
another<02:39:06.189><c> major</c><02:39:06.460><c> difference</c><02:39:06.609><c> between</c><02:39:07.149><c> the</c><02:39:07.510><c> var</c>

02:39:07.710 --> 02:39:07.720 align:start position:0%
another major difference between the var
 

02:39:07.720 --> 02:39:10.019 align:start position:0%
another major difference between the var
and<02:39:07.750><c> let</c><02:39:08.290><c> keywords</c><02:39:08.830><c> is</c><02:39:09.069><c> that</c><02:39:09.700><c> when</c><02:39:09.910><c> you</c>

02:39:10.019 --> 02:39:10.029 align:start position:0%
and let keywords is that when you
 

02:39:10.029 --> 02:39:12.389 align:start position:0%
and let keywords is that when you
declare<02:39:10.210><c> a</c><02:39:10.420><c> variable</c><02:39:10.540><c> with</c><02:39:11.229><c> var</c><02:39:11.620><c> it</c><02:39:11.979><c> is</c>

02:39:12.389 --> 02:39:12.399 align:start position:0%
declare a variable with var it is
 

02:39:12.399 --> 02:39:15.330 align:start position:0%
declare a variable with var it is
declared<02:39:12.790><c> globally</c><02:39:13.120><c> or</c><02:39:13.810><c> locally</c><02:39:14.020><c> if</c><02:39:14.800><c> declared</c>

02:39:15.330 --> 02:39:15.340 align:start position:0%
declared globally or locally if declared
 

02:39:15.340 --> 02:39:19.410 align:start position:0%
declared globally or locally if declared
inside<02:39:15.700><c> a</c><02:39:16.029><c> function</c><02:39:16.620><c> however</c><02:39:17.620><c> let</c><02:39:18.340><c> the</c><02:39:19.060><c> scope</c>

02:39:19.410 --> 02:39:19.420 align:start position:0%
inside a function however let the scope
 

02:39:19.420 --> 02:39:22.410 align:start position:0%
inside a function however let the scope
of<02:39:19.630><c> let</c><02:39:19.930><c> is</c><02:39:20.170><c> limited</c><02:39:20.859><c> to</c><02:39:21.130><c> the</c><02:39:21.370><c> block</c><02:39:21.670><c> statement</c>

02:39:22.410 --> 02:39:22.420 align:start position:0%
of let is limited to the block statement
 

02:39:22.420 --> 02:39:25.620 align:start position:0%
of let is limited to the block statement
or<02:39:22.540><c> expression</c><02:39:23.319><c> that</c><02:39:23.560><c> it</c><02:39:23.770><c> was</c><02:39:23.950><c> declared</c><02:39:24.550><c> in</c><02:39:24.790><c> so</c>

02:39:25.620 --> 02:39:25.630 align:start position:0%
or expression that it was declared in so
 

02:39:25.630 --> 02:39:28.469 align:start position:0%
or expression that it was declared in so
let's<02:39:26.290><c> look</c><02:39:26.500><c> at</c><02:39:26.680><c> this</c><02:39:26.830><c> example</c><02:39:27.100><c> here</c><02:39:27.520><c> if</c><02:39:28.029><c> you</c>

02:39:28.469 --> 02:39:28.479 align:start position:0%
let's look at this example here if you
 

02:39:28.479 --> 02:39:31.410 align:start position:0%
let's look at this example here if you
see<02:39:28.720><c> this</c><02:39:28.960><c> code</c><02:39:29.380><c> we</c><02:39:30.250><c> have</c><02:39:30.399><c> this</c><02:39:30.640><c> check</c><02:39:31.029><c> scoped</c>

02:39:31.410 --> 02:39:31.420 align:start position:0%
see this code we have this check scoped
 

02:39:31.420 --> 02:39:33.210 align:start position:0%
see this code we have this check scoped
function<02:39:32.020><c> and</c><02:39:32.170><c> we're</c><02:39:32.260><c> calling</c><02:39:32.560><c> it</c><02:39:32.680><c> down</c><02:39:32.830><c> here</c>

02:39:33.210 --> 02:39:33.220 align:start position:0%
function and we're calling it down here
 

02:39:33.220 --> 02:39:36.929 align:start position:0%
function and we're calling it down here
and<02:39:33.399><c> it's</c><02:39:33.880><c> setting</c><02:39:34.330><c> I</c><02:39:34.590><c> with</c><02:39:35.590><c> a</c><02:39:35.859><c> var</c><02:39:36.370><c> here</c><02:39:36.760><c> of</c>

02:39:36.929 --> 02:39:36.939 align:start position:0%
and it's setting I with a var here of
 

02:39:36.939 --> 02:39:39.599 align:start position:0%
and it's setting I with a var here of
our<02:39:37.120><c> keyword</c><02:39:37.630><c> -</c><02:39:38.080><c> function</c><02:39:38.500><c> scope</c><02:39:38.800><c> then</c><02:39:39.460><c> we're</c>

02:39:39.599 --> 02:39:39.609 align:start position:0%
our keyword - function scope then we're
 

02:39:39.609 --> 02:39:41.639 align:start position:0%
our keyword - function scope then we're
setting<02:39:39.819><c> it</c><02:39:39.910><c> to</c><02:39:40.060><c> block</c><02:39:40.359><c> scope</c><02:39:40.779><c> in</c><02:39:41.020><c> here</c><02:39:41.560><c> and</c>

02:39:41.639 --> 02:39:41.649 align:start position:0%
setting it to block scope in here and
 

02:39:41.649 --> 02:39:44.340 align:start position:0%
setting it to block scope in here and
you<02:39:42.250><c> can</c><02:39:42.399><c> see</c><02:39:42.670><c> it's</c><02:39:43.239><c> console</c><02:39:43.870><c> that</c><02:39:43.930><c> logging</c>

02:39:44.340 --> 02:39:44.350 align:start position:0%
you can see it's console that logging
 

02:39:44.350 --> 02:39:47.010 align:start position:0%
you can see it's console that logging
block<02:39:44.620><c> scope</c><02:39:44.979><c> eye</c><02:39:45.220><c> is</c><02:39:45.310><c> it</c><02:39:46.180><c> says</c><02:39:46.390><c> block</c><02:39:46.689><c> scope</c>

02:39:47.010 --> 02:39:47.020 align:start position:0%
block scope eye is it says block scope
 

02:39:47.020 --> 02:39:49.889 align:start position:0%
block scope eye is it says block scope
and<02:39:47.319><c> we</c><02:39:47.710><c> will</c><02:39:47.920><c> get</c><02:39:48.220><c> down</c><02:39:48.399><c> here</c><02:39:48.880><c> function</c><02:39:49.450><c> scope</c>

02:39:49.889 --> 02:39:49.899 align:start position:0%
and we will get down here function scope
 

02:39:49.899 --> 02:39:53.280 align:start position:0%
and we will get down here function scope
it's<02:39:50.140><c> still</c><02:39:50.680><c> block</c><02:39:51.340><c> scope</c><02:39:51.790><c> if</c><02:39:52.090><c> we</c><02:39:52.810><c> want</c><02:39:53.109><c> this</c>

02:39:53.280 --> 02:39:53.290 align:start position:0%
it's still block scope if we want this
 

02:39:53.290 --> 02:39:56.219 align:start position:0%
it's still block scope if we want this
to<02:39:53.350><c> be</c><02:39:53.609><c> function</c><02:39:54.609><c> scope</c><02:39:54.880><c> down</c><02:39:55.180><c> here</c><02:39:55.779><c> we're</c>

02:39:56.219 --> 02:39:56.229 align:start position:0%
to be function scope down here we're
 

02:39:56.229 --> 02:39:59.820 align:start position:0%
to be function scope down here we're
going<02:39:56.439><c> to</c><02:39:56.529><c> have</c><02:39:56.800><c> to</c><02:39:57.040><c> use</c><02:39:57.310><c> let</c><02:39:57.939><c> so</c><02:39:58.810><c> we</c><02:39:59.350><c> would</c><02:39:59.560><c> use</c>

02:39:59.820 --> 02:39:59.830 align:start position:0%
going to have to use let so we would use
 

02:39:59.830 --> 02:40:03.870 align:start position:0%
going to have to use let so we would use
let<02:40:00.489><c> here</c><02:40:00.970><c> and</c><02:40:01.180><c> then</c><02:40:01.989><c> we</c><02:40:02.140><c> would</c><02:40:02.350><c> use</c><02:40:02.680><c> let</c><02:40:03.370><c> here</c>

02:40:03.870 --> 02:40:03.880 align:start position:0%
let here and then we would use let here
 

02:40:03.880 --> 02:40:06.960 align:start position:0%
let here and then we would use let here
and<02:40:04.090><c> if</c><02:40:04.510><c> we</c><02:40:04.630><c> run</c><02:40:04.930><c> the</c><02:40:05.080><c> code</c><02:40:05.410><c> now</c><02:40:05.739><c> you</c><02:40:06.310><c> can</c><02:40:06.729><c> see</c>

02:40:06.960 --> 02:40:06.970 align:start position:0%
and if we run the code now you can see
 

02:40:06.970 --> 02:40:11.130 align:start position:0%
and if we run the code now you can see
in<02:40:07.239><c> the</c><02:40:08.050><c> console</c><02:40:08.680><c> block</c><02:40:09.340><c> scope</c><02:40:09.729><c> eye</c><02:40:09.910><c> is</c><02:40:10.420><c> block</c>

02:40:11.130 --> 02:40:11.140 align:start position:0%
in the console block scope eye is block
 

02:40:11.140 --> 02:40:13.979 align:start position:0%
in the console block scope eye is block
scope<02:40:11.529><c> function</c><02:40:12.489><c> scope</c><02:40:12.729><c> eye</c><02:40:12.970><c> is</c><02:40:13.029><c> function</c>

02:40:13.979 --> 02:40:13.989 align:start position:0%
scope function scope eye is function
 

02:40:13.989 --> 02:40:16.650 align:start position:0%
scope function scope eye is function
scope<02:40:14.290><c> so</c><02:40:14.920><c> even</c><02:40:15.310><c> though</c><02:40:15.460><c> we</c><02:40:15.609><c> set</c><02:40:15.939><c> I</c><02:40:16.060><c> to</c><02:40:16.180><c> block</c>

02:40:16.650 --> 02:40:16.660 align:start position:0%
scope so even though we set I to block
 

02:40:16.660 --> 02:40:20.550 align:start position:0%
scope so even though we set I to block
scope<02:40:17.050><c> here</c><02:40:17.380><c> inside</c><02:40:18.100><c> this</c><02:40:18.819><c> block</c><02:40:19.330><c> now</c><02:40:20.140><c> a</c><02:40:20.170><c> block</c>

02:40:20.550 --> 02:40:20.560 align:start position:0%
scope here inside this block now a block
 

02:40:20.560 --> 02:40:23.250 align:start position:0%
scope here inside this block now a block
is<02:40:20.800><c> just</c><02:40:20.830><c> anything</c><02:40:21.550><c> inside</c><02:40:22.029><c> these</c><02:40:22.359><c> squiggly</c>

02:40:23.250 --> 02:40:23.260 align:start position:0%
is just anything inside these squiggly
 

02:40:23.260 --> 02:40:26.099 align:start position:0%
is just anything inside these squiggly
braces<02:40:23.439><c> here</c><02:40:24.040><c> so</c><02:40:24.520><c> we</c><02:40:24.670><c> set</c><02:40:24.850><c> I</c><02:40:24.970><c> inside</c><02:40:25.840><c> this</c>

02:40:26.099 --> 02:40:26.109 align:start position:0%
braces here so we set I inside this
 

02:40:26.109 --> 02:40:28.410 align:start position:0%
braces here so we set I inside this
block<02:40:26.439><c> to</c><02:40:26.470><c> block</c><02:40:26.920><c> scope</c><02:40:27.399><c> but</c><02:40:27.910><c> then</c><02:40:28.120><c> when</c><02:40:28.270><c> we</c>

02:40:28.410 --> 02:40:28.420 align:start position:0%
block to block scope but then when we
 

02:40:28.420 --> 02:40:31.110 align:start position:0%
block to block scope but then when we
get<02:40:28.660><c> out</c><02:40:28.840><c> here</c><02:40:29.319><c> it's</c><02:40:29.739><c> now</c><02:40:30.010><c> back</c><02:40:30.279><c> to</c><02:40:30.340><c> function</c>

02:40:31.110 --> 02:40:31.120 align:start position:0%
get out here it's now back to function
 

02:40:31.120 --> 02:40:34.229 align:start position:0%
get out here it's now back to function
scope<02:40:31.450><c> because</c><02:40:32.140><c> of</c><02:40:32.319><c> this</c><02:40:32.500><c> up</c><02:40:32.680><c> here</c><02:40:33.239><c> here's</c>

02:40:34.229 --> 02:40:34.239 align:start position:0%
scope because of this up here here's
 

02:40:34.239 --> 02:40:36.690 align:start position:0%
scope because of this up here here's
another<02:40:34.450><c> thing</c><02:40:34.660><c> I</c><02:40:34.750><c> want</c><02:40:34.899><c> to</c><02:40:34.960><c> show</c><02:40:35.109><c> you</c><02:40:35.170><c> if</c><02:40:35.700><c> this</c>

02:40:36.690 --> 02:40:36.700 align:start position:0%
another thing I want to show you if this
 

02:40:36.700 --> 02:40:39.450 align:start position:0%
another thing I want to show you if this
is<02:40:37.029><c> if</c><02:40:37.330><c> we</c><02:40:37.689><c> comment</c><02:40:38.109><c> this</c><02:40:38.260><c> line</c><02:40:38.319><c> out</c><02:40:38.590><c> and</c><02:40:39.100><c> we</c>

02:40:39.450 --> 02:40:39.460 align:start position:0%
is if we comment this line out and we
 

02:40:39.460 --> 02:40:43.110 align:start position:0%
is if we comment this line out and we
change<02:40:39.850><c> this</c><02:40:40.120><c> to</c><02:40:40.180><c> var</c><02:40:41.760><c> what</c><02:40:42.760><c> do</c><02:40:42.819><c> you</c><02:40:42.910><c> think</c><02:40:43.060><c> is</c>

02:40:43.110 --> 02:40:43.120 align:start position:0%
change this to var what do you think is
 

02:40:43.120 --> 02:40:44.570 align:start position:0%
change this to var what do you think is
gonna<02:40:43.270><c> happen</c>

02:40:44.570 --> 02:40:44.580 align:start position:0%
gonna happen
 

02:40:44.580 --> 02:40:49.830 align:start position:0%
gonna happen
well<02:40:45.580><c> let's</c><02:40:45.790><c> run</c><02:40:46.029><c> and</c><02:40:46.239><c> find</c><02:40:46.450><c> out</c><02:40:48.330><c> look</c><02:40:49.330><c> we</c><02:40:49.569><c> set</c>

02:40:49.830 --> 02:40:49.840 align:start position:0%
well let's run and find out look we set
 

02:40:49.840 --> 02:40:53.250 align:start position:0%
well let's run and find out look we set
the<02:40:50.050><c> var</c><02:40:50.550><c> inside</c><02:40:51.550><c> this</c><02:40:51.939><c> block</c><02:40:52.300><c> here</c><02:40:52.750><c> to</c><02:40:53.020><c> block</c>

02:40:53.250 --> 02:40:53.260 align:start position:0%
the var inside this block here to block
 

02:40:53.260 --> 02:40:56.070 align:start position:0%
the var inside this block here to block
scope<02:40:53.680><c> and</c><02:40:54.010><c> it</c><02:40:54.520><c> says</c><02:40:54.700><c> block</c><02:40:54.970><c> scope</c><02:40:55.359><c> is</c><02:40:55.660><c> block</c>

02:40:56.070 --> 02:40:56.080 align:start position:0%
scope and it says block scope is block
 

02:40:56.080 --> 02:40:58.590 align:start position:0%
scope and it says block scope is block
scope<02:40:56.410><c> but</c><02:40:57.130><c> then</c><02:40:57.370><c> when</c><02:40:57.550><c> we're</c><02:40:57.670><c> outside</c><02:40:57.910><c> of</c><02:40:58.510><c> the</c>

02:40:58.590 --> 02:40:58.600 align:start position:0%
scope but then when we're outside of the
 

02:40:58.600 --> 02:41:00.000 align:start position:0%
scope but then when we're outside of the
block<02:40:58.810><c> when</c><02:40:59.050><c> we're</c><02:40:59.170><c> outside</c><02:40:59.350><c> of</c><02:40:59.890><c> these</c>

02:41:00.000 --> 02:41:00.010 align:start position:0%
block when we're outside of these
 

02:41:00.010 --> 02:41:02.910 align:start position:0%
block when we're outside of these
squiggly<02:41:00.550><c> braces</c><02:41:00.760><c> here</c><02:41:01.330><c> we</c><02:41:02.020><c> can</c><02:41:02.260><c> still</c><02:41:02.620><c> access</c>

02:41:02.910 --> 02:41:02.920 align:start position:0%
squiggly braces here we can still access
 

02:41:02.920 --> 02:41:07.050 align:start position:0%
squiggly braces here we can still access
I<02:41:03.520><c> here</c><02:41:04.120><c> and</c><02:41:04.270><c> it</c><02:41:04.689><c> set</c><02:41:04.930><c> the</c><02:41:05.080><c> block</c><02:41:05.319><c> scope</c><02:41:05.819><c> but</c><02:41:06.819><c> if</c>

02:41:07.050 --> 02:41:07.060 align:start position:0%
I here and it set the block scope but if
 

02:41:07.060 --> 02:41:10.139 align:start position:0%
I here and it set the block scope but if
this<02:41:07.330><c> was</c><02:41:07.569><c> a</c><02:41:07.779><c> let</c><02:41:08.410><c> and</c><02:41:08.800><c> we're</c><02:41:09.729><c> declaring</c>

02:41:10.139 --> 02:41:10.149 align:start position:0%
this was a let and we're declaring
 

02:41:10.149 --> 02:41:13.200 align:start position:0%
this was a let and we're declaring
inside<02:41:10.630><c> this</c><02:41:10.810><c> block</c><02:41:11.109><c> if</c><02:41:11.380><c> we</c><02:41:11.500><c> run</c><02:41:11.770><c> that</c><02:41:12.210><c> now</c>

02:41:13.200 --> 02:41:13.210 align:start position:0%
inside this block if we run that now
 

02:41:13.210 --> 02:41:16.440 align:start position:0%
inside this block if we run that now
when<02:41:13.840><c> we</c><02:41:13.989><c> get</c><02:41:14.229><c> outside</c><02:41:14.859><c> the</c><02:41:15.189><c> block</c><02:41:15.460><c> we</c><02:41:16.149><c> get</c><02:41:16.359><c> an</c>

02:41:16.440 --> 02:41:16.450 align:start position:0%
when we get outside the block we get an
 

02:41:16.450 --> 02:41:18.840 align:start position:0%
when we get outside the block we get an
error<02:41:16.750><c> because</c><02:41:16.840><c> it's</c><02:41:17.260><c> not</c><02:41:17.500><c> defined</c>

02:41:18.840 --> 02:41:18.850 align:start position:0%
error because it's not defined
 

02:41:18.850 --> 02:41:20.399 align:start position:0%
error because it's not defined
so<02:41:18.939><c> that's</c><02:41:19.239><c> another</c><02:41:19.449><c> reason</c><02:41:19.720><c> why</c><02:41:19.960><c> people</c><02:41:19.989><c> use</c>

02:41:20.399 --> 02:41:20.409 align:start position:0%
so that's another reason why people use
 

02:41:20.409 --> 02:41:23.429 align:start position:0%
so that's another reason why people use
let<02:41:20.770><c> instead</c><02:41:21.340><c> of</c><02:41:21.489><c> var</c><02:41:21.819><c> is</c><02:41:22.119><c> so</c><02:41:22.840><c> that</c><02:41:23.080><c> they</c><02:41:23.229><c> can</c>

02:41:23.429 --> 02:41:23.439 align:start position:0%
let instead of var is so that they can
 

02:41:23.439 --> 02:41:25.979 align:start position:0%
let instead of var is so that they can
make<02:41:23.680><c> sure</c><02:41:23.710><c> the</c><02:41:24.279><c> variable</c><02:41:24.880><c> is</c><02:41:25.060><c> only</c><02:41:25.090><c> defined</c>

02:41:25.979 --> 02:41:25.989 align:start position:0%
make sure the variable is only defined
 

02:41:25.989 --> 02:41:28.080 align:start position:0%
make sure the variable is only defined
in<02:41:26.350><c> the</c><02:41:26.470><c> area</c><02:41:26.859><c> they</c><02:41:27.010><c> want</c><02:41:27.189><c> to</c><02:41:27.369><c> be</c><02:41:27.489><c> defined</c><02:41:27.850><c> in</c>

02:41:28.080 --> 02:41:28.090 align:start position:0%
in the area they want to be defined in
 

02:41:28.090 --> 02:41:35.730 align:start position:0%
in the area they want to be defined in
but<02:41:28.899><c> for</c><02:41:29.140><c> now</c><02:41:29.290><c> I'll</c><02:41:29.760><c> uncomment</c><02:41:30.760><c> this</c><02:41:30.909><c> out</c>

02:41:35.730 --> 02:41:35.740 align:start position:0%
 
 

02:41:35.740 --> 02:41:37.950 align:start position:0%
 
const<02:41:36.640><c> is</c><02:41:36.820><c> another</c><02:41:37.240><c> way</c><02:41:37.479><c> to</c><02:41:37.540><c> declare</c><02:41:37.870><c> a</c>

02:41:37.950 --> 02:41:37.960 align:start position:0%
const is another way to declare a
 

02:41:37.960 --> 02:41:40.650 align:start position:0%
const is another way to declare a
variable<02:41:38.080><c> it</c><02:41:38.860><c> has</c><02:41:39.070><c> all</c><02:41:39.490><c> the</c><02:41:39.850><c> features</c><02:41:40.210><c> of</c><02:41:40.240><c> left</c>

02:41:40.650 --> 02:41:40.660 align:start position:0%
variable it has all the features of left
 

02:41:40.660 --> 02:41:43.200 align:start position:0%
variable it has all the features of left
but<02:41:41.350><c> it's</c><02:41:41.530><c> also</c><02:41:41.800><c> read-only</c>

02:41:43.200 --> 02:41:43.210 align:start position:0%
but it's also read-only
 

02:41:43.210 --> 02:41:46.469 align:start position:0%
but it's also read-only
you<02:41:43.450><c> cannot</c><02:41:43.900><c> reassign</c><02:41:44.710><c> a</c><02:41:44.740><c> Const</c><02:41:45.520><c> so</c><02:41:46.030><c> let's</c>

02:41:46.469 --> 02:41:46.479 align:start position:0%
you cannot reassign a Const so let's
 

02:41:46.479 --> 02:41:48.540 align:start position:0%
you cannot reassign a Const so let's
look<02:41:46.660><c> at</c><02:41:46.840><c> this</c><02:41:46.990><c> program</c><02:41:47.260><c> here</c><02:41:47.860><c> we're</c><02:41:48.310><c> running</c>

02:41:48.540 --> 02:41:48.550 align:start position:0%
look at this program here we're running
 

02:41:48.550 --> 02:41:51.270 align:start position:0%
look at this program here we're running
this<02:41:48.880><c> print</c><02:41:49.300><c> many</c><02:41:49.570><c> times</c><02:41:50.020><c> and</c><02:41:50.500><c> it's</c><02:41:50.920><c> going</c><02:41:51.160><c> to</c>

02:41:51.270 --> 02:41:51.280 align:start position:0%
this print many times and it's going to
 

02:41:51.280 --> 02:41:54.150 align:start position:0%
this print many times and it's going to
log<02:41:51.760><c> out</c><02:41:52.000><c> this</c><02:41:52.360><c> sentence</c><02:41:52.990><c> and</c><02:41:53.260><c> the</c><02:41:53.710><c> sentence</c>

02:41:54.150 --> 02:41:54.160 align:start position:0%
log out this sentence and the sentence
 

02:41:54.160 --> 02:41:56.940 align:start position:0%
log out this sentence and the sentence
is<02:41:54.310><c> up</c><02:41:54.490><c> here</c><02:41:54.760><c> vard</c><02:41:55.090><c> sentence</c><02:41:55.960><c> is</c><02:41:56.140><c> declared</c><02:41:56.650><c> and</c>

02:41:56.940 --> 02:41:56.950 align:start position:0%
is up here vard sentence is declared and
 

02:41:56.950 --> 02:42:00.390 align:start position:0%
is up here vard sentence is declared and
then<02:41:57.760><c> we</c><02:41:57.970><c> reassign</c><02:41:58.630><c> it</c><02:41:58.780><c> here</c><02:41:59.140><c> so</c><02:41:59.620><c> first</c><02:42:00.100><c> we</c>

02:42:00.390 --> 02:42:00.400 align:start position:0%
then we reassign it here so first we
 

02:42:00.400 --> 02:42:02.310 align:start position:0%
then we reassign it here so first we
declare<02:42:00.970><c> this</c><02:42:01.090><c> sentence</c><02:42:01.510><c> to</c><02:42:01.660><c> be</c><02:42:01.780><c> the</c><02:42:01.990><c> string</c>

02:42:02.310 --> 02:42:02.320 align:start position:0%
declare this sentence to be the string
 

02:42:02.320 --> 02:42:05.070 align:start position:0%
declare this sentence to be the string
is<02:42:02.590><c> cool</c><02:42:02.979><c> then</c><02:42:03.580><c> it's</c><02:42:03.729><c> reassigned</c><02:42:04.450><c> to</c><02:42:04.810><c> be</c><02:42:04.930><c> the</c>

02:42:05.070 --> 02:42:05.080 align:start position:0%
is cool then it's reassigned to be the
 

02:42:05.080 --> 02:42:07.680 align:start position:0%
is cool then it's reassigned to be the
string<02:42:05.380><c> it's</c><02:42:05.560><c> amazing</c><02:42:06.070><c> so</c><02:42:06.670><c> if</c><02:42:06.850><c> we</c><02:42:06.970><c> run</c><02:42:07.240><c> that</c><02:42:07.270><c> it</c>

02:42:07.680 --> 02:42:07.690 align:start position:0%
string it's amazing so if we run that it
 

02:42:07.690 --> 02:42:09.900 align:start position:0%
string it's amazing so if we run that it
should<02:42:08.170><c> work</c><02:42:08.380><c> it</c><02:42:08.620><c> prints</c><02:42:08.920><c> free</c><02:42:09.190><c> code</c><02:42:09.490><c> camp</c><02:42:09.790><c> is</c>

02:42:09.900 --> 02:42:09.910 align:start position:0%
should work it prints free code camp is
 

02:42:09.910 --> 02:42:13.920 align:start position:0%
should work it prints free code camp is
amazing<02:42:10.479><c> many</c><02:42:11.110><c> times</c><02:42:11.500><c> but</c><02:42:12.310><c> if</c><02:42:12.640><c> we</c><02:42:13.240><c> change</c><02:42:13.540><c> this</c>

02:42:13.920 --> 02:42:13.930 align:start position:0%
amazing many times but if we change this
 

02:42:13.930 --> 02:42:16.770 align:start position:0%
amazing many times but if we change this
to<02:42:14.040><c> Const</c><02:42:15.040><c> let's</c><02:42:15.700><c> see</c><02:42:15.910><c> what</c><02:42:16.090><c> happens</c>

02:42:16.770 --> 02:42:16.780 align:start position:0%
to Const let's see what happens
 

02:42:16.780 --> 02:42:20.090 align:start position:0%
to Const let's see what happens
now<02:42:17.380><c> I'll</c><02:42:17.590><c> run</c><02:42:17.830><c> this</c><02:42:18.070><c> and</c><02:42:18.340><c> we</c><02:42:18.940><c> get</c><02:42:19.210><c> an</c><02:42:19.390><c> error</c>

02:42:20.090 --> 02:42:20.100 align:start position:0%
now I'll run this and we get an error
 

02:42:20.100 --> 02:42:24.030 align:start position:0%
now I'll run this and we get an error
sentence<02:42:21.100><c> is</c><02:42:21.280><c> read</c><02:42:21.850><c> only</c><02:42:22.479><c> if</c><02:42:22.900><c> you</c><02:42:23.500><c> declare</c><02:42:24.010><c> a</c>

02:42:24.030 --> 02:42:24.040 align:start position:0%
sentence is read only if you declare a
 

02:42:24.040 --> 02:42:26.850 align:start position:0%
sentence is read only if you declare a
variable<02:42:24.190><c> with</c><02:42:24.910><c> the</c><02:42:25.120><c> Const</c><02:42:25.720><c> keyword</c><02:42:26.050><c> you</c>

02:42:26.850 --> 02:42:26.860 align:start position:0%
variable with the Const keyword you
 

02:42:26.860 --> 02:42:30.810 align:start position:0%
variable with the Const keyword you
cannot<02:42:27.400><c> reassign</c><02:42:28.210><c> it</c><02:42:28.350><c> afterwards</c><02:42:29.460><c> this</c><02:42:30.460><c> can</c>

02:42:30.810 --> 02:42:30.820 align:start position:0%
cannot reassign it afterwards this can
 

02:42:30.820 --> 02:42:33.170 align:start position:0%
cannot reassign it afterwards this can
be<02:42:30.970><c> very</c><02:42:31.479><c> helpful</c><02:42:31.990><c> to</c><02:42:32.229><c> prevent</c><02:42:32.860><c> you</c><02:42:33.040><c> from</c>

02:42:33.170 --> 02:42:33.180 align:start position:0%
be very helpful to prevent you from
 

02:42:33.180 --> 02:42:36.330 align:start position:0%
be very helpful to prevent you from
accidentally<02:42:34.180><c> making</c><02:42:34.570><c> mistakes</c><02:42:35.170><c> later</c><02:42:35.530><c> if</c>

02:42:36.330 --> 02:42:36.340 align:start position:0%
accidentally making mistakes later if
 

02:42:36.340 --> 02:42:39.480 align:start position:0%
accidentally making mistakes later if
you<02:42:36.910><c> know</c><02:42:37.180><c> for</c><02:42:37.510><c> sure</c><02:42:37.570><c> that</c><02:42:38.410><c> you</c><02:42:38.650><c> never</c><02:42:38.979><c> want</c><02:42:39.400><c> to</c>

02:42:39.480 --> 02:42:39.490 align:start position:0%
you know for sure that you never want to
 

02:42:39.490 --> 02:42:43.860 align:start position:0%
you know for sure that you never want to
reassign<02:42:40.240><c> a</c><02:42:40.270><c> variable</c><02:42:41.050><c> always</c><02:42:42.040><c> use</c><02:42:42.430><c> Const</c><02:42:43.270><c> so</c>

02:42:43.860 --> 02:42:43.870 align:start position:0%
reassign a variable always use Const so
 

02:42:43.870 --> 02:42:46.740 align:start position:0%
reassign a variable always use Const so
you<02:42:43.960><c> don't</c><02:42:44.670><c> accidentally</c><02:42:45.670><c> reassign</c><02:42:46.390><c> it</c><02:42:46.420><c> when</c>

02:42:46.740 --> 02:42:46.750 align:start position:0%
you don't accidentally reassign it when
 

02:42:46.750 --> 02:42:49.950 align:start position:0%
you don't accidentally reassign it when
you<02:42:46.870><c> don't</c><02:42:47.080><c> mean</c><02:42:47.320><c> to</c><02:42:47.729><c> another</c><02:42:48.729><c> thing</c><02:42:49.150><c> is</c><02:42:49.390><c> when</c>

02:42:49.950 --> 02:42:49.960 align:start position:0%
you don't mean to another thing is when
 

02:42:49.960 --> 02:42:53.490 align:start position:0%
you don't mean to another thing is when
you're<02:42:50.080><c> using</c><02:42:50.290><c> Const</c><02:42:51.220><c> it's</c><02:42:51.880><c> very</c><02:42:52.420><c> common</c><02:42:53.170><c> to</c>

02:42:53.490 --> 02:42:53.500 align:start position:0%
you're using Const it's very common to
 

02:42:53.500 --> 02:42:56.070 align:start position:0%
you're using Const it's very common to
use<02:42:53.740><c> all</c><02:42:53.979><c> capital</c><02:42:54.820><c> letters</c><02:42:54.850><c> so</c><02:42:55.720><c> like</c><02:42:55.870><c> this</c>

02:42:56.070 --> 02:42:56.080 align:start position:0%
use all capital letters so like this
 

02:42:56.080 --> 02:42:59.520 align:start position:0%
use all capital letters so like this
sentence<02:42:57.060><c> like</c><02:42:58.060><c> that</c><02:42:58.300><c> and</c><02:42:58.600><c> that's</c><02:42:59.229><c> another</c>

02:42:59.520 --> 02:42:59.530 align:start position:0%
sentence like that and that's another
 

02:42:59.530 --> 02:43:02.219 align:start position:0%
sentence like that and that's another
way<02:42:59.740><c> to</c><02:42:59.770><c> remember</c><02:43:00.310><c> that</c><02:43:00.490><c> it's</c><02:43:00.820><c> a</c><02:43:00.910><c> constant</c><02:43:01.270><c> so</c>

02:43:02.219 --> 02:43:02.229 align:start position:0%
way to remember that it's a constant so
 

02:43:02.229 --> 02:43:04.920 align:start position:0%
way to remember that it's a constant so
if<02:43:02.320><c> I</c><02:43:02.440><c> rename</c><02:43:03.340><c> this</c><02:43:03.640><c> year</c><02:43:04.030><c> I'm</c><02:43:04.210><c> also</c><02:43:04.479><c> going</c><02:43:04.810><c> to</c>

02:43:04.920 --> 02:43:04.930 align:start position:0%
if I rename this year I'm also going to
 

02:43:04.930 --> 02:43:08.130 align:start position:0%
if I rename this year I'm also going to
have<02:43:05.050><c> to</c><02:43:05.440><c> repeat</c><02:43:05.950><c> it</c><02:43:05.979><c> here</c><02:43:06.370><c> and</c><02:43:06.930><c> while</c><02:43:07.930><c> we're</c>

02:43:08.130 --> 02:43:08.140 align:start position:0%
have to repeat it here and while we're
 

02:43:08.140 --> 02:43:10.830 align:start position:0%
have to repeat it here and while we're
at<02:43:08.320><c> it</c><02:43:08.350><c> we're</c><02:43:09.280><c> gonna</c><02:43:09.460><c> change</c><02:43:09.820><c> this</c><02:43:10.090><c> to</c><02:43:10.420><c> left</c>

02:43:10.830 --> 02:43:10.840 align:start position:0%
at it we're gonna change this to left
 

02:43:10.840 --> 02:43:13.170 align:start position:0%
at it we're gonna change this to left
because<02:43:11.380><c> for</c><02:43:11.950><c> the</c><02:43:12.040><c> most</c><02:43:12.250><c> part</c><02:43:12.580><c> you</c><02:43:12.820><c> should</c>

02:43:13.170 --> 02:43:13.180 align:start position:0%
because for the most part you should
 

02:43:13.180 --> 02:43:15.930 align:start position:0%
because for the most part you should
only<02:43:13.570><c> use</c><02:43:13.750><c> Const</c><02:43:14.650><c> or</c><02:43:14.860><c> let</c><02:43:15.190><c> but</c><02:43:15.640><c> there</c><02:43:15.820><c> are</c>

02:43:15.930 --> 02:43:15.940 align:start position:0%
only use Const or let but there are
 

02:43:15.940 --> 02:43:17.790 align:start position:0%
only use Const or let but there are
certain<02:43:16.510><c> circumstances</c><02:43:16.990><c> where</c><02:43:17.560><c> you</c><02:43:17.590><c> would</c>

02:43:17.790 --> 02:43:17.800 align:start position:0%
certain circumstances where you would
 

02:43:17.800 --> 02:43:20.850 align:start position:0%
certain circumstances where you would
use<02:43:17.950><c> var</c><02:43:18.340><c> and</c><02:43:18.720><c> also</c><02:43:19.720><c> in</c><02:43:19.990><c> some</c><02:43:20.260><c> other</c><02:43:20.320><c> videos</c><02:43:20.710><c> in</c>

02:43:20.850 --> 02:43:20.860 align:start position:0%
use var and also in some other videos in
 

02:43:20.860 --> 02:43:22.800 align:start position:0%
use var and also in some other videos in
this<02:43:20.950><c> course</c><02:43:21.190><c> I'll</c><02:43:21.460><c> be</c><02:43:21.550><c> using</c><02:43:21.670><c> var</c><02:43:22.060><c> but</c><02:43:22.660><c> in</c>

02:43:22.800 --> 02:43:22.810 align:start position:0%
this course I'll be using var but in
 

02:43:22.810 --> 02:43:25.440 align:start position:0%
this course I'll be using var but in
your<02:43:22.990><c> own</c><02:43:23.229><c> code</c><02:43:23.740><c> you</c><02:43:24.430><c> should</c><02:43:24.700><c> mainly</c><02:43:25.210><c> use</c>

02:43:25.440 --> 02:43:25.450 align:start position:0%
your own code you should mainly use
 

02:43:25.450 --> 02:43:28.290 align:start position:0%
your own code you should mainly use
Const<02:43:26.050><c> and</c><02:43:26.260><c> let</c><02:43:26.590><c> let's</c><02:43:27.340><c> reload</c><02:43:27.820><c> this</c><02:43:28.030><c> to</c><02:43:28.150><c> see</c>

02:43:28.290 --> 02:43:28.300 align:start position:0%
Const and let let's reload this to see
 

02:43:28.300 --> 02:43:30.300 align:start position:0%
Const and let let's reload this to see
what<02:43:28.450><c> happens</c><02:43:28.870><c> and</c><02:43:29.110><c> it</c><02:43:29.440><c> worked</c><02:43:29.680><c> free</c><02:43:30.010><c> code</c>

02:43:30.300 --> 02:43:30.310 align:start position:0%
what happens and it worked free code
 

02:43:30.310 --> 02:43:33.960 align:start position:0%
what happens and it worked free code
camp<02:43:30.610><c> is</c><02:43:30.880><c> cool</c><02:43:31.330><c> many</c><02:43:32.020><c> times</c><02:43:32.580><c> we</c><02:43:33.580><c> can</c><02:43:33.760><c> no</c><02:43:33.940><c> longer</c>

02:43:33.960 --> 02:43:33.970 align:start position:0%
camp is cool many times we can no longer
 

02:43:33.970 --> 02:43:36.719 align:start position:0%
camp is cool many times we can no longer
say<02:43:34.570><c> that</c><02:43:34.840><c> free</c><02:43:35.050><c> code</c><02:43:35.290><c> camp</c><02:43:35.560><c> is</c><02:43:35.710><c> awesome</c><02:43:36.190><c> even</c>

02:43:36.719 --> 02:43:36.729 align:start position:0%
say that free code camp is awesome even
 

02:43:36.729 --> 02:43:43.230 align:start position:0%
say that free code camp is awesome even
though<02:43:36.970><c> we</c><02:43:37.540><c> know</c><02:43:37.720><c> it</c><02:43:38.020><c> actually</c><02:43:38.650><c> is</c>

02:43:43.230 --> 02:43:43.240 align:start position:0%
 
 

02:43:43.240 --> 02:43:45.961 align:start position:0%
 
while<02:43:44.021><c> you</c><02:43:44.170><c> cannot</c><02:43:44.500><c> reassign</c><02:43:45.160><c> a</c><02:43:45.190><c> variable</c>

02:43:45.961 --> 02:43:45.971 align:start position:0%
while you cannot reassign a variable
 

02:43:45.971 --> 02:43:49.290 align:start position:0%
while you cannot reassign a variable
declared<02:43:46.181><c> with</c><02:43:46.721><c> Const</c><02:43:47.440><c> you</c><02:43:47.920><c> can</c><02:43:48.370><c> mutate</c><02:43:49.061><c> an</c>

02:43:49.290 --> 02:43:49.300 align:start position:0%
declared with Const you can mutate an
 

02:43:49.300 --> 02:43:51.930 align:start position:0%
declared with Const you can mutate an
array<02:43:49.690><c> so</c><02:43:50.410><c> look</c><02:43:50.710><c> at</c><02:43:50.860><c> this</c><02:43:51.010><c> example</c><02:43:51.070><c> that's</c><02:43:51.670><c> not</c>

02:43:51.930 --> 02:43:51.940 align:start position:0%
array so look at this example that's not
 

02:43:51.940 --> 02:43:52.711 align:start position:0%
array so look at this example that's not
gonna<02:43:52.181><c> work</c>

02:43:52.711 --> 02:43:52.721 align:start position:0%
gonna work
 

02:43:52.721 --> 02:43:56.190 align:start position:0%
gonna work
first<02:43:53.320><c> we</c><02:43:53.891><c> declare</c><02:43:54.101><c> the</c><02:43:54.730><c> variable</c><02:43:55.120><c> s</c><02:43:55.330><c> and</c><02:43:55.811><c> we</c>

02:43:56.190 --> 02:43:56.200 align:start position:0%
first we declare the variable s and we
 

02:43:56.200 --> 02:43:58.110 align:start position:0%
first we declare the variable s and we
assign<02:43:56.471><c> it</c><02:43:56.650><c> to</c><02:43:56.681><c> an</c><02:43:56.891><c> array</c><02:43:57.010><c> we</c><02:43:57.610><c> declare</c><02:43:57.940><c> with</c>

02:43:58.110 --> 02:43:58.120 align:start position:0%
assign it to an array we declare with
 

02:43:58.120 --> 02:44:01.171 align:start position:0%
assign it to an array we declare with
Const<02:43:58.780><c> and</c><02:43:58.931><c> now</c><02:43:59.471><c> we're</c><02:43:59.650><c> gonna</c><02:43:59.771><c> reassign</c><02:44:00.700><c> the</c>

02:44:01.171 --> 02:44:01.181 align:start position:0%
Const and now we're gonna reassign the
 

02:44:01.181 --> 02:44:03.930 align:start position:0%
Const and now we're gonna reassign the
variable<02:44:01.780><c> s</c><02:44:02.021><c> here</c><02:44:02.530><c> but</c><02:44:03.010><c> if</c><02:44:03.101><c> we</c><02:44:03.130><c> do</c><02:44:03.370><c> that</c><02:44:03.641><c> we're</c>

02:44:03.930 --> 02:44:03.940 align:start position:0%
variable s here but if we do that we're
 

02:44:03.940 --> 02:44:07.801 align:start position:0%
variable s here but if we do that we're
gonna<02:44:04.061><c> get</c><02:44:04.360><c> the</c><02:44:04.420><c> air</c><02:44:04.870><c> s</c><02:44:05.440><c> is</c><02:44:05.980><c> read-only</c><02:44:06.811><c> however</c>

02:44:07.801 --> 02:44:07.811 align:start position:0%
gonna get the air s is read-only however
 

02:44:07.811 --> 02:44:11.881 align:start position:0%
gonna get the air s is read-only however
we<02:44:08.141><c> can</c><02:44:08.650><c> update</c><02:44:09.431><c> the</c><02:44:10.030><c> array</c><02:44:10.330><c> using</c><02:44:11.110><c> bracket</c>

02:44:11.881 --> 02:44:11.891 align:start position:0%
we can update the array using bracket
 

02:44:11.891 --> 02:44:14.520 align:start position:0%
we can update the array using bracket
notation<02:44:12.120><c> so</c><02:44:13.120><c> I'll</c><02:44:13.391><c> just</c><02:44:13.630><c> comment</c><02:44:14.080><c> that</c><02:44:14.141><c> out</c>

02:44:14.520 --> 02:44:14.530 align:start position:0%
notation so I'll just comment that out
 

02:44:14.530 --> 02:44:18.000 align:start position:0%
notation so I'll just comment that out
and<02:44:14.561><c> using</c><02:44:15.521><c> bracket</c><02:44:16.030><c> notation</c><02:44:16.150><c> I'll</c><02:44:16.931><c> do</c><02:44:17.200><c> index</c>

02:44:18.000 --> 02:44:18.010 align:start position:0%
and using bracket notation I'll do index
 

02:44:18.010 --> 02:44:24.091 align:start position:0%
and using bracket notation I'll do index
0<02:44:18.400><c> I'll</c><02:44:18.820><c> assign</c><02:44:19.540><c> that</c><02:44:19.900><c> to</c><02:44:19.960><c> to</c><02:44:21.150><c> index</c><02:44:22.150><c> 1</c><02:44:23.141><c> I'll</c>

02:44:24.091 --> 02:44:24.101 align:start position:0%
0 I'll assign that to to index 1 I'll
 

02:44:24.101 --> 02:44:30.841 align:start position:0%
0 I'll assign that to to index 1 I'll
assign<02:44:25.061><c> that</c><02:44:25.510><c> to</c><02:44:25.980><c> 5</c><02:44:26.980><c> and</c><02:44:27.540><c> then</c><02:44:28.540><c> index</c><02:44:29.380><c> 2</c><02:44:30.190><c> I'll</c>

02:44:30.841 --> 02:44:30.851 align:start position:0%
assign that to 5 and then index 2 I'll
 

02:44:30.851 --> 02:44:35.730 align:start position:0%
assign that to 5 and then index 2 I'll
assign<02:44:31.510><c> that</c><02:44:31.811><c> to</c><02:44:32.221><c> 7</c><02:44:33.221><c> and</c><02:44:33.811><c> just</c><02:44:34.811><c> like</c><02:44:35.021><c> that</c><02:44:35.351><c> it</c>

02:44:35.730 --> 02:44:35.740 align:start position:0%
assign that to 7 and just like that it
 

02:44:35.740 --> 02:44:39.030 align:start position:0%
assign that to 7 and just like that it
is<02:44:35.920><c> going</c><02:44:36.370><c> to</c><02:44:36.750><c> reassign</c><02:44:37.750><c> the</c><02:44:37.931><c> array</c><02:44:38.170><c> so</c><02:44:38.740><c> if</c><02:44:38.891><c> I</c>

02:44:39.030 --> 02:44:39.040 align:start position:0%
is going to reassign the array so if I
 

02:44:39.040 --> 02:44:43.171 align:start position:0%
is going to reassign the array so if I
just<02:44:39.311><c> do</c><02:44:39.670><c> a</c><02:44:39.700><c> console</c><02:44:40.360><c> dot</c><02:44:40.570><c> log</c><02:44:40.630><c> here</c><02:44:42.181><c> console</c>

02:44:43.171 --> 02:44:43.181 align:start position:0%
just do a console dot log here console
 

02:44:43.181 --> 02:44:46.770 align:start position:0%
just do a console dot log here console
dot<02:44:43.420><c> log</c><02:44:43.480><c> and</c><02:44:44.400><c> put</c><02:44:45.400><c> the</c><02:44:45.580><c> array</c><02:44:45.820><c> in</c><02:44:46.000><c> there</c><02:44:46.300><c> we</c>

02:44:46.770 --> 02:44:46.780 align:start position:0%
dot log and put the array in there we
 

02:44:46.780 --> 02:44:54.270 align:start position:0%
dot log and put the array in there we
should<02:44:47.080><c> see</c><02:44:47.410><c> the</c><02:44:47.620><c> new</c><02:44:47.891><c> array</c><02:44:48.670><c> here</c><02:44:49.000><c> 2</c><02:44:49.300><c> 5</c><02:44:49.630><c> 7</c>

02:44:54.270 --> 02:44:54.280 align:start position:0%
 
 

02:44:54.280 --> 02:44:58.440 align:start position:0%
 
as<02:44:54.601><c> seen</c><02:44:55.601><c> previously</c><02:44:56.290><c> a</c><02:44:56.681><c> Const</c><02:44:57.641><c> declaration</c>

02:44:58.440 --> 02:44:58.450 align:start position:0%
as seen previously a Const declaration
 

02:44:58.450 --> 02:45:00.421 align:start position:0%
as seen previously a Const declaration
alone<02:44:58.811><c> doesn't</c><02:44:59.261><c> really</c><02:44:59.620><c> protect</c><02:44:59.860><c> your</c><02:45:00.250><c> data</c>

02:45:00.421 --> 02:45:00.431 align:start position:0%
alone doesn't really protect your data
 

02:45:00.431 --> 02:45:03.690 align:start position:0%
alone doesn't really protect your data
from<02:45:00.910><c> mutation</c><02:45:01.900><c> if</c><02:45:02.200><c> you</c><02:45:02.830><c> have</c><02:45:02.920><c> an</c><02:45:03.011><c> object</c><02:45:03.250><c> or</c>

02:45:03.690 --> 02:45:03.700 align:start position:0%
from mutation if you have an object or
 

02:45:03.700 --> 02:45:06.150 align:start position:0%
from mutation if you have an object or
an<02:45:03.851><c> array</c><02:45:04.120><c> you</c><02:45:04.181><c> can</c><02:45:04.420><c> still</c><02:45:04.870><c> mutate</c><02:45:05.471><c> it</c><02:45:05.620><c> even</c><02:45:06.040><c> if</c>

02:45:06.150 --> 02:45:06.160 align:start position:0%
an array you can still mutate it even if
 

02:45:06.160 --> 02:45:08.940 align:start position:0%
an array you can still mutate it even if
it's<02:45:06.311><c> declared</c><02:45:06.761><c> with</c><02:45:07.090><c> Const</c><02:45:07.900><c> there</c><02:45:08.740><c> is</c>

02:45:08.940 --> 02:45:08.950 align:start position:0%
it's declared with Const there is
 

02:45:08.950 --> 02:45:12.150 align:start position:0%
it's declared with Const there is
something<02:45:09.400><c> called</c><02:45:09.641><c> object</c><02:45:10.450><c> dot</c><02:45:10.780><c> freeze</c><02:45:11.410><c> that</c>

02:45:12.150 --> 02:45:12.160 align:start position:0%
something called object dot freeze that
 

02:45:12.160 --> 02:45:15.390 align:start position:0%
something called object dot freeze that
will<02:45:12.460><c> prevent</c><02:45:13.120><c> data</c><02:45:13.630><c> mutation</c><02:45:14.530><c> so</c><02:45:15.101><c> let</c><02:45:15.280><c> me</c>

02:45:15.390 --> 02:45:15.400 align:start position:0%
will prevent data mutation so let me
 

02:45:15.400 --> 02:45:17.820 align:start position:0%
will prevent data mutation so let me
talk<02:45:15.820><c> to</c><02:45:16.000><c> you</c><02:45:16.061><c> about</c><02:45:16.150><c> object</c><02:45:16.840><c> dot</c><02:45:17.021><c> freeze</c>

02:45:17.820 --> 02:45:17.830 align:start position:0%
talk to you about object dot freeze
 

02:45:17.830 --> 02:45:19.740 align:start position:0%
talk to you about object dot freeze
first<02:45:18.400><c> of</c><02:45:18.550><c> all</c><02:45:18.641><c> let's</c><02:45:18.940><c> understand</c><02:45:19.540><c> this</c>

02:45:19.740 --> 02:45:19.750 align:start position:0%
first of all let's understand this
 

02:45:19.750 --> 02:45:22.080 align:start position:0%
first of all let's understand this
function<02:45:20.050><c> here</c><02:45:20.620><c> we're</c><02:45:21.250><c> using</c><02:45:21.280><c> this</c><02:45:21.641><c> function</c>

02:45:22.080 --> 02:45:22.090 align:start position:0%
function here we're using this function
 

02:45:22.090 --> 02:45:24.961 align:start position:0%
function here we're using this function
to<02:45:22.360><c> demonstrate</c><02:45:23.021><c> object</c><02:45:23.380><c> dot</c><02:45:23.530><c> freeze</c><02:45:23.920><c> so</c><02:45:24.610><c> it's</c>

02:45:24.961 --> 02:45:24.971 align:start position:0%
to demonstrate object dot freeze so it's
 

02:45:24.971 --> 02:45:27.511 align:start position:0%
to demonstrate object dot freeze so it's
going<02:45:25.271><c> to</c><02:45:25.450><c> create</c><02:45:25.811><c> this</c><02:45:26.080><c> constant</c><02:45:26.860><c> math</c>

02:45:27.511 --> 02:45:27.521 align:start position:0%
going to create this constant math
 

02:45:27.521 --> 02:45:30.330 align:start position:0%
going to create this constant math
constants<02:45:28.210><c> with</c><02:45:28.480><c> the</c><02:45:28.630><c> PI</c><02:45:28.931><c> in</c><02:45:29.170><c> it</c><02:45:29.351><c> this</c><02:45:29.950><c> is</c><02:45:30.190><c> an</c>

02:45:30.330 --> 02:45:30.340 align:start position:0%
constants with the PI in it this is an
 

02:45:30.340 --> 02:45:34.410 align:start position:0%
constants with the PI in it this is an
object<02:45:30.940><c> and</c><02:45:31.800><c> right</c><02:45:32.800><c> now</c><02:45:33.160><c> this</c><02:45:33.820><c> can</c><02:45:34.090><c> still</c><02:45:34.360><c> be</c>

02:45:34.410 --> 02:45:34.420 align:start position:0%
object and right now this can still be
 

02:45:34.420 --> 02:45:38.790 align:start position:0%
object and right now this can still be
changed<02:45:35.130><c> so</c><02:45:36.130><c> if</c><02:45:36.521><c> we</c><02:45:36.880><c> look</c><02:45:37.210><c> down</c><02:45:37.480><c> here</c><02:45:37.620><c> this</c><02:45:38.620><c> is</c>

02:45:38.790 --> 02:45:38.800 align:start position:0%
changed so if we look down here this is
 

02:45:38.800 --> 02:45:41.580 align:start position:0%
changed so if we look down here this is
a<02:45:38.971><c> try-catch</c><02:45:39.971><c> block</c><02:45:40.391><c> will</c><02:45:41.200><c> talk</c><02:45:41.440><c> about</c>

02:45:41.580 --> 02:45:41.590 align:start position:0%
a try-catch block will talk about
 

02:45:41.590 --> 02:45:43.830 align:start position:0%
a try-catch block will talk about
try-catch<02:45:42.250><c> blocks</c><02:45:42.610><c> in</c><02:45:42.851><c> more</c><02:45:43.061><c> detail</c><02:45:43.450><c> later</c>

02:45:43.830 --> 02:45:43.840 align:start position:0%
try-catch blocks in more detail later
 

02:45:43.840 --> 02:45:46.290 align:start position:0%
try-catch blocks in more detail later
but<02:45:44.230><c> for</c><02:45:44.920><c> now</c><02:45:45.070><c> you</c><02:45:45.460><c> just</c><02:45:45.641><c> have</c><02:45:45.790><c> to</c><02:45:45.880><c> know</c><02:45:46.061><c> that</c>

02:45:46.290 --> 02:45:46.300 align:start position:0%
but for now you just have to know that
 

02:45:46.300 --> 02:45:48.421 align:start position:0%
but for now you just have to know that
it's<02:45:46.391><c> going</c><02:45:46.570><c> to</c><02:45:46.721><c> try</c><02:45:47.110><c> what's</c><02:45:47.860><c> in</c><02:45:48.011><c> the</c><02:45:48.130><c> first</c>

02:45:48.421 --> 02:45:48.431 align:start position:0%
it's going to try what's in the first
 

02:45:48.431 --> 02:45:50.280 align:start position:0%
it's going to try what's in the first
part<02:45:48.700><c> of</c><02:45:48.730><c> the</c><02:45:48.820><c> block</c><02:45:49.090><c> and</c><02:45:49.420><c> if</c><02:45:49.840><c> there's</c><02:45:50.110><c> an</c>

02:45:50.280 --> 02:45:50.290 align:start position:0%
part of the block and if there's an
 

02:45:50.290 --> 02:45:52.200 align:start position:0%
part of the block and if there's an
error<02:45:50.740><c> then</c><02:45:50.950><c> it's</c><02:45:51.130><c> going</c><02:45:51.400><c> to</c><02:45:51.580><c> go</c><02:45:51.940><c> into</c><02:45:52.090><c> the</c>

02:45:52.200 --> 02:45:52.210 align:start position:0%
error then it's going to go into the
 

02:45:52.210 --> 02:45:54.390 align:start position:0%
error then it's going to go into the
catch<02:45:52.480><c> part</c><02:45:52.900><c> and</c><02:45:53.170><c> it's</c><02:45:53.500><c> going</c><02:45:53.710><c> to</c><02:45:53.800><c> log</c><02:45:54.040><c> it</c><02:45:54.250><c> out</c>

02:45:54.390 --> 02:45:54.400 align:start position:0%
catch part and it's going to log it out
 

02:45:54.400 --> 02:45:56.790 align:start position:0%
catch part and it's going to log it out
so<02:45:55.300><c> right</c><02:45:55.601><c> now</c><02:45:55.840><c> we're</c><02:45:56.080><c> going</c><02:45:56.230><c> to</c><02:45:56.320><c> try</c><02:45:56.740><c> to</c>

02:45:56.790 --> 02:45:56.800 align:start position:0%
so right now we're going to try to
 

02:45:56.800 --> 02:46:01.320 align:start position:0%
so right now we're going to try to
change<02:45:57.271><c> math</c><02:45:58.271><c> constants</c><02:45:59.141><c> that</c><02:45:59.200><c> pi</c><02:45:59.650><c> to</c><02:46:00.190><c> 99</c><02:46:00.880><c> and</c>

02:46:01.320 --> 02:46:01.330 align:start position:0%
change math constants that pi to 99 and
 

02:46:01.330 --> 02:46:05.100 align:start position:0%
change math constants that pi to 99 and
if<02:46:02.261><c> you</c><02:46:02.380><c> can</c><02:46:02.561><c> see</c><02:46:02.860><c> right</c><02:46:03.190><c> here</c><02:46:03.780><c> we're</c><02:46:04.780><c> going</c><02:46:04.990><c> to</c>

02:46:05.100 --> 02:46:05.110 align:start position:0%
if you can see right here we're going to
 

02:46:05.110 --> 02:46:07.770 align:start position:0%
if you can see right here we're going to
return<02:46:05.891><c> the</c><02:46:06.340><c> math</c><02:46:06.610><c> that</c><02:46:06.820><c> constants</c><02:46:07.360><c> that</c><02:46:07.391><c> pi</c>

02:46:07.770 --> 02:46:07.780 align:start position:0%
return the math that constants that pi
 

02:46:07.780 --> 02:46:11.070 align:start position:0%
return the math that constants that pi
and<02:46:08.170><c> down</c><02:46:08.860><c> here</c><02:46:09.370><c> we</c><02:46:09.730><c> are</c><02:46:09.761><c> doing</c><02:46:10.601><c> into</c><02:46:11.050><c> a</c>

02:46:11.070 --> 02:46:11.080 align:start position:0%
and down here we are doing into a
 

02:46:11.080 --> 02:46:15.600 align:start position:0%
and down here we are doing into a
variable<02:46:11.830><c> called</c><02:46:12.250><c> pi</c><02:46:12.870><c> so</c><02:46:13.870><c> if</c><02:46:14.230><c> we</c><02:46:14.771><c> run</c><02:46:15.250><c> this</c>

02:46:15.600 --> 02:46:15.610 align:start position:0%
variable called pi so if we run this
 

02:46:15.610 --> 02:46:18.270 align:start position:0%
variable called pi so if we run this
you'll<02:46:16.120><c> see</c><02:46:16.210><c> that</c><02:46:16.811><c> we</c><02:46:17.080><c> console</c><02:46:17.590><c> that</c><02:46:17.740><c> log</c><02:46:17.920><c> time</c>

02:46:18.270 --> 02:46:18.280 align:start position:0%
you'll see that we console that log time
 

02:46:18.280 --> 02:46:21.841 align:start position:0%
you'll see that we console that log time
it's<02:46:18.550><c> 99</c><02:46:19.240><c> but</c><02:46:20.200><c> wait</c><02:46:20.590><c> a</c><02:46:20.620><c> second</c><02:46:21.280><c> we</c><02:46:21.431><c> don't</c><02:46:21.550><c> want</c>

02:46:21.841 --> 02:46:21.851 align:start position:0%
it's 99 but wait a second we don't want
 

02:46:21.851 --> 02:46:24.030 align:start position:0%
it's 99 but wait a second we don't want
pi<02:46:22.090><c> to</c><02:46:22.150><c> change</c><02:46:22.660><c> because</c><02:46:23.261><c> we</c><02:46:23.410><c> know</c><02:46:23.590><c> that</c><02:46:23.740><c> pi</c>

02:46:24.030 --> 02:46:24.040 align:start position:0%
pi to change because we know that pi
 

02:46:24.040 --> 02:46:27.150 align:start position:0%
pi to change because we know that pi
never<02:46:24.550><c> changes</c><02:46:25.330><c> that's</c><02:46:26.230><c> why</c><02:46:26.471><c> we're</c><02:46:26.710><c> gonna</c><02:46:26.830><c> use</c>

02:46:27.150 --> 02:46:27.160 align:start position:0%
never changes that's why we're gonna use
 

02:46:27.160 --> 02:46:30.001 align:start position:0%
never changes that's why we're gonna use
object<02:46:27.851><c> dot</c><02:46:28.150><c> freeze</c><02:46:28.690><c> so</c><02:46:29.410><c> I'll</c><02:46:29.530><c> put</c><02:46:29.800><c> it</c><02:46:29.860><c> right</c>

02:46:30.001 --> 02:46:30.011 align:start position:0%
object dot freeze so I'll put it right
 

02:46:30.011 --> 02:46:34.470 align:start position:0%
object dot freeze so I'll put it right
here<02:46:30.070><c> I'm</c><02:46:30.610><c> gonna</c><02:46:30.971><c> do</c><02:46:31.120><c> object</c><02:46:32.190><c> not</c><02:46:33.190><c> freeze</c><02:46:34.000><c> and</c>

02:46:34.470 --> 02:46:34.480 align:start position:0%
here I'm gonna do object not freeze and
 

02:46:34.480 --> 02:46:37.591 align:start position:0%
here I'm gonna do object not freeze and
then<02:46:35.261><c> in</c><02:46:35.620><c> parentheses</c><02:46:36.490><c> I'll</c><02:46:36.730><c> put</c><02:46:36.971><c> the</c><02:46:37.061><c> object</c>

02:46:37.591 --> 02:46:37.601 align:start position:0%
then in parentheses I'll put the object
 

02:46:37.601 --> 02:46:42.540 align:start position:0%
then in parentheses I'll put the object
which<02:46:38.110><c> is</c><02:46:38.380><c> math</c><02:46:39.811><c> constants</c><02:46:40.811><c> now</c><02:46:41.771><c> I've</c><02:46:42.101><c> frozen</c>

02:46:42.540 --> 02:46:42.550 align:start position:0%
which is math constants now I've frozen
 

02:46:42.550 --> 02:46:45.421 align:start position:0%
which is math constants now I've frozen
math<02:46:43.181><c> constants</c><02:46:44.080><c> so</c><02:46:44.740><c> when</c><02:46:44.950><c> it</c><02:46:45.040><c> tries</c><02:46:45.400><c> to</c>

02:46:45.421 --> 02:46:45.431 align:start position:0%
math constants so when it tries to
 

02:46:45.431 --> 02:46:49.140 align:start position:0%
math constants so when it tries to
change<02:46:46.210><c> math</c><02:46:46.900><c> constants</c><02:46:47.410><c> top</c><02:46:47.590><c> pi</c><02:46:47.950><c> here</c><02:46:48.521><c> it's</c>

02:46:49.140 --> 02:46:49.150 align:start position:0%
change math constants top pi here it's
 

02:46:49.150 --> 02:46:51.330 align:start position:0%
change math constants top pi here it's
not<02:46:49.511><c> going</c><02:46:49.840><c> to</c><02:46:49.960><c> work</c><02:46:50.200><c> and</c><02:46:50.471><c> it's</c><02:46:50.800><c> going</c><02:46:50.980><c> to</c><02:46:51.101><c> go</c>

02:46:51.330 --> 02:46:51.340 align:start position:0%
not going to work and it's going to go
 

02:46:51.340 --> 02:46:53.520 align:start position:0%
not going to work and it's going to go
into<02:46:51.521><c> this</c><02:46:51.610><c> catch</c><02:46:52.000><c> block</c><02:46:52.420><c> and</c><02:46:52.811><c> it's</c><02:46:53.230><c> going</c><02:46:53.410><c> to</c>

02:46:53.520 --> 02:46:53.530 align:start position:0%
into this catch block and it's going to
 

02:46:53.530 --> 02:46:56.640 align:start position:0%
into this catch block and it's going to
log<02:46:53.800><c> out</c><02:46:54.011><c> the</c><02:46:54.250><c> ear</c><02:46:54.490><c> or</c><02:46:54.880><c> the</c><02:46:55.030><c> exception</c><02:46:55.690><c> so</c><02:46:56.380><c> let</c>

02:46:56.640 --> 02:46:56.650 align:start position:0%
log out the ear or the exception so let
 

02:46:56.650 --> 02:46:59.520 align:start position:0%
log out the ear or the exception so let
me<02:46:56.740><c> run</c><02:46:56.920><c> that</c><02:46:57.190><c> and</c><02:46:57.490><c> you'll</c><02:46:57.971><c> see</c><02:46:58.261><c> type</c><02:46:59.261><c> air</c>

02:46:59.520 --> 02:46:59.530 align:start position:0%
me run that and you'll see type air
 

02:46:59.530 --> 02:47:01.501 align:start position:0%
me run that and you'll see type air
cannot<02:46:59.950><c> assign</c><02:47:00.280><c> to</c><02:47:00.521><c> read</c><02:47:00.700><c> only</c><02:47:00.790><c> probably</c><02:47:01.240><c> a</c><02:47:01.300><c> PI</c>

02:47:01.501 --> 02:47:01.511 align:start position:0%
cannot assign to read only probably a PI
 

02:47:01.511 --> 02:47:04.740 align:start position:0%
cannot assign to read only probably a PI
of<02:47:01.540><c> object</c><02:47:02.230><c> so</c><02:47:02.620><c> we</c><02:47:03.160><c> had</c><02:47:03.311><c> an</c><02:47:03.370><c> error</c><02:47:03.730><c> and</c><02:47:03.940><c> we</c><02:47:04.570><c> can</c>

02:47:04.740 --> 02:47:04.750 align:start position:0%
of object so we had an error and we can
 

02:47:04.750 --> 02:47:07.171 align:start position:0%
of object so we had an error and we can
see<02:47:04.990><c> here</c><02:47:05.380><c> that</c><02:47:05.561><c> pi</c><02:47:05.860><c> is</c><02:47:06.221><c> stays</c><02:47:06.550><c> the</c><02:47:06.761><c> same</c><02:47:06.790><c> at</c>

02:47:07.171 --> 02:47:07.181 align:start position:0%
see here that pi is stays the same at
 

02:47:07.181 --> 02:47:08.300 align:start position:0%
see here that pi is stays the same at
3.1

02:47:08.300 --> 02:47:08.310 align:start position:0%
3.1
 

02:47:08.310 --> 02:47:10.580 align:start position:0%
3.1
or<02:47:08.430><c> so</c><02:47:09.180><c> whenever</c><02:47:09.449><c> you</c><02:47:09.630><c> have</c><02:47:09.720><c> an</c><02:47:09.869><c> object</c><02:47:10.140><c> and</c>

02:47:10.580 --> 02:47:10.590 align:start position:0%
or so whenever you have an object and
 

02:47:10.590 --> 02:47:12.349 align:start position:0%
or so whenever you have an object and
you<02:47:10.680><c> don't</c><02:47:10.979><c> want</c><02:47:11.130><c> any</c><02:47:11.340><c> of</c><02:47:11.579><c> the</c><02:47:11.729><c> items</c><02:47:12.119><c> in</c><02:47:12.270><c> the</c>

02:47:12.349 --> 02:47:12.359 align:start position:0%
you don't want any of the items in the
 

02:47:12.359 --> 02:47:20.050 align:start position:0%
you don't want any of the items in the
object<02:47:12.750><c> to</c><02:47:12.840><c> change</c><02:47:12.920><c> use</c><02:47:13.920><c> object</c><02:47:14.550><c> dot</c><02:47:14.790><c> freeze</c>

02:47:20.050 --> 02:47:20.060 align:start position:0%
 
 

02:47:20.060 --> 02:47:22.630 align:start position:0%
 
this<02:47:20.689><c> function</c><02:47:21.290><c> here</c><02:47:21.739><c> is</c><02:47:21.949><c> called</c><02:47:22.369><c> an</c>

02:47:22.630 --> 02:47:22.640 align:start position:0%
this function here is called an
 

02:47:22.640 --> 02:47:25.330 align:start position:0%
this function here is called an
anonymous<02:47:23.300><c> function</c><02:47:23.600><c> it</c><02:47:24.439><c> doesn't</c><02:47:24.949><c> have</c><02:47:25.310><c> a</c>

02:47:25.330 --> 02:47:25.340 align:start position:0%
anonymous function it doesn't have a
 

02:47:25.340 --> 02:47:28.479 align:start position:0%
anonymous function it doesn't have a
name<02:47:25.729><c> it</c><02:47:26.540><c> is</c><02:47:26.930><c> assigned</c><02:47:27.560><c> to</c><02:47:27.800><c> this</c><02:47:28.010><c> variable</c>

02:47:28.479 --> 02:47:28.489 align:start position:0%
name it is assigned to this variable
 

02:47:28.489 --> 02:47:31.179 align:start position:0%
name it is assigned to this variable
magic<02:47:29.210><c> but</c><02:47:29.810><c> there's</c><02:47:30.020><c> no</c><02:47:30.260><c> word</c><02:47:30.529><c> right</c><02:47:30.800><c> before</c>

02:47:31.179 --> 02:47:31.189 align:start position:0%
magic but there's no word right before
 

02:47:31.189 --> 02:47:33.639 align:start position:0%
magic but there's no word right before
the<02:47:31.369><c> function</c><02:47:31.939><c> keyword</c><02:47:32.359><c> to</c><02:47:32.869><c> assign</c><02:47:33.380><c> the</c><02:47:33.500><c> name</c>

02:47:33.639 --> 02:47:33.649 align:start position:0%
the function keyword to assign the name
 

02:47:33.649 --> 02:47:36.309 align:start position:0%
the function keyword to assign the name
to<02:47:33.949><c> the</c><02:47:34.040><c> function</c><02:47:34.600><c> whenever</c><02:47:35.600><c> you</c><02:47:35.960><c> have</c><02:47:36.199><c> an</c>

02:47:36.309 --> 02:47:36.319 align:start position:0%
to the function whenever you have an
 

02:47:36.319 --> 02:47:38.740 align:start position:0%
to the function whenever you have an
anonymous<02:47:36.619><c> function</c><02:47:37.159><c> you</c><02:47:38.029><c> can</c><02:47:38.270><c> convert</c><02:47:38.689><c> it</c>

02:47:38.740 --> 02:47:38.750 align:start position:0%
anonymous function you can convert it
 

02:47:38.750 --> 02:47:41.859 align:start position:0%
anonymous function you can convert it
into<02:47:39.050><c> an</c><02:47:39.470><c> arrow</c><02:47:39.920><c> function</c><02:47:40.640><c> that</c><02:47:41.300><c> makes</c><02:47:41.630><c> it</c><02:47:41.810><c> a</c>

02:47:41.859 --> 02:47:41.869 align:start position:0%
into an arrow function that makes it a
 

02:47:41.869 --> 02:47:44.109 align:start position:0%
into an arrow function that makes it a
little<02:47:42.079><c> quicker</c><02:47:42.500><c> to</c><02:47:42.829><c> write</c><02:47:43.069><c> so</c><02:47:43.760><c> instead</c><02:47:44.060><c> of</c>

02:47:44.109 --> 02:47:44.119 align:start position:0%
little quicker to write so instead of
 

02:47:44.119 --> 02:47:46.179 align:start position:0%
little quicker to write so instead of
the<02:47:44.239><c> word</c><02:47:44.359><c> function</c><02:47:44.779><c> I'm</c><02:47:45.290><c> going</c><02:47:45.829><c> to</c><02:47:45.890><c> take</c><02:47:46.069><c> that</c>

02:47:46.179 --> 02:47:46.189 align:start position:0%
the word function I'm going to take that
 

02:47:46.189 --> 02:47:48.849 align:start position:0%
the word function I'm going to take that
out<02:47:46.310><c> completely</c><02:47:46.819><c> and</c><02:47:47.210><c> then</c><02:47:47.840><c> put</c><02:47:48.199><c> an</c><02:47:48.380><c> arrow</c>

02:47:48.849 --> 02:47:48.859 align:start position:0%
out completely and then put an arrow
 

02:47:48.859 --> 02:47:53.319 align:start position:0%
out completely and then put an arrow
here<02:47:50.170><c> so</c><02:47:51.170><c> this</c><02:47:51.529><c> is</c><02:47:51.770><c> the</c><02:47:52.069><c> same</c><02:47:52.340><c> thing</c><02:47:52.729><c> except</c>

02:47:53.319 --> 02:47:53.329 align:start position:0%
here so this is the same thing except
 

02:47:53.329 --> 02:47:55.149 align:start position:0%
here so this is the same thing except
it's<02:47:53.449><c> just</c><02:47:53.600><c> a</c><02:47:53.659><c> little</c><02:47:53.869><c> quicker</c><02:47:54.140><c> to</c><02:47:54.229><c> write</c><02:47:54.529><c> but</c>

02:47:55.149 --> 02:47:55.159 align:start position:0%
it's just a little quicker to write but
 

02:47:55.159 --> 02:47:58.599 align:start position:0%
it's just a little quicker to write but
we<02:47:55.369><c> can</c><02:47:55.550><c> shorten</c><02:47:56.090><c> this</c><02:47:56.300><c> even</c><02:47:56.930><c> more</c><02:47:57.290><c> if</c><02:47:57.739><c> we're</c>

02:47:58.599 --> 02:47:58.609 align:start position:0%
we can shorten this even more if we're
 

02:47:58.609 --> 02:48:02.050 align:start position:0%
we can shorten this even more if we're
just<02:47:58.939><c> returning</c><02:47:59.510><c> one</c><02:48:00.260><c> value</c><02:48:00.920><c> here</c><02:48:01.340><c> we</c><02:48:01.880><c> don't</c>

02:48:02.050 --> 02:48:02.060 align:start position:0%
just returning one value here we don't
 

02:48:02.060 --> 02:48:05.319 align:start position:0%
just returning one value here we don't
even<02:48:02.239><c> need</c><02:48:02.540><c> the</c><02:48:02.859><c> return</c><02:48:03.859><c> keyword</c><02:48:04.310><c> and</c><02:48:04.760><c> we</c>

02:48:05.319 --> 02:48:05.329 align:start position:0%
even need the return keyword and we
 

02:48:05.329 --> 02:48:07.840 align:start position:0%
even need the return keyword and we
don't<02:48:05.569><c> need</c><02:48:05.750><c> the</c><02:48:05.960><c> curly</c><02:48:06.380><c> braces</c><02:48:06.649><c> so</c><02:48:07.520><c> I</c><02:48:07.550><c> can</c>

02:48:07.840 --> 02:48:07.850 align:start position:0%
don't need the curly braces so I can
 

02:48:07.850 --> 02:48:10.870 align:start position:0%
don't need the curly braces so I can
delete<02:48:08.149><c> all</c><02:48:08.390><c> this</c><02:48:08.750><c> and</c><02:48:09.130><c> I</c><02:48:10.130><c> can</c><02:48:10.369><c> delete</c><02:48:10.670><c> all</c>

02:48:10.870 --> 02:48:10.880 align:start position:0%
delete all this and I can delete all
 

02:48:10.880 --> 02:48:14.380 align:start position:0%
delete all this and I can delete all
this<02:48:11.090><c> here</c><02:48:11.510><c> and</c><02:48:11.979><c> now</c><02:48:12.979><c> this</c><02:48:13.640><c> is</c><02:48:13.880><c> the</c><02:48:14.090><c> full</c>

02:48:14.380 --> 02:48:14.390 align:start position:0%
this here and now this is the full
 

02:48:14.390 --> 02:48:16.240 align:start position:0%
this here and now this is the full
function<02:48:14.899><c> from</c><02:48:15.140><c> before</c><02:48:15.560><c> but</c><02:48:16.010><c> it's</c><02:48:16.159><c> just</c>

02:48:16.240 --> 02:48:16.250 align:start position:0%
function from before but it's just
 

02:48:16.250 --> 02:48:18.429 align:start position:0%
function from before but it's just
really<02:48:16.550><c> shortened</c><02:48:17.180><c> up</c><02:48:17.300><c> and</c><02:48:17.569><c> to</c><02:48:18.109><c> make</c><02:48:18.140><c> this</c>

02:48:18.429 --> 02:48:18.439 align:start position:0%
really shortened up and to make this
 

02:48:18.439 --> 02:48:20.380 align:start position:0%
really shortened up and to make this
even<02:48:18.649><c> nicer</c><02:48:19.159><c> we're</c><02:48:19.579><c> not</c><02:48:19.760><c> going</c><02:48:19.909><c> to</c><02:48:19.939><c> use</c><02:48:20.000><c> var</c>

02:48:20.380 --> 02:48:20.390 align:start position:0%
even nicer we're not going to use var
 

02:48:20.390 --> 02:48:26.780 align:start position:0%
even nicer we're not going to use var
and<02:48:20.420><c> I</c><02:48:20.689><c> change</c><02:48:20.989><c> this</c><02:48:21.199><c> to</c><02:48:21.260><c> Const</c>

02:48:26.780 --> 02:48:26.790 align:start position:0%
 
 

02:48:26.790 --> 02:48:29.480 align:start position:0%
 
just<02:48:27.510><c> like</c><02:48:27.660><c> in</c><02:48:27.810><c> a</c><02:48:27.900><c> normal</c><02:48:27.930><c> function</c><02:48:28.771><c> you</c><02:48:29.220><c> can</c>

02:48:29.480 --> 02:48:29.490 align:start position:0%
just like in a normal function you can
 

02:48:29.490 --> 02:48:32.570 align:start position:0%
just like in a normal function you can
pass<02:48:29.820><c> arguments</c><02:48:30.450><c> to</c><02:48:30.810><c> arrow</c><02:48:31.021><c> functions</c><02:48:31.800><c> so</c><02:48:32.400><c> let</c>

02:48:32.570 --> 02:48:32.580 align:start position:0%
pass arguments to arrow functions so let
 

02:48:32.580 --> 02:48:34.310 align:start position:0%
pass arguments to arrow functions so let
me<02:48:32.670><c> show</c><02:48:32.820><c> you</c><02:48:32.910><c> how</c><02:48:33.030><c> to</c><02:48:33.120><c> convert</c><02:48:33.330><c> this</c><02:48:33.750><c> function</c>

02:48:34.310 --> 02:48:34.320 align:start position:0%
me show you how to convert this function
 

02:48:34.320 --> 02:48:37.011 align:start position:0%
me show you how to convert this function
into<02:48:34.771><c> an</c><02:48:34.920><c> arrow</c><02:48:35.220><c> function</c><02:48:35.880><c> so</c><02:48:36.480><c> it's</c><02:48:36.690><c> a</c><02:48:36.780><c> normal</c>

02:48:37.011 --> 02:48:37.021 align:start position:0%
into an arrow function so it's a normal
 

02:48:37.021 --> 02:48:39.140 align:start position:0%
into an arrow function so it's a normal
function<02:48:37.500><c> now</c><02:48:37.710><c> and</c><02:48:37.890><c> it</c><02:48:37.950><c> has</c><02:48:38.100><c> two</c><02:48:38.430><c> arguments</c>

02:48:39.140 --> 02:48:39.150 align:start position:0%
function now and it has two arguments
 

02:48:39.150 --> 02:48:41.690 align:start position:0%
function now and it has two arguments
and<02:48:39.300><c> then</c><02:48:40.021><c> it's</c><02:48:40.200><c> going</c><02:48:40.500><c> to</c><02:48:40.680><c> concatenate</c><02:48:41.250><c> the</c>

02:48:41.690 --> 02:48:41.700 align:start position:0%
and then it's going to concatenate the
 

02:48:41.700 --> 02:48:44.810 align:start position:0%
and then it's going to concatenate the
two<02:48:41.850><c> arrays</c><02:48:42.210><c> passed</c><02:48:42.720><c> in</c><02:48:43.080><c> so</c><02:48:43.710><c> first</c><02:48:44.100><c> we'll</c><02:48:44.521><c> take</c>

02:48:44.810 --> 02:48:44.820 align:start position:0%
two arrays passed in so first we'll take
 

02:48:44.820 --> 02:48:47.000 align:start position:0%
two arrays passed in so first we'll take
off<02:48:45.090><c> the</c><02:48:45.120><c> function</c><02:48:45.780><c> keyword</c><02:48:46.021><c> we're</c><02:48:46.890><c> gonna</c>

02:48:47.000 --> 02:48:47.010 align:start position:0%
off the function keyword we're gonna
 

02:48:47.010 --> 02:48:48.590 align:start position:0%
off the function keyword we're gonna
leave<02:48:47.250><c> these</c><02:48:47.400><c> parentheses</c><02:48:48.030><c> with</c><02:48:48.390><c> the</c>

02:48:48.590 --> 02:48:48.600 align:start position:0%
leave these parentheses with the
 

02:48:48.600 --> 02:48:50.960 align:start position:0%
leave these parentheses with the
parameters<02:48:49.260><c> now</c><02:48:49.830><c> I'll</c><02:48:50.010><c> put</c><02:48:50.250><c> the</c><02:48:50.280><c> arrow</c>

02:48:50.960 --> 02:48:50.970 align:start position:0%
parameters now I'll put the arrow
 

02:48:50.970 --> 02:48:53.000 align:start position:0%
parameters now I'll put the arrow
since<02:48:51.540><c> all</c><02:48:51.750><c> we're</c><02:48:51.900><c> doing</c><02:48:52.080><c> is</c><02:48:52.170><c> returning</c><02:48:52.830><c> this</c>

02:48:53.000 --> 02:48:53.010 align:start position:0%
since all we're doing is returning this
 

02:48:53.010 --> 02:48:54.830 align:start position:0%
since all we're doing is returning this
we<02:48:53.400><c> don't</c><02:48:53.490><c> even</c><02:48:53.730><c> need</c><02:48:53.940><c> the</c><02:48:54.150><c> return</c><02:48:54.510><c> keyword</c>

02:48:54.830 --> 02:48:54.840 align:start position:0%
we don't even need the return keyword
 

02:48:54.840 --> 02:48:57.410 align:start position:0%
we don't even need the return keyword
and<02:48:55.320><c> we</c><02:48:55.470><c> don't</c><02:48:55.710><c> need</c><02:48:55.830><c> the</c><02:48:55.980><c> curly</c><02:48:56.340><c> braces</c><02:48:56.610><c> so</c>

02:48:57.410 --> 02:48:57.420 align:start position:0%
and we don't need the curly braces so
 

02:48:57.420 --> 02:49:00.290 align:start position:0%
and we don't need the curly braces so
I'll<02:48:57.780><c> take</c><02:48:58.350><c> that</c><02:48:58.410><c> off</c><02:48:58.860><c> we'll</c><02:48:59.550><c> take</c><02:48:59.820><c> this</c><02:49:00.060><c> off</c>

02:49:00.290 --> 02:49:00.300 align:start position:0%
I'll take that off we'll take this off
 

02:49:00.300 --> 02:49:03.680 align:start position:0%
I'll take that off we'll take this off
and<02:49:00.690><c> now</c><02:49:01.560><c> we've</c><02:49:02.070><c> done</c><02:49:02.280><c> this</c><02:49:02.521><c> I</c><02:49:02.730><c> just</c><02:49:03.030><c> converted</c>

02:49:03.680 --> 02:49:03.690 align:start position:0%
and now we've done this I just converted
 

02:49:03.690 --> 02:49:06.320 align:start position:0%
and now we've done this I just converted
that<02:49:04.200><c> function</c><02:49:04.920><c> into</c><02:49:05.190><c> an</c><02:49:05.280><c> arrow</c><02:49:05.521><c> function</c><02:49:06.120><c> and</c>

02:49:06.320 --> 02:49:06.330 align:start position:0%
that function into an arrow function and
 

02:49:06.330 --> 02:49:10.011 align:start position:0%
that function into an arrow function and
it<02:49:06.450><c> has</c><02:49:06.480><c> these</c><02:49:07.080><c> two</c><02:49:07.190><c> parameters</c><02:49:08.570><c> so</c><02:49:09.570><c> we</c><02:49:09.840><c> just</c>

02:49:10.011 --> 02:49:10.021 align:start position:0%
it has these two parameters so we just
 

02:49:10.021 --> 02:49:11.870 align:start position:0%
it has these two parameters so we just
have<02:49:10.140><c> the</c><02:49:10.290><c> parameters</c><02:49:10.800><c> and</c><02:49:10.950><c> parentheses</c><02:49:11.460><c> we</c>

02:49:11.870 --> 02:49:11.880 align:start position:0%
have the parameters and parentheses we
 

02:49:11.880 --> 02:49:13.940 align:start position:0%
have the parameters and parentheses we
have<02:49:12.030><c> the</c><02:49:12.150><c> arrow</c><02:49:12.390><c> and</c><02:49:12.750><c> then</c><02:49:13.260><c> we</c><02:49:13.470><c> have</c><02:49:13.680><c> what's</c>

02:49:13.940 --> 02:49:13.950 align:start position:0%
have the arrow and then we have what's
 

02:49:13.950 --> 02:49:16.460 align:start position:0%
have the arrow and then we have what's
being<02:49:14.220><c> returned</c><02:49:14.730><c> right</c><02:49:15.210><c> after</c><02:49:15.480><c> the</c><02:49:15.570><c> arrow</c><02:49:15.780><c> so</c>

02:49:16.460 --> 02:49:16.470 align:start position:0%
being returned right after the arrow so
 

02:49:16.470 --> 02:49:18.440 align:start position:0%
being returned right after the arrow so
if<02:49:16.590><c> I</c><02:49:16.710><c> run</c><02:49:16.920><c> that</c><02:49:16.980><c> you'll</c><02:49:17.790><c> see</c><02:49:18.060><c> that</c><02:49:18.271><c> we</c>

02:49:18.440 --> 02:49:18.450 align:start position:0%
if I run that you'll see that we
 

02:49:18.450 --> 02:49:20.330 align:start position:0%
if I run that you'll see that we
concatenate<02:49:18.870><c> the</c><02:49:19.350><c> two</c><02:49:19.560><c> arrays</c><02:49:20.010><c> that</c><02:49:20.040><c> are</c>

02:49:20.330 --> 02:49:20.340 align:start position:0%
concatenate the two arrays that are
 

02:49:20.340 --> 02:49:23.150 align:start position:0%
concatenate the two arrays that are
passed<02:49:20.730><c> in</c><02:49:21.090><c> in</c><02:49:21.330><c> this</c><02:49:21.720><c> example</c><02:49:22.140><c> and</c><02:49:22.530><c> then</c><02:49:22.980><c> for</c>

02:49:23.150 --> 02:49:23.160 align:start position:0%
passed in in this example and then for
 

02:49:23.160 --> 02:49:24.761 align:start position:0%
passed in in this example and then for
good<02:49:23.190><c> measure</c><02:49:23.340><c> we'll</c><02:49:23.850><c> change</c><02:49:24.210><c> this</c><02:49:24.480><c> to</c>

02:49:24.761 --> 02:49:24.771 align:start position:0%
good measure we'll change this to
 

02:49:24.771 --> 02:49:29.569 align:start position:0%
good measure we'll change this to
constant

02:49:29.569 --> 02:49:29.579 align:start position:0%
 
 

02:49:29.579 --> 02:49:31.819 align:start position:0%
 
arrow<02:49:30.329><c> functions</c><02:49:30.899><c> work</c><02:49:31.079><c> really</c><02:49:31.379><c> well</c><02:49:31.649><c> with</c>

02:49:31.819 --> 02:49:31.829 align:start position:0%
arrow functions work really well with
 

02:49:31.829 --> 02:49:34.249 align:start position:0%
arrow functions work really well with
higher-order<02:49:32.299><c> functions</c><02:49:33.299><c> such</c><02:49:33.749><c> as</c><02:49:33.779><c> map</c>

02:49:34.249 --> 02:49:34.259 align:start position:0%
higher-order functions such as map
 

02:49:34.259 --> 02:49:37.699 align:start position:0%
higher-order functions such as map
filter<02:49:34.770><c> and</c><02:49:34.949><c> reduce</c><02:49:35.520><c> I'll</c><02:49:36.449><c> go</c><02:49:37.199><c> into</c><02:49:37.499><c> more</c>

02:49:37.699 --> 02:49:37.709 align:start position:0%
filter and reduce I'll go into more
 

02:49:37.709 --> 02:49:39.889 align:start position:0%
filter and reduce I'll go into more
detail<02:49:38.219><c> at</c><02:49:38.429><c> a</c><02:49:38.459><c> different</c><02:49:38.819><c> time</c><02:49:39.089><c> about</c><02:49:39.599><c> map</c>

02:49:39.889 --> 02:49:39.899 align:start position:0%
detail at a different time about map
 

02:49:39.899 --> 02:49:42.499 align:start position:0%
detail at a different time about map
filter<02:49:40.319><c> and</c><02:49:40.469><c> reduce</c><02:49:40.949><c> but</c><02:49:41.639><c> the</c><02:49:41.819><c> main</c><02:49:42.089><c> thing</c><02:49:42.389><c> to</c>

02:49:42.499 --> 02:49:42.509 align:start position:0%
filter and reduce but the main thing to
 

02:49:42.509 --> 02:49:44.629 align:start position:0%
filter and reduce but the main thing to
know<02:49:42.719><c> is</c><02:49:42.929><c> that</c><02:49:43.109><c> they</c><02:49:43.349><c> take</c><02:49:43.770><c> functions</c><02:49:44.459><c> as</c>

02:49:44.629 --> 02:49:44.639 align:start position:0%
know is that they take functions as
 

02:49:44.639 --> 02:49:47.510 align:start position:0%
know is that they take functions as
arguments<02:49:45.449><c> for</c><02:49:46.289><c> processing</c><02:49:46.919><c> collections</c><02:49:47.399><c> of</c>

02:49:47.510 --> 02:49:47.520 align:start position:0%
arguments for processing collections of
 

02:49:47.520 --> 02:49:50.479 align:start position:0%
arguments for processing collections of
data<02:49:47.699><c> whenever</c><02:49:48.569><c> one</c><02:49:49.049><c> function</c><02:49:49.560><c> takes</c><02:49:50.069><c> another</c>

02:49:50.479 --> 02:49:50.489 align:start position:0%
data whenever one function takes another
 

02:49:50.489 --> 02:49:52.879 align:start position:0%
data whenever one function takes another
function<02:49:51.060><c> as</c><02:49:51.179><c> an</c><02:49:51.299><c> argument</c><02:49:51.869><c> that's</c><02:49:52.469><c> a</c><02:49:52.679><c> good</c>

02:49:52.879 --> 02:49:52.889 align:start position:0%
function as an argument that's a good
 

02:49:52.889 --> 02:49:56.029 align:start position:0%
function as an argument that's a good
time<02:49:53.159><c> for</c><02:49:53.459><c> an</c><02:49:53.639><c> arrow</c><02:49:53.939><c> function</c><02:49:54.629><c> so</c><02:49:55.289><c> what</c><02:49:55.889><c> we're</c>

02:49:56.029 --> 02:49:56.039 align:start position:0%
time for an arrow function so what we're
 

02:49:56.039 --> 02:49:57.379 align:start position:0%
time for an arrow function so what we're
going<02:49:56.189><c> to</c><02:49:56.219><c> do</c><02:49:56.459><c> here</c><02:49:56.759><c> is</c><02:49:56.879><c> we're</c><02:49:57.089><c> going</c><02:49:57.270><c> to</c>

02:49:57.379 --> 02:49:57.389 align:start position:0%
going to do here is we're going to
 

02:49:57.389 --> 02:50:00.349 align:start position:0%
going to do here is we're going to
update<02:49:57.810><c> this</c><02:49:58.529><c> function</c><02:49:59.189><c> right</c><02:49:59.310><c> here</c><02:49:59.369><c> we</c><02:50:00.179><c> want</c>

02:50:00.349 --> 02:50:00.359 align:start position:0%
update this function right here we want
 

02:50:00.359 --> 02:50:02.359 align:start position:0%
update this function right here we want
to<02:50:00.509><c> compute</c><02:50:00.899><c> the</c><02:50:01.109><c> square</c><02:50:01.379><c> of</c><02:50:01.770><c> only</c><02:50:02.039><c> the</c>

02:50:02.359 --> 02:50:02.369 align:start position:0%
to compute the square of only the
 

02:50:02.369 --> 02:50:04.999 align:start position:0%
to compute the square of only the
positive<02:50:02.639><c> integers</c><02:50:03.389><c> in</c><02:50:03.839><c> the</c><02:50:04.049><c> array</c><02:50:04.349><c> so</c><02:50:04.859><c> it's</c>

02:50:04.999 --> 02:50:05.009 align:start position:0%
positive integers in the array so it's
 

02:50:05.009 --> 02:50:07.219 align:start position:0%
positive integers in the array so it's
passed<02:50:05.310><c> in</c><02:50:05.520><c> this</c><02:50:05.699><c> array</c><02:50:05.999><c> which</c><02:50:06.239><c> is</c><02:50:06.270><c> this</c><02:50:06.629><c> and</c>

02:50:07.219 --> 02:50:07.229 align:start position:0%
passed in this array which is this and
 

02:50:07.229 --> 02:50:08.779 align:start position:0%
passed in this array which is this and
we<02:50:07.319><c> want</c><02:50:07.469><c> to</c><02:50:07.589><c> filter</c><02:50:07.919><c> out</c><02:50:08.189><c> everything</c><02:50:08.369><c> that's</c>

02:50:08.779 --> 02:50:08.789 align:start position:0%
we want to filter out everything that's
 

02:50:08.789 --> 02:50:11.510 align:start position:0%
we want to filter out everything that's
not<02:50:08.999><c> a</c><02:50:09.299><c> positive</c><02:50:09.659><c> integer</c><02:50:10.319><c> so</c><02:50:11.039><c> I'm</c><02:50:11.189><c> going</c><02:50:11.489><c> to</c>

02:50:11.510 --> 02:50:11.520 align:start position:0%
not a positive integer so I'm going to
 

02:50:11.520 --> 02:50:14.119 align:start position:0%
not a positive integer so I'm going to
use<02:50:11.819><c> the</c><02:50:12.029><c> filter</c><02:50:12.509><c> and</c><02:50:12.749><c> map</c><02:50:13.169><c> functions</c><02:50:13.770><c> to</c><02:50:13.949><c> do</c>

02:50:14.119 --> 02:50:14.129 align:start position:0%
use the filter and map functions to do
 

02:50:14.129 --> 02:50:16.519 align:start position:0%
use the filter and map functions to do
that<02:50:14.399><c> but</c><02:50:15.119><c> the</c><02:50:15.270><c> main</c><02:50:15.539><c> thing</c><02:50:15.869><c> I</c><02:50:15.989><c> want</c><02:50:16.259><c> you</c><02:50:16.349><c> to</c>

02:50:16.519 --> 02:50:16.529 align:start position:0%
that but the main thing I want you to
 

02:50:16.529 --> 02:50:19.279 align:start position:0%
that but the main thing I want you to
look<02:50:16.770><c> at</c><02:50:17.039><c> is</c><02:50:17.310><c> the</c><02:50:17.879><c> arrow</c><02:50:18.299><c> functions</c><02:50:18.989><c> that</c><02:50:19.139><c> I'm</c>

02:50:19.279 --> 02:50:19.289 align:start position:0%
look at is the arrow functions that I'm
 

02:50:19.289 --> 02:50:22.699 align:start position:0%
look at is the arrow functions that I'm
passing<02:50:19.919><c> in</c><02:50:20.099><c> to</c><02:50:20.310><c> filter</c><02:50:20.699><c> a</c><02:50:20.729><c> map</c><02:50:21.139><c> this</c><02:50:22.139><c> line</c><02:50:22.499><c> is</c>

02:50:22.699 --> 02:50:22.709 align:start position:0%
passing in to filter a map this line is
 

02:50:22.709 --> 02:50:25.099 align:start position:0%
passing in to filter a map this line is
going<02:50:22.799><c> to</c><02:50:22.889><c> be</c><02:50:23.009><c> a</c><02:50:23.039><c> lot</c><02:50:23.369><c> more</c><02:50:23.449><c> succinct</c><02:50:24.449><c> because</c>

02:50:25.099 --> 02:50:25.109 align:start position:0%
going to be a lot more succinct because
 

02:50:25.109 --> 02:50:28.760 align:start position:0%
going to be a lot more succinct because
of<02:50:25.319><c> the</c><02:50:25.439><c> arrow</c><02:50:25.679><c> functions</c><02:50:26.399><c> so</c><02:50:27.060><c> we</c><02:50:27.719><c> have</c><02:50:28.020><c> the</c>

02:50:28.760 --> 02:50:28.770 align:start position:0%
of the arrow functions so we have the
 

02:50:28.770 --> 02:50:30.649 align:start position:0%
of the arrow functions so we have the
squared<02:50:29.219><c> integers</c><02:50:29.789><c> is</c><02:50:29.999><c> going</c><02:50:30.299><c> to</c><02:50:30.359><c> be</c><02:50:30.419><c> the</c><02:50:30.509><c> our</c>

02:50:30.649 --> 02:50:30.659 align:start position:0%
squared integers is going to be the our
 

02:50:30.659 --> 02:50:32.779 align:start position:0%
squared integers is going to be the our
our<02:50:31.109><c> and</c><02:50:31.499><c> we're</c><02:50:31.829><c> going</c><02:50:31.949><c> to</c><02:50:31.979><c> filter</c><02:50:32.399><c> this</c><02:50:32.549><c> so</c>

02:50:32.779 --> 02:50:32.789 align:start position:0%
our and we're going to filter this so
 

02:50:32.789 --> 02:50:35.899 align:start position:0%
our and we're going to filter this so
dot<02:50:33.060><c> filter</c><02:50:33.659><c> now</c><02:50:34.469><c> again</c><02:50:35.099><c> I'm</c><02:50:35.399><c> not</c><02:50:35.459><c> really</c>

02:50:35.899 --> 02:50:35.909 align:start position:0%
dot filter now again I'm not really
 

02:50:35.909 --> 02:50:38.209 align:start position:0%
dot filter now again I'm not really
gonna<02:50:36.419><c> explain</c><02:50:36.810><c> in</c><02:50:37.049><c> detail</c><02:50:37.649><c> what</c><02:50:37.829><c> the</c><02:50:37.949><c> filter</c>

02:50:38.209 --> 02:50:38.219 align:start position:0%
gonna explain in detail what the filter
 

02:50:38.219 --> 02:50:40.099 align:start position:0%
gonna explain in detail what the filter
function<02:50:38.549><c> does</c><02:50:38.969><c> but</c><02:50:39.419><c> that'll</c><02:50:39.719><c> be</c><02:50:39.749><c> something</c>

02:50:40.099 --> 02:50:40.109 align:start position:0%
function does but that'll be something
 

02:50:40.109 --> 02:50:42.260 align:start position:0%
function does but that'll be something
for<02:50:40.349><c> another</c><02:50:40.409><c> time</c><02:50:40.949><c> just</c><02:50:41.549><c> look</c><02:50:41.729><c> at</c><02:50:41.879><c> this</c><02:50:41.999><c> arrow</c>

02:50:42.260 --> 02:50:42.270 align:start position:0%
for another time just look at this arrow
 

02:50:42.270 --> 02:50:44.389 align:start position:0%
for another time just look at this arrow
function<02:50:42.899><c> we're</c><02:50:43.469><c> gonna</c><02:50:43.649><c> create</c><02:50:43.919><c> this</c><02:50:44.099><c> arrow</c>

02:50:44.389 --> 02:50:44.399 align:start position:0%
function we're gonna create this arrow
 

02:50:44.399 --> 02:50:46.399 align:start position:0%
function we're gonna create this arrow
function<02:50:44.729><c> am</c><02:50:44.789><c> i</c><02:50:44.879><c> starting</c><02:50:45.239><c> it</c><02:50:45.359><c> just</c><02:50:45.659><c> like</c><02:50:45.959><c> this</c>

02:50:46.399 --> 02:50:46.409 align:start position:0%
function am i starting it just like this
 

02:50:46.409 --> 02:50:49.489 align:start position:0%
function am i starting it just like this
now<02:50:47.339><c> before</c><02:50:48.270><c> I</c><02:50:48.299><c> showed</c><02:50:48.779><c> you</c><02:50:48.929><c> that</c><02:50:49.049><c> you</c><02:50:49.109><c> pass</c><02:50:49.469><c> in</c>

02:50:49.489 --> 02:50:49.499 align:start position:0%
now before I showed you that you pass in
 

02:50:49.499 --> 02:50:52.249 align:start position:0%
now before I showed you that you pass in
arguments<02:50:50.249><c> in</c><02:50:50.369><c> parentheses</c><02:50:50.959><c> for</c><02:50:51.959><c> an</c><02:50:52.020><c> arrow</c>

02:50:52.249 --> 02:50:52.259 align:start position:0%
arguments in parentheses for an arrow
 

02:50:52.259 --> 02:50:54.589 align:start position:0%
arguments in parentheses for an arrow
function<02:50:52.859><c> but</c><02:50:53.399><c> if</c><02:50:53.579><c> you</c><02:50:53.759><c> only</c><02:50:53.999><c> have</c><02:50:54.179><c> a</c><02:50:54.329><c> single</c>

02:50:54.589 --> 02:50:54.599 align:start position:0%
function but if you only have a single
 

02:50:54.599 --> 02:50:57.050 align:start position:0%
function but if you only have a single
argument<02:50:55.139><c> like</c><02:50:55.499><c> this</c><02:50:55.709><c> the</c><02:50:55.949><c> number</c><02:50:56.189><c> argument</c>

02:50:57.050 --> 02:50:57.060 align:start position:0%
argument like this the number argument
 

02:50:57.060 --> 02:50:59.029 align:start position:0%
argument like this the number argument
you<02:50:57.449><c> don't</c><02:50:57.479><c> need</c><02:50:57.869><c> parentheses</c><02:50:58.619><c> around</c><02:50:58.739><c> the</c>

02:50:59.029 --> 02:50:59.039 align:start position:0%
you don't need parentheses around the
 

02:50:59.039 --> 02:51:01.069 align:start position:0%
you don't need parentheses around the
argument<02:50:59.069><c> you</c><02:50:59.699><c> can</c><02:50:59.909><c> just</c><02:51:00.179><c> put</c><02:51:00.419><c> the</c><02:51:00.539><c> argument</c>

02:51:01.069 --> 02:51:01.079 align:start position:0%
argument you can just put the argument
 

02:51:01.079 --> 02:51:03.619 align:start position:0%
argument you can just put the argument
and<02:51:01.259><c> then</c><02:51:01.889><c> the</c><02:51:02.099><c> arrow</c><02:51:02.399><c> so</c><02:51:03.119><c> this</c><02:51:03.359><c> is</c><02:51:03.539><c> the</c>

02:51:03.619 --> 02:51:03.629 align:start position:0%
and then the arrow so this is the
 

02:51:03.629 --> 02:51:06.289 align:start position:0%
and then the arrow so this is the
beginning<02:51:04.020><c> of</c><02:51:04.199><c> the</c><02:51:04.349><c> arrow</c><02:51:04.589><c> function</c><02:51:05.279><c> and</c><02:51:05.520><c> then</c>

02:51:06.289 --> 02:51:06.299 align:start position:0%
beginning of the arrow function and then
 

02:51:06.299 --> 02:51:09.139 align:start position:0%
beginning of the arrow function and then
we'll<02:51:06.539><c> see</c><02:51:06.839><c> what's</c><02:51:07.429><c> returned</c><02:51:08.429><c> from</c><02:51:08.819><c> the</c><02:51:08.969><c> arrow</c>

02:51:09.139 --> 02:51:09.149 align:start position:0%
we'll see what's returned from the arrow
 

02:51:09.149 --> 02:51:11.659 align:start position:0%
we'll see what's returned from the arrow
function<02:51:09.749><c> first</c><02:51:10.259><c> we</c><02:51:10.499><c> want</c><02:51:10.739><c> to</c><02:51:10.799><c> filter</c><02:51:11.219><c> this</c>

02:51:11.659 --> 02:51:11.669 align:start position:0%
function first we want to filter this
 

02:51:11.669 --> 02:51:14.419 align:start position:0%
function first we want to filter this
array<02:51:12.119><c> so</c><02:51:12.689><c> we</c><02:51:12.839><c> only</c><02:51:13.169><c> have</c><02:51:13.649><c> numbers</c><02:51:14.159><c> that</c><02:51:14.279><c> are</c>

02:51:14.419 --> 02:51:14.429 align:start position:0%
array so we only have numbers that are
 

02:51:14.429 --> 02:51:16.789 align:start position:0%
array so we only have numbers that are
integers<02:51:14.999><c> and</c><02:51:15.209><c> numbers</c><02:51:15.989><c> that</c><02:51:16.020><c> are</c><02:51:16.199><c> more</c><02:51:16.589><c> than</c>

02:51:16.789 --> 02:51:16.799 align:start position:0%
integers and numbers that are more than
 

02:51:16.799 --> 02:51:23.089 align:start position:0%
integers and numbers that are more than
0<02:51:17.189><c> so</c><02:51:17.849><c> we'll</c><02:51:18.419><c> do</c><02:51:18.659><c> number</c><02:51:19.229><c> that</c><02:51:19.709><c> is</c><02:51:20.539><c> integer</c><02:51:22.099><c> and</c>

02:51:23.089 --> 02:51:23.099 align:start position:0%
0 so we'll do number that is integer and
 

02:51:23.099 --> 02:51:29.499 align:start position:0%
0 so we'll do number that is integer and
then<02:51:23.879><c> we</c><02:51:24.239><c> will</c><02:51:24.509><c> pass</c><02:51:25.079><c> in</c><02:51:25.379><c> the</c><02:51:25.529><c> number</c><02:51:25.949><c> and</c>

02:51:29.499 --> 02:51:29.509 align:start position:0%
 
 

02:51:29.509 --> 02:51:36.800 align:start position:0%
 
number<02:51:30.509><c> is</c><02:51:31.189><c> more</c><02:51:32.189><c> than</c><02:51:32.699><c> 0</c><02:51:34.489><c> so</c><02:51:35.489><c> let</c><02:51:35.789><c> me</c><02:51:35.879><c> complete</c>

02:51:36.800 --> 02:51:36.810 align:start position:0%
number is more than 0 so let me complete
 

02:51:36.810 --> 02:51:40.459 align:start position:0%
number is more than 0 so let me complete
the<02:51:37.139><c> parentheses</c><02:51:37.770><c> here</c><02:51:38.419><c> now</c><02:51:39.419><c> the</c><02:51:39.479><c> result</c><02:51:40.259><c> of</c>

02:51:40.459 --> 02:51:40.469 align:start position:0%
the parentheses here now the result of
 

02:51:40.469 --> 02:51:43.341 align:start position:0%
the parentheses here now the result of
this<02:51:40.529><c> filter</c><02:51:41.189><c> command</c><02:51:41.639><c> will</c><02:51:42.179><c> be</c><02:51:42.209><c> an</c><02:51:42.539><c> array</c>

02:51:43.341 --> 02:51:43.351 align:start position:0%
this filter command will be an array
 

02:51:43.351 --> 02:51:46.580 align:start position:0%
this filter command will be an array
with<02:51:43.561><c> all</c><02:51:43.801><c> the</c><02:51:44.160><c> numbers</c><02:51:44.641><c> that</c><02:51:44.940><c> are</c><02:51:45.601><c> more</c><02:51:46.320><c> than</c>

02:51:46.580 --> 02:51:46.590 align:start position:0%
with all the numbers that are more than
 

02:51:46.590 --> 02:51:51.580 align:start position:0%
with all the numbers that are more than
zero<02:51:47.011><c> and</c><02:51:47.570><c> also</c><02:51:48.570><c> integers</c><02:51:49.200><c> so</c><02:51:49.860><c> there'll</c><02:51:50.070><c> be</c>

02:51:51.580 --> 02:51:51.590 align:start position:0%
zero and also integers so there'll be
 

02:51:51.590 --> 02:51:56.780 align:start position:0%
zero and also integers so there'll be
442<02:51:52.590><c> and</c><02:51:53.601><c> six</c><02:51:54.620><c> but</c><02:51:55.620><c> after</c><02:51:56.011><c> we</c><02:51:56.130><c> get</c><02:51:56.311><c> that</c><02:51:56.521><c> new</c>

02:51:56.780 --> 02:51:56.790 align:start position:0%
442 and six but after we get that new
 

02:51:56.790 --> 02:51:59.930 align:start position:0%
442 and six but after we get that new
array<02:51:57.240><c> we</c><02:51:57.840><c> want</c><02:51:58.080><c> to</c><02:51:58.230><c> get</c><02:51:58.380><c> the</c><02:51:58.590><c> square</c><02:51:59.250><c> of</c><02:51:59.280><c> each</c>

02:51:59.930 --> 02:51:59.940 align:start position:0%
array we want to get the square of each
 

02:51:59.940 --> 02:52:02.360 align:start position:0%
array we want to get the square of each
number<02:51:59.971><c> in</c><02:52:00.601><c> that</c><02:52:00.630><c> array</c><02:52:01.141><c> so</c><02:52:01.801><c> that's</c><02:52:02.130><c> where</c>

02:52:02.360 --> 02:52:02.370 align:start position:0%
number in that array so that's where
 

02:52:02.370 --> 02:52:05.421 align:start position:0%
number in that array so that's where
we're<02:52:02.521><c> going</c><02:52:02.670><c> to</c><02:52:02.730><c> use</c><02:52:02.971><c> the</c><02:52:03.301><c> map</c><02:52:03.900><c> function</c><02:52:04.561><c> now</c>

02:52:05.421 --> 02:52:05.431 align:start position:0%
we're going to use the map function now
 

02:52:05.431 --> 02:52:08.301 align:start position:0%
we're going to use the map function now
the<02:52:05.490><c> map</c><02:52:06.000><c> function</c><02:52:06.630><c> takes</c><02:52:07.200><c> a</c><02:52:07.380><c> function</c><02:52:07.860><c> as</c><02:52:08.040><c> its</c>

02:52:08.301 --> 02:52:08.311 align:start position:0%
the map function takes a function as its
 

02:52:08.311 --> 02:52:11.690 align:start position:0%
the map function takes a function as its
argument<02:52:08.840><c> but</c><02:52:09.840><c> instead</c><02:52:10.440><c> of</c><02:52:10.650><c> writing</c><02:52:11.190><c> a</c><02:52:11.370><c> full</c>

02:52:11.690 --> 02:52:11.700 align:start position:0%
argument but instead of writing a full
 

02:52:11.700 --> 02:52:13.640 align:start position:0%
argument but instead of writing a full
function<02:52:12.271><c> out</c><02:52:12.420><c> we</c><02:52:12.840><c> can</c><02:52:13.051><c> use</c><02:52:13.230><c> an</c><02:52:13.380><c> arrow</c>

02:52:13.640 --> 02:52:13.650 align:start position:0%
function out we can use an arrow
 

02:52:13.650 --> 02:52:18.051 align:start position:0%
function out we can use an arrow
function<02:52:14.250><c> so</c><02:52:14.910><c> we're</c><02:52:15.511><c> going</c><02:52:15.840><c> to</c><02:52:15.990><c> pass</c><02:52:16.500><c> in</c><02:52:16.891><c> X</c><02:52:17.521><c> to</c>

02:52:18.051 --> 02:52:18.061 align:start position:0%
function so we're going to pass in X to
 

02:52:18.061 --> 02:52:19.970 align:start position:0%
function so we're going to pass in X to
the<02:52:18.181><c> function</c><02:52:18.721><c> and</c><02:52:18.870><c> there's</c><02:52:19.710><c> gonna</c><02:52:19.830><c> be</c><02:52:19.891><c> an</c>

02:52:19.970 --> 02:52:19.980 align:start position:0%
the function and there's gonna be an
 

02:52:19.980 --> 02:52:24.171 align:start position:0%
the function and there's gonna be an
arrow<02:52:20.190><c> function</c><02:52:20.761><c> now</c><02:52:21.511><c> X</c><02:52:21.931><c> just</c><02:52:22.681><c> means</c><02:52:23.181><c> every</c>

02:52:24.171 --> 02:52:24.181 align:start position:0%
arrow function now X just means every
 

02:52:24.181 --> 02:52:26.631 align:start position:0%
arrow function now X just means every
element<02:52:24.740><c> from</c><02:52:25.740><c> the</c><02:52:25.891><c> array</c><02:52:25.920><c> that's</c><02:52:26.340><c> being</c>

02:52:26.631 --> 02:52:26.641 align:start position:0%
element from the array that's being
 

02:52:26.641 --> 02:52:27.560 align:start position:0%
element from the array that's being
passed<02:52:26.940><c> to</c><02:52:27.150><c> it</c>

02:52:27.560 --> 02:52:27.570 align:start position:0%
passed to it
 

02:52:27.570 --> 02:52:29.600 align:start position:0%
passed to it
so<02:52:27.840><c> remember</c><02:52:28.141><c> the</c><02:52:28.261><c> map</c><02:52:28.561><c> is</c><02:52:28.860><c> getting</c><02:52:29.190><c> the</c><02:52:29.340><c> array</c>

02:52:29.600 --> 02:52:29.610 align:start position:0%
so remember the map is getting the array
 

02:52:29.610 --> 02:52:33.830 align:start position:0%
so remember the map is getting the array
for<02:52:30.391><c> 42</c><02:52:31.110><c> 6</c><02:52:31.590><c> X</c><02:52:32.400><c> means</c><02:52:32.700><c> for</c><02:52:32.940><c> every</c><02:52:33.120><c> element</c><02:52:33.690><c> in</c>

02:52:33.830 --> 02:52:33.840 align:start position:0%
for 42 6 X means for every element in
 

02:52:33.840 --> 02:52:35.600 align:start position:0%
for 42 6 X means for every element in
the<02:52:33.900><c> array</c><02:52:34.080><c> this</c><02:52:34.590><c> is</c><02:52:34.740><c> what</c><02:52:34.891><c> we're</c><02:52:35.011><c> gonna</c><02:52:35.101><c> do</c><02:52:35.400><c> to</c>

02:52:35.600 --> 02:52:35.610 align:start position:0%
the array this is what we're gonna do to
 

02:52:35.610 --> 02:52:41.120 align:start position:0%
the array this is what we're gonna do to
it<02:52:35.960><c> x</c><02:52:37.670><c> times</c><02:52:39.021><c> X</c><02:52:40.021><c> because</c><02:52:40.681><c> it's</c><02:52:40.830><c> gonna</c><02:52:40.950><c> be</c>

02:52:41.120 --> 02:52:41.130 align:start position:0%
it x times X because it's gonna be
 

02:52:41.130 --> 02:52:44.120 align:start position:0%
it x times X because it's gonna be
squared<02:52:41.700><c> again</c><02:52:42.330><c> the</c><02:52:42.780><c> main</c><02:52:43.021><c> point</c><02:52:43.620><c> of</c><02:52:43.830><c> this</c>

02:52:44.120 --> 02:52:44.130 align:start position:0%
squared again the main point of this
 

02:52:44.130 --> 02:52:46.640 align:start position:0%
squared again the main point of this
lesson<02:52:44.670><c> is</c><02:52:44.790><c> not</c><02:52:44.820><c> to</c><02:52:45.360><c> understand</c><02:52:46.051><c> the</c><02:52:46.230><c> filter</c>

02:52:46.640 --> 02:52:46.650 align:start position:0%
lesson is not to understand the filter
 

02:52:46.650 --> 02:52:48.830 align:start position:0%
lesson is not to understand the filter
and<02:52:46.771><c> math</c><02:52:46.950><c> functions</c><02:52:47.521><c> but</c><02:52:47.940><c> to</c><02:52:48.150><c> see</c><02:52:48.420><c> that</c><02:52:48.721><c> we</c>

02:52:48.830 --> 02:52:48.840 align:start position:0%
and math functions but to see that we
 

02:52:48.840 --> 02:52:51.140 align:start position:0%
and math functions but to see that we
can<02:52:49.080><c> put</c><02:52:49.320><c> an</c><02:52:49.410><c> arrow</c><02:52:49.740><c> function</c><02:52:50.280><c> we</c><02:52:50.400><c> can</c><02:52:50.580><c> pass</c><02:52:50.910><c> in</c>

02:52:51.140 --> 02:52:51.150 align:start position:0%
can put an arrow function we can pass in
 

02:52:51.150 --> 02:52:53.301 align:start position:0%
can put an arrow function we can pass in
an<02:52:51.240><c> arrow</c><02:52:51.450><c> function</c><02:52:51.990><c> and</c><02:52:52.200><c> it</c><02:52:52.681><c> makes</c><02:52:52.920><c> it</c><02:52:53.040><c> so</c><02:52:53.190><c> we</c>

02:52:53.301 --> 02:52:53.311 align:start position:0%
an arrow function and it makes it so we
 

02:52:53.311 --> 02:52:55.580 align:start position:0%
an arrow function and it makes it so we
can<02:52:53.460><c> fit</c><02:52:53.880><c> everything</c><02:52:54.420><c> really</c><02:52:54.750><c> succinctly</c><02:52:55.380><c> on</c>

02:52:55.580 --> 02:52:55.590 align:start position:0%
can fit everything really succinctly on
 

02:52:55.590 --> 02:52:56.751 align:start position:0%
can fit everything really succinctly on
one<02:52:55.950><c> line</c>

02:52:56.751 --> 02:52:56.761 align:start position:0%
one line
 

02:52:56.761 --> 02:52:59.570 align:start position:0%
one line
so<02:52:57.391><c> let's</c><02:52:57.990><c> reload</c><02:52:58.590><c> this</c><02:52:58.771><c> and</c><02:52:58.980><c> see</c><02:52:59.101><c> if</c><02:52:59.190><c> it</c><02:52:59.311><c> works</c>

02:52:59.570 --> 02:52:59.580 align:start position:0%
so let's reload this and see if it works
 

02:52:59.580 --> 02:53:07.690 align:start position:0%
so let's reload this and see if it works
now<02:52:59.880><c> we</c><02:53:00.271><c> have</c><02:53:00.360><c> 16</c><02:53:01.521><c> 1764</c><02:53:02.521><c> and</c><02:53:02.730><c> 36</c>

02:53:07.690 --> 02:53:07.700 align:start position:0%
 
 

02:53:07.700 --> 02:53:09.520 align:start position:0%
 
in<02:53:08.120><c> order</c><02:53:08.479><c> to</c><02:53:08.540><c> create</c><02:53:08.870><c> more</c><02:53:09.050><c> flexible</c>

02:53:09.520 --> 02:53:09.530 align:start position:0%
in order to create more flexible
 

02:53:09.530 --> 02:53:12.070 align:start position:0%
in order to create more flexible
functions<02:53:10.070><c> you</c><02:53:10.280><c> can</c><02:53:10.460><c> use</c><02:53:10.520><c> default</c><02:53:11.270><c> parameters</c>

02:53:12.070 --> 02:53:12.080 align:start position:0%
functions you can use default parameters
 

02:53:12.080 --> 02:53:14.710 align:start position:0%
functions you can use default parameters
the<02:53:12.860><c> default</c><02:53:13.280><c> parameter</c><02:53:13.850><c> kicks</c><02:53:14.180><c> in</c><02:53:14.390><c> when</c><02:53:14.600><c> the</c>

02:53:14.710 --> 02:53:14.720 align:start position:0%
the default parameter kicks in when the
 

02:53:14.720 --> 02:53:16.929 align:start position:0%
the default parameter kicks in when the
argument<02:53:15.290><c> is</c><02:53:15.380><c> not</c><02:53:15.410><c> specified</c><02:53:16.189><c> or</c><02:53:16.820><c> is</c>

02:53:16.929 --> 02:53:16.939 align:start position:0%
argument is not specified or is
 

02:53:16.939 --> 02:53:19.480 align:start position:0%
argument is not specified or is
undefined<02:53:17.630><c> so</c><02:53:18.050><c> for</c><02:53:18.830><c> instance</c><02:53:19.160><c> with</c><02:53:19.310><c> this</c>

02:53:19.480 --> 02:53:19.490 align:start position:0%
undefined so for instance with this
 

02:53:19.490 --> 02:53:22.630 align:start position:0%
undefined so for instance with this
increment<02:53:19.910><c> function</c><02:53:20.300><c> we</c><02:53:21.080><c> want</c><02:53:21.290><c> to</c><02:53:21.410><c> change</c><02:53:22.400><c> it</c>

02:53:22.630 --> 02:53:22.640 align:start position:0%
increment function we want to change it
 

02:53:22.640 --> 02:53:23.920 align:start position:0%
increment function we want to change it
we<02:53:22.729><c> want</c><02:53:22.880><c> to</c><02:53:22.910><c> change</c><02:53:23.180><c> the</c><02:53:23.330><c> increment</c><02:53:23.780><c> function</c>

02:53:23.920 --> 02:53:23.930 align:start position:0%
we want to change the increment function
 

02:53:23.930 --> 02:53:27.310 align:start position:0%
we want to change the increment function
so<02:53:24.710><c> you</c><02:53:25.070><c> can</c><02:53:25.310><c> pass</c><02:53:25.820><c> in</c><02:53:26.060><c> two</c><02:53:26.330><c> arguments</c><02:53:26.960><c> the</c>

02:53:27.310 --> 02:53:27.320 align:start position:0%
so you can pass in two arguments the
 

02:53:27.320 --> 02:53:30.520 align:start position:0%
so you can pass in two arguments the
five<02:53:27.650><c> and</c><02:53:27.920><c> two</c><02:53:28.189><c> to</c><02:53:28.550><c> increment</c><02:53:28.850><c> by</c><02:53:29.090><c> 2</c><02:53:29.210><c> or</c><02:53:29.930><c> you</c>

02:53:30.520 --> 02:53:30.530 align:start position:0%
five and two to increment by 2 or you
 

02:53:30.530 --> 02:53:33.100 align:start position:0%
five and two to increment by 2 or you
can<02:53:30.710><c> just</c><02:53:30.890><c> pass</c><02:53:31.189><c> in</c><02:53:31.520><c> the</c><02:53:31.729><c> 1</c><02:53:31.970><c> argument</c><02:53:32.180><c> the</c><02:53:32.540><c> 5</c><02:53:32.810><c> if</c>

02:53:33.100 --> 02:53:33.110 align:start position:0%
can just pass in the 1 argument the 5 if
 

02:53:33.110 --> 02:53:36.219 align:start position:0%
can just pass in the 1 argument the 5 if
you<02:53:33.170><c> want</c><02:53:33.860><c> to</c><02:53:33.920><c> increment</c><02:53:34.220><c> by</c><02:53:34.520><c> 1</c><02:53:34.970><c> so</c><02:53:35.720><c> here</c><02:53:36.020><c> the</c>

02:53:36.219 --> 02:53:36.229 align:start position:0%
you want to increment by 1 so here the
 

02:53:36.229 --> 02:53:38.620 align:start position:0%
you want to increment by 1 so here the
numbers<02:53:36.590><c> were</c><02:53:36.740><c> passing</c><02:53:37.160><c> in</c><02:53:37.310><c> a</c><02:53:37.490><c> number</c><02:53:38.150><c> and</c><02:53:38.390><c> a</c>

02:53:38.620 --> 02:53:38.630 align:start position:0%
numbers were passing in a number and a
 

02:53:38.630 --> 02:53:41.170 align:start position:0%
numbers were passing in a number and a
value<02:53:39.110><c> so</c><02:53:39.590><c> we</c><02:53:39.800><c> just</c><02:53:39.979><c> have</c><02:53:40.189><c> to</c><02:53:40.310><c> put</c><02:53:40.550><c> value</c>

02:53:41.170 --> 02:53:41.180 align:start position:0%
value so we just have to put value
 

02:53:41.180 --> 02:53:45.580 align:start position:0%
value so we just have to put value
equals<02:53:41.930><c> 1</c><02:53:42.530><c> so</c><02:53:43.280><c> now</c><02:53:43.610><c> if</c><02:53:43.939><c> a</c><02:53:44.300><c> value</c><02:53:44.720><c> isn't</c><02:53:44.990><c> passed</c>

02:53:45.580 --> 02:53:45.590 align:start position:0%
equals 1 so now if a value isn't passed
 

02:53:45.590 --> 02:53:48.820 align:start position:0%
equals 1 so now if a value isn't passed
in<02:53:46.010><c> it</c><02:53:46.310><c> will</c><02:53:46.760><c> be</c><02:53:46.939><c> set</c><02:53:47.180><c> to</c><02:53:47.210><c> 1</c><02:53:47.360><c> automatically</c><02:53:48.229><c> but</c>

02:53:48.820 --> 02:53:48.830 align:start position:0%
in it will be set to 1 automatically but
 

02:53:48.830 --> 02:53:50.830 align:start position:0%
in it will be set to 1 automatically but
if<02:53:48.890><c> it</c><02:53:49.070><c> is</c><02:53:49.220><c> passed</c><02:53:49.670><c> in</c><02:53:49.970><c> it</c><02:53:50.330><c> will</c><02:53:50.450><c> be</c><02:53:50.570><c> set</c><02:53:50.810><c> to</c>

02:53:50.830 --> 02:53:50.840 align:start position:0%
if it is passed in it will be set to
 

02:53:50.840 --> 02:53:54.100 align:start position:0%
if it is passed in it will be set to
whatever<02:53:51.229><c> is</c><02:53:51.350><c> passed</c><02:53:51.620><c> in</c><02:53:51.890><c> so</c><02:53:52.580><c> if</c><02:53:52.880><c> we</c><02:53:53.210><c> run</c><02:53:53.870><c> this</c>

02:53:54.100 --> 02:53:54.110 align:start position:0%
whatever is passed in so if we run this
 

02:53:54.110 --> 02:53:56.980 align:start position:0%
whatever is passed in so if we run this
we<02:53:54.170><c> can</c><02:53:54.500><c> look</c><02:53:54.680><c> on</c><02:53:54.830><c> the</c><02:53:54.920><c> console</c><02:53:55.490><c> we</c><02:53:56.090><c> have</c><02:53:56.240><c> 7</c><02:53:56.720><c> for</c>

02:53:56.980 --> 02:53:56.990 align:start position:0%
we can look on the console we have 7 for
 

02:53:56.990 --> 02:54:02.900 align:start position:0%
we can look on the console we have 7 for
this<02:53:57.080><c> first</c><02:53:57.380><c> one</c><02:53:57.620><c> and</c><02:53:57.860><c> 6</c><02:53:58.460><c> for</c><02:53:58.850><c> the</c><02:53:58.910><c> second</c>

02:54:02.900 --> 02:54:02.910 align:start position:0%
 
 

02:54:02.910 --> 02:54:05.690 align:start position:0%
 
the<02:54:03.631><c> rest</c><02:54:03.900><c> operator</c><02:54:04.561><c> allows</c><02:54:05.011><c> you</c><02:54:05.221><c> to</c><02:54:05.341><c> create</c><02:54:05.671><c> a</c>

02:54:05.690 --> 02:54:05.700 align:start position:0%
the rest operator allows you to create a
 

02:54:05.700 --> 02:54:08.121 align:start position:0%
the rest operator allows you to create a
function<02:54:06.301><c> that</c><02:54:06.331><c> takes</c><02:54:06.511><c> a</c><02:54:06.931><c> variable</c><02:54:07.440><c> number</c><02:54:08.011><c> of</c>

02:54:08.121 --> 02:54:08.131 align:start position:0%
function that takes a variable number of
 

02:54:08.131 --> 02:54:10.881 align:start position:0%
function that takes a variable number of
arguments<02:54:08.641><c> the</c><02:54:09.631><c> rest</c><02:54:09.841><c> operator</c><02:54:10.320><c> is</c><02:54:10.501><c> three</c>

02:54:10.881 --> 02:54:10.891 align:start position:0%
arguments the rest operator is three
 

02:54:10.891 --> 02:54:13.730 align:start position:0%
arguments the rest operator is three
dots<02:54:11.221><c> so</c><02:54:12.150><c> we</c><02:54:12.391><c> have</c><02:54:12.511><c> this</c><02:54:12.660><c> function</c><02:54:12.961><c> here</c><02:54:13.591><c> and</c>

02:54:13.730 --> 02:54:13.740 align:start position:0%
dots so we have this function here and
 

02:54:13.740 --> 02:54:18.171 align:start position:0%
dots so we have this function here and
it's<02:54:14.730><c> taking</c><02:54:15.511><c> three</c><02:54:15.841><c> arguments</c><02:54:16.530><c> XY</c><02:54:17.461><c> and</c><02:54:17.700><c> Z</c><02:54:17.940><c> and</c>

02:54:18.171 --> 02:54:18.181 align:start position:0%
it's taking three arguments XY and Z and
 

02:54:18.181 --> 02:54:20.841 align:start position:0%
it's taking three arguments XY and Z and
it's<02:54:18.301><c> summing</c><02:54:18.870><c> them</c><02:54:19.081><c> so</c><02:54:19.561><c> at</c><02:54:19.860><c> first</c><02:54:20.131><c> it's</c>

02:54:20.841 --> 02:54:20.851 align:start position:0%
it's summing them so at first it's
 

02:54:20.851 --> 02:54:24.081 align:start position:0%
it's summing them so at first it's
converting<02:54:21.631><c> these</c><02:54:22.021><c> XYZ</c><02:54:22.921><c> into</c><02:54:23.461><c> an</c><02:54:23.761><c> array</c>

02:54:24.081 --> 02:54:24.091 align:start position:0%
converting these XYZ into an array
 

02:54:24.091 --> 02:54:27.680 align:start position:0%
converting these XYZ into an array
called<02:54:24.391><c> args</c><02:54:24.900><c> and</c><02:54:25.110><c> then</c><02:54:25.950><c> it's</c><02:54:26.480><c> reducing</c><02:54:27.480><c> them</c>

02:54:27.680 --> 02:54:27.690 align:start position:0%
called args and then it's reducing them
 

02:54:27.690 --> 02:54:30.171 align:start position:0%
called args and then it's reducing them
so<02:54:28.200><c> it's</c><02:54:28.440><c> summing</c><02:54:28.921><c> them</c><02:54:29.070><c> all</c><02:54:29.280><c> up</c><02:54:29.521><c> here</c><02:54:30.001><c> and</c>

02:54:30.171 --> 02:54:30.181 align:start position:0%
so it's summing them all up here and
 

02:54:30.181 --> 02:54:33.110 align:start position:0%
so it's summing them all up here and
then<02:54:30.690><c> returning</c><02:54:31.141><c> the</c><02:54:31.351><c> result</c><02:54:31.771><c> so</c><02:54:32.610><c> right</c><02:54:32.940><c> now</c>

02:54:33.110 --> 02:54:33.120 align:start position:0%
then returning the result so right now
 

02:54:33.120 --> 02:54:35.270 align:start position:0%
then returning the result so right now
if<02:54:33.271><c> we</c><02:54:33.360><c> just</c><02:54:33.541><c> run</c><02:54:33.780><c> this</c><02:54:33.990><c> it's</c><02:54:34.530><c> going</c><02:54:34.891><c> to</c><02:54:35.041><c> log</c>

02:54:35.270 --> 02:54:35.280 align:start position:0%
if we just run this it's going to log
 

02:54:35.280 --> 02:54:37.520 align:start position:0%
if we just run this it's going to log
six<02:54:35.881><c> because</c><02:54:36.421><c> one</c><02:54:36.690><c> plus</c><02:54:36.900><c> two</c><02:54:37.051><c> plus</c><02:54:37.171><c> three</c><02:54:37.261><c> is</c>

02:54:37.520 --> 02:54:37.530 align:start position:0%
six because one plus two plus three is
 

02:54:37.530 --> 02:54:41.060 align:start position:0%
six because one plus two plus three is
six<02:54:38.190><c> but</c><02:54:39.061><c> we</c><02:54:39.091><c> can</c><02:54:39.331><c> change</c><02:54:39.631><c> this</c><02:54:39.900><c> to</c><02:54:40.141><c> use</c><02:54:40.561><c> the</c>

02:54:41.060 --> 02:54:41.070 align:start position:0%
six but we can change this to use the
 

02:54:41.070 --> 02:54:43.940 align:start position:0%
six but we can change this to use the
rest<02:54:41.341><c> operator</c><02:54:41.971><c> so</c><02:54:42.841><c> we're</c><02:54:43.410><c> still</c><02:54:43.740><c> going</c><02:54:43.860><c> to</c>

02:54:43.940 --> 02:54:43.950 align:start position:0%
rest operator so we're still going to
 

02:54:43.950 --> 02:54:46.841 align:start position:0%
rest operator so we're still going to
pass<02:54:44.221><c> in</c><02:54:44.461><c> one</c><02:54:44.700><c> two</c><02:54:44.881><c> three</c><02:54:45.211><c> but</c><02:54:45.961><c> where</c><02:54:46.351><c> it's</c>

02:54:46.841 --> 02:54:46.851 align:start position:0%
pass in one two three but where it's
 

02:54:46.851 --> 02:54:49.131 align:start position:0%
pass in one two three but where it's
accepted<02:54:47.851><c> here</c><02:54:48.240><c> where</c><02:54:48.721><c> we</c><02:54:48.870><c> have</c><02:54:49.021><c> the</c>

02:54:49.131 --> 02:54:49.141 align:start position:0%
accepted here where we have the
 

02:54:49.141 --> 02:54:51.951 align:start position:0%
accepted here where we have the
arguments<02:54:49.620><c> here</c><02:54:49.801><c> XYZ</c><02:54:50.671><c> I'm</c><02:54:50.910><c> just</c><02:54:51.480><c> gonna</c><02:54:51.601><c> put</c>

02:54:51.951 --> 02:54:51.961 align:start position:0%
arguments here XYZ I'm just gonna put
 

02:54:51.961 --> 02:54:54.980 align:start position:0%
arguments here XYZ I'm just gonna put
dot<02:54:52.440><c> dot</c><02:54:52.801><c> dot</c><02:54:53.190><c> that's</c><02:54:54.030><c> the</c><02:54:54.181><c> rest</c><02:54:54.450><c> operator</c>

02:54:54.980 --> 02:54:54.990 align:start position:0%
dot dot dot that's the rest operator
 

02:54:54.990 --> 02:54:57.140 align:start position:0%
dot dot dot that's the rest operator
just<02:54:55.410><c> dot</c><02:54:55.620><c> dot</c><02:54:55.860><c> dot</c><02:54:56.131><c> and</c><02:54:56.431><c> I'm</c><02:54:56.791><c> going</c><02:54:56.910><c> to</c><02:54:56.940><c> put</c>

02:54:57.140 --> 02:54:57.150 align:start position:0%
just dot dot dot and I'm going to put
 

02:54:57.150 --> 02:54:57.890 align:start position:0%
just dot dot dot and I'm going to put
args

02:54:57.890 --> 02:54:57.900 align:start position:0%
args
 

02:54:57.900 --> 02:55:01.100 align:start position:0%
args
so<02:54:58.891><c> with</c><02:54:59.070><c> this</c><02:54:59.251><c> rest</c><02:54:59.551><c> operator</c><02:55:00.211><c> dot</c><02:55:00.541><c> dot</c><02:55:00.811><c> dot</c>

02:55:01.100 --> 02:55:01.110 align:start position:0%
so with this rest operator dot dot dot
 

02:55:01.110 --> 02:55:03.951 align:start position:0%
so with this rest operator dot dot dot
it<02:55:01.921><c> will</c><02:55:02.341><c> convert</c><02:55:02.910><c> everything</c><02:55:03.480><c> that's</c><02:55:03.660><c> passed</c>

02:55:03.951 --> 02:55:03.961 align:start position:0%
it will convert everything that's passed
 

02:55:03.961 --> 02:55:06.201 align:start position:0%
it will convert everything that's passed
in<02:55:04.261><c> into</c><02:55:04.620><c> one</c><02:55:04.860><c> array</c><02:55:05.221><c> and</c><02:55:05.551><c> the</c><02:55:05.881><c> array</c><02:55:05.910><c> is</c>

02:55:06.201 --> 02:55:06.211 align:start position:0%
in into one array and the array is
 

02:55:06.211 --> 02:55:09.201 align:start position:0%
in into one array and the array is
called<02:55:06.421><c> args</c><02:55:07.051><c> so</c><02:55:07.771><c> now</c><02:55:08.011><c> we</c><02:55:08.581><c> don't</c><02:55:08.761><c> need</c><02:55:08.940><c> this</c>

02:55:09.201 --> 02:55:09.211 align:start position:0%
called args so now we don't need this
 

02:55:09.211 --> 02:55:12.741 align:start position:0%
called args so now we don't need this
anymore<02:55:09.541><c> and</c><02:55:09.900><c> it</c><02:55:10.620><c> should</c><02:55:10.980><c> work</c><02:55:11.641><c> the</c><02:55:11.700><c> same</c><02:55:12.240><c> if</c>

02:55:12.741 --> 02:55:12.751 align:start position:0%
anymore and it should work the same if
 

02:55:12.751 --> 02:55:15.470 align:start position:0%
anymore and it should work the same if
we<02:55:12.870><c> run</c><02:55:13.141><c> this</c><02:55:13.320><c> we'll</c><02:55:13.801><c> get</c><02:55:13.950><c> six</c><02:55:14.341><c> but</c><02:55:15.150><c> we</c><02:55:15.301><c> can</c>

02:55:15.470 --> 02:55:15.480 align:start position:0%
we run this we'll get six but we can
 

02:55:15.480 --> 02:55:18.831 align:start position:0%
we run this we'll get six but we can
also<02:55:15.751><c> now</c><02:55:16.200><c> add</c><02:55:16.681><c> any</c><02:55:17.160><c> number</c><02:55:17.461><c> of</c><02:55:17.641><c> numbers</c><02:55:18.150><c> so</c>

02:55:18.831 --> 02:55:18.841 align:start position:0%
also now add any number of numbers so
 

02:55:18.841 --> 02:55:21.890 align:start position:0%
also now add any number of numbers so
I'll<02:55:19.110><c> put</c><02:55:19.471><c> a</c><02:55:19.501><c> four</c><02:55:19.860><c> on</c><02:55:19.891><c> the</c><02:55:20.190><c> end</c><02:55:20.341><c> and</c><02:55:20.610><c> ten</c><02:55:21.570><c> it's</c>

02:55:21.890 --> 02:55:21.900 align:start position:0%
I'll put a four on the end and ten it's
 

02:55:21.900 --> 02:55:24.140 align:start position:0%
I'll put a four on the end and ten it's
going<02:55:22.261><c> to</c><02:55:22.351><c> add</c><02:55:22.471><c> those</c><02:55:22.711><c> numbers</c><02:55:22.771><c> together</c><02:55:23.280><c> so</c>

02:55:24.140 --> 02:55:24.150 align:start position:0%
going to add those numbers together so
 

02:55:24.150 --> 02:55:26.060 align:start position:0%
going to add those numbers together so
before<02:55:24.570><c> we</c><02:55:24.690><c> can</c><02:55:24.841><c> only</c><02:55:24.990><c> pass</c><02:55:25.410><c> in</c><02:55:25.711><c> three</c>

02:55:26.060 --> 02:55:26.070 align:start position:0%
before we can only pass in three
 

02:55:26.070 --> 02:55:28.970 align:start position:0%
before we can only pass in three
arguments<02:55:26.641><c> and</c><02:55:26.791><c> now</c><02:55:27.421><c> we</c><02:55:28.051><c> can</c><02:55:28.291><c> have</c><02:55:28.561><c> any</c><02:55:28.771><c> number</c>

02:55:28.970 --> 02:55:28.980 align:start position:0%
arguments and now we can have any number
 

02:55:28.980 --> 02:55:34.030 align:start position:0%
arguments and now we can have any number
of<02:55:29.461><c> arguments</c>

02:55:34.030 --> 02:55:34.040 align:start position:0%
 
 

02:55:34.040 --> 02:55:37.030 align:start position:0%
 
the<02:55:34.790><c> spread</c><02:55:35.211><c> operator</c><02:55:35.780><c> looks</c><02:55:36.141><c> just</c><02:55:36.500><c> like</c><02:55:36.771><c> the</c>

02:55:37.030 --> 02:55:37.040 align:start position:0%
the spread operator looks just like the
 

02:55:37.040 --> 02:55:41.621 align:start position:0%
the spread operator looks just like the
rest<02:55:37.341><c> operator</c><02:55:38.030><c> three</c><02:55:38.721><c> dots</c><02:55:39.070><c> but</c><02:55:40.070><c> it</c><02:55:40.631><c> expands</c>

02:55:41.621 --> 02:55:41.631 align:start position:0%
rest operator three dots but it expands
 

02:55:41.631 --> 02:55:44.621 align:start position:0%
rest operator three dots but it expands
in<02:55:41.841><c> already</c><02:55:42.320><c> existing</c><02:55:42.561><c> array</c><02:55:43.400><c> or</c><02:55:43.761><c> it</c><02:55:43.940><c> spreads</c>

02:55:44.621 --> 02:55:44.631 align:start position:0%
in already existing array or it spreads
 

02:55:44.631 --> 02:55:48.280 align:start position:0%
in already existing array or it spreads
out<02:55:44.990><c> an</c><02:55:45.471><c> array</c><02:55:45.860><c> so</c><02:55:46.761><c> it</c><02:55:46.940><c> takes</c><02:55:47.301><c> an</c><02:55:47.601><c> array</c><02:55:47.750><c> and</c>

02:55:48.280 --> 02:55:48.290 align:start position:0%
out an array so it takes an array and
 

02:55:48.290 --> 02:55:51.820 align:start position:0%
out an array so it takes an array and
spreads<02:55:49.190><c> out</c><02:55:49.431><c> into</c><02:55:49.730><c> its</c><02:55:50.030><c> individual</c><02:55:50.750><c> parts</c><02:55:51.110><c> so</c>

02:55:51.820 --> 02:55:51.830 align:start position:0%
spreads out into its individual parts so
 

02:55:51.830 --> 02:55:53.860 align:start position:0%
spreads out into its individual parts so
here<02:55:52.160><c> we</c><02:55:52.280><c> have</c><02:55:52.370><c> an</c><02:55:52.461><c> array</c><02:55:52.580><c> with</c><02:55:53.091><c> some</c><02:55:53.391><c> months</c>

02:55:53.860 --> 02:55:53.870 align:start position:0%
here we have an array with some months
 

02:55:53.870 --> 02:55:57.581 align:start position:0%
here we have an array with some months
and<02:55:54.141><c> the</c><02:55:54.771><c> spread</c><02:55:55.190><c> operator</c><02:55:55.790><c> can</c><02:55:56.480><c> spread</c><02:55:57.200><c> this</c>

02:55:57.581 --> 02:55:57.591 align:start position:0%
and the spread operator can spread this
 

02:55:57.591 --> 02:56:00.671 align:start position:0%
and the spread operator can spread this
array<02:55:58.221><c> that's</c><02:55:58.521><c> our</c><02:55:58.730><c> one</c><02:55:59.061><c> into</c><02:55:59.900><c> the</c><02:56:00.021><c> individual</c>

02:56:00.671 --> 02:56:00.681 align:start position:0%
array that's our one into the individual
 

02:56:00.681 --> 02:56:04.121 align:start position:0%
array that's our one into the individual
months<02:56:01.131><c> instead</c><02:56:02.000><c> of</c><02:56:02.181><c> the</c><02:56:02.631><c> actual</c><02:56:03.171><c> array</c><02:56:03.620><c> here</c>

02:56:04.121 --> 02:56:04.131 align:start position:0%
months instead of the actual array here
 

02:56:04.131 --> 02:56:07.301 align:start position:0%
months instead of the actual array here
you<02:56:04.881><c> can</c><02:56:05.091><c> only</c><02:56:05.240><c> use</c><02:56:05.601><c> it</c><02:56:05.811><c> in</c><02:56:05.990><c> an</c><02:56:06.530><c> argument</c><02:56:07.070><c> to</c><02:56:07.280><c> a</c>

02:56:07.301 --> 02:56:07.311 align:start position:0%
you can only use it in an argument to a
 

02:56:07.311 --> 02:56:10.060 align:start position:0%
you can only use it in an argument to a
function<02:56:07.400><c> or</c><02:56:08.181><c> in</c><02:56:08.480><c> an</c><02:56:08.631><c> array</c><02:56:08.931><c> of</c><02:56:08.961><c> literal</c><02:56:09.561><c> so</c>

02:56:10.060 --> 02:56:10.070 align:start position:0%
function or in an array of literal so
 

02:56:10.070 --> 02:56:13.091 align:start position:0%
function or in an array of literal so
let's<02:56:10.671><c> look</c><02:56:10.881><c> at</c><02:56:11.091><c> this</c><02:56:11.271><c> so</c><02:56:11.841><c> right</c><02:56:12.200><c> now</c><02:56:12.440><c> we're</c>

02:56:13.091 --> 02:56:13.101 align:start position:0%
let's look at this so right now we're
 

02:56:13.101 --> 02:56:16.480 align:start position:0%
let's look at this so right now we're
setting<02:56:13.521><c> array</c><02:56:13.940><c> to</c><02:56:14.000><c> two</c><02:56:14.870><c> equal</c><02:56:15.351><c> array</c><02:56:15.771><c> one</c><02:56:16.160><c> in</c>

02:56:16.480 --> 02:56:16.490 align:start position:0%
setting array to two equal array one in
 

02:56:16.490 --> 02:56:19.930 align:start position:0%
setting array to two equal array one in
this<02:56:17.450><c> example</c><02:56:17.690><c> we're</c><02:56:18.591><c> not</c><02:56:18.620><c> actually</c><02:56:19.011><c> copying</c>

02:56:19.930 --> 02:56:19.940 align:start position:0%
this example we're not actually copying
 

02:56:19.940 --> 02:56:22.930 align:start position:0%
this example we're not actually copying
it<02:56:20.120><c> because</c><02:56:21.021><c> if</c><02:56:21.230><c> we</c><02:56:21.290><c> change</c><02:56:21.530><c> array</c><02:56:22.400><c> one</c><02:56:22.700><c> if</c><02:56:22.820><c> we</c>

02:56:22.930 --> 02:56:22.940 align:start position:0%
it because if we change array one if we
 

02:56:22.940 --> 02:56:24.461 align:start position:0%
it because if we change array one if we
set<02:56:23.211><c> the</c><02:56:23.360><c> index</c><02:56:23.721><c> of</c><02:56:23.841><c> the</c><02:56:23.931><c> array</c><02:56:23.961><c> one</c><02:56:24.351><c> two</c>

02:56:24.461 --> 02:56:24.471 align:start position:0%
set the index of the array one two
 

02:56:24.471 --> 02:56:27.791 align:start position:0%
set the index of the array one two
potato<02:56:24.830><c> and</c><02:56:25.160><c> we</c><02:56:25.490><c> log</c><02:56:25.820><c> array</c><02:56:26.181><c> two</c><02:56:26.711><c> you'll</c><02:56:27.711><c> see</c>

02:56:27.791 --> 02:56:27.801 align:start position:0%
potato and we log array two you'll see
 

02:56:27.801 --> 02:56:31.390 align:start position:0%
potato and we log array two you'll see
that<02:56:28.250><c> index</c><02:56:28.940><c> zero</c><02:56:29.301><c> is</c><02:56:29.631><c> potato</c><02:56:30.290><c> even</c><02:56:31.190><c> though</c>

02:56:31.390 --> 02:56:31.400 align:start position:0%
that index zero is potato even though
 

02:56:31.400 --> 02:56:34.780 align:start position:0%
that index zero is potato even though
we're<02:56:32.150><c> logging</c><02:56:32.601><c> array</c><02:56:33.021><c> two</c><02:56:33.351><c> and</c><02:56:33.711><c> we</c><02:56:34.551><c> only</c>

02:56:34.780 --> 02:56:34.790 align:start position:0%
we're logging array two and we only
 

02:56:34.790 --> 02:56:37.091 align:start position:0%
we're logging array two and we only
change<02:56:35.240><c> array</c><02:56:35.570><c> one</c><02:56:35.811><c> because</c><02:56:36.261><c> these</c><02:56:36.440><c> are</c><02:56:36.650><c> equal</c>

02:56:37.091 --> 02:56:37.101 align:start position:0%
change array one because these are equal
 

02:56:37.101 --> 02:56:40.150 align:start position:0%
change array one because these are equal
array<02:56:37.730><c> two</c><02:56:37.790><c> and</c><02:56:38.240><c> array</c><02:56:38.570><c> 1</c><02:56:38.841><c> are</c><02:56:39.051><c> the</c><02:56:39.080><c> same</c><02:56:39.290><c> but</c>

02:56:40.150 --> 02:56:40.160 align:start position:0%
array two and array 1 are the same but
 

02:56:40.160 --> 02:56:42.280 align:start position:0%
array two and array 1 are the same but
what<02:56:40.400><c> if</c><02:56:40.490><c> we</c><02:56:40.641><c> want</c><02:56:40.820><c> array</c><02:56:41.030><c> to</c><02:56:41.271><c> to</c><02:56:41.570><c> be</c><02:56:41.690><c> a</c><02:56:41.721><c> copy</c><02:56:42.051><c> of</c>

02:56:42.280 --> 02:56:42.290 align:start position:0%
what if we want array to to be a copy of
 

02:56:42.290 --> 02:56:44.770 align:start position:0%
what if we want array to to be a copy of
array<02:56:42.500><c> one</c><02:56:42.771><c> we</c><02:56:43.311><c> can</c><02:56:43.551><c> use</c><02:56:43.730><c> the</c><02:56:43.940><c> spread</c><02:56:44.301><c> operator</c>

02:56:44.770 --> 02:56:44.780 align:start position:0%
array one we can use the spread operator
 

02:56:44.780 --> 02:56:47.530 align:start position:0%
array one we can use the spread operator
now<02:56:45.561><c> we</c><02:56:45.620><c> can't</c><02:56:46.280><c> just</c><02:56:46.400><c> use</c><02:56:46.971><c> the</c><02:56:47.211><c> spread</c>

02:56:47.530 --> 02:56:47.540 align:start position:0%
now we can't just use the spread
 

02:56:47.540 --> 02:56:49.871 align:start position:0%
now we can't just use the spread
operator<02:56:47.961><c> like</c><02:56:48.110><c> this</c><02:56:48.440><c> that's</c><02:56:49.221><c> not</c><02:56:49.370><c> gonna</c><02:56:49.610><c> work</c>

02:56:49.871 --> 02:56:49.881 align:start position:0%
operator like this that's not gonna work
 

02:56:49.881 --> 02:56:53.650 align:start position:0%
operator like this that's not gonna work
but<02:56:50.091><c> if</c><02:56:50.181><c> we</c><02:56:50.301><c> put</c><02:56:50.511><c> this</c><02:56:50.660><c> inside</c><02:56:51.051><c> brackets</c><02:56:52.660><c> which</c>

02:56:53.650 --> 02:56:53.660 align:start position:0%
but if we put this inside brackets which
 

02:56:53.660 --> 02:56:56.560 align:start position:0%
but if we put this inside brackets which
is<02:56:53.811><c> an</c><02:56:53.931><c> array</c><02:56:54.200><c> it</c><02:56:54.891><c> will</c><02:56:55.221><c> spread</c><02:56:55.910><c> out</c><02:56:55.971><c> the</c>

02:56:56.560 --> 02:56:56.570 align:start position:0%
is an array it will spread out the
 

02:56:56.570 --> 02:56:59.650 align:start position:0%
is an array it will spread out the
contents<02:56:57.410><c> of</c><02:56:57.530><c> array</c><02:56:57.830><c> one</c><02:56:58.190><c> into</c><02:56:59.181><c> this</c><02:56:59.360><c> new</c>

02:56:59.650 --> 02:56:59.660 align:start position:0%
contents of array one into this new
 

02:56:59.660 --> 02:57:02.951 align:start position:0%
contents of array one into this new
array<02:57:00.021><c> so</c><02:57:00.801><c> we're</c><02:57:01.011><c> not</c><02:57:01.131><c> making</c><02:57:01.551><c> array</c><02:57:01.851><c> to</c><02:57:01.961><c> equal</c>

02:57:02.951 --> 02:57:02.961 align:start position:0%
array so we're not making array to equal
 

02:57:02.961 --> 02:57:06.041 align:start position:0%
array so we're not making array to equal
array<02:57:03.230><c> one</c><02:57:03.530><c> we</c><02:57:04.280><c> are</c><02:57:04.790><c> making</c><02:57:05.000><c> array</c><02:57:05.271><c> to</c><02:57:05.511><c> equal</c>

02:57:06.041 --> 02:57:06.051 align:start position:0%
array one we are making array to equal
 

02:57:06.051 --> 02:57:08.591 align:start position:0%
array one we are making array to equal
all<02:57:06.320><c> of</c><02:57:06.530><c> the</c><02:57:06.681><c> contents</c><02:57:07.400><c> of</c><02:57:07.580><c> array</c><02:57:07.820><c> one</c><02:57:08.120><c> so</c>

02:57:08.591 --> 02:57:08.601 align:start position:0%
all of the contents of array one so
 

02:57:08.601 --> 02:57:10.301 align:start position:0%
all of the contents of array one so
they'll<02:57:08.750><c> be</c><02:57:08.870><c> different</c><02:57:09.080><c> so</c><02:57:09.530><c> if</c><02:57:09.801><c> we</c><02:57:09.950><c> run</c><02:57:10.190><c> this</c>

02:57:10.301 --> 02:57:10.311 align:start position:0%
they'll be different so if we run this
 

02:57:10.311 --> 02:57:13.570 align:start position:0%
they'll be different so if we run this
again<02:57:10.421><c> you'll</c><02:57:11.421><c> see</c><02:57:11.721><c> that</c><02:57:11.750><c> it</c><02:57:12.351><c> says</c><02:57:13.131><c> January</c>

02:57:13.570 --> 02:57:13.580 align:start position:0%
again you'll see that it says January
 

02:57:13.580 --> 02:57:15.451 align:start position:0%
again you'll see that it says January
for<02:57:14.240><c> the</c><02:57:14.330><c> first</c><02:57:14.570><c> element</c><02:57:14.780><c> and</c><02:57:15.051><c> the</c><02:57:15.141><c> array</c>

02:57:15.451 --> 02:57:15.461 align:start position:0%
for the first element and the array
 

02:57:15.461 --> 02:57:21.290 align:start position:0%
for the first element and the array
instead<02:57:16.461><c> of</c><02:57:16.671><c> potato</c>

02:57:21.290 --> 02:57:21.300 align:start position:0%
 
 

02:57:21.300 --> 02:57:23.720 align:start position:0%
 
the<02:57:22.141><c> next</c><02:57:22.440><c> few</c><02:57:22.681><c> lessons</c><02:57:22.980><c> will</c><02:57:23.311><c> be</c><02:57:23.340><c> about</c>

02:57:23.720 --> 02:57:23.730 align:start position:0%
the next few lessons will be about
 

02:57:23.730 --> 02:57:26.450 align:start position:0%
the next few lessons will be about
destructuring<02:57:24.540><c> assignment</c><02:57:25.290><c> this</c><02:57:26.010><c> is</c><02:57:26.311><c> a</c>

02:57:26.450 --> 02:57:26.460 align:start position:0%
destructuring assignment this is a
 

02:57:26.460 --> 02:57:28.820 align:start position:0%
destructuring assignment this is a
special<02:57:26.940><c> syntax</c><02:57:27.240><c> for</c><02:57:27.721><c> neatly</c><02:57:27.960><c> assigning</c>

02:57:28.820 --> 02:57:28.830 align:start position:0%
special syntax for neatly assigning
 

02:57:28.830 --> 02:57:31.940 align:start position:0%
special syntax for neatly assigning
values<02:57:29.700><c> taken</c><02:57:30.300><c> directly</c><02:57:30.660><c> from</c><02:57:30.750><c> an</c><02:57:31.021><c> object</c><02:57:31.260><c> to</c>

02:57:31.940 --> 02:57:31.950 align:start position:0%
values taken directly from an object to
 

02:57:31.950 --> 02:57:34.820 align:start position:0%
values taken directly from an object to
a<02:57:31.980><c> variable</c><02:57:32.641><c> so</c><02:57:33.450><c> look</c><02:57:33.780><c> at</c><02:57:33.900><c> this</c><02:57:34.021><c> object</c><02:57:34.260><c> here</c>

02:57:34.820 --> 02:57:34.830 align:start position:0%
a variable so look at this object here
 

02:57:34.830 --> 02:57:36.860 align:start position:0%
a variable so look at this object here
we<02:57:35.340><c> have</c><02:57:35.490><c> this</c><02:57:35.610><c> object</c><02:57:35.820><c> with</c><02:57:36.300><c> three</c><02:57:36.510><c> elements</c>

02:57:36.860 --> 02:57:36.870 align:start position:0%
we have this object with three elements
 

02:57:36.870 --> 02:57:40.610 align:start position:0%
we have this object with three elements
we<02:57:37.800><c> have</c><02:57:37.920><c> the</c><02:57:38.040><c> x</c><02:57:38.330><c> y&amp;z</c><02:57:39.330><c> with</c><02:57:39.750><c> their</c><02:57:39.931><c> values</c><02:57:40.410><c> and</c>

02:57:40.610 --> 02:57:40.620 align:start position:0%
we have the x y&amp;z with their values and
 

02:57:40.620 --> 02:57:45.530 align:start position:0%
we have the x y&amp;z with their values and
it's<02:57:41.280><c> all</c><02:57:41.550><c> in</c><02:57:41.971><c> the</c><02:57:42.360><c> voxel</c><02:57:42.960><c> variable</c><02:57:43.800><c> so</c><02:57:44.490><c> if</c><02:57:45.030><c> we</c>

02:57:45.530 --> 02:57:45.540 align:start position:0%
it's all in the voxel variable so if we
 

02:57:45.540 --> 02:57:48.440 align:start position:0%
it's all in the voxel variable so if we
want<02:57:45.811><c> to</c><02:57:45.870><c> take</c><02:57:46.170><c> each</c><02:57:46.610><c> individual</c><02:57:47.610><c> element</c><02:57:48.330><c> in</c>

02:57:48.440 --> 02:57:48.450 align:start position:0%
want to take each individual element in
 

02:57:48.450 --> 02:57:50.870 align:start position:0%
want to take each individual element in
this<02:57:48.660><c> object</c><02:57:48.960><c> and</c><02:57:49.530><c> assign</c><02:57:49.860><c> it</c><02:57:50.130><c> to</c><02:57:50.490><c> its</c><02:57:50.700><c> own</c>

02:57:50.870 --> 02:57:50.880 align:start position:0%
this object and assign it to its own
 

02:57:50.880 --> 02:57:53.780 align:start position:0%
this object and assign it to its own
variable<02:57:51.391><c> this</c><02:57:52.141><c> is</c><02:57:52.380><c> the</c><02:57:52.530><c> old</c><02:57:52.740><c> way</c><02:57:53.101><c> of</c><02:57:53.130><c> doing</c><02:57:53.311><c> it</c>

02:57:53.780 --> 02:57:53.790 align:start position:0%
variable this is the old way of doing it
 

02:57:53.790 --> 02:57:56.750 align:start position:0%
variable this is the old way of doing it
so<02:57:54.000><c> you</c><02:57:54.420><c> could</c><02:57:54.690><c> do</c><02:57:54.811><c> Vox</c><02:57:55.080><c> without</c><02:57:55.440><c> X</c><02:57:55.650><c> to</c><02:57:56.490><c> stores</c>

02:57:56.750 --> 02:57:56.760 align:start position:0%
so you could do Vox without X to stores
 

02:57:56.760 --> 02:57:59.450 align:start position:0%
so you could do Vox without X to stores
X<02:57:57.061><c> voxel</c><02:57:57.540><c> that</c><02:57:57.630><c> Y</c><02:57:57.840><c> stores</c><02:57:58.260><c> Y</c><02:57:58.471><c> voxels</c><02:57:59.010><c> at</c><02:57:59.101><c> Z</c><02:57:59.311><c> the</c>

02:57:59.450 --> 02:57:59.460 align:start position:0%
X voxel that Y stores Y voxels at Z the
 

02:57:59.460 --> 02:58:02.750 align:start position:0%
X voxel that Y stores Y voxels at Z the
store<02:57:59.700><c> Z</c><02:58:00.030><c> now</c><02:58:00.960><c> with</c><02:58:01.351><c> with</c><02:58:01.891><c> destructuring</c>

02:58:02.750 --> 02:58:02.760 align:start position:0%
store Z now with with destructuring
 

02:58:02.760 --> 02:58:06.350 align:start position:0%
store Z now with with destructuring
there's<02:58:03.391><c> a</c><02:58:03.540><c> simpler</c><02:58:04.440><c> and</c><02:58:04.710><c> quicker</c><02:58:05.101><c> way</c><02:58:05.400><c> to</c>

02:58:06.350 --> 02:58:06.360 align:start position:0%
there's a simpler and quicker way to
 

02:58:06.360 --> 02:58:09.080 align:start position:0%
there's a simpler and quicker way to
assign<02:58:06.931><c> variables</c><02:58:07.351><c> for</c><02:58:08.130><c> each</c><02:58:08.250><c> element</c><02:58:08.700><c> in</c><02:58:08.940><c> an</c>

02:58:09.080 --> 02:58:09.090 align:start position:0%
assign variables for each element in an
 

02:58:09.090 --> 02:58:11.780 align:start position:0%
assign variables for each element in an
object<02:58:09.721><c> so</c><02:58:10.530><c> here's</c><02:58:10.830><c> the</c><02:58:11.040><c> destructuring</c>

02:58:11.780 --> 02:58:11.790 align:start position:0%
object so here's the destructuring
 

02:58:11.790 --> 02:58:15.020 align:start position:0%
object so here's the destructuring
syntax<02:58:12.480><c> right</c><02:58:12.780><c> here</c><02:58:13.230><c> this</c><02:58:13.860><c> time</c><02:58:14.190><c> we</c><02:58:14.880><c> are</c>

02:58:15.020 --> 02:58:15.030 align:start position:0%
syntax right here this time we are
 

02:58:15.030 --> 02:58:18.950 align:start position:0%
syntax right here this time we are
creating<02:58:15.450><c> various</c><02:58:15.840><c> a</c><02:58:16.080><c> b</c><02:58:16.891><c> and</c><02:58:17.221><c> c</c><02:58:17.250><c> and</c><02:58:18.030><c> assigning</c>

02:58:18.950 --> 02:58:18.960 align:start position:0%
creating various a b and c and assigning
 

02:58:18.960 --> 02:58:23.390 align:start position:0%
creating various a b and c and assigning
them<02:58:19.290><c> to</c><02:58:19.351><c> the</c><02:58:19.620><c> values</c><02:58:20.130><c> from</c><02:58:20.490><c> the</c><02:58:20.931><c> object</c><02:58:21.931><c> x</c><02:58:22.410><c> y</c>

02:58:23.390 --> 02:58:23.400 align:start position:0%
them to the values from the object x y
 

02:58:23.400 --> 02:58:26.961 align:start position:0%
them to the values from the object x y
and<02:58:23.760><c> z</c><02:58:24.351><c> we</c><02:58:25.351><c> can</c><02:58:25.561><c> see</c><02:58:25.800><c> we</c><02:58:25.980><c> put</c><02:58:26.010><c> in</c><02:58:26.280><c> curly</c><02:58:26.730><c> braces</c>

02:58:26.961 --> 02:58:26.971 align:start position:0%
and z we can see we put in curly braces
 

02:58:26.971 --> 02:58:29.360 align:start position:0%
and z we can see we put in curly braces
here<02:58:27.480><c> and</c><02:58:27.630><c> we</c><02:58:27.960><c> just</c><02:58:28.170><c> say</c><02:58:28.290><c> it</c><02:58:28.410><c> equals</c><02:58:28.650><c> the</c>

02:58:29.360 --> 02:58:29.370 align:start position:0%
here and we just say it equals the
 

02:58:29.370 --> 02:58:32.360 align:start position:0%
here and we just say it equals the
object<02:58:29.971><c> it</c><02:58:30.090><c> equals</c><02:58:30.420><c> a</c><02:58:30.540><c> voxel</c><02:58:31.200><c> you</c><02:58:31.891><c> can</c><02:58:32.070><c> read</c><02:58:32.250><c> it</c>

02:58:32.360 --> 02:58:32.370 align:start position:0%
object it equals a voxel you can read it
 

02:58:32.370 --> 02:58:34.640 align:start position:0%
object it equals a voxel you can read it
like<02:58:32.521><c> this</c><02:58:32.730><c> get</c><02:58:33.330><c> the</c><02:58:33.540><c> feel</c><02:58:33.750><c> of</c><02:58:33.780><c> X</c><02:58:34.141><c> and</c><02:58:34.410><c> copy</c>

02:58:34.640 --> 02:58:34.650 align:start position:0%
like this get the feel of X and copy
 

02:58:34.650 --> 02:58:37.040 align:start position:0%
like this get the feel of X and copy
into<02:58:34.950><c> the</c><02:58:35.101><c> value</c><02:58:35.400><c> a</c><02:58:35.641><c> so</c><02:58:36.210><c> get</c><02:58:36.450><c> the</c><02:58:36.540><c> feel</c><02:58:36.721><c> of</c><02:58:36.750><c> X</c>

02:58:37.040 --> 02:58:37.050 align:start position:0%
into the value a so get the feel of X
 

02:58:37.050 --> 02:58:38.930 align:start position:0%
into the value a so get the feel of X
from<02:58:37.200><c> the</c><02:58:37.320><c> object</c><02:58:37.710><c> copy</c><02:58:38.010><c> into</c><02:58:38.370><c> the</c><02:58:38.460><c> value</c><02:58:38.760><c> a</c>

02:58:38.930 --> 02:58:38.940 align:start position:0%
from the object copy into the value a
 

02:58:38.940 --> 02:58:41.870 align:start position:0%
from the object copy into the value a
get<02:58:39.750><c> the</c><02:58:39.900><c> feel</c><02:58:40.080><c> of</c><02:58:40.110><c> Y</c><02:58:40.681><c> from</c><02:58:41.010><c> the</c><02:58:41.160><c> object</c><02:58:41.580><c> copy</c>

02:58:41.870 --> 02:58:41.880 align:start position:0%
get the feel of Y from the object copy
 

02:58:41.880 --> 02:58:45.140 align:start position:0%
get the feel of Y from the object copy
into<02:58:42.150><c> the</c><02:58:42.271><c> value</c><02:58:42.570><c> B</c><02:58:42.811><c> get</c><02:58:43.620><c> the</c><02:58:43.800><c> feel</c><02:58:43.980><c> of</c><02:58:44.010><c> Z</c><02:58:44.460><c> copy</c>

02:58:45.140 --> 02:58:45.150 align:start position:0%
into the value B get the feel of Z copy
 

02:58:45.150 --> 02:58:48.560 align:start position:0%
into the value B get the feel of Z copy
it<02:58:45.391><c> into</c><02:58:45.660><c> the</c><02:58:45.811><c> value</c><02:58:46.440><c> C</c><02:58:46.980><c> so</c><02:58:47.820><c> this</c><02:58:48.061><c> is</c><02:58:48.120><c> just</c><02:58:48.391><c> a</c>

02:58:48.560 --> 02:58:48.570 align:start position:0%
it into the value C so this is just a
 

02:58:48.570 --> 02:58:51.410 align:start position:0%
it into the value C so this is just a
quicker<02:58:48.990><c> way</c><02:58:49.170><c> of</c><02:58:49.650><c> assigning</c><02:58:50.490><c> things</c><02:58:51.000><c> from</c><02:58:51.300><c> an</c>

02:58:51.410 --> 02:58:51.420 align:start position:0%
quicker way of assigning things from an
 

02:58:51.420 --> 02:58:55.100 align:start position:0%
quicker way of assigning things from an
object<02:58:51.630><c> into</c><02:58:52.670><c> variables</c><02:58:53.690><c> now</c><02:58:54.690><c> we're</c><02:58:54.931><c> going</c><02:58:55.050><c> to</c>

02:58:55.100 --> 02:58:55.110 align:start position:0%
object into variables now we're going to
 

02:58:55.110 --> 02:58:57.711 align:start position:0%
object into variables now we're going to
use<02:58:55.440><c> the</c><02:58:55.710><c> structuring</c><02:58:56.250><c> to</c><02:58:56.550><c> obtain</c><02:58:57.120><c> the</c>

02:58:57.711 --> 02:58:57.721 align:start position:0%
use the structuring to obtain the
 

02:58:57.721 --> 02:59:00.171 align:start position:0%
use the structuring to obtain the
average<02:58:57.900><c> temperature</c><02:58:58.710><c> for</c><02:58:58.740><c> tomorrow</c><02:58:59.190><c> from</c>

02:59:00.171 --> 02:59:00.181 align:start position:0%
average temperature for tomorrow from
 

02:59:00.181 --> 02:59:03.200 align:start position:0%
average temperature for tomorrow from
the<02:59:00.391><c> info</c><02:59:01.080><c> object</c><02:59:01.260><c> average</c><02:59:01.980><c> temperatures</c><02:59:02.580><c> so</c>

02:59:03.200 --> 02:59:03.210 align:start position:0%
the info object average temperatures so
 

02:59:03.210 --> 02:59:05.330 align:start position:0%
the info object average temperatures so
we<02:59:03.330><c> have</c><02:59:03.450><c> average</c><02:59:03.811><c> temperatures</c><02:59:04.351><c> it</c><02:59:05.130><c> has</c>

02:59:05.330 --> 02:59:05.340 align:start position:0%
we have average temperatures it has
 

02:59:05.340 --> 02:59:08.711 align:start position:0%
we have average temperatures it has
today<02:59:06.030><c> and</c><02:59:06.601><c> tomorrow's</c><02:59:07.500><c> temperatures</c><02:59:08.160><c> and</c>

02:59:08.711 --> 02:59:08.721 align:start position:0%
today and tomorrow's temperatures and
 

02:59:08.721 --> 02:59:12.080 align:start position:0%
today and tomorrow's temperatures and
then<02:59:09.721><c> the</c><02:59:09.900><c> average</c><02:59:10.050><c> temperature</c><02:59:10.830><c> is</c><02:59:11.190><c> inputted</c>

02:59:12.080 --> 02:59:12.090 align:start position:0%
then the average temperature is inputted
 

02:59:12.090 --> 02:59:16.070 align:start position:0%
then the average temperature is inputted
into<02:59:12.420><c> this</c><02:59:13.021><c> function</c><02:59:13.410><c> here</c><02:59:14.010><c> so</c><02:59:14.360><c> I'm</c><02:59:15.360><c> going</c><02:59:15.870><c> to</c>

02:59:16.070 --> 02:59:16.080 align:start position:0%
into this function here so I'm going to
 

02:59:16.080 --> 02:59:19.390 align:start position:0%
into this function here so I'm going to
change<02:59:16.530><c> this</c><02:59:16.891><c> line</c><02:59:17.280><c> here</c><02:59:17.880><c> to</c><02:59:18.780><c> use</c>

02:59:19.390 --> 02:59:19.400 align:start position:0%
change this line here to use
 

02:59:19.400 --> 02:59:20.540 align:start position:0%
change this line here to use
destructuring

02:59:20.540 --> 02:59:20.550 align:start position:0%
destructuring
 

02:59:20.550 --> 02:59:22.970 align:start position:0%
destructuring
and<02:59:20.790><c> the</c><02:59:21.420><c> structure</c><02:59:21.990><c> the</c><02:59:22.500><c> average</c>

02:59:22.970 --> 02:59:22.980 align:start position:0%
and the structure the average
 

02:59:22.980 --> 02:59:25.610 align:start position:0%
and the structure the average
temperatures<02:59:23.840><c> object</c><02:59:24.840><c> here</c><02:59:25.110><c> that's</c><02:59:25.290><c> passed</c>

02:59:25.610 --> 02:59:25.620 align:start position:0%
temperatures object here that's passed
 

02:59:25.620 --> 02:59:27.860 align:start position:0%
temperatures object here that's passed
into<02:59:25.980><c> this</c><02:59:26.221><c> function</c><02:59:26.851><c> so</c><02:59:27.120><c> first</c><02:59:27.690><c> I'm</c><02:59:27.840><c> just</c>

02:59:27.860 --> 02:59:27.870 align:start position:0%
into this function so first I'm just
 

02:59:27.870 --> 02:59:29.450 align:start position:0%
into this function so first I'm just
going<02:59:28.080><c> to</c><02:59:28.170><c> put</c><02:59:28.290><c> the</c><02:59:28.410><c> average</c><02:59:28.860><c> temperatures</c>

02:59:29.450 --> 02:59:29.460 align:start position:0%
going to put the average temperatures
 

02:59:29.460 --> 02:59:32.540 align:start position:0%
going to put the average temperatures
variable<02:59:30.150><c> here</c><02:59:30.510><c> and</c><02:59:30.830><c> then</c><02:59:31.830><c> on</c><02:59:32.010><c> this</c><02:59:32.250><c> side</c><02:59:32.311><c> of</c>

02:59:32.540 --> 02:59:32.550 align:start position:0%
variable here and then on this side of
 

02:59:32.550 --> 02:59:34.461 align:start position:0%
variable here and then on this side of
the<02:59:32.670><c> equal</c><02:59:33.061><c> sign</c><02:59:33.090><c> I'm</c><02:59:33.750><c> going</c><02:59:33.931><c> to</c><02:59:34.050><c> have</c><02:59:34.200><c> to</c><02:59:34.320><c> use</c>

02:59:34.461 --> 02:59:34.471 align:start position:0%
the equal sign I'm going to have to use
 

02:59:34.471 --> 02:59:35.120 align:start position:0%
the equal sign I'm going to have to use
two<02:59:34.650><c> destruct</c>

02:59:35.120 --> 02:59:35.130 align:start position:0%
two destruct
 

02:59:35.130 --> 02:59:38.179 align:start position:0%
two destruct
shirring<02:59:35.399><c> so</c><02:59:36.000><c> I'll</c><02:59:36.330><c> put</c><02:59:37.290><c> the</c><02:59:37.470><c> curly</c><02:59:37.890><c> braces</c>

02:59:38.179 --> 02:59:38.189 align:start position:0%
shirring so I'll put the curly braces
 

02:59:38.189 --> 02:59:44.060 align:start position:0%
shirring so I'll put the curly braces
and<02:59:39.680><c> we'll</c><02:59:40.680><c> put</c><02:59:40.950><c> tomorrow</c><02:59:42.140><c> and</c><02:59:43.140><c> the</c><02:59:43.260><c> colon</c><02:59:43.740><c> and</c>

02:59:44.060 --> 02:59:44.070 align:start position:0%
and we'll put tomorrow and the colon and
 

02:59:44.070 --> 02:59:47.750 align:start position:0%
and we'll put tomorrow and the colon and
then<02:59:44.430><c> the</c><02:59:44.880><c> other</c><02:59:45.870><c> curly</c><02:59:46.229><c> brace</c><02:59:46.470><c> so</c><02:59:47.310><c> this</c><02:59:47.580><c> is</c>

02:59:47.750 --> 02:59:47.760 align:start position:0%
then the other curly brace so this is
 

02:59:47.760 --> 02:59:51.590 align:start position:0%
then the other curly brace so this is
saying<02:59:48.060><c> get</c><02:59:48.960><c> the</c><02:59:49.649><c> tomorrow</c><02:59:50.189><c> field</c><02:59:50.700><c> from</c><02:59:51.420><c> the</c>

02:59:51.590 --> 02:59:51.600 align:start position:0%
saying get the tomorrow field from the
 

02:59:51.600 --> 02:59:54.290 align:start position:0%
saying get the tomorrow field from the
average<02:59:51.810><c> temperatures</c><02:59:52.590><c> object</c><02:59:53.189><c> and</c><02:59:53.460><c> assign</c>

02:59:54.290 --> 02:59:54.300 align:start position:0%
average temperatures object and assign
 

02:59:54.300 --> 02:59:59.330 align:start position:0%
average temperatures object and assign
it<02:59:54.330><c> to</c><02:59:54.570><c> the</c><02:59:55.050><c> temp</c><02:59:55.380><c> of</c><02:59:55.560><c> tomorrow</c><02:59:56.510><c> variable</c><02:59:58.340><c> so</c>

02:59:59.330 --> 02:59:59.340 align:start position:0%
it to the temp of tomorrow variable so
 

02:59:59.340 --> 03:00:03.440 align:start position:0%
it to the temp of tomorrow variable so
if<02:59:59.610><c> we</c><03:00:00.060><c> run</c><03:00:00.390><c> this</c><03:00:00.660><c> we</c><03:00:00.930><c> should</c><03:00:01.439><c> see</c><03:00:01.470><c> it</c><03:00:01.890><c> says</c><03:00:02.820><c> 79</c>

03:00:03.440 --> 03:00:03.450 align:start position:0%
if we run this we should see it says 79
 

03:00:03.450 --> 03:00:06.740 align:start position:0%
if we run this we should see it says 79
in<03:00:03.630><c> the</c><03:00:03.720><c> console</c><03:00:04.290><c> because</c><03:00:05.280><c> we</c><03:00:05.790><c> got</c><03:00:06.060><c> the</c><03:00:06.390><c> tempo</c>

03:00:06.740 --> 03:00:06.750 align:start position:0%
in the console because we got the tempo
 

03:00:06.750 --> 03:00:08.510 align:start position:0%
in the console because we got the tempo
tomorrow<03:00:07.110><c> variable</c><03:00:07.560><c> we</c><03:00:07.710><c> return</c><03:00:08.100><c> temp</c><03:00:08.370><c> of</c>

03:00:08.510 --> 03:00:08.520 align:start position:0%
tomorrow variable we return temp of
 

03:00:08.520 --> 03:00:11.330 align:start position:0%
tomorrow variable we return temp of
tomorrow<03:00:08.880><c> and</c><03:00:09.149><c> it</c><03:00:09.510><c> was</c><03:00:09.630><c> logged</c><03:00:09.930><c> right</c><03:00:10.110><c> here</c><03:00:10.649><c> so</c>

03:00:11.330 --> 03:00:11.340 align:start position:0%
tomorrow and it was logged right here so
 

03:00:11.340 --> 03:00:13.580 align:start position:0%
tomorrow and it was logged right here so
we<03:00:11.490><c> successfully</c><03:00:12.090><c> used</c><03:00:12.300><c> the</c><03:00:12.390><c> structuring</c><03:00:13.050><c> to</c>

03:00:13.580 --> 03:00:13.590 align:start position:0%
we successfully used the structuring to
 

03:00:13.590 --> 03:00:16.219 align:start position:0%
we successfully used the structuring to
get<03:00:13.920><c> the</c><03:00:14.100><c> tomorrow</c><03:00:14.520><c> variable</c><03:00:15.030><c> out</c><03:00:15.420><c> of</c><03:00:15.689><c> average</c>

03:00:16.219 --> 03:00:16.229 align:start position:0%
get the tomorrow variable out of average
 

03:00:16.229 --> 03:00:20.689 align:start position:0%
get the tomorrow variable out of average
temperatures

03:00:20.689 --> 03:00:20.699 align:start position:0%
 
 

03:00:20.699 --> 03:00:22.820 align:start position:0%
 
we<03:00:21.359><c> can</c><03:00:21.569><c> also</c><03:00:21.720><c> use</c><03:00:22.050><c> the</c><03:00:22.319><c> structuring</c>

03:00:22.820 --> 03:00:22.830 align:start position:0%
we can also use the structuring
 

03:00:22.830 --> 03:00:25.130 align:start position:0%
we can also use the structuring
assignment<03:00:23.550><c> to</c><03:00:23.819><c> assign</c><03:00:24.239><c> variables</c><03:00:24.569><c> from</c>

03:00:25.130 --> 03:00:25.140 align:start position:0%
assignment to assign variables from
 

03:00:25.140 --> 03:00:28.040 align:start position:0%
assignment to assign variables from
nested<03:00:25.800><c> objects</c><03:00:26.399><c> we</c><03:00:27.149><c> have</c><03:00:27.300><c> this</c><03:00:27.449><c> nested</c>

03:00:28.040 --> 03:00:28.050 align:start position:0%
nested objects we have this nested
 

03:00:28.050 --> 03:00:31.189 align:start position:0%
nested objects we have this nested
object<03:00:28.620><c> right</c><03:00:28.800><c> here</c><03:00:29.159><c> the</c><03:00:29.520><c> local</c><03:00:30.000><c> forecast</c><03:00:30.750><c> and</c>

03:00:31.189 --> 03:00:31.199 align:start position:0%
object right here the local forecast and
 

03:00:31.199 --> 03:00:35.030 align:start position:0%
object right here the local forecast and
inside<03:00:32.130><c> we</c><03:00:32.699><c> have</c><03:00:32.970><c> some</c><03:00:33.180><c> nested</c><03:00:33.960><c> objects</c><03:00:34.439><c> so</c><03:00:35.010><c> we</c>

03:00:35.030 --> 03:00:35.040 align:start position:0%
inside we have some nested objects so we
 

03:00:35.040 --> 03:00:37.429 align:start position:0%
inside we have some nested objects so we
have<03:00:35.340><c> the</c><03:00:35.489><c> forecast</c><03:00:36.000><c> from</c><03:00:36.270><c> today</c><03:00:36.659><c> and</c><03:00:36.899><c> the</c>

03:00:37.429 --> 03:00:37.439 align:start position:0%
have the forecast from today and the
 

03:00:37.439 --> 03:00:40.070 align:start position:0%
have the forecast from today and the
forecast<03:00:37.979><c> from</c><03:00:38.220><c> tomorrow</c><03:00:38.699><c> so</c><03:00:39.420><c> here</c><03:00:39.779><c> we</c><03:00:39.930><c> have</c>

03:00:40.070 --> 03:00:40.080 align:start position:0%
forecast from tomorrow so here we have
 

03:00:40.080 --> 03:00:42.320 align:start position:0%
forecast from tomorrow so here we have
get<03:00:40.350><c> max</c><03:00:40.739><c> of</c><03:00:41.010><c> tomorrow</c><03:00:41.489><c> where</c><03:00:41.909><c> we're</c><03:00:42.120><c> going</c><03:00:42.270><c> to</c>

03:00:42.320 --> 03:00:42.330 align:start position:0%
get max of tomorrow where we're going to
 

03:00:42.330 --> 03:00:45.080 align:start position:0%
get max of tomorrow where we're going to
pass<03:00:42.569><c> in</c><03:00:42.779><c> the</c><03:00:42.899><c> forecast</c><03:00:43.500><c> and</c><03:00:43.890><c> here</c><03:00:44.640><c> we</c><03:00:44.760><c> can</c><03:00:44.909><c> see</c>

03:00:45.080 --> 03:00:45.090 align:start position:0%
pass in the forecast and here we can see
 

03:00:45.090 --> 03:00:47.269 align:start position:0%
pass in the forecast and here we can see
the<03:00:45.300><c> local</c><03:00:45.659><c> forecast</c><03:00:45.960><c> becomes</c><03:00:46.620><c> the</c><03:00:46.770><c> forecast</c>

03:00:47.269 --> 03:00:47.279 align:start position:0%
the local forecast becomes the forecast
 

03:00:47.279 --> 03:00:49.099 align:start position:0%
the local forecast becomes the forecast
variable<03:00:47.850><c> and</c><03:00:48.060><c> we're</c><03:00:48.479><c> trying</c><03:00:48.720><c> to</c><03:00:48.779><c> figure</c><03:00:48.989><c> out</c>

03:00:49.099 --> 03:00:49.109 align:start position:0%
variable and we're trying to figure out
 

03:00:49.109 --> 03:00:52.040 align:start position:0%
variable and we're trying to figure out
the<03:00:49.409><c> max</c><03:00:49.710><c> of</c><03:00:50.010><c> tomorrow</c><03:00:50.550><c> so</c><03:00:51.270><c> we</c><03:00:51.479><c> are</c><03:00:51.630><c> going</c><03:00:51.899><c> to</c>

03:00:52.040 --> 03:00:52.050 align:start position:0%
the max of tomorrow so we are going to
 

03:00:52.050 --> 03:00:55.580 align:start position:0%
the max of tomorrow so we are going to
use<03:00:52.520><c> destructuring</c><03:00:53.520><c> to</c><03:00:53.970><c> figure</c><03:00:54.390><c> that</c><03:00:54.569><c> out</c><03:00:54.750><c> so</c>

03:00:55.580 --> 03:00:55.590 align:start position:0%
use destructuring to figure that out so
 

03:00:55.590 --> 03:00:58.700 align:start position:0%
use destructuring to figure that out so
it's<03:00:56.189><c> going</c><03:00:56.489><c> to</c><03:00:56.609><c> equal</c><03:00:57.290><c> forecast</c><03:00:58.290><c> and</c>

03:00:58.700 --> 03:00:58.710 align:start position:0%
it's going to equal forecast and
 

03:00:58.710 --> 03:01:03.050 align:start position:0%
it's going to equal forecast and
remember<03:00:59.399><c> that</c><03:00:59.729><c> is</c><03:00:59.939><c> a</c><03:01:00.270><c> nested</c><03:01:01.050><c> object</c><03:01:01.680><c> so</c><03:01:02.370><c> here</c>

03:01:03.050 --> 03:01:03.060 align:start position:0%
remember that is a nested object so here
 

03:01:03.060 --> 03:01:04.849 align:start position:0%
remember that is a nested object so here
when<03:01:03.720><c> you're</c><03:01:03.840><c> destructuring</c><03:01:04.439><c> you're</c><03:01:04.739><c> always</c>

03:01:04.849 --> 03:01:04.859 align:start position:0%
when you're destructuring you're always
 

03:01:04.859 --> 03:01:08.599 align:start position:0%
when you're destructuring you're always
going<03:01:05.069><c> to</c><03:01:05.130><c> use</c><03:01:05.250><c> the</c><03:01:05.430><c> curly</c><03:01:05.699><c> braces</c><03:01:06.090><c> and</c><03:01:07.489><c> we</c><03:01:08.489><c> are</c>

03:01:08.599 --> 03:01:08.609 align:start position:0%
going to use the curly braces and we are
 

03:01:08.609 --> 03:01:12.979 align:start position:0%
going to use the curly braces and we are
first<03:01:08.819><c> going</c><03:01:09.000><c> to</c><03:01:09.090><c> get</c><03:01:09.300><c> tomorrow</c><03:01:10.050><c> and</c><03:01:11.569><c> on</c><03:01:12.569><c> the</c>

03:01:12.979 --> 03:01:12.989 align:start position:0%
first going to get tomorrow and on the
 

03:01:12.989 --> 03:01:15.200 align:start position:0%
first going to get tomorrow and on the
other<03:01:13.080><c> side</c><03:01:13.470><c> of</c><03:01:13.649><c> the</c><03:01:13.770><c> colon</c><03:01:14.310><c> we're</c><03:01:14.850><c> gonna</c><03:01:14.939><c> have</c>

03:01:15.200 --> 03:01:15.210 align:start position:0%
other side of the colon we're gonna have
 

03:01:15.210 --> 03:01:17.090 align:start position:0%
other side of the colon we're gonna have
some<03:01:15.420><c> more</c><03:01:15.479><c> curly</c><03:01:15.960><c> braces</c><03:01:16.229><c> because</c><03:01:16.770><c> it's</c>

03:01:17.090 --> 03:01:17.100 align:start position:0%
some more curly braces because it's
 

03:01:17.100 --> 03:01:20.149 align:start position:0%
some more curly braces because it's
nested<03:01:17.640><c> so</c><03:01:18.420><c> we</c><03:01:18.510><c> need</c><03:01:18.659><c> to</c><03:01:18.720><c> go</c><03:01:18.899><c> inside</c><03:01:19.080><c> of</c><03:01:19.649><c> the</c>

03:01:20.149 --> 03:01:20.159 align:start position:0%
nested so we need to go inside of the
 

03:01:20.159 --> 03:01:23.330 align:start position:0%
nested so we need to go inside of the
tomorrow<03:01:21.029><c> object</c><03:01:21.659><c> and</c><03:01:21.840><c> we</c><03:01:21.899><c> need</c><03:01:22.080><c> the</c><03:01:22.260><c> max</c><03:01:22.560><c> so</c>

03:01:23.330 --> 03:01:23.340 align:start position:0%
tomorrow object and we need the max so
 

03:01:23.340 --> 03:01:26.479 align:start position:0%
tomorrow object and we need the max so
we'll<03:01:23.489><c> do</c><03:01:23.640><c> max</c><03:01:23.970><c> and</c><03:01:24.409><c> then</c><03:01:25.409><c> we</c><03:01:25.529><c> have</c><03:01:25.680><c> the</c><03:01:25.890><c> colon</c>

03:01:26.479 --> 03:01:26.489 align:start position:0%
we'll do max and then we have the colon
 

03:01:26.489 --> 03:01:30.559 align:start position:0%
we'll do max and then we have the colon
and<03:01:27.020><c> max</c><03:01:28.020><c> of</c><03:01:28.229><c> tomorrow</c><03:01:28.620><c> now</c><03:01:29.370><c> we</c><03:01:29.430><c> need</c><03:01:29.760><c> two</c><03:01:30.180><c> sets</c>

03:01:30.559 --> 03:01:30.569 align:start position:0%
and max of tomorrow now we need two sets
 

03:01:30.569 --> 03:01:34.700 align:start position:0%
and max of tomorrow now we need two sets
of<03:01:30.949><c> squiggly</c><03:01:31.949><c> braces</c><03:01:32.340><c> here</c><03:01:33.060><c> so</c><03:01:33.989><c> we</c><03:01:34.350><c> have</c><03:01:34.470><c> this</c>

03:01:34.700 --> 03:01:34.710 align:start position:0%
of squiggly braces here so we have this
 

03:01:34.710 --> 03:01:38.660 align:start position:0%
of squiggly braces here so we have this
one<03:01:35.010><c> and</c><03:01:35.810><c> this</c><03:01:36.810><c> one</c><03:01:37.199><c> and</c><03:01:37.470><c> so</c><03:01:38.460><c> we've</c>

03:01:38.660 --> 03:01:38.670 align:start position:0%
one and this one and so we've
 

03:01:38.670 --> 03:01:42.620 align:start position:0%
one and this one and so we've
destructured<03:01:39.569><c> two</c><03:01:39.840><c> times</c><03:01:40.229><c> and</c><03:01:40.909><c> the</c><03:01:41.909><c> variable</c>

03:01:42.620 --> 03:01:42.630 align:start position:0%
destructured two times and the variable
 

03:01:42.630 --> 03:01:46.099 align:start position:0%
destructured two times and the variable
is<03:01:42.659><c> max</c><03:01:43.470><c> of</c><03:01:43.680><c> tomorrow</c><03:01:44.100><c> so</c><03:01:44.729><c> we've</c><03:01:45.149><c> set</c><03:01:45.479><c> the</c><03:01:45.720><c> max</c>

03:01:46.099 --> 03:01:46.109 align:start position:0%
is max of tomorrow so we've set the max
 

03:01:46.109 --> 03:01:49.219 align:start position:0%
is max of tomorrow so we've set the max
that<03:01:46.470><c> was</c><03:01:46.560><c> inside</c><03:01:47.069><c> tomorrow</c><03:01:47.699><c> to</c><03:01:48.449><c> max</c><03:01:49.020><c> of</c>

03:01:49.219 --> 03:01:49.229 align:start position:0%
that was inside tomorrow to max of
 

03:01:49.229 --> 03:01:52.280 align:start position:0%
that was inside tomorrow to max of
tomorrow<03:01:49.620><c> so</c><03:01:50.550><c> if</c><03:01:50.819><c> I</c><03:01:51.270><c> run</c><03:01:51.540><c> this</c><03:01:51.600><c> you'll</c><03:01:52.080><c> see</c>

03:01:52.280 --> 03:01:52.290 align:start position:0%
tomorrow so if I run this you'll see
 

03:01:52.290 --> 03:01:57.820 align:start position:0%
tomorrow so if I run this you'll see
it's<03:01:52.439><c> eighty</c><03:01:52.710><c> four</c><03:01:53.069><c> point</c><03:01:53.430><c> six</c>

03:01:57.820 --> 03:01:57.830 align:start position:0%
 
 

03:01:57.830 --> 03:02:00.730 align:start position:0%
 
you<03:01:58.640><c> can</c><03:01:58.850><c> use</c><03:01:59.090><c> the</c><03:01:59.360><c> structuring</c><03:02:00.050><c> assignment</c>

03:02:00.730 --> 03:02:00.740 align:start position:0%
you can use the structuring assignment
 

03:02:00.740 --> 03:02:03.640 align:start position:0%
you can use the structuring assignment
to<03:02:00.890><c> assign</c><03:02:01.220><c> variables</c><03:02:01.910><c> from</c><03:02:02.240><c> arrays</c><03:02:02.690><c> look</c><03:02:03.530><c> at</c>

03:02:03.640 --> 03:02:03.650 align:start position:0%
to assign variables from arrays look at
 

03:02:03.650 --> 03:02:05.860 align:start position:0%
to assign variables from arrays look at
this<03:02:03.800><c> example</c><03:02:04.190><c> here</c><03:02:04.370><c> so</c><03:02:05.300><c> we</c><03:02:05.420><c> have</c><03:02:05.540><c> this</c><03:02:05.660><c> array</c>

03:02:05.860 --> 03:02:05.870 align:start position:0%
this example here so we have this array
 

03:02:05.870 --> 03:02:10.060 align:start position:0%
this example here so we have this array
of<03:02:06.230><c> 1</c><03:02:06.470><c> 2</c><03:02:06.620><c> 3</c><03:02:06.771><c> 4</c><03:02:07.040><c> 5</c><03:02:07.250><c> 6</c><03:02:07.580><c> and</c><03:02:07.970><c> we're</c><03:02:08.690><c> assigning</c><03:02:09.170><c> the</c>

03:02:10.060 --> 03:02:10.070 align:start position:0%
of 1 2 3 4 5 6 and we're assigning the
 

03:02:10.070 --> 03:02:13.180 align:start position:0%
of 1 2 3 4 5 6 and we're assigning the
variables<03:02:10.730><c> Z</c><03:02:11.061><c> and</c><03:02:11.240><c> X</c><03:02:11.420><c> to</c><03:02:12.320><c> the</c><03:02:12.590><c> first</c><03:02:12.920><c> two</c>

03:02:13.180 --> 03:02:13.190 align:start position:0%
variables Z and X to the first two
 

03:02:13.190 --> 03:02:16.330 align:start position:0%
variables Z and X to the first two
numbers<03:02:13.430><c> of</c><03:02:13.730><c> the</c><03:02:13.820><c> array</c><03:02:14.061><c> 1</c><03:02:14.840><c> &amp;</c><03:02:15.050><c> 2</c><03:02:15.340><c> the</c>

03:02:16.330 --> 03:02:16.340 align:start position:0%
numbers of the array 1 &amp; 2 the
 

03:02:16.340 --> 03:02:18.610 align:start position:0%
numbers of the array 1 &amp; 2 the
difference<03:02:16.880><c> between</c><03:02:17.410><c> destructuring</c><03:02:18.410><c> from</c>

03:02:18.610 --> 03:02:18.620 align:start position:0%
difference between destructuring from
 

03:02:18.620 --> 03:02:20.860 align:start position:0%
difference between destructuring from
arrays<03:02:18.920><c> and</c><03:02:19.220><c> destructuring</c><03:02:19.760><c> from</c><03:02:20.000><c> objects</c><03:02:20.630><c> is</c>

03:02:20.860 --> 03:02:20.870 align:start position:0%
arrays and destructuring from objects is
 

03:02:20.870 --> 03:02:24.070 align:start position:0%
arrays and destructuring from objects is
that<03:02:21.530><c> you</c><03:02:21.650><c> cannot</c><03:02:21.920><c> specify</c><03:02:22.420><c> which</c><03:02:23.420><c> element</c>

03:02:24.070 --> 03:02:24.080 align:start position:0%
that you cannot specify which element
 

03:02:24.080 --> 03:02:26.290 align:start position:0%
that you cannot specify which element
from<03:02:24.350><c> the</c><03:02:24.500><c> array</c><03:02:24.530><c> to</c><03:02:25.130><c> go</c><03:02:25.311><c> into</c><03:02:25.521><c> a</c><03:02:25.550><c> variable</c><03:02:25.970><c> it</c>

03:02:26.290 --> 03:02:26.300 align:start position:0%
from the array to go into a variable it
 

03:02:26.300 --> 03:02:30.040 align:start position:0%
from the array to go into a variable it
just<03:02:26.811><c> goes</c><03:02:27.080><c> in</c><03:02:27.290><c> order</c><03:02:27.710><c> however</c><03:02:28.370><c> if</c><03:02:28.790><c> we</c><03:02:29.480><c> wanted</c>

03:02:30.040 --> 03:02:30.050 align:start position:0%
just goes in order however if we wanted
 

03:02:30.050 --> 03:02:33.790 align:start position:0%
just goes in order however if we wanted
number<03:02:30.890><c> 4</c><03:02:31.311><c> to</c><03:02:31.970><c> be</c><03:02:32.180><c> going</c><03:02:32.510><c> to</c><03:02:32.660><c> a</c><03:02:32.690><c> variable</c><03:02:33.140><c> we</c>

03:02:33.790 --> 03:02:33.800 align:start position:0%
number 4 to be going to a variable we
 

03:02:33.800 --> 03:02:36.011 align:start position:0%
number 4 to be going to a variable we
could<03:02:34.010><c> just</c><03:02:34.190><c> do</c><03:02:34.340><c> like</c><03:02:34.490><c> this</c><03:02:34.840><c> we</c><03:02:35.840><c> would</c><03:02:35.990><c> just</c>

03:02:36.011 --> 03:02:36.021 align:start position:0%
could just do like this we would just
 

03:02:36.021 --> 03:02:39.280 align:start position:0%
could just do like this we would just
add<03:02:36.410><c> some</c><03:02:36.980><c> commas</c><03:02:37.580><c> so</c><03:02:38.061><c> we</c><03:02:38.180><c> put</c><03:02:38.420><c> a</c><03:02:38.450><c> comma</c><03:02:38.900><c> with</c>

03:02:39.280 --> 03:02:39.290 align:start position:0%
add some commas so we put a comma with
 

03:02:39.290 --> 03:02:41.650 align:start position:0%
add some commas so we put a comma with
nothing<03:02:39.740><c> in</c><03:02:39.890><c> it</c><03:02:39.920><c> like</c><03:02:40.160><c> that</c><03:02:40.340><c> two</c><03:02:41.120><c> commas</c><03:02:41.540><c> in</c>

03:02:41.650 --> 03:02:41.660 align:start position:0%
nothing in it like that two commas in
 

03:02:41.660 --> 03:02:45.100 align:start position:0%
nothing in it like that two commas in
row<03:02:41.870><c> and</c><03:02:42.170><c> I'll</c><03:02:42.771><c> put</c><03:02:42.980><c> a</c><03:02:43.010><c> Y</c><03:02:43.280><c> here</c><03:02:43.730><c> so</c><03:02:44.210><c> now</c><03:02:44.480><c> we</c><03:02:44.960><c> have</c>

03:02:45.100 --> 03:02:45.110 align:start position:0%
row and I'll put a Y here so now we have
 

03:02:45.110 --> 03:02:46.960 align:start position:0%
row and I'll put a Y here so now we have
the<03:02:45.230><c> first</c><03:02:45.500><c> element</c><03:02:45.980><c> the</c><03:02:46.100><c> second</c><03:02:46.490><c> element</c><03:02:46.610><c> we</c>

03:02:46.960 --> 03:02:46.970 align:start position:0%
the first element the second element we
 

03:02:46.970 --> 03:02:48.670 align:start position:0%
the first element the second element we
skip<03:02:47.360><c> the</c><03:02:47.540><c> third</c><03:02:47.780><c> element</c><03:02:47.960><c> and</c><03:02:48.380><c> then</c><03:02:48.470><c> we</c><03:02:48.500><c> have</c>

03:02:48.670 --> 03:02:48.680 align:start position:0%
skip the third element and then we have
 

03:02:48.680 --> 03:02:51.400 align:start position:0%
skip the third element and then we have
the<03:02:48.771><c> fourth</c><03:02:49.070><c> element</c><03:02:49.311><c> so</c><03:02:50.090><c> if</c><03:02:50.330><c> I</c><03:02:50.840><c> console</c><03:02:51.320><c> that</c>

03:02:51.400 --> 03:02:51.410 align:start position:0%
the fourth element so if I console that
 

03:02:51.410 --> 03:02:56.261 align:start position:0%
the fourth element so if I console that
log<03:02:51.620><c> z</c><03:02:51.950><c> x</c><03:02:52.250><c> and</c><03:02:52.640><c> y</c><03:02:53.240><c> we</c><03:02:54.021><c> should</c><03:02:54.290><c> see</c><03:02:54.590><c> one</c><03:02:55.460><c> two</c><03:02:55.910><c> and</c>

03:02:56.261 --> 03:02:56.271 align:start position:0%
log z x and y we should see one two and
 

03:02:56.271 --> 03:02:59.410 align:start position:0%
log z x and y we should see one two and
four<03:02:56.890><c> here's</c><03:02:57.890><c> another</c><03:02:58.130><c> thing</c><03:02:58.370><c> you</c><03:02:58.521><c> can</c><03:02:58.700><c> do</c><03:02:58.880><c> you</c>

03:02:59.410 --> 03:02:59.420 align:start position:0%
four here's another thing you can do you
 

03:02:59.420 --> 03:03:01.930 align:start position:0%
four here's another thing you can do you
can<03:02:59.690><c> use</c><03:02:59.960><c> the</c><03:03:00.260><c> structuring</c><03:03:00.771><c> of</c><03:03:00.950><c> arrays</c><03:03:01.280><c> to</c>

03:03:01.930 --> 03:03:01.940 align:start position:0%
can use the structuring of arrays to
 

03:03:01.940 --> 03:03:04.840 align:start position:0%
can use the structuring of arrays to
switch<03:03:02.420><c> the</c><03:03:02.660><c> places</c><03:03:03.230><c> of</c><03:03:03.440><c> variables</c><03:03:04.190><c> let</c><03:03:04.730><c> me</c>

03:03:04.840 --> 03:03:04.850 align:start position:0%
switch the places of variables let me
 

03:03:04.850 --> 03:03:09.280 align:start position:0%
switch the places of variables let me
uncomment<03:03:05.090><c> out</c><03:03:05.780><c> these</c><03:03:06.370><c> and</c><03:03:07.990><c> what</c><03:03:08.990><c> I'm</c><03:03:09.110><c> going</c>

03:03:09.280 --> 03:03:09.290 align:start position:0%
uncomment out these and what I'm going
 

03:03:09.290 --> 03:03:13.060 align:start position:0%
uncomment out these and what I'm going
to<03:03:09.320><c> do</c><03:03:09.620><c> is</c><03:03:10.210><c> use</c><03:03:11.210><c> the</c><03:03:11.811><c> structuring</c><03:03:12.410><c> to</c><03:03:12.680><c> switch</c>

03:03:13.060 --> 03:03:13.070 align:start position:0%
to do is use the structuring to switch
 

03:03:13.070 --> 03:03:16.301 align:start position:0%
to do is use the structuring to switch
the<03:03:13.311><c> places</c><03:03:13.940><c> of</c><03:03:14.180><c> a</c><03:03:14.420><c> and</c><03:03:14.720><c> B</c><03:03:14.960><c> so</c><03:03:15.740><c> it'll</c><03:03:16.010><c> be</c><03:03:16.130><c> like</c>

03:03:16.301 --> 03:03:16.311 align:start position:0%
the places of a and B so it'll be like
 

03:03:16.311 --> 03:03:22.750 align:start position:0%
the places of a and B so it'll be like
this<03:03:16.521><c> I'll</c><03:03:16.970><c> say</c><03:03:17.570><c> a</c><03:03:18.070><c> B</c><03:03:19.070><c> and</c><03:03:19.490><c> I'll</c><03:03:20.120><c> say</c><03:03:20.390><c> equals</c><03:03:21.760><c> B</c>

03:03:22.750 --> 03:03:22.760 align:start position:0%
this I'll say a B and I'll say equals B
 

03:03:22.760 --> 03:03:27.040 align:start position:0%
this I'll say a B and I'll say equals B
a<03:03:24.100><c> so</c><03:03:25.100><c> now</c><03:03:25.820><c> it's</c><03:03:26.120><c> just</c><03:03:26.300><c> taking</c><03:03:26.840><c> this</c><03:03:26.990><c> and</c>

03:03:27.040 --> 03:03:27.050 align:start position:0%
a so now it's just taking this and
 

03:03:27.050 --> 03:03:30.640 align:start position:0%
a so now it's just taking this and
switching<03:03:27.950><c> the</c><03:03:28.370><c> places</c><03:03:29.030><c> so</c><03:03:29.540><c> instead</c><03:03:29.990><c> a</c><03:03:30.200><c> being</c>

03:03:30.640 --> 03:03:30.650 align:start position:0%
switching the places so instead a being
 

03:03:30.650 --> 03:03:32.290 align:start position:0%
switching the places so instead a being
8<03:03:30.920><c> and</c><03:03:31.280><c> B</c><03:03:31.430><c> equals</c><03:03:31.760><c> 6</c>

03:03:32.290 --> 03:03:32.300 align:start position:0%
8 and B equals 6
 

03:03:32.300 --> 03:03:37.180 align:start position:0%
8 and B equals 6
it's<03:03:33.021><c> now</c><03:03:33.290><c> gonna</c><03:03:33.561><c> log</c><03:03:33.890><c> out</c><03:03:34.190><c> 6</c><03:03:35.061><c> and</c><03:03:35.450><c> 8</c><03:03:36.350><c> so</c><03:03:37.160><c> let's</c>

03:03:37.180 --> 03:03:37.190 align:start position:0%
it's now gonna log out 6 and 8 so let's
 

03:03:37.190 --> 03:03:43.480 align:start position:0%
it's now gonna log out 6 and 8 so let's
see<03:03:37.870><c> yep</c><03:03:38.900><c> it</c><03:03:39.440><c> worked</c>

03:03:43.480 --> 03:03:43.490 align:start position:0%
 
 

03:03:43.490 --> 03:03:45.460 align:start position:0%
 
we<03:03:43.850><c> can</c><03:03:44.030><c> use</c><03:03:44.210><c> this</c><03:03:44.420><c> structuring</c><03:03:44.960><c> assignment</c>

03:03:45.460 --> 03:03:45.470 align:start position:0%
we can use this structuring assignment
 

03:03:45.470 --> 03:03:48.100 align:start position:0%
we can use this structuring assignment
with<03:03:45.590><c> the</c><03:03:45.620><c> rest</c><03:03:46.010><c> operator</c><03:03:46.550><c> to</c><03:03:46.790><c> reassign</c><03:03:47.630><c> array</c>

03:03:48.100 --> 03:03:48.110 align:start position:0%
with the rest operator to reassign array
 

03:03:48.110 --> 03:03:50.650 align:start position:0%
with the rest operator to reassign array
elements<03:03:48.770><c> we</c><03:03:49.400><c> can</c><03:03:49.550><c> see</c><03:03:49.729><c> in</c><03:03:49.820><c> this</c><03:03:49.970><c> example</c><03:03:50.330><c> we</c>

03:03:50.650 --> 03:03:50.660 align:start position:0%
elements we can see in this example we
 

03:03:50.660 --> 03:03:52.990 align:start position:0%
elements we can see in this example we
have<03:03:50.690><c> this</c><03:03:50.930><c> array</c><03:03:51.320><c> that</c><03:03:51.860><c> digits</c><03:03:52.250><c> 1</c><03:03:52.520><c> through</c><03:03:52.729><c> 10</c>

03:03:52.990 --> 03:03:53.000 align:start position:0%
have this array that digits 1 through 10
 

03:03:53.000 --> 03:03:55.600 align:start position:0%
have this array that digits 1 through 10
and<03:03:53.330><c> the</c><03:03:53.450><c> array</c><03:03:53.720><c> and</c><03:03:54.020><c> we</c><03:03:54.080><c> have</c><03:03:54.950><c> this</c><03:03:55.130><c> remove</c>

03:03:55.600 --> 03:03:55.610 align:start position:0%
and the array and we have this remove
 

03:03:55.610 --> 03:03:58.630 align:start position:0%
and the array and we have this remove
first<03:03:55.970><c> to</c><03:03:56.360><c> function</c><03:03:57.110><c> we're</c><03:03:57.680><c> calling</c><03:03:58.070><c> it</c><03:03:58.190><c> here</c>

03:03:58.630 --> 03:03:58.640 align:start position:0%
first to function we're calling it here
 

03:03:58.640 --> 03:04:00.460 align:start position:0%
first to function we're calling it here
and<03:03:58.760><c> we're</c><03:03:59.090><c> passing</c><03:03:59.540><c> in</c><03:03:59.630><c> the</c><03:03:59.750><c> source</c><03:04:00.050><c> that's</c>

03:04:00.460 --> 03:04:00.470 align:start position:0%
and we're passing in the source that's
 

03:04:00.470 --> 03:04:04.210 align:start position:0%
and we're passing in the source that's
the<03:04:00.710><c> source</c><03:04:01.100><c> array</c><03:04:01.430><c> and</c><03:04:01.700><c> becomes</c><03:04:02.600><c> the</c><03:04:02.930><c> list</c><03:04:03.290><c> so</c>

03:04:04.210 --> 03:04:04.220 align:start position:0%
the source array and becomes the list so
 

03:04:04.220 --> 03:04:06.880 align:start position:0%
the source array and becomes the list so
we<03:04:04.790><c> want</c><03:04:05.030><c> to</c><03:04:05.180><c> return</c><03:04:05.900><c> the</c><03:04:06.170><c> array</c><03:04:06.410><c> with</c><03:04:06.710><c> the</c>

03:04:06.880 --> 03:04:06.890 align:start position:0%
we want to return the array with the
 

03:04:06.890 --> 03:04:10.210 align:start position:0%
we want to return the array with the
first<03:04:07.220><c> two</c><03:04:07.550><c> elements</c><03:04:07.820><c> removed</c><03:04:08.510><c> so</c><03:04:09.350><c> let's</c><03:04:09.920><c> use</c>

03:04:10.210 --> 03:04:10.220 align:start position:0%
first two elements removed so let's use
 

03:04:10.220 --> 03:04:12.390 align:start position:0%
first two elements removed so let's use
the<03:04:10.490><c> rest</c><03:04:10.760><c> operator</c><03:04:11.330><c> inside</c><03:04:11.840><c> an</c><03:04:11.990><c> array</c><03:04:12.110><c> here</c>

03:04:12.390 --> 03:04:12.400 align:start position:0%
the rest operator inside an array here
 

03:04:12.400 --> 03:04:15.850 align:start position:0%
the rest operator inside an array here
so<03:04:13.400><c> we'll</c><03:04:14.120><c> use</c><03:04:14.540><c> the</c><03:04:14.780><c> rest</c><03:04:14.990><c> operator</c><03:04:15.440><c> the</c><03:04:15.590><c> three</c>

03:04:15.850 --> 03:04:15.860 align:start position:0%
so we'll use the rest operator the three
 

03:04:15.860 --> 03:04:18.460 align:start position:0%
so we'll use the rest operator the three
little<03:04:16.040><c> dots</c><03:04:16.250><c> and</c><03:04:16.670><c> to</c><03:04:17.360><c> remove</c><03:04:17.630><c> the</c><03:04:17.810><c> first</c><03:04:18.050><c> two</c>

03:04:18.460 --> 03:04:18.470 align:start position:0%
little dots and to remove the first two
 

03:04:18.470 --> 03:04:21.790 align:start position:0%
little dots and to remove the first two
I<03:04:18.800><c> just</c><03:04:19.340><c> have</c><03:04:19.490><c> to</c><03:04:19.580><c> put</c><03:04:19.760><c> two</c><03:04:20.090><c> commas</c><03:04:20.930><c> here</c><03:04:21.290><c> with</c>

03:04:21.790 --> 03:04:21.800 align:start position:0%
I just have to put two commas here with
 

03:04:21.800 --> 03:04:25.000 align:start position:0%
I just have to put two commas here with
nothing<03:04:22.310><c> in</c><03:04:22.550><c> between</c><03:04:22.610><c> them</c><03:04:23.300><c> so</c><03:04:24.140><c> it's</c><03:04:24.650><c> saying</c>

03:04:25.000 --> 03:04:25.010 align:start position:0%
nothing in between them so it's saying
 

03:04:25.010 --> 03:04:27.160 align:start position:0%
nothing in between them so it's saying
do<03:04:25.220><c> nothing</c><03:04:25.640><c> for</c><03:04:25.820><c> the</c><03:04:25.910><c> first</c><03:04:26.180><c> element</c><03:04:26.420><c> do</c>

03:04:27.160 --> 03:04:27.170 align:start position:0%
do nothing for the first element do
 

03:04:27.170 --> 03:04:28.440 align:start position:0%
do nothing for the first element do
nothing<03:04:27.560><c> for</c><03:04:27.710><c> the</c><03:04:27.770><c> second</c><03:04:28.190><c> element</c>

03:04:28.440 --> 03:04:28.450 align:start position:0%
nothing for the second element
 

03:04:28.450 --> 03:04:31.140 align:start position:0%
nothing for the second element
everything<03:04:29.450><c> else</c><03:04:29.690><c> put</c><03:04:30.350><c> into</c><03:04:30.740><c> the</c><03:04:30.890><c> our</c>

03:04:31.140 --> 03:04:31.150 align:start position:0%
everything else put into the our
 

03:04:31.150 --> 03:04:35.080 align:start position:0%
everything else put into the our
variable<03:04:32.150><c> we</c><03:04:33.050><c> could</c><03:04:33.500><c> have</c><03:04:33.890><c> assign</c><03:04:34.760><c> the</c><03:04:35.060><c> first</c>

03:04:35.080 --> 03:04:35.090 align:start position:0%
variable we could have assign the first
 

03:04:35.090 --> 03:04:37.030 align:start position:0%
variable we could have assign the first
two<03:04:35.570><c> numbers</c><03:04:35.780><c> in</c><03:04:36.170><c> the</c><03:04:36.200><c> array</c><03:04:36.500><c> to</c><03:04:36.560><c> two</c><03:04:36.830><c> other</c>

03:04:37.030 --> 03:04:37.040 align:start position:0%
two numbers in the array to two other
 

03:04:37.040 --> 03:04:41.410 align:start position:0%
two numbers in the array to two other
variables<03:04:37.550><c> so</c><03:04:37.640><c> I</c><03:04:37.700><c> could</c><03:04:37.940><c> do</c><03:04:38.330><c> a</c><03:04:39.160><c> B</c><03:04:40.160><c> and</c><03:04:40.490><c> then</c><03:04:41.120><c> a</c>

03:04:41.410 --> 03:04:41.420 align:start position:0%
variables so I could do a B and then a
 

03:04:41.420 --> 03:04:45.130 align:start position:0%
variables so I could do a B and then a
would<03:04:41.990><c> be</c><03:04:42.020><c> one</c><03:04:42.410><c> B</c><03:04:43.040><c> would</c><03:04:43.280><c> be</c><03:04:43.310><c> two</c><03:04:43.910><c> and</c><03:04:44.210><c> then</c><03:04:44.900><c> R</c>

03:04:45.130 --> 03:04:45.140 align:start position:0%
would be one B would be two and then R
 

03:04:45.140 --> 03:04:47.050 align:start position:0%
would be one B would be two and then R
would<03:04:45.710><c> be</c><03:04:45.770><c> an</c><03:04:45.950><c> array</c><03:04:46.220><c> of</c><03:04:46.250><c> three</c><03:04:46.640><c> four</c><03:04:46.850><c> five</c><03:04:46.910><c> six</c>

03:04:47.050 --> 03:04:47.060 align:start position:0%
would be an array of three four five six
 

03:04:47.060 --> 03:04:49.540 align:start position:0%
would be an array of three four five six
seven<03:04:47.180><c> eight</c><03:04:47.330><c> nine</c><03:04:47.390><c> ten</c><03:04:47.720><c> but</c><03:04:48.440><c> right</c><03:04:48.860><c> now</c><03:04:49.100><c> we</c>

03:04:49.540 --> 03:04:49.550 align:start position:0%
seven eight nine ten but right now we
 

03:04:49.550 --> 03:04:51.969 align:start position:0%
seven eight nine ten but right now we
just<03:04:49.580><c> need</c><03:04:49.970><c> to</c><03:04:50.270><c> return</c><03:04:50.450><c> the</c><03:04:51.020><c> array</c><03:04:51.290><c> with</c><03:04:51.800><c> the</c>

03:04:51.969 --> 03:04:51.979 align:start position:0%
just need to return the array with the
 

03:04:51.979 --> 03:04:55.390 align:start position:0%
just need to return the array with the
first<03:04:52.310><c> two</c><03:04:52.550><c> elements</c><03:04:52.790><c> missing</c><03:04:53.630><c> so</c><03:04:54.260><c> if</c><03:04:54.500><c> I</c><03:04:55.010><c> run</c>

03:04:55.390 --> 03:04:55.400 align:start position:0%
first two elements missing so if I run
 

03:04:55.400 --> 03:04:57.580 align:start position:0%
first two elements missing so if I run
that<03:04:55.610><c> you'll</c><03:04:55.880><c> see</c><03:04:56.210><c> that</c><03:04:56.690><c> we</c><03:04:56.870><c> did</c><03:04:57.080><c> that</c><03:04:57.260><c> if</c><03:04:57.410><c> you</c>

03:04:57.580 --> 03:04:57.590 align:start position:0%
that you'll see that we did that if you
 

03:04:57.590 --> 03:05:00.130 align:start position:0%
that you'll see that we did that if you
look<03:04:57.770><c> in</c><03:04:57.860><c> the</c><03:04:57.950><c> console</c><03:04:58.540><c> we've</c><03:04:59.540><c> logged</c><03:04:59.900><c> the</c>

03:05:00.130 --> 03:05:00.140 align:start position:0%
look in the console we've logged the
 

03:05:00.140 --> 03:05:01.840 align:start position:0%
look in the console we've logged the
array<03:05:00.380><c> and</c><03:05:00.590><c> the</c><03:05:00.680><c> first</c><03:05:01.010><c> two</c><03:05:01.250><c> elements</c><03:05:01.430><c> are</c>

03:05:01.840 --> 03:05:01.850 align:start position:0%
array and the first two elements are
 

03:05:01.850 --> 03:05:03.280 align:start position:0%
array and the first two elements are
missing<03:05:02.300><c> and</c><03:05:02.510><c> then</c><03:05:02.720><c> we</c><03:05:02.810><c> have</c><03:05:02.960><c> the</c><03:05:03.200><c> original</c>

03:05:03.280 --> 03:05:03.290 align:start position:0%
missing and then we have the original
 

03:05:03.290 --> 03:05:08.160 align:start position:0%
missing and then we have the original
array<03:05:04.190><c> down</c><03:05:04.430><c> here</c>

03:05:08.160 --> 03:05:08.170 align:start position:0%
 
 

03:05:08.170 --> 03:05:10.679 align:start position:0%
 
you<03:05:08.950><c> can</c><03:05:09.130><c> use</c><03:05:09.310><c> the</c><03:05:09.550><c> structuring</c><03:05:10.060><c> assignment</c>

03:05:10.679 --> 03:05:10.689 align:start position:0%
you can use the structuring assignment
 

03:05:10.689 --> 03:05:12.870 align:start position:0%
you can use the structuring assignment
to<03:05:10.930><c> pass</c><03:05:11.170><c> an</c><03:05:11.380><c> object</c><03:05:11.620><c> as</c><03:05:12.070><c> a</c><03:05:12.340><c> functions</c>

03:05:12.870 --> 03:05:12.880 align:start position:0%
to pass an object as a functions
 

03:05:12.880 --> 03:05:15.480 align:start position:0%
to pass an object as a functions
parameter<03:05:13.720><c> let</c><03:05:14.410><c> me</c><03:05:14.530><c> show</c><03:05:14.740><c> you</c><03:05:14.800><c> what</c><03:05:15.160><c> I</c><03:05:15.189><c> mean</c>

03:05:15.480 --> 03:05:15.490 align:start position:0%
parameter let me show you what I mean
 

03:05:15.490 --> 03:05:18.179 align:start position:0%
parameter let me show you what I mean
right<03:05:16.150><c> now</c><03:05:16.360><c> we</c><03:05:16.420><c> have</c><03:05:16.780><c> this</c><03:05:16.960><c> half</c><03:05:17.290><c> function</c><03:05:17.950><c> and</c>

03:05:18.179 --> 03:05:18.189 align:start position:0%
right now we have this half function and
 

03:05:18.189 --> 03:05:21.780 align:start position:0%
right now we have this half function and
it's<03:05:18.700><c> getting</c><03:05:19.090><c> the</c><03:05:19.240><c> stats</c><03:05:19.630><c> argument</c><03:05:20.590><c> so</c><03:05:21.310><c> the</c>

03:05:21.780 --> 03:05:21.790 align:start position:0%
it's getting the stats argument so the
 

03:05:21.790 --> 03:05:23.580 align:start position:0%
it's getting the stats argument so the
stats<03:05:22.150><c> is</c><03:05:22.390><c> being</c><03:05:22.630><c> passed</c><03:05:22.900><c> when</c><03:05:23.170><c> it's</c><03:05:23.320><c> called</c>

03:05:23.580 --> 03:05:23.590 align:start position:0%
stats is being passed when it's called
 

03:05:23.590 --> 03:05:26.820 align:start position:0%
stats is being passed when it's called
down<03:05:23.860><c> here</c><03:05:24.400><c> and</c><03:05:24.580><c> it's</c><03:05:25.090><c> passing</c><03:05:25.660><c> in</c><03:05:25.810><c> this</c><03:05:26.350><c> whole</c>

03:05:26.820 --> 03:05:26.830 align:start position:0%
down here and it's passing in this whole
 

03:05:26.830 --> 03:05:29.730 align:start position:0%
down here and it's passing in this whole
object<03:05:27.670><c> so</c><03:05:27.790><c> this</c><03:05:27.910><c> whole</c><03:05:28.150><c> stats</c><03:05:28.510><c> object</c><03:05:29.140><c> but</c>

03:05:29.730 --> 03:05:29.740 align:start position:0%
object so this whole stats object but
 

03:05:29.740 --> 03:05:31.320 align:start position:0%
object so this whole stats object but
you<03:05:29.830><c> can</c><03:05:29.979><c> see</c><03:05:30.160><c> within</c><03:05:30.340><c> this</c><03:05:30.550><c> function</c><03:05:31.120><c> we're</c>

03:05:31.320 --> 03:05:31.330 align:start position:0%
you can see within this function we're
 

03:05:31.330 --> 03:05:34.230 align:start position:0%
you can see within this function we're
only<03:05:31.540><c> using</c><03:05:31.900><c> stats</c><03:05:32.439><c> that</c><03:05:32.710><c> Max</c><03:05:33.160><c> and</c><03:05:33.520><c> stats</c><03:05:33.910><c> top</c>

03:05:34.230 --> 03:05:34.240 align:start position:0%
only using stats that Max and stats top
 

03:05:34.240 --> 03:05:37.500 align:start position:0%
only using stats that Max and stats top
men<03:05:34.600><c> so</c><03:05:35.380><c> instead</c><03:05:35.920><c> of</c><03:05:35.979><c> passing</c><03:05:36.430><c> the</c><03:05:37.030><c> entire</c>

03:05:37.500 --> 03:05:37.510 align:start position:0%
men so instead of passing the entire
 

03:05:37.510 --> 03:05:40.920 align:start position:0%
men so instead of passing the entire
stats<03:05:38.140><c> into</c><03:05:38.620><c> this</c><03:05:39.340><c> function</c><03:05:39.910><c> we</c><03:05:40.390><c> can</c><03:05:40.570><c> just</c>

03:05:40.920 --> 03:05:40.930 align:start position:0%
stats into this function we can just
 

03:05:40.930 --> 03:05:43.560 align:start position:0%
stats into this function we can just
pass<03:05:41.290><c> in</c><03:05:41.590><c> what</c><03:05:41.800><c> we</c><03:05:41.950><c> need</c><03:05:42.250><c> so</c><03:05:42.970><c> this</c><03:05:43.240><c> is</c><03:05:43.420><c> what</c>

03:05:43.560 --> 03:05:43.570 align:start position:0%
pass in what we need so this is what
 

03:05:43.570 --> 03:05:46.170 align:start position:0%
pass in what we need so this is what
we're<03:05:43.689><c> gonna</c><03:05:43.780><c> do</c><03:05:44.050><c> I'm</c><03:05:44.380><c> going</c><03:05:44.979><c> to</c><03:05:45.189><c> put</c><03:05:45.610><c> in</c><03:05:45.790><c> some</c>

03:05:46.170 --> 03:05:46.180 align:start position:0%
we're gonna do I'm going to put in some
 

03:05:46.180 --> 03:05:50.630 align:start position:0%
we're gonna do I'm going to put in some
curly<03:05:46.720><c> braces</c><03:05:46.960><c> here</c><03:05:47.170><c> and</c><03:05:47.650><c> just</c><03:05:48.340><c> put</c><03:05:48.640><c> Max</c><03:05:49.270><c> and</c>

03:05:50.630 --> 03:05:50.640 align:start position:0%
curly braces here and just put Max and
 

03:05:50.640 --> 03:05:56.460 align:start position:0%
curly braces here and just put Max and
min<03:05:52.140><c> so</c><03:05:53.140><c> now</c><03:05:53.500><c> when</c><03:05:54.220><c> stats</c><03:05:54.790><c> get</c><03:05:55.090><c> passed</c><03:05:55.510><c> in</c><03:05:55.900><c> it's</c>

03:05:56.460 --> 03:05:56.470 align:start position:0%
min so now when stats get passed in it's
 

03:05:56.470 --> 03:06:00.770 align:start position:0%
min so now when stats get passed in it's
D<03:05:56.860><c> structured</c><03:05:57.610><c> into</c><03:05:58.540><c> just</c><03:05:59.260><c> the</c><03:05:59.439><c> max</c><03:05:59.770><c> and</c><03:06:00.010><c> min</c>

03:06:00.770 --> 03:06:00.780 align:start position:0%
D structured into just the max and min
 

03:06:00.780 --> 03:06:03.420 align:start position:0%
D structured into just the max and min
variables<03:06:01.780><c> and</c><03:06:02.050><c> the</c><03:06:02.229><c> max</c><03:06:02.500><c> and</c><03:06:02.710><c> min</c><03:06:02.800><c> from</c><03:06:03.310><c> the</c>

03:06:03.420 --> 03:06:03.430 align:start position:0%
variables and the max and min from the
 

03:06:03.430 --> 03:06:05.790 align:start position:0%
variables and the max and min from the
function<03:06:03.850><c> gets</c><03:06:04.030><c> passed</c><03:06:04.360><c> in</c><03:06:04.660><c> so</c><03:06:05.260><c> now</c><03:06:05.530><c> instead</c>

03:06:05.790 --> 03:06:05.800 align:start position:0%
function gets passed in so now instead
 

03:06:05.800 --> 03:06:08.840 align:start position:0%
function gets passed in so now instead
of<03:06:06.040><c> doing</c><03:06:06.160><c> stats</c><03:06:06.610><c> that</c><03:06:06.910><c> max</c><03:06:07.270><c> we</c><03:06:08.020><c> can</c><03:06:08.229><c> just</c><03:06:08.410><c> do</c>

03:06:08.840 --> 03:06:08.850 align:start position:0%
of doing stats that max we can just do
 

03:06:08.850 --> 03:06:13.170 align:start position:0%
of doing stats that max we can just do
max<03:06:09.850><c> and</c><03:06:10.240><c> sort</c><03:06:10.870><c> of</c><03:06:10.930><c> stats</c><03:06:11.320><c> that</c><03:06:11.590><c> men</c><03:06:11.979><c> we</c><03:06:12.640><c> can</c><03:06:12.910><c> do</c>

03:06:13.170 --> 03:06:13.180 align:start position:0%
max and sort of stats that men we can do
 

03:06:13.180 --> 03:06:17.100 align:start position:0%
max and sort of stats that men we can do
men<03:06:13.990><c> so</c><03:06:14.770><c> if</c><03:06:15.040><c> we</c><03:06:15.370><c> reload</c><03:06:15.880><c> that</c><03:06:15.910><c> it's</c><03:06:16.630><c> gonna</c><03:06:16.810><c> work</c>

03:06:17.100 --> 03:06:17.110 align:start position:0%
men so if we reload that it's gonna work
 

03:06:17.110 --> 03:06:19.740 align:start position:0%
men so if we reload that it's gonna work
exactly<03:06:17.290><c> like</c><03:06:17.710><c> it</c><03:06:18.040><c> did</c><03:06:18.250><c> before</c><03:06:18.460><c> but</c><03:06:19.420><c> now</c><03:06:19.479><c> we</c>

03:06:19.740 --> 03:06:19.750 align:start position:0%
exactly like it did before but now we
 

03:06:19.750 --> 03:06:22.469 align:start position:0%
exactly like it did before but now we
only<03:06:20.229><c> pass</c><03:06:20.590><c> in</c><03:06:20.830><c> what</c><03:06:20.979><c> we</c><03:06:21.100><c> need</c><03:06:21.400><c> this</c><03:06:22.270><c> is</c>

03:06:22.469 --> 03:06:22.479 align:start position:0%
only pass in what we need this is
 

03:06:22.479 --> 03:06:26.010 align:start position:0%
only pass in what we need this is
commonly<03:06:22.990><c> used</c><03:06:23.140><c> with</c><03:06:23.860><c> API</c><03:06:24.400><c> calls</c><03:06:24.850><c> when</c><03:06:25.750><c> you</c>

03:06:26.010 --> 03:06:26.020 align:start position:0%
commonly used with API calls when you
 

03:06:26.020 --> 03:06:27.990 align:start position:0%
commonly used with API calls when you
are<03:06:26.229><c> getting</c><03:06:26.410><c> information</c><03:06:26.800><c> from</c><03:06:27.160><c> an</c><03:06:27.520><c> ajax</c>

03:06:27.990 --> 03:06:28.000 align:start position:0%
are getting information from an ajax
 

03:06:28.000 --> 03:06:30.540 align:start position:0%
are getting information from an ajax
request<03:06:28.420><c> or</c><03:06:28.630><c> an</c><03:06:28.689><c> api</c><03:06:29.020><c> request</c><03:06:29.650><c> it</c><03:06:30.189><c> will</c><03:06:30.370><c> often</c>

03:06:30.540 --> 03:06:30.550 align:start position:0%
request or an api request it will often
 

03:06:30.550 --> 03:06:32.130 align:start position:0%
request or an api request it will often
have<03:06:30.850><c> a</c><03:06:30.880><c> lot</c><03:06:31.090><c> more</c><03:06:31.300><c> information</c><03:06:31.540><c> that</c><03:06:31.990><c> what</c>

03:06:32.130 --> 03:06:32.140 align:start position:0%
have a lot more information that what
 

03:06:32.140 --> 03:06:35.010 align:start position:0%
have a lot more information that what
you<03:06:32.290><c> need</c><03:06:32.590><c> and</c><03:06:32.860><c> you</c><03:06:32.950><c> can</c><03:06:33.430><c> use</c><03:06:34.090><c> destructuring</c>

03:06:35.010 --> 03:06:35.020 align:start position:0%
you need and you can use destructuring
 

03:06:35.020 --> 03:06:37.380 align:start position:0%
you need and you can use destructuring
to<03:06:35.470><c> get</c><03:06:35.830><c> it</c><03:06:35.920><c> down</c><03:06:36.100><c> to</c><03:06:36.130><c> what</c><03:06:36.520><c> we</c><03:06:36.670><c> actually</c><03:06:37.180><c> want</c>

03:06:37.380 --> 03:06:37.390 align:start position:0%
to get it down to what we actually want
 

03:06:37.390 --> 03:06:41.550 align:start position:0%
to get it down to what we actually want
to<03:06:37.450><c> work</c><03:06:37.630><c> with</c>

03:06:41.550 --> 03:06:41.560 align:start position:0%
 
 

03:06:41.560 --> 03:06:44.260 align:start position:0%
 
template<03:06:42.560><c> literals</c><03:06:42.949><c> are</c><03:06:43.189><c> a</c><03:06:43.250><c> special</c><03:06:44.000><c> type</c><03:06:44.239><c> of</c>

03:06:44.260 --> 03:06:44.270 align:start position:0%
template literals are a special type of
 

03:06:44.270 --> 03:06:46.630 align:start position:0%
template literals are a special type of
string<03:06:44.840><c> that</c><03:06:45.170><c> makes</c><03:06:45.470><c> creating</c><03:06:45.890><c> complex</c>

03:06:46.630 --> 03:06:46.640 align:start position:0%
string that makes creating complex
 

03:06:46.640 --> 03:06:49.660 align:start position:0%
string that makes creating complex
strings<03:06:47.390><c> easier</c><03:06:48.109><c> you</c><03:06:48.830><c> make</c><03:06:49.069><c> them</c><03:06:49.250><c> with</c><03:06:49.460><c> this</c>

03:06:49.660 --> 03:06:49.670 align:start position:0%
strings easier you make them with this
 

03:06:49.670 --> 03:06:52.450 align:start position:0%
strings easier you make them with this
backtick<03:06:50.359><c> so</c><03:06:50.899><c> here's</c><03:06:51.380><c> an</c><03:06:51.500><c> example</c><03:06:51.859><c> of</c><03:06:52.279><c> a</c>

03:06:52.450 --> 03:06:52.460 align:start position:0%
backtick so here's an example of a
 

03:06:52.460 --> 03:06:55.090 align:start position:0%
backtick so here's an example of a
template<03:06:52.970><c> literal</c><03:06:53.540><c> right</c><03:06:53.750><c> here</c><03:06:54.109><c> we</c><03:06:54.620><c> have</c><03:06:54.920><c> the</c>

03:06:55.090 --> 03:06:55.100 align:start position:0%
template literal right here we have the
 

03:06:55.100 --> 03:06:57.370 align:start position:0%
template literal right here we have the
beginning<03:06:55.279><c> back</c><03:06:55.819><c> tick</c><03:06:56.149><c> and</c><03:06:56.420><c> we</c><03:06:56.960><c> have</c><03:06:57.170><c> the</c>

03:06:57.370 --> 03:06:57.380 align:start position:0%
beginning back tick and we have the
 

03:06:57.380 --> 03:07:00.519 align:start position:0%
beginning back tick and we have the
ending<03:06:57.890><c> back</c><03:06:58.159><c> tick</c><03:06:58.520><c> this</c><03:06:59.270><c> would</c><03:06:59.540><c> be</c><03:06:59.720><c> in</c><03:06:59.840><c> place</c>

03:07:00.519 --> 03:07:00.529 align:start position:0%
ending back tick this would be in place
 

03:07:00.529 --> 03:07:03.010 align:start position:0%
ending back tick this would be in place
of<03:07:00.800><c> using</c><03:07:01.340><c> a</c><03:07:01.460><c> quotation</c><03:07:02.000><c> a</c><03:07:02.330><c> single</c><03:07:02.750><c> or</c><03:07:02.840><c> double</c>

03:07:03.010 --> 03:07:03.020 align:start position:0%
of using a quotation a single or double
 

03:07:03.020 --> 03:07:06.189 align:start position:0%
of using a quotation a single or double
quotation<03:07:03.739><c> mark</c><03:07:04.010><c> a</c><03:07:04.279><c> few</c><03:07:04.970><c> advantages</c><03:07:05.120><c> of</c><03:07:05.779><c> using</c>

03:07:06.189 --> 03:07:06.199 align:start position:0%
quotation mark a few advantages of using
 

03:07:06.199 --> 03:07:08.590 align:start position:0%
quotation mark a few advantages of using
these<03:07:06.500><c> template</c><03:07:07.100><c> literals</c><03:07:07.609><c> these</c><03:07:07.909><c> back</c><03:07:08.239><c> ticks</c>

03:07:08.590 --> 03:07:08.600 align:start position:0%
these template literals these back ticks
 

03:07:08.600 --> 03:07:11.979 align:start position:0%
these template literals these back ticks
instead<03:07:09.109><c> of</c><03:07:09.229><c> quotation</c><03:07:09.890><c> marks</c><03:07:10.250><c> are</c><03:07:10.720><c> one</c><03:07:11.720><c> you</c>

03:07:11.979 --> 03:07:11.989 align:start position:0%
instead of quotation marks are one you
 

03:07:11.989 --> 03:07:14.530 align:start position:0%
instead of quotation marks are one you
can<03:07:12.170><c> make</c><03:07:12.290><c> multi-line</c><03:07:13.010><c> strings</c><03:07:13.550><c> you</c><03:07:14.149><c> can</c><03:07:14.180><c> see</c>

03:07:14.530 --> 03:07:14.540 align:start position:0%
can make multi-line strings you can see
 

03:07:14.540 --> 03:07:16.450 align:start position:0%
can make multi-line strings you can see
this<03:07:14.689><c> has</c><03:07:14.899><c> two</c><03:07:15.140><c> lines</c><03:07:15.350><c> here's</c><03:07:15.739><c> the</c><03:07:15.920><c> first</c><03:07:16.189><c> line</c>

03:07:16.450 --> 03:07:16.460 align:start position:0%
this has two lines here's the first line
 

03:07:16.460 --> 03:07:19.899 align:start position:0%
this has two lines here's the first line
and<03:07:16.790><c> here's</c><03:07:17.510><c> the</c><03:07:17.750><c> second</c><03:07:18.199><c> line</c><03:07:18.380><c> and</c><03:07:18.770><c> if</c><03:07:19.370><c> we</c><03:07:19.550><c> log</c>

03:07:19.899 --> 03:07:19.909 align:start position:0%
and here's the second line and if we log
 

03:07:19.909 --> 03:07:22.300 align:start position:0%
and here's the second line and if we log
the<03:07:20.300><c> greeting</c><03:07:20.989><c> is</c><03:07:21.109><c> gonna</c><03:07:21.319><c> put</c><03:07:21.710><c> the</c><03:07:21.859><c> new</c><03:07:22.069><c> line</c>

03:07:22.300 --> 03:07:22.310 align:start position:0%
the greeting is gonna put the new line
 

03:07:22.310 --> 03:07:25.120 align:start position:0%
the greeting is gonna put the new line
right<03:07:22.640><c> in</c><03:07:22.670><c> there</c><03:07:23.000><c> another</c><03:07:23.840><c> thing</c><03:07:23.930><c> is</c><03:07:24.409><c> you</c><03:07:24.859><c> can</c>

03:07:25.120 --> 03:07:25.130 align:start position:0%
right in there another thing is you can
 

03:07:25.130 --> 03:07:27.639 align:start position:0%
right in there another thing is you can
add<03:07:25.370><c> quote</c><03:07:26.090><c> single</c><03:07:26.569><c> or</c><03:07:26.750><c> double</c><03:07:26.899><c> quotation</c>

03:07:27.639 --> 03:07:27.649 align:start position:0%
add quote single or double quotation
 

03:07:27.649 --> 03:07:30.639 align:start position:0%
add quote single or double quotation
marks<03:07:27.680><c> right</c><03:07:28.340><c> in</c><03:07:28.609><c> the</c><03:07:29.479><c> string</c><03:07:29.899><c> and</c><03:07:30.229><c> you</c><03:07:30.470><c> don't</c>

03:07:30.639 --> 03:07:30.649 align:start position:0%
marks right in the string and you don't
 

03:07:30.649 --> 03:07:32.979 align:start position:0%
marks right in the string and you don't
have<03:07:30.800><c> to</c><03:07:30.979><c> escape</c><03:07:31.370><c> them</c><03:07:31.670><c> the</c><03:07:32.300><c> third</c><03:07:32.630><c> thing</c><03:07:32.930><c> is</c>

03:07:32.979 --> 03:07:32.989 align:start position:0%
have to escape them the third thing is
 

03:07:32.989 --> 03:07:35.439 align:start position:0%
have to escape them the third thing is
you<03:07:33.229><c> can</c><03:07:33.590><c> put</c><03:07:33.620><c> variables</c><03:07:34.520><c> right</c><03:07:34.760><c> in</c><03:07:35.090><c> the</c>

03:07:35.439 --> 03:07:35.449 align:start position:0%
you can put variables right in the
 

03:07:35.449 --> 03:07:38.050 align:start position:0%
you can put variables right in the
string<03:07:35.779><c> so</c><03:07:36.350><c> if</c><03:07:36.439><c> we</c><03:07:36.590><c> see</c><03:07:36.890><c> this</c><03:07:37.159><c> see</c><03:07:37.430><c> the</c><03:07:37.640><c> dollar</c>

03:07:38.050 --> 03:07:38.060 align:start position:0%
string so if we see this see the dollar
 

03:07:38.060 --> 03:07:40.149 align:start position:0%
string so if we see this see the dollar
sign<03:07:38.420><c> and</c><03:07:38.750><c> then</c><03:07:39.109><c> we</c><03:07:39.140><c> have</c><03:07:39.290><c> these</c><03:07:39.409><c> curly</c><03:07:39.949><c> braces</c>

03:07:40.149 --> 03:07:40.159 align:start position:0%
sign and then we have these curly braces
 

03:07:40.159 --> 03:07:44.320 align:start position:0%
sign and then we have these curly braces
and<03:07:40.760><c> so</c><03:07:41.569><c> anything</c><03:07:41.930><c> in</c><03:07:42.850><c> between</c><03:07:43.850><c> these</c><03:07:43.970><c> curly</c>

03:07:44.320 --> 03:07:44.330 align:start position:0%
and so anything in between these curly
 

03:07:44.330 --> 03:07:45.729 align:start position:0%
and so anything in between these curly
braces<03:07:44.659><c> that</c><03:07:45.109><c> start</c><03:07:45.290><c> with</c><03:07:45.350><c> the</c><03:07:45.439><c> dollar</c><03:07:45.620><c> sign</c>

03:07:45.729 --> 03:07:45.739 align:start position:0%
braces that start with the dollar sign
 

03:07:45.739 --> 03:07:49.510 align:start position:0%
braces that start with the dollar sign
is<03:07:46.870><c> JavaScript</c><03:07:47.870><c> so</c><03:07:48.649><c> right</c><03:07:48.920><c> now</c><03:07:49.069><c> we</c><03:07:49.130><c> just</c><03:07:49.370><c> have</c>

03:07:49.510 --> 03:07:49.520 align:start position:0%
is JavaScript so right now we just have
 

03:07:49.520 --> 03:07:51.939 align:start position:0%
is JavaScript so right now we just have
this<03:07:49.609><c> variable</c><03:07:50.060><c> person</c><03:07:50.689><c> name</c><03:07:51.170><c> which</c><03:07:51.470><c> gets</c><03:07:51.739><c> the</c>

03:07:51.939 --> 03:07:51.949 align:start position:0%
this variable person name which gets the
 

03:07:51.949 --> 03:07:53.830 align:start position:0%
this variable person name which gets the
name<03:07:52.100><c> from</c><03:07:52.340><c> up</c><03:07:52.489><c> here</c><03:07:52.790><c> and</c><03:07:52.939><c> then</c><03:07:53.390><c> here</c><03:07:53.630><c> we</c><03:07:53.810><c> have</c>

03:07:53.830 --> 03:07:53.840 align:start position:0%
name from up here and then here we have
 

03:07:53.840 --> 03:07:55.870 align:start position:0%
name from up here and then here we have
person<03:07:54.350><c> that</c><03:07:54.470><c> age</c><03:07:54.680><c> which</c><03:07:55.010><c> gets</c><03:07:55.279><c> the</c><03:07:55.399><c> age</c><03:07:55.609><c> from</c>

03:07:55.870 --> 03:07:55.880 align:start position:0%
person that age which gets the age from
 

03:07:55.880 --> 03:07:58.960 align:start position:0%
person that age which gets the age from
right<03:07:56.090><c> there</c><03:07:56.140><c> so</c><03:07:57.140><c> it</c><03:07:58.100><c> makes</c><03:07:58.340><c> things</c><03:07:58.460><c> easier</c>

03:07:58.960 --> 03:07:58.970 align:start position:0%
right there so it makes things easier
 

03:07:58.970 --> 03:08:01.090 align:start position:0%
right there so it makes things easier
that<03:07:59.149><c> you</c><03:07:59.239><c> can</c><03:07:59.390><c> put</c><03:07:59.600><c> variables</c><03:08:00.199><c> right</c><03:08:00.500><c> in</c><03:08:00.739><c> the</c>

03:08:01.090 --> 03:08:01.100 align:start position:0%
that you can put variables right in the
 

03:08:01.100 --> 03:08:03.729 align:start position:0%
that you can put variables right in the
strings<03:08:01.460><c> so</c><03:08:02.090><c> if</c><03:08:02.210><c> we</c><03:08:02.330><c> run</c><03:08:02.600><c> that</c><03:08:02.630><c> you'll</c><03:08:03.470><c> see</c>

03:08:03.729 --> 03:08:03.739 align:start position:0%
strings so if we run that you'll see
 

03:08:03.739 --> 03:08:06.849 align:start position:0%
strings so if we run that you'll see
hello<03:08:04.220><c> my</c><03:08:04.520><c> name</c><03:08:04.699><c> is</c><03:08:04.729><c> zodiac</c><03:08:05.120><c> as</c><03:08:05.479><c> bro</c><03:08:05.779><c> I</c><03:08:05.989><c> am</c><03:08:06.260><c> 56</c>

03:08:06.849 --> 03:08:06.859 align:start position:0%
hello my name is zodiac as bro I am 56
 

03:08:06.859 --> 03:08:10.660 align:start position:0%
hello my name is zodiac as bro I am 56
years<03:08:07.159><c> old</c><03:08:07.340><c> and</c><03:08:08.770><c> normally</c><03:08:09.770><c> it</c><03:08:10.040><c> would</c><03:08:10.310><c> actually</c>

03:08:10.660 --> 03:08:10.670 align:start position:0%
years old and normally it would actually
 

03:08:10.670 --> 03:08:13.330 align:start position:0%
years old and normally it would actually
also<03:08:10.880><c> be</c><03:08:11.090><c> printed</c><03:08:11.479><c> with</c><03:08:11.779><c> a</c><03:08:11.810><c> newline</c><03:08:12.500><c> but</c><03:08:13.189><c> with</c>

03:08:13.330 --> 03:08:13.340 align:start position:0%
also be printed with a newline but with
 

03:08:13.340 --> 03:08:15.969 align:start position:0%
also be printed with a newline but with
this<03:08:13.520><c> exact</c><03:08:13.880><c> code</c><03:08:14.270><c> editor</c><03:08:14.750><c> and</c><03:08:15.020><c> console</c><03:08:15.890><c> it</c>

03:08:15.969 --> 03:08:15.979 align:start position:0%
this exact code editor and console it
 

03:08:15.979 --> 03:08:18.670 align:start position:0%
this exact code editor and console it
doesn't<03:08:16.250><c> show</c><03:08:16.460><c> the</c><03:08:16.640><c> newline</c><03:08:17.000><c> so</c><03:08:17.989><c> there's</c>

03:08:18.670 --> 03:08:18.680 align:start position:0%
doesn't show the newline so there's
 

03:08:18.680 --> 03:08:20.080 align:start position:0%
doesn't show the newline so there's
gonna<03:08:18.830><c> be</c><03:08:18.920><c> a</c><03:08:18.979><c> coding</c><03:08:19.370><c> challenge</c><03:08:19.819><c> that</c><03:08:19.970><c> we're</c>

03:08:20.080 --> 03:08:20.090 align:start position:0%
gonna be a coding challenge that we're
 

03:08:20.090 --> 03:08:23.019 align:start position:0%
gonna be a coding challenge that we're
gonna<03:08:20.180><c> do</c><03:08:20.359><c> right</c><03:08:20.569><c> down</c><03:08:20.779><c> here</c><03:08:21.399><c> we</c><03:08:22.399><c> have</c><03:08:22.729><c> this</c>

03:08:23.019 --> 03:08:23.029 align:start position:0%
gonna do right down here we have this
 

03:08:23.029 --> 03:08:26.519 align:start position:0%
gonna do right down here we have this
make<03:08:23.479><c> list</c><03:08:23.960><c> function</c><03:08:24.470><c> and</c><03:08:25.040><c> we</c><03:08:25.640><c> want</c><03:08:25.880><c> it</c><03:08:26.120><c> to</c>

03:08:26.519 --> 03:08:26.529 align:start position:0%
make list function and we want it to
 

03:08:26.529 --> 03:08:30.729 align:start position:0%
make list function and we want it to
create<03:08:27.529><c> a</c><03:08:27.710><c> list</c><03:08:28.220><c> based</c><03:08:29.149><c> on</c><03:08:29.510><c> the</c><03:08:30.199><c> array</c><03:08:30.529><c> that's</c>

03:08:30.729 --> 03:08:30.739 align:start position:0%
create a list based on the array that's
 

03:08:30.739 --> 03:08:34.059 align:start position:0%
create a list based on the array that's
passed<03:08:31.159><c> in</c><03:08:31.550><c> so</c><03:08:32.239><c> when</c><03:08:32.870><c> we</c><03:08:32.989><c> call</c><03:08:33.260><c> make</c><03:08:33.560><c> list</c><03:08:33.800><c> we</c>

03:08:34.059 --> 03:08:34.069 align:start position:0%
passed in so when we call make list we
 

03:08:34.069 --> 03:08:36.550 align:start position:0%
passed in so when we call make list we
pass<03:08:34.580><c> and</c><03:08:34.819><c> result</c><03:08:35.210><c> that</c><03:08:35.420><c> failure</c><03:08:35.930><c> wellhere's</c>

03:08:36.550 --> 03:08:36.560 align:start position:0%
pass and result that failure wellhere's
 

03:08:36.560 --> 03:08:39.309 align:start position:0%
pass and result that failure wellhere's
results<03:08:37.100><c> result</c><03:08:37.460><c> dot</c><03:08:37.640><c> failure</c><03:08:38.149><c> is</c><03:08:38.359><c> this</c><03:08:38.989><c> array</c>

03:08:39.309 --> 03:08:39.319 align:start position:0%
results result dot failure is this array
 

03:08:39.319 --> 03:08:42.519 align:start position:0%
results result dot failure is this array
here<03:08:39.800><c> and</c><03:08:39.979><c> we</c><03:08:40.640><c> want</c><03:08:40.909><c> it</c><03:08:41.120><c> to</c><03:08:41.180><c> return</c><03:08:41.870><c> an</c><03:08:42.199><c> array</c>

03:08:42.519 --> 03:08:42.529 align:start position:0%
here and we want it to return an array
 

03:08:42.529 --> 03:08:43.599 align:start position:0%
here and we want it to return an array
that<03:08:42.560><c> looks</c><03:08:42.920><c> like</c><03:08:43.040><c> this</c>

03:08:43.599 --> 03:08:43.609 align:start position:0%
that looks like this
 

03:08:43.609 --> 03:08:47.349 align:start position:0%
that looks like this
each<03:08:44.060><c> element</c><03:08:44.720><c> in</c><03:08:44.840><c> the</c><03:08:44.870><c> array</c><03:08:45.020><c> is</c><03:08:45.649><c> a</c><03:08:46.489><c> template</c>

03:08:47.349 --> 03:08:47.359 align:start position:0%
each element in the array is a template
 

03:08:47.359 --> 03:08:52.300 align:start position:0%
each element in the array is a template
literal<03:08:48.080><c> that</c><03:08:48.649><c> has</c><03:08:49.810><c> some</c><03:08:50.810><c> HTML</c><03:08:51.050><c> in</c><03:08:51.859><c> it</c><03:08:52.100><c> and</c>

03:08:52.300 --> 03:08:52.310 align:start position:0%
literal that has some HTML in it and
 

03:08:52.310 --> 03:08:55.511 align:start position:0%
literal that has some HTML in it and
then<03:08:52.909><c> it</c><03:08:53.000><c> also</c><03:08:53.180><c> has</c><03:08:53.540><c> this</c><03:08:53.840><c> no</c><03:08:54.319><c> var</c>

03:08:55.511 --> 03:08:55.521 align:start position:0%
then it also has this no var
 

03:08:55.521 --> 03:08:58.780 align:start position:0%
then it also has this no var
on<03:08:55.851><c> top</c><03:08:56.271><c> and</c><03:08:56.631><c> lime</c><03:08:57.230><c> break</c><03:08:57.620><c> that</c><03:08:58.160><c> comes</c><03:08:58.490><c> right</c>

03:08:58.780 --> 03:08:58.790 align:start position:0%
on top and lime break that comes right
 

03:08:58.790 --> 03:09:01.900 align:start position:0%
on top and lime break that comes right
from<03:08:58.851><c> this</c><03:08:59.841><c> array</c><03:09:00.110><c> that's</c><03:09:00.320><c> passed</c><03:09:00.711><c> in</c><03:09:00.980><c> so</c>

03:09:01.900 --> 03:09:01.910 align:start position:0%
from this array that's passed in so
 

03:09:01.910 --> 03:09:04.030 align:start position:0%
from this array that's passed in so
let's<03:09:02.391><c> use</c><03:09:02.631><c> template</c><03:09:03.141><c> literal</c><03:09:03.530><c> so</c><03:09:03.771><c> to</c><03:09:03.830><c> create</c>

03:09:04.030 --> 03:09:04.040 align:start position:0%
let's use template literal so to create
 

03:09:04.040 --> 03:09:07.390 align:start position:0%
let's use template literal so to create
that<03:09:04.421><c> so</c><03:09:05.421><c> instead</c><03:09:06.351><c> of</c><03:09:06.440><c> setting</c><03:09:06.891><c> this</c><03:09:07.101><c> to</c><03:09:07.251><c> equal</c>

03:09:07.390 --> 03:09:07.400 align:start position:0%
that so instead of setting this to equal
 

03:09:07.400 --> 03:09:09.640 align:start position:0%
that so instead of setting this to equal
null<03:09:07.910><c> I'm</c><03:09:08.240><c> going</c><03:09:08.511><c> to</c><03:09:08.601><c> start</c><03:09:08.870><c> this</c><03:09:09.051><c> off</c><03:09:09.290><c> to</c><03:09:09.530><c> be</c>

03:09:09.640 --> 03:09:09.650 align:start position:0%
null I'm going to start this off to be
 

03:09:09.650 --> 03:09:12.761 align:start position:0%
null I'm going to start this off to be
an<03:09:09.801><c> empty</c><03:09:10.370><c> array</c><03:09:10.811><c> now</c><03:09:11.811><c> there's</c><03:09:12.171><c> many</c><03:09:12.471><c> ways</c><03:09:12.561><c> to</c>

03:09:12.761 --> 03:09:12.771 align:start position:0%
an empty array now there's many ways to
 

03:09:12.771 --> 03:09:14.951 align:start position:0%
an empty array now there's many ways to
do<03:09:13.160><c> this</c><03:09:13.370><c> but</c><03:09:13.431><c> I'm</c><03:09:13.761><c> gonna</c><03:09:13.940><c> use</c><03:09:14.181><c> the</c><03:09:14.450><c> classic</c>

03:09:14.951 --> 03:09:14.961 align:start position:0%
do this but I'm gonna use the classic
 

03:09:14.961 --> 03:09:19.001 align:start position:0%
do this but I'm gonna use the classic
for<03:09:15.290><c> loop</c><03:09:15.591><c> so</c><03:09:15.891><c> we'll</c><03:09:16.671><c> do</c><03:09:16.790><c> four</c><03:09:17.211><c> and</c><03:09:18.011><c> hopefully</c>

03:09:19.001 --> 03:09:19.011 align:start position:0%
for loop so we'll do four and hopefully
 

03:09:19.011 --> 03:09:20.890 align:start position:0%
for loop so we'll do four and hopefully
you<03:09:19.101><c> remember</c><03:09:19.190><c> how</c><03:09:19.521><c> to</c><03:09:19.551><c> make</c><03:09:19.881><c> a</c><03:09:19.940><c> for</c><03:09:20.330><c> loop</c><03:09:20.540><c> will</c>

03:09:20.890 --> 03:09:20.900 align:start position:0%
you remember how to make a for loop will
 

03:09:20.900 --> 03:09:28.030 align:start position:0%
you remember how to make a for loop will
you<03:09:21.080><c> let</c><03:09:21.381><c> I</c><03:09:22.001><c> equal</c><03:09:23.950><c> 0</c><03:09:25.601><c> while</c><03:09:26.601><c> I</c><03:09:26.780><c> is</c><03:09:26.900><c> less</c><03:09:27.290><c> than</c>

03:09:28.030 --> 03:09:28.040 align:start position:0%
you let I equal 0 while I is less than
 

03:09:28.040 --> 03:09:32.711 align:start position:0%
you let I equal 0 while I is less than
our<03:09:28.400><c> dot</c><03:09:29.120><c> length</c><03:09:29.540><c> and</c><03:09:30.851><c> then</c><03:09:31.851><c> at</c><03:09:32.001><c> the</c><03:09:32.120><c> end</c><03:09:32.271><c> we</c>

03:09:32.711 --> 03:09:32.721 align:start position:0%
our dot length and then at the end we
 

03:09:32.721 --> 03:09:37.001 align:start position:0%
our dot length and then at the end we
will<03:09:32.990><c> increment</c><03:09:33.410><c> I</c><03:09:33.860><c> so</c><03:09:35.171><c> inside</c><03:09:36.171><c> this</c><03:09:36.381><c> for</c><03:09:36.771><c> loop</c>

03:09:37.001 --> 03:09:37.011 align:start position:0%
will increment I so inside this for loop
 

03:09:37.011 --> 03:09:42.220 align:start position:0%
will increment I so inside this for loop
will<03:09:37.761><c> do</c><03:09:38.230><c> result</c><03:09:39.851><c> display</c><03:09:40.851><c> array</c><03:09:41.271><c> dot</c><03:09:41.540><c> push</c>

03:09:42.220 --> 03:09:42.230 align:start position:0%
will do result display array dot push
 

03:09:42.230 --> 03:09:44.951 align:start position:0%
will do result display array dot push
and<03:09:42.851><c> then</c><03:09:43.851><c> here</c><03:09:44.211><c> is</c><03:09:44.330><c> where</c><03:09:44.480><c> I'm</c><03:09:44.570><c> going</c><03:09:44.690><c> to</c><03:09:44.751><c> use</c>

03:09:44.951 --> 03:09:44.961 align:start position:0%
and then here is where I'm going to use
 

03:09:44.961 --> 03:09:47.440 align:start position:0%
and then here is where I'm going to use
the<03:09:45.141><c> template</c><03:09:45.591><c> literal</c><03:09:46.101><c> put</c><03:09:46.490><c> a</c><03:09:46.521><c> back</c><03:09:46.820><c> kick</c><03:09:47.150><c> and</c>

03:09:47.440 --> 03:09:47.450 align:start position:0%
the template literal put a back kick and
 

03:09:47.450 --> 03:09:52.291 align:start position:0%
the template literal put a back kick and
I'll<03:09:48.290><c> put</c><03:09:49.040><c> this</c><03:09:49.221><c> HTML</c><03:09:49.730><c> code</c><03:09:49.910><c> here</c><03:09:50.200><c> li</c><03:09:51.200><c> class</c>

03:09:52.291 --> 03:09:52.301 align:start position:0%
I'll put this HTML code here li class
 

03:09:52.301 --> 03:09:59.801 align:start position:0%
I'll put this HTML code here li class
equals<03:09:53.950><c> text</c><03:09:55.211><c> warning</c><03:09:56.261><c> and</c><03:09:58.271><c> now</c><03:09:59.271><c> this</c><03:09:59.540><c> next</c>

03:09:59.801 --> 03:09:59.811 align:start position:0%
equals text warning and now this next
 

03:09:59.811 --> 03:10:02.140 align:start position:0%
equals text warning and now this next
part<03:10:00.230><c> is</c><03:10:00.381><c> going</c><03:10:00.561><c> to</c><03:10:00.921><c> be</c><03:10:01.101><c> a</c><03:10:01.131><c> variable</c><03:10:01.761><c> because</c>

03:10:02.140 --> 03:10:02.150 align:start position:0%
part is going to be a variable because
 

03:10:02.150 --> 03:10:05.381 align:start position:0%
part is going to be a variable because
it<03:10:02.480><c> changes</c><03:10:03.171><c> for</c><03:10:03.381><c> each</c><03:10:03.591><c> array</c><03:10:04.521><c> element</c><03:10:04.551><c> here</c>

03:10:05.381 --> 03:10:05.391 align:start position:0%
it changes for each array element here
 

03:10:05.391 --> 03:10:08.951 align:start position:0%
it changes for each array element here
so<03:10:06.021><c> I'm</c><03:10:06.410><c> gonna</c><03:10:06.650><c> do</c><03:10:06.980><c> dollar</c><03:10:07.851><c> sign</c><03:10:08.271><c> and</c><03:10:08.780><c> then</c><03:10:08.931><c> the</c>

03:10:08.951 --> 03:10:08.961 align:start position:0%
so I'm gonna do dollar sign and then the
 

03:10:08.961 --> 03:10:12.610 align:start position:0%
so I'm gonna do dollar sign and then the
curly<03:10:09.530><c> braces</c><03:10:09.830><c> and</c><03:10:10.311><c> now</c><03:10:10.851><c> I</c><03:10:10.881><c> can</c><03:10:11.421><c> just</c><03:10:11.660><c> do</c><03:10:11.811><c> R</c><03:10:12.200><c> and</c>

03:10:12.610 --> 03:10:12.620 align:start position:0%
curly braces and now I can just do R and
 

03:10:12.620 --> 03:10:18.190 align:start position:0%
curly braces and now I can just do R and
then<03:10:13.280><c> at</c><03:10:13.551><c> index</c><03:10:14.240><c> I</c><03:10:16.120><c> now</c><03:10:17.120><c> in</c><03:10:17.480><c> the</c><03:10:17.631><c> curly</c><03:10:17.961><c> brace</c>

03:10:18.190 --> 03:10:18.200 align:start position:0%
then at index I now in the curly brace
 

03:10:18.200 --> 03:10:24.070 align:start position:0%
then at index I now in the curly brace
and<03:10:18.771><c> then</c><03:10:19.461><c> I</c><03:10:19.730><c> can</c><03:10:20.450><c> just</c><03:10:20.751><c> put</c><03:10:21.200><c> the</c><03:10:21.921><c> /l</c><03:10:22.910><c> I</c><03:10:23.240><c> okay</c>

03:10:24.070 --> 03:10:24.080 align:start position:0%
and then I can just put the /l I okay
 

03:10:24.080 --> 03:10:28.211 align:start position:0%
and then I can just put the /l I okay
and<03:10:24.351><c> if</c><03:10:25.251><c> we</c><03:10:26.141><c> console</c><03:10:27.141><c> dot</c><03:10:27.351><c> log</c><03:10:27.410><c> this</c><03:10:28.011><c> out</c>

03:10:28.211 --> 03:10:28.221 align:start position:0%
and if we console dot log this out
 

03:10:28.221 --> 03:10:30.070 align:start position:0%
and if we console dot log this out
because<03:10:28.431><c> we</c><03:10:28.610><c> just</c><03:10:28.971><c> finished</c><03:10:29.301><c> that</c><03:10:29.511><c> video</c>

03:10:30.070 --> 03:10:30.080 align:start position:0%
because we just finished that video
 

03:10:30.080 --> 03:10:35.411 align:start position:0%
because we just finished that video
console<03:10:30.711><c> dot</c><03:10:30.980><c> log</c><03:10:31.841><c> result</c><03:10:33.040><c> to</c><03:10:34.150><c> display</c><03:10:35.150><c> array</c>

03:10:35.411 --> 03:10:35.421 align:start position:0%
console dot log result to display array
 

03:10:35.421 --> 03:10:38.171 align:start position:0%
console dot log result to display array
the<03:10:36.290><c> array</c><03:10:36.471><c> looks</c><03:10:37.131><c> just</c><03:10:37.431><c> like</c><03:10:37.641><c> it's</c><03:10:37.881><c> supposed</c>

03:10:38.171 --> 03:10:38.181 align:start position:0%
the array looks just like it's supposed
 

03:10:38.181 --> 03:10:39.850 align:start position:0%
the array looks just like it's supposed
to<03:10:38.271><c> be</c><03:10:38.421><c> if</c><03:10:38.540><c> you</c><03:10:38.631><c> look</c><03:10:38.751><c> in</c><03:10:38.931><c> the</c><03:10:39.021><c> console</c><03:10:39.561><c> it</c>

03:10:39.850 --> 03:10:39.860 align:start position:0%
to be if you look in the console it
 

03:10:39.860 --> 03:10:45.800 align:start position:0%
to be if you look in the console it
returns<03:10:40.700><c> correctly</c>

03:10:45.800 --> 03:10:45.810 align:start position:0%
 
 

03:10:45.810 --> 03:10:48.350 align:start position:0%
 
es<03:10:46.620><c> six</c><03:10:46.890><c> added</c><03:10:47.250><c> some</c><03:10:47.430><c> nice</c><03:10:47.580><c> support</c><03:10:48.120><c> for</c>

03:10:48.350 --> 03:10:48.360 align:start position:0%
es six added some nice support for
 

03:10:48.360 --> 03:10:51.620 align:start position:0%
es six added some nice support for
easily<03:10:48.900><c> defining</c><03:10:49.530><c> object</c><03:10:50.160><c> literals</c><03:10:50.850><c> if</c><03:10:51.450><c> we</c>

03:10:51.620 --> 03:10:51.630 align:start position:0%
easily defining object literals if we
 

03:10:51.630 --> 03:10:54.260 align:start position:0%
easily defining object literals if we
look<03:10:51.840><c> at</c><03:10:51.990><c> this</c><03:10:52.140><c> function</c><03:10:53.040><c> here</c><03:10:53.190><c> this</c><03:10:53.940><c> function</c>

03:10:54.260 --> 03:10:54.270 align:start position:0%
look at this function here this function
 

03:10:54.270 --> 03:10:57.560 align:start position:0%
look at this function here this function
is<03:10:54.720><c> an</c><03:10:54.960><c> arrow</c><03:10:55.200><c> function</c><03:10:55.740><c> it</c><03:10:56.040><c> takes</c><03:10:56.220><c> in</c><03:10:57.000><c> three</c>

03:10:57.560 --> 03:10:57.570 align:start position:0%
is an arrow function it takes in three
 

03:10:57.570 --> 03:11:00.710 align:start position:0%
is an arrow function it takes in three
variables<03:10:57.990><c> name</c><03:10:58.710><c> age</c><03:10:59.010><c> and</c><03:10:59.070><c> gender</c><03:10:59.640><c> and</c><03:10:59.940><c> it's</c>

03:11:00.710 --> 03:11:00.720 align:start position:0%
variables name age and gender and it's
 

03:11:00.720 --> 03:11:04.280 align:start position:0%
variables name age and gender and it's
going<03:11:01.110><c> to</c><03:11:01.230><c> return</c><03:11:01.680><c> an</c><03:11:02.420><c> object</c><03:11:03.420><c> and</c><03:11:03.780><c> the</c><03:11:04.260><c> object</c>

03:11:04.280 --> 03:11:04.290 align:start position:0%
going to return an object and the object
 

03:11:04.290 --> 03:11:06.350 align:start position:0%
going to return an object and the object
is<03:11:04.860><c> going</c><03:11:05.100><c> to</c><03:11:05.160><c> have</c><03:11:05.250><c> a</c><03:11:05.310><c> series</c><03:11:05.640><c> of</c><03:11:05.730><c> key</c><03:11:06.000><c> value</c>

03:11:06.350 --> 03:11:06.360 align:start position:0%
is going to have a series of key value
 

03:11:06.360 --> 03:11:08.510 align:start position:0%
is going to have a series of key value
pairs<03:11:06.390><c> where</c><03:11:07.290><c> the</c><03:11:07.440><c> key</c><03:11:07.740><c> is</c>

03:11:08.510 --> 03:11:08.520 align:start position:0%
pairs where the key is
 

03:11:08.520 --> 03:11:11.060 align:start position:0%
pairs where the key is
the<03:11:09.150><c> name</c><03:11:09.450><c> age</c><03:11:09.780><c> and</c><03:11:10.140><c> gender</c><03:11:10.380><c> and</c><03:11:10.500><c> the</c><03:11:10.650><c> values</c>

03:11:11.060 --> 03:11:11.070 align:start position:0%
the name age and gender and the values
 

03:11:11.070 --> 03:11:13.700 align:start position:0%
the name age and gender and the values
are<03:11:11.250><c> the</c><03:11:11.280><c> past</c><03:11:11.820><c> in</c><03:11:12.210><c> variable</c><03:11:13.020><c> names</c><03:11:13.200><c> the</c><03:11:13.410><c> past</c>

03:11:13.700 --> 03:11:13.710 align:start position:0%
are the past in variable names the past
 

03:11:13.710 --> 03:11:14.420 align:start position:0%
are the past in variable names the past
end<03:11:13.950><c> names</c>

03:11:14.420 --> 03:11:14.430 align:start position:0%
end names
 

03:11:14.430 --> 03:11:17.510 align:start position:0%
end names
age<03:11:14.610><c> and</c><03:11:14.640><c> gender</c><03:11:15.210><c> so</c><03:11:16.140><c> if</c><03:11:16.470><c> you</c><03:11:16.800><c> look</c><03:11:17.160><c> in</c><03:11:17.370><c> the</c>

03:11:17.510 --> 03:11:17.520 align:start position:0%
age and gender so if you look in the
 

03:11:17.520 --> 03:11:20.690 align:start position:0%
age and gender so if you look in the
console<03:11:18.150><c> you</c><03:11:18.660><c> can</c><03:11:18.690><c> see</c><03:11:19.110><c> what</c><03:11:19.590><c> this</c><03:11:20.130><c> currently</c>

03:11:20.690 --> 03:11:20.700 align:start position:0%
console you can see what this currently
 

03:11:20.700 --> 03:11:23.180 align:start position:0%
console you can see what this currently
does<03:11:21.000><c> we</c><03:11:21.540><c> did</c><03:11:21.690><c> the</c><03:11:21.810><c> create</c><03:11:22.140><c> person</c><03:11:22.770><c> we</c><03:11:22.890><c> passed</c>

03:11:23.180 --> 03:11:23.190 align:start position:0%
does we did the create person we passed
 

03:11:23.190 --> 03:11:25.760 align:start position:0%
does we did the create person we passed
a<03:11:23.370><c> name</c><03:11:23.670><c> age</c><03:11:24.000><c> and</c><03:11:24.210><c> gender</c><03:11:24.480><c> and</c><03:11:24.720><c> you</c><03:11:25.470><c> can</c><03:11:25.590><c> see</c><03:11:25.710><c> in</c>

03:11:25.760 --> 03:11:25.770 align:start position:0%
a name age and gender and you can see in
 

03:11:25.770 --> 03:11:27.800 align:start position:0%
a name age and gender and you can see in
the<03:11:25.860><c> console</c><03:11:26.250><c> the</c><03:11:26.400><c> object</c><03:11:26.910><c> is</c><03:11:27.060><c> name</c><03:11:27.510><c> and</c>

03:11:27.800 --> 03:11:27.810 align:start position:0%
the console the object is name and
 

03:11:27.810 --> 03:11:31.640 align:start position:0%
the console the object is name and
zodiac<03:11:28.440><c> as</c><03:11:28.710><c> bro</c><03:11:29.010><c> age</c><03:11:29.280><c> 56</c><03:11:29.850><c> gender</c><03:11:30.360><c> male</c><03:11:30.780><c> so</c><03:11:31.560><c> you</c>

03:11:31.640 --> 03:11:31.650 align:start position:0%
zodiac as bro age 56 gender male so you
 

03:11:31.650 --> 03:11:33.950 align:start position:0%
zodiac as bro age 56 gender male so you
can<03:11:31.830><c> see</c><03:11:32.010><c> there's</c><03:11:32.250><c> some</c><03:11:32.460><c> repetition</c><03:11:33.270><c> we're</c>

03:11:33.950 --> 03:11:33.960 align:start position:0%
can see there's some repetition we're
 

03:11:33.960 --> 03:11:37.100 align:start position:0%
can see there's some repetition we're
repeating<03:11:34.590><c> name</c><03:11:34.980><c> name</c><03:11:35.520><c> age</c><03:11:36.000><c> age</c><03:11:36.420><c> gender</c>

03:11:37.100 --> 03:11:37.110 align:start position:0%
repeating name name age age gender
 

03:11:37.110 --> 03:11:39.980 align:start position:0%
repeating name name age age gender
gender<03:11:37.530><c> now</c><03:11:38.190><c> the</c><03:11:38.250><c> first</c><03:11:38.640><c> name</c><03:11:38.880><c> is</c><03:11:39.120><c> the</c><03:11:39.450><c> key</c><03:11:39.720><c> in</c>

03:11:39.980 --> 03:11:39.990 align:start position:0%
gender now the first name is the key in
 

03:11:39.990 --> 03:11:42.470 align:start position:0%
gender now the first name is the key in
the<03:11:40.140><c> second</c><03:11:40.590><c> name</c><03:11:40.710><c> is</c><03:11:40.830><c> the</c><03:11:40.950><c> value</c><03:11:41.370><c> but</c><03:11:42.120><c> there's</c>

03:11:42.470 --> 03:11:42.480 align:start position:0%
the second name is the value but there's
 

03:11:42.480 --> 03:11:45.530 align:start position:0%
the second name is the value but there's
a<03:11:42.600><c> way</c><03:11:42.900><c> to</c><03:11:42.960><c> just</c><03:11:43.350><c> make</c><03:11:43.410><c> this</c><03:11:43.830><c> simpler</c><03:11:44.640><c> if</c><03:11:44.850><c> you</c>

03:11:45.530 --> 03:11:45.540 align:start position:0%
a way to just make this simpler if you
 

03:11:45.540 --> 03:11:47.660 align:start position:0%
a way to just make this simpler if you
know<03:11:45.810><c> that</c><03:11:46.380><c> you</c><03:11:46.620><c> want</c><03:11:46.860><c> to</c><03:11:46.980><c> create</c><03:11:47.190><c> an</c><03:11:47.460><c> object</c>

03:11:47.660 --> 03:11:47.670 align:start position:0%
know that you want to create an object
 

03:11:47.670 --> 03:11:50.660 align:start position:0%
know that you want to create an object
with<03:11:48.240><c> where</c><03:11:48.750><c> the</c><03:11:48.930><c> key</c><03:11:49.290><c> is</c><03:11:49.530><c> the</c><03:11:50.220><c> name</c><03:11:50.430><c> of</c><03:11:50.580><c> the</c>

03:11:50.660 --> 03:11:50.670 align:start position:0%
with where the key is the name of the
 

03:11:50.670 --> 03:11:53.690 align:start position:0%
with where the key is the name of the
variable<03:11:50.880><c> and</c><03:11:51.240><c> the</c><03:11:51.600><c> value</c><03:11:52.170><c> is</c><03:11:52.680><c> the</c><03:11:52.740><c> value</c><03:11:53.550><c> of</c>

03:11:53.690 --> 03:11:53.700 align:start position:0%
variable and the value is the value of
 

03:11:53.700 --> 03:11:55.520 align:start position:0%
variable and the value is the value of
the<03:11:53.820><c> variable</c><03:11:54.330><c> there's</c><03:11:54.660><c> an</c><03:11:54.810><c> easier</c><03:11:55.170><c> way</c><03:11:55.230><c> to</c><03:11:55.320><c> do</c>

03:11:55.520 --> 03:11:55.530 align:start position:0%
the variable there's an easier way to do
 

03:11:55.530 --> 03:11:57.560 align:start position:0%
the variable there's an easier way to do
it<03:11:55.680><c> we</c><03:11:56.100><c> can</c><03:11:56.280><c> actually</c><03:11:56.430><c> delete</c><03:11:56.940><c> this</c><03:11:57.270><c> whole</c>

03:11:57.560 --> 03:11:57.570 align:start position:0%
it we can actually delete this whole
 

03:11:57.570 --> 03:12:01.430 align:start position:0%
it we can actually delete this whole
thing<03:11:57.990><c> here</c><03:11:58.460><c> and</c><03:11:59.840><c> that's</c><03:12:00.840><c> how</c><03:12:01.020><c> we're</c><03:12:01.170><c> gonna</c><03:12:01.320><c> do</c>

03:12:01.430 --> 03:12:01.440 align:start position:0%
thing here and that's how we're gonna do
 

03:12:01.440 --> 03:12:06.860 align:start position:0%
thing here and that's how we're gonna do
do<03:12:01.770><c> it</c><03:12:01.890><c> we'll</c><03:12:02.430><c> just</c><03:12:02.460><c> do</c><03:12:02.880><c> name</c><03:12:03.330><c> age</c><03:12:04.610><c> gender</c><03:12:05.870><c> on</c>

03:12:06.860 --> 03:12:06.870 align:start position:0%
do it we'll just do name age gender on
 

03:12:06.870 --> 03:12:08.510 align:start position:0%
do it we'll just do name age gender on
the<03:12:07.080><c> script</c><03:12:07.350><c> knows</c><03:12:07.590><c> that</c><03:12:07.890><c> it's</c><03:12:08.160><c> going</c><03:12:08.430><c> to</c>

03:12:08.510 --> 03:12:08.520 align:start position:0%
the script knows that it's going to
 

03:12:08.520 --> 03:12:11.270 align:start position:0%
the script knows that it's going to
return<03:12:08.940><c> this</c><03:12:09.270><c> object</c><03:12:09.570><c> and</c><03:12:10.320><c> it's</c><03:12:10.890><c> going</c><03:12:11.160><c> to</c>

03:12:11.270 --> 03:12:11.280 align:start position:0%
return this object and it's going to
 

03:12:11.280 --> 03:12:14.930 align:start position:0%
return this object and it's going to
have<03:12:11.940><c> three</c><03:12:12.530><c> key</c><03:12:13.530><c> value</c><03:12:13.860><c> pairs</c><03:12:14.160><c> the</c><03:12:14.460><c> name</c><03:12:14.670><c> age</c>

03:12:14.930 --> 03:12:14.940 align:start position:0%
have three key value pairs the name age
 

03:12:14.940 --> 03:12:17.300 align:start position:0%
have three key value pairs the name age
and<03:12:15.150><c> gender</c><03:12:15.360><c> so</c><03:12:15.780><c> if</c><03:12:15.930><c> I</c><03:12:16.050><c> reload</c><03:12:16.590><c> this</c><03:12:16.800><c> you'll</c>

03:12:17.300 --> 03:12:17.310 align:start position:0%
and gender so if I reload this you'll
 

03:12:17.310 --> 03:12:19.550 align:start position:0%
and gender so if I reload this you'll
see<03:12:17.520><c> in</c><03:12:17.580><c> the</c><03:12:17.670><c> console</c><03:12:18.150><c> it</c><03:12:18.390><c> looks</c><03:12:18.690><c> exactly</c><03:12:18.930><c> the</c>

03:12:19.550 --> 03:12:19.560 align:start position:0%
see in the console it looks exactly the
 

03:12:19.560 --> 03:12:22.040 align:start position:0%
see in the console it looks exactly the
same<03:12:19.830><c> because</c><03:12:20.520><c> this</c><03:12:20.970><c> code</c><03:12:21.270><c> does</c><03:12:21.660><c> the</c><03:12:21.810><c> same</c>

03:12:22.040 --> 03:12:22.050 align:start position:0%
same because this code does the same
 

03:12:22.050 --> 03:12:27.340 align:start position:0%
same because this code does the same
thing<03:12:22.320><c> that</c><03:12:22.470><c> the</c><03:12:22.620><c> previous</c><03:12:23.040><c> code</c><03:12:23.310><c> did</c>

03:12:27.340 --> 03:12:27.350 align:start position:0%
 
 

03:12:27.350 --> 03:12:31.179 align:start position:0%
 
an<03:12:27.520><c> object</c><03:12:28.520><c> can</c><03:12:28.609><c> contain</c><03:12:29.239><c> a</c><03:12:29.270><c> function</c><03:12:29.899><c> this</c><03:12:30.830><c> is</c>

03:12:31.179 --> 03:12:31.189 align:start position:0%
an object can contain a function this is
 

03:12:31.189 --> 03:12:34.030 align:start position:0%
an object can contain a function this is
the<03:12:31.550><c> long</c><03:12:31.970><c> way</c><03:12:32.330><c> to</c><03:12:32.390><c> put</c><03:12:32.840><c> a</c><03:12:32.989><c> function</c><03:12:33.590><c> within</c><03:12:33.949><c> an</c>

03:12:34.030 --> 03:12:34.040 align:start position:0%
the long way to put a function within an
 

03:12:34.040 --> 03:12:37.719 align:start position:0%
the long way to put a function within an
object<03:12:34.420><c> but</c><03:12:35.420><c> there</c><03:12:35.689><c> is</c><03:12:35.899><c> a</c><03:12:35.930><c> simpler</c><03:12:36.680><c> way</c><03:12:36.949><c> we</c>

03:12:37.719 --> 03:12:37.729 align:start position:0%
object but there is a simpler way we
 

03:12:37.729 --> 03:12:39.760 align:start position:0%
object but there is a simpler way we
have<03:12:37.850><c> the</c><03:12:37.970><c> set</c><03:12:38.180><c> gear</c><03:12:38.420><c> function</c><03:12:38.960><c> but</c><03:12:39.470><c> instead</c>

03:12:39.760 --> 03:12:39.770 align:start position:0%
have the set gear function but instead
 

03:12:39.770 --> 03:12:42.519 align:start position:0%
have the set gear function but instead
of<03:12:39.830><c> using</c><03:12:40.130><c> the</c><03:12:40.489><c> function</c><03:12:40.970><c> keyword</c><03:12:41.270><c> and</c><03:12:41.810><c> this</c>

03:12:42.519 --> 03:12:42.529 align:start position:0%
of using the function keyword and this
 

03:12:42.529 --> 03:12:45.070 align:start position:0%
of using the function keyword and this
colon<03:12:43.100><c> we</c><03:12:43.340><c> can</c><03:12:43.580><c> just</c><03:12:43.909><c> delete</c><03:12:44.300><c> all</c><03:12:44.479><c> that</c><03:12:44.510><c> and</c>

03:12:45.070 --> 03:12:45.080 align:start position:0%
colon we can just delete all that and
 

03:12:45.080 --> 03:12:48.309 align:start position:0%
colon we can just delete all that and
now<03:12:45.890><c> this</c><03:12:46.430><c> is</c><03:12:46.699><c> the</c><03:12:46.880><c> new</c><03:12:47.060><c> way</c><03:12:47.239><c> if</c><03:12:47.449><c> I</c><03:12:47.600><c> load</c><03:12:48.140><c> this</c>

03:12:48.309 --> 03:12:48.319 align:start position:0%
now this is the new way if I load this
 

03:12:48.319 --> 03:12:50.139 align:start position:0%
now this is the new way if I load this
again<03:12:48.710><c> you'll</c><03:12:48.949><c> see</c><03:12:49.159><c> three</c><03:12:49.460><c> in</c><03:12:49.550><c> the</c><03:12:49.640><c> console</c>

03:12:50.139 --> 03:12:50.149 align:start position:0%
again you'll see three in the console
 

03:12:50.149 --> 03:12:52.809 align:start position:0%
again you'll see three in the console
just<03:12:50.359><c> like</c><03:12:50.810><c> it</c><03:12:51.050><c> was</c><03:12:51.229><c> before</c><03:12:51.529><c> because</c><03:12:52.460><c> we've</c>

03:12:52.809 --> 03:12:52.819 align:start position:0%
just like it was before because we've
 

03:12:52.819 --> 03:12:54.639 align:start position:0%
just like it was before because we've
been<03:12:52.970><c> able</c><03:12:53.149><c> to</c><03:12:53.210><c> set</c><03:12:53.540><c> the</c><03:12:53.689><c> gear</c><03:12:54.050><c> using</c><03:12:54.500><c> that</c>

03:12:54.639 --> 03:12:54.649 align:start position:0%
been able to set the gear using that
 

03:12:54.649 --> 03:12:58.820 align:start position:0%
been able to set the gear using that
function

03:12:58.820 --> 03:12:58.830 align:start position:0%
 
 

03:12:58.830 --> 03:13:01.460 align:start position:0%
 
yes<03:12:59.490><c> six</c><03:12:59.790><c> provides</c><03:13:00.180><c> a</c><03:13:00.300><c> syntax</c><03:13:00.780><c> to</c><03:13:00.930><c> help</c><03:13:01.140><c> create</c>

03:13:01.460 --> 03:13:01.470 align:start position:0%
yes six provides a syntax to help create
 

03:13:01.470 --> 03:13:05.330 align:start position:0%
yes six provides a syntax to help create
objects<03:13:02.220><c> using</c><03:13:02.850><c> the</c><03:13:03.060><c> class</c><03:13:03.720><c> keyword</c><03:13:04.340><c> so</c>

03:13:05.330 --> 03:13:05.340 align:start position:0%
objects using the class keyword so
 

03:13:05.340 --> 03:13:08.210 align:start position:0%
objects using the class keyword so
here's<03:13:06.030><c> the</c><03:13:06.300><c> older</c><03:13:06.840><c> way</c><03:13:07.050><c> to</c><03:13:07.109><c> create</c><03:13:07.590><c> an</c><03:13:07.649><c> object</c>

03:13:08.210 --> 03:13:08.220 align:start position:0%
here's the older way to create an object
 

03:13:08.220 --> 03:13:10.910 align:start position:0%
here's the older way to create an object
it's<03:13:08.790><c> with</c><03:13:09.270><c> the</c><03:13:09.600><c> the</c><03:13:09.870><c> new</c><03:13:10.080><c> keyword</c><03:13:10.620><c> we</c><03:13:10.770><c> can</c>

03:13:10.910 --> 03:13:10.920 align:start position:0%
it's with the the new keyword we can
 

03:13:10.920 --> 03:13:12.980 align:start position:0%
it's with the the new keyword we can
instantiate<03:13:11.310><c> an</c><03:13:11.850><c> object</c><03:13:11.970><c> using</c><03:13:12.569><c> this</c><03:13:12.660><c> new</c>

03:13:12.980 --> 03:13:12.990 align:start position:0%
instantiate an object using this new
 

03:13:12.990 --> 03:13:15.500 align:start position:0%
instantiate an object using this new
keyword<03:13:13.560><c> and</c><03:13:13.830><c> we're</c><03:13:14.490><c> instantiating</c><03:13:14.790><c> the</c>

03:13:15.500 --> 03:13:15.510 align:start position:0%
keyword and we're instantiating the
 

03:13:15.510 --> 03:13:18.320 align:start position:0%
keyword and we're instantiating the
Space<03:13:15.840><c> Shuttle</c><03:13:16.010><c> object</c><03:13:17.010><c> we</c><03:13:17.700><c> have</c><03:13:17.729><c> to</c><03:13:18.120><c> have</c>

03:13:18.320 --> 03:13:18.330 align:start position:0%
Space Shuttle object we have to have
 

03:13:18.330 --> 03:13:21.650 align:start position:0%
Space Shuttle object we have to have
this<03:13:18.540><c> constructor</c><03:13:19.410><c> function</c><03:13:19.950><c> up</c><03:13:20.130><c> here</c><03:13:20.300><c> so</c><03:13:21.300><c> we</c>

03:13:21.650 --> 03:13:21.660 align:start position:0%
this constructor function up here so we
 

03:13:21.660 --> 03:13:24.020 align:start position:0%
this constructor function up here so we
use<03:13:21.840><c> this</c><03:13:22.050><c> to</c><03:13:22.109><c> construct</c><03:13:22.740><c> the</c><03:13:22.890><c> object</c><03:13:23.430><c> where</c>

03:13:24.020 --> 03:13:24.030 align:start position:0%
use this to construct the object where
 

03:13:24.030 --> 03:13:26.870 align:start position:0%
use this to construct the object where
we<03:13:24.240><c> pass</c><03:13:24.630><c> in</c><03:13:24.960><c> the</c><03:13:25.200><c> target</c><03:13:25.710><c> planet</c><03:13:26.220><c> Jupiter</c><03:13:26.670><c> and</c>

03:13:26.870 --> 03:13:26.880 align:start position:0%
we pass in the target planet Jupiter and
 

03:13:26.880 --> 03:13:28.910 align:start position:0%
we pass in the target planet Jupiter and
we<03:13:27.300><c> set</c><03:13:27.479><c> the</c><03:13:27.569><c> target</c><03:13:27.780><c> plan</c><03:13:28.140><c> to</c><03:13:28.410><c> this</c><03:13:28.620><c> dot</c>

03:13:28.910 --> 03:13:28.920 align:start position:0%
we set the target plan to this dot
 

03:13:28.920 --> 03:13:32.300 align:start position:0%
we set the target plan to this dot
target<03:13:29.430><c> planet</c><03:13:29.899><c> once</c><03:13:30.899><c> we</c><03:13:31.229><c> create</c><03:13:31.800><c> the</c><03:13:32.100><c> new</c>

03:13:32.300 --> 03:13:32.310 align:start position:0%
target planet once we create the new
 

03:13:32.310 --> 03:13:35.300 align:start position:0%
target planet once we create the new
object<03:13:33.000><c> like</c><03:13:33.210><c> this</c><03:13:33.510><c> that</c><03:13:34.290><c> allows</c><03:13:34.680><c> us</c><03:13:34.710><c> to</c><03:13:34.979><c> do</c>

03:13:35.300 --> 03:13:35.310 align:start position:0%
object like this that allows us to do
 

03:13:35.310 --> 03:13:38.540 align:start position:0%
object like this that allows us to do
Zeus<03:13:36.030><c> dot</c><03:13:36.390><c> target</c><03:13:36.930><c> planet</c><03:13:37.319><c> so</c><03:13:37.500><c> Zeus</c><03:13:37.800><c> target</c>

03:13:38.540 --> 03:13:38.550 align:start position:0%
Zeus dot target planet so Zeus target
 

03:13:38.550 --> 03:13:41.179 align:start position:0%
Zeus dot target planet so Zeus target
planet<03:13:38.970><c> which</c><03:13:39.420><c> we</c><03:13:39.630><c> set</c><03:13:39.870><c> to</c><03:13:40.020><c> Zuppa</c><03:13:40.380><c> der</c><03:13:40.500><c> Jupiter</c>

03:13:41.179 --> 03:13:41.189 align:start position:0%
planet which we set to Zuppa der Jupiter
 

03:13:41.189 --> 03:13:43.760 align:start position:0%
planet which we set to Zuppa der Jupiter
so<03:13:41.790><c> in</c><03:13:42.060><c> the</c><03:13:42.180><c> console</c><03:13:42.720><c> you</c><03:13:42.990><c> can</c><03:13:43.140><c> see</c><03:13:43.290><c> Jupiter</c>

03:13:43.760 --> 03:13:43.770 align:start position:0%
so in the console you can see Jupiter
 

03:13:43.770 --> 03:13:46.280 align:start position:0%
so in the console you can see Jupiter
the<03:13:44.220><c> class</c><03:13:44.580><c> syntax</c><03:13:45.109><c> replaces</c><03:13:46.109><c> the</c>

03:13:46.280 --> 03:13:46.290 align:start position:0%
the class syntax replaces the
 

03:13:46.290 --> 03:13:48.710 align:start position:0%
the class syntax replaces the
constructor<03:13:46.890><c> function</c><03:13:47.370><c> creation</c><03:13:47.970><c> so</c><03:13:48.689><c> I</c>

03:13:48.710 --> 03:13:48.720 align:start position:0%
constructor function creation so I
 

03:13:48.720 --> 03:13:50.750 align:start position:0%
constructor function creation so I
believe<03:13:49.200><c> that</c><03:13:49.500><c> we're</c><03:13:50.069><c> going</c><03:13:50.189><c> to</c><03:13:50.250><c> use</c><03:13:50.490><c> the</c>

03:13:50.750 --> 03:13:50.760 align:start position:0%
believe that we're going to use the
 

03:13:50.760 --> 03:13:54.670 align:start position:0%
believe that we're going to use the
class<03:13:51.149><c> syntax</c><03:13:51.510><c> so</c><03:13:51.899><c> I'll</c><03:13:52.020><c> do</c><03:13:52.200><c> a</c><03:13:52.229><c> class</c><03:13:53.569><c> space</c>

03:13:54.670 --> 03:13:54.680 align:start position:0%
class syntax so I'll do a class space
 

03:13:54.680 --> 03:13:58.520 align:start position:0%
class syntax so I'll do a class space
shuttle<03:13:55.680><c> and</c><03:13:56.510><c> then</c><03:13:57.510><c> we</c><03:13:57.630><c> have</c><03:13:57.720><c> the</c><03:13:57.840><c> curly</c><03:13:58.260><c> brace</c>

03:13:58.520 --> 03:13:58.530 align:start position:0%
shuttle and then we have the curly brace
 

03:13:58.530 --> 03:14:02.270 align:start position:0%
shuttle and then we have the curly brace
here<03:13:58.950><c> and</c><03:13:59.160><c> so</c><03:14:00.060><c> inside</c><03:14:00.720><c> here</c><03:14:01.229><c> we</c><03:14:01.680><c> have</c><03:14:02.010><c> a</c>

03:14:02.270 --> 03:14:02.280 align:start position:0%
here and so inside here we have a
 

03:14:02.280 --> 03:14:07.010 align:start position:0%
here and so inside here we have a
constructor<03:14:02.939><c> so</c><03:14:03.810><c> du</c><03:14:04.580><c> constructor</c><03:14:05.750><c> or</c><03:14:06.750><c> get</c>

03:14:07.010 --> 03:14:07.020 align:start position:0%
constructor so du constructor or get
 

03:14:07.020 --> 03:14:10.940 align:start position:0%
constructor so du constructor or get
planet<03:14:07.530><c> and</c><03:14:07.970><c> then</c><03:14:09.109><c> that's</c><03:14:10.109><c> all</c><03:14:10.350><c> we</c><03:14:10.590><c> just</c><03:14:10.770><c> have</c>

03:14:10.940 --> 03:14:10.950 align:start position:0%
planet and then that's all we just have
 

03:14:10.950 --> 03:14:15.620 align:start position:0%
planet and then that's all we just have
to<03:14:11.130><c> put</c><03:14:11.700><c> in</c><03:14:11.850><c> the</c><03:14:12.210><c> curly</c><03:14:12.870><c> brace</c><03:14:13.170><c> and</c><03:14:14.359><c> this</c><03:14:15.359><c> works</c>

03:14:15.620 --> 03:14:15.630 align:start position:0%
to put in the curly brace and this works
 

03:14:15.630 --> 03:14:18.200 align:start position:0%
to put in the curly brace and this works
exactly<03:14:16.050><c> the</c><03:14:16.560><c> same</c><03:14:16.830><c> as</c><03:14:17.100><c> before</c><03:14:17.130><c> using</c><03:14:18.030><c> the</c>

03:14:18.200 --> 03:14:18.210 align:start position:0%
exactly the same as before using the
 

03:14:18.210 --> 03:14:21.910 align:start position:0%
exactly the same as before using the
class<03:14:18.479><c> keyword</c><03:14:18.870><c> and</c><03:14:19.350><c> this</c><03:14:19.470><c> constructor</c><03:14:20.780><c> so</c>

03:14:21.910 --> 03:14:21.920 align:start position:0%
class keyword and this constructor so
 

03:14:21.920 --> 03:14:26.960 align:start position:0%
class keyword and this constructor so
down<03:14:22.920><c> here</c><03:14:23.490><c> we</c><03:14:23.700><c> are</c><03:14:24.630><c> going</c><03:14:25.020><c> to</c><03:14:25.580><c> do</c><03:14:26.580><c> the</c><03:14:26.729><c> same</c>

03:14:26.960 --> 03:14:26.970 align:start position:0%
down here we are going to do the same
 

03:14:26.970 --> 03:14:30.410 align:start position:0%
down here we are going to do the same
thing<03:14:27.270><c> for</c><03:14:27.630><c> a</c><03:14:27.689><c> vegetable</c><03:14:28.319><c> class</c><03:14:29.149><c> so</c><03:14:30.149><c> for</c><03:14:30.359><c> the</c>

03:14:30.410 --> 03:14:30.420 align:start position:0%
thing for a vegetable class so for the
 

03:14:30.420 --> 03:14:32.960 align:start position:0%
thing for a vegetable class so for the
vegetable<03:14:30.750><c> class</c><03:14:30.960><c> we'll</c><03:14:31.260><c> have</c><03:14:31.380><c> class</c><03:14:31.970><c> that's</c>

03:14:32.960 --> 03:14:32.970 align:start position:0%
vegetable class we'll have class that's
 

03:14:32.970 --> 03:14:35.719 align:start position:0%
vegetable class we'll have class that's
the<03:14:33.899><c> bowl</c><03:14:34.140><c> and</c><03:14:34.439><c> we're</c><03:14:35.340><c> going</c><03:14:35.370><c> to</c><03:14:35.580><c> have</c><03:14:35.700><c> a</c>

03:14:35.719 --> 03:14:35.729 align:start position:0%
the bowl and we're going to have a
 

03:14:35.729 --> 03:14:42.040 align:start position:0%
the bowl and we're going to have a
constructor<03:14:36.540><c> with</c><03:14:37.200><c> the</c><03:14:37.710><c> name</c><03:14:39.229><c> this</c><03:14:40.229><c> that</c><03:14:40.649><c> name</c>

03:14:42.040 --> 03:14:42.050 align:start position:0%
constructor with the name this that name
 

03:14:42.050 --> 03:14:48.139 align:start position:0%
constructor with the name this that name
equals<03:14:43.050><c> name</c><03:14:44.510><c> so</c><03:14:45.510><c> now</c><03:14:45.840><c> that</c><03:14:45.899><c> we</c><03:14:46.200><c> have</c><03:14:46.229><c> this</c><03:14:47.149><c> we</c>

03:14:48.139 --> 03:14:48.149 align:start position:0%
equals name so now that we have this we
 

03:14:48.149 --> 03:14:51.440 align:start position:0%
equals name so now that we have this we
can<03:14:48.649><c> set</c><03:14:49.649><c> this</c><03:14:49.830><c> vegetable</c><03:14:50.250><c> to</c><03:14:50.819><c> make</c><03:14:51.060><c> class</c>

03:14:51.440 --> 03:14:51.450 align:start position:0%
can set this vegetable to make class
 

03:14:51.450 --> 03:14:53.750 align:start position:0%
can set this vegetable to make class
which<03:14:51.780><c> will</c><03:14:51.930><c> return</c><03:14:52.410><c> a</c><03:14:52.470><c> vegetable</c><03:14:53.430><c> class</c>

03:14:53.750 --> 03:14:53.760 align:start position:0%
which will return a vegetable class
 

03:14:53.760 --> 03:14:56.900 align:start position:0%
which will return a vegetable class
that's<03:14:54.240><c> up</c><03:14:54.720><c> here</c><03:14:55.050><c> and</c><03:14:55.260><c> then</c><03:14:56.069><c> when</c><03:14:56.250><c> we</c><03:14:56.399><c> do</c><03:14:56.550><c> new</c>

03:14:56.900 --> 03:14:56.910 align:start position:0%
that's up here and then when we do new
 

03:14:56.910 --> 03:15:00.320 align:start position:0%
that's up here and then when we do new
vegetable<03:14:57.660><c> and</c><03:14:57.780><c> passing</c><03:14:58.350><c> carrot</c><03:14:58.979><c> this</c><03:14:59.760><c> carrot</c>

03:15:00.320 --> 03:15:00.330 align:start position:0%
vegetable and passing carrot this carrot
 

03:15:00.330 --> 03:15:02.300 align:start position:0%
vegetable and passing carrot this carrot
will<03:15:00.420><c> go</c><03:15:00.569><c> into</c><03:15:00.720><c> here</c><03:15:01.140><c> and</c><03:15:01.290><c> it'll</c><03:15:01.859><c> get</c><03:15:01.950><c> set</c><03:15:02.189><c> as</c>

03:15:02.300 --> 03:15:02.310 align:start position:0%
will go into here and it'll get set as
 

03:15:02.310 --> 03:15:05.120 align:start position:0%
will go into here and it'll get set as
this<03:15:02.580><c> that</c><03:15:02.819><c> name</c><03:15:03.120><c> so</c><03:15:03.840><c> when</c><03:15:04.380><c> we</c><03:15:04.500><c> console</c><03:15:05.010><c> that</c>

03:15:05.120 --> 03:15:05.130 align:start position:0%
this that name so when we console that
 

03:15:05.130 --> 03:15:06.800 align:start position:0%
this that name so when we console that
log<03:15:05.399><c> here</c><03:15:05.880><c> at</c><03:15:06.000><c> that</c><03:15:06.180><c> name</c>

03:15:06.800 --> 03:15:06.810 align:start position:0%
log here at that name
 

03:15:06.810 --> 03:15:13.701 align:start position:0%
log here at that name
we<03:15:07.229><c> should</c><03:15:07.590><c> get</c><03:15:08.420><c> carrot</c>

03:15:13.701 --> 03:15:13.711 align:start position:0%
 
 

03:15:13.711 --> 03:15:16.461 align:start position:0%
 
with<03:15:14.400><c> a</c><03:15:14.431><c> class</c><03:15:14.820><c> object</c><03:15:15.450><c> you</c><03:15:15.721><c> often</c><03:15:16.200><c> want</c><03:15:16.411><c> to</c>

03:15:16.461 --> 03:15:16.471 align:start position:0%
with a class object you often want to
 

03:15:16.471 --> 03:15:18.770 align:start position:0%
with a class object you often want to
obtain<03:15:16.950><c> values</c><03:15:17.431><c> from</c><03:15:17.641><c> the</c><03:15:17.761><c> object</c><03:15:18.211><c> and</c><03:15:18.360><c> set</c><03:15:18.751><c> a</c>

03:15:18.770 --> 03:15:18.780 align:start position:0%
obtain values from the object and set a
 

03:15:18.780 --> 03:15:20.711 align:start position:0%
obtain values from the object and set a
value<03:15:19.141><c> of</c><03:15:19.530><c> a</c><03:15:19.621><c> property</c><03:15:19.891><c> within</c><03:15:20.371><c> an</c><03:15:20.490><c> object</c>

03:15:20.711 --> 03:15:20.721 align:start position:0%
value of a property within an object
 

03:15:20.721 --> 03:15:22.850 align:start position:0%
value of a property within an object
these<03:15:21.721><c> are</c><03:15:21.900><c> often</c><03:15:22.051><c> called</c><03:15:22.230><c> getters</c><03:15:22.831><c> and</c>

03:15:22.850 --> 03:15:22.860 align:start position:0%
these are often called getters and
 

03:15:22.860 --> 03:15:26.600 align:start position:0%
these are often called getters and
setters<03:15:23.480><c> so</c><03:15:24.480><c> in</c><03:15:24.841><c> this</c><03:15:25.081><c> class</c><03:15:25.440><c> object</c><03:15:26.041><c> we</c><03:15:26.581><c> have</c>

03:15:26.600 --> 03:15:26.610 align:start position:0%
setters so in this class object we have
 

03:15:26.610 --> 03:15:28.551 align:start position:0%
setters so in this class object we have
the<03:15:27.030><c> constructor</c><03:15:27.690><c> which</c><03:15:27.990><c> we</c><03:15:28.141><c> already</c><03:15:28.351><c> talked</c>

03:15:28.551 --> 03:15:28.561 align:start position:0%
the constructor which we already talked
 

03:15:28.561 --> 03:15:31.520 align:start position:0%
the constructor which we already talked
about<03:15:28.940><c> we</c><03:15:29.940><c> also</c><03:15:30.181><c> have</c><03:15:30.511><c> a</c><03:15:30.541><c> getter</c><03:15:31.021><c> and</c><03:15:31.110><c> setter</c>

03:15:31.520 --> 03:15:31.530 align:start position:0%
about we also have a getter and setter
 

03:15:31.530 --> 03:15:35.690 align:start position:0%
about we also have a getter and setter
to<03:15:32.131><c> get</c><03:15:32.940><c> and</c><03:15:33.150><c> set</c><03:15:33.631><c> the</c><03:15:34.381><c> writer</c><03:15:34.711><c> so</c><03:15:35.341><c> we</c><03:15:35.431><c> can</c><03:15:35.551><c> get</c>

03:15:35.690 --> 03:15:35.700 align:start position:0%
to get and set the writer so we can get
 

03:15:35.700 --> 03:15:37.761 align:start position:0%
to get and set the writer so we can get
the<03:15:35.851><c> writer</c><03:15:36.091><c> and</c><03:15:36.391><c> we</c><03:15:36.541><c> can</c><03:15:36.780><c> set</c><03:15:37.320><c> the</c><03:15:37.561><c> writer</c>

03:15:37.761 --> 03:15:37.771 align:start position:0%
the writer and we can set the writer
 

03:15:37.771 --> 03:15:40.190 align:start position:0%
the writer and we can set the writer
getter<03:15:38.341><c> functions</c><03:15:38.820><c> are</c><03:15:39.121><c> meant</c><03:15:39.570><c> to</c><03:15:39.690><c> simply</c>

03:15:40.190 --> 03:15:40.200 align:start position:0%
getter functions are meant to simply
 

03:15:40.200 --> 03:15:42.921 align:start position:0%
getter functions are meant to simply
return<03:15:40.711><c> or</c><03:15:41.011><c> get</c><03:15:41.371><c> the</c><03:15:41.700><c> value</c><03:15:42.091><c> of</c><03:15:42.121><c> an</c><03:15:42.511><c> object's</c>

03:15:42.921 --> 03:15:42.931 align:start position:0%
return or get the value of an object's
 

03:15:42.931 --> 03:15:44.991 align:start position:0%
return or get the value of an object's
private<03:15:43.411><c> variable</c><03:15:43.860><c> to</c><03:15:44.070><c> the</c><03:15:44.190><c> user</c><03:15:44.431><c> without</c><03:15:44.671><c> the</c>

03:15:44.991 --> 03:15:45.001 align:start position:0%
private variable to the user without the
 

03:15:45.001 --> 03:15:47.031 align:start position:0%
private variable to the user without the
user<03:15:45.181><c> directly</c><03:15:45.721><c> accessing</c><03:15:46.501><c> the</c><03:15:46.621><c> private</c>

03:15:47.031 --> 03:15:47.041 align:start position:0%
user directly accessing the private
 

03:15:47.041 --> 03:15:49.640 align:start position:0%
user directly accessing the private
variable<03:15:47.581><c> so</c><03:15:48.121><c> the</c><03:15:48.360><c> private</c><03:15:48.780><c> variable</c><03:15:49.261><c> is</c><03:15:49.440><c> this</c>

03:15:49.640 --> 03:15:49.650 align:start position:0%
variable so the private variable is this
 

03:15:49.650 --> 03:15:52.761 align:start position:0%
variable so the private variable is this
underscore<03:15:50.341><c> author</c><03:15:50.700><c> that</c><03:15:51.690><c> gets</c><03:15:51.990><c> set</c><03:15:52.320><c> when</c><03:15:52.621><c> you</c>

03:15:52.761 --> 03:15:52.771 align:start position:0%
underscore author that gets set when you
 

03:15:52.771 --> 03:15:56.031 align:start position:0%
underscore author that gets set when you
construct<03:15:53.341><c> the</c><03:15:53.820><c> object</c><03:15:54.331><c> and</c><03:15:54.631><c> then</c><03:15:55.320><c> when</c><03:15:55.561><c> we</c><03:15:55.711><c> do</c>

03:15:56.031 --> 03:15:56.041 align:start position:0%
construct the object and then when we do
 

03:15:56.041 --> 03:15:58.881 align:start position:0%
construct the object and then when we do
get<03:15:56.311><c> writer</c><03:15:56.641><c> it's</c><03:15:56.940><c> gonna</c><03:15:57.030><c> return</c><03:15:57.591><c> this</c><03:15:58.591><c> down</c>

03:15:58.881 --> 03:15:58.891 align:start position:0%
get writer it's gonna return this down
 

03:15:58.891 --> 03:16:00.651 align:start position:0%
get writer it's gonna return this down
underscore<03:15:59.311><c> author</c><03:15:59.521><c> so</c><03:16:00.150><c> you</c><03:16:00.211><c> never</c><03:16:00.421><c> actually</c>

03:16:00.651 --> 03:16:00.661 align:start position:0%
underscore author so you never actually
 

03:16:00.661 --> 03:16:04.251 align:start position:0%
underscore author so you never actually
interact<03:16:01.261><c> directly</c><03:16:01.980><c> with</c><03:16:02.311><c> this</c><03:16:02.940><c> variable</c><03:16:03.601><c> but</c>

03:16:04.251 --> 03:16:04.261 align:start position:0%
interact directly with this variable but
 

03:16:04.261 --> 03:16:06.350 align:start position:0%
interact directly with this variable but
it's<03:16:04.561><c> going</c><03:16:04.831><c> to</c><03:16:05.131><c> get</c><03:16:05.461><c> the</c><03:16:05.641><c> writer</c><03:16:05.911><c> which</c><03:16:06.211><c> is</c>

03:16:06.350 --> 03:16:06.360 align:start position:0%
it's going to get the writer which is
 

03:16:06.360 --> 03:16:08.361 align:start position:0%
it's going to get the writer which is
the<03:16:06.480><c> author</c><03:16:06.631><c> here</c><03:16:07.081><c> and</c><03:16:07.261><c> when</c><03:16:07.860><c> you're</c><03:16:07.980><c> setting</c>

03:16:08.361 --> 03:16:08.371 align:start position:0%
the author here and when you're setting
 

03:16:08.371 --> 03:16:09.861 align:start position:0%
the author here and when you're setting
it's<03:16:08.581><c> the</c><03:16:08.700><c> same</c><03:16:09.001><c> so</c><03:16:09.570><c> you're</c><03:16:09.690><c> never</c>

03:16:09.861 --> 03:16:09.871 align:start position:0%
it's the same so you're never
 

03:16:09.871 --> 03:16:12.230 align:start position:0%
it's the same so you're never
interacting<03:16:10.591><c> with</c><03:16:10.740><c> underscore</c><03:16:11.280><c> author</c><03:16:11.490><c> but</c>

03:16:12.230 --> 03:16:12.240 align:start position:0%
interacting with underscore author but
 

03:16:12.240 --> 03:16:16.461 align:start position:0%
interacting with underscore author but
you<03:16:12.421><c> can</c><03:16:12.721><c> set</c><03:16:13.141><c> that</c><03:16:13.711><c> with</c><03:16:14.251><c> the</c><03:16:14.690><c> writer</c><03:16:15.690><c> setter</c>

03:16:16.461 --> 03:16:16.471 align:start position:0%
you can set that with the writer setter
 

03:16:16.471 --> 03:16:18.711 align:start position:0%
you can set that with the writer setter
this<03:16:16.681><c> change</c><03:16:17.131><c> could</c><03:16:17.431><c> invoke</c><03:16:17.700><c> calculations</c><03:16:18.570><c> or</c>

03:16:18.711 --> 03:16:18.721 align:start position:0%
this change could invoke calculations or
 

03:16:18.721 --> 03:16:21.201 align:start position:0%
this change could invoke calculations or
even<03:16:19.110><c> even</c><03:16:19.351><c> overriding</c><03:16:20.341><c> the</c><03:16:20.461><c> previous</c><03:16:20.881><c> value</c>

03:16:21.201 --> 03:16:21.211 align:start position:0%
even even overriding the previous value
 

03:16:21.211 --> 03:16:24.051 align:start position:0%
even even overriding the previous value
completely<03:16:21.931><c> so</c><03:16:22.530><c> you</c><03:16:22.561><c> can</c><03:16:22.860><c> have</c><03:16:22.980><c> any</c><03:16:23.221><c> number</c><03:16:23.851><c> of</c>

03:16:24.051 --> 03:16:24.061 align:start position:0%
completely so you can have any number of
 

03:16:24.061 --> 03:16:27.560 align:start position:0%
completely so you can have any number of
code<03:16:24.480><c> lines</c><03:16:24.780><c> in</c><03:16:25.200><c> this</c><03:16:25.471><c> setter</c><03:16:25.860><c> to</c><03:16:26.570><c> ultimately</c>

03:16:27.560 --> 03:16:27.570 align:start position:0%
code lines in this setter to ultimately
 

03:16:27.570 --> 03:16:30.020 align:start position:0%
code lines in this setter to ultimately
maybe<03:16:28.411><c> do</c><03:16:28.711><c> different</c><03:16:29.041><c> calculations</c><03:16:29.700><c> before</c>

03:16:30.020 --> 03:16:30.030 align:start position:0%
maybe do different calculations before
 

03:16:30.030 --> 03:16:31.970 align:start position:0%
maybe do different calculations before
you<03:16:30.121><c> set</c><03:16:30.391><c> it</c><03:16:30.541><c> or</c><03:16:30.721><c> a</c><03:16:30.780><c> calculation</c><03:16:31.591><c> before</c><03:16:31.771><c> you</c>

03:16:31.970 --> 03:16:31.980 align:start position:0%
you set it or a calculation before you
 

03:16:31.980 --> 03:16:34.161 align:start position:0%
you set it or a calculation before you
get<03:16:32.251><c> the</c><03:16:32.461><c> property</c><03:16:32.940><c> so</c><03:16:33.480><c> what</c><03:16:33.631><c> we're</c><03:16:33.780><c> gonna</c><03:16:33.841><c> do</c>

03:16:34.161 --> 03:16:34.171 align:start position:0%
get the property so what we're gonna do
 

03:16:34.171 --> 03:16:36.140 align:start position:0%
get the property so what we're gonna do
is<03:16:34.411><c> make</c><03:16:35.011><c> your</c><03:16:35.131><c> own</c><03:16:35.341><c> getter</c><03:16:35.641><c> and</c><03:16:35.700><c> setter</c><03:16:35.881><c> for</c>

03:16:36.140 --> 03:16:36.150 align:start position:0%
is make your own getter and setter for
 

03:16:36.150 --> 03:16:39.261 align:start position:0%
is make your own getter and setter for
the<03:16:36.811><c> thermostat</c><03:16:37.530><c> class</c><03:16:38.190><c> we're</c><03:16:38.911><c> gonna</c><03:16:39.001><c> create</c>

03:16:39.261 --> 03:16:39.271 align:start position:0%
the thermostat class we're gonna create
 

03:16:39.271 --> 03:16:41.390 align:start position:0%
the thermostat class we're gonna create
a<03:16:39.360><c> thermostat</c><03:16:39.841><c> class</c><03:16:40.141><c> and</c><03:16:40.530><c> we're</c><03:16:41.041><c> gonna</c><03:16:41.131><c> have</c>

03:16:41.390 --> 03:16:41.400 align:start position:0%
a thermostat class and we're gonna have
 

03:16:41.400 --> 03:16:44.270 align:start position:0%
a thermostat class and we're gonna have
a<03:16:41.581><c> getter</c><03:16:41.940><c> and</c><03:16:42.030><c> setter</c><03:16:42.391><c> so</c><03:16:43.320><c> here's</c><03:16:43.801><c> the</c><03:16:44.041><c> thing</c>

03:16:44.270 --> 03:16:44.280 align:start position:0%
a getter and setter so here's the thing
 

03:16:44.280 --> 03:16:46.791 align:start position:0%
a getter and setter so here's the thing
about<03:16:44.400><c> this</c><03:16:44.551><c> challenge</c><03:16:45.211><c> is</c><03:16:45.421><c> that</c><03:16:45.780><c> when</c><03:16:46.650><c> we</c>

03:16:46.791 --> 03:16:46.801 align:start position:0%
about this challenge is that when we
 

03:16:46.801 --> 03:16:49.190 align:start position:0%
about this challenge is that when we
construct<03:16:47.431><c> the</c><03:16:47.610><c> class</c><03:16:47.911><c> it's</c><03:16:48.421><c> going</c><03:16:48.721><c> to</c><03:16:48.811><c> accept</c>

03:16:49.190 --> 03:16:49.200 align:start position:0%
construct the class it's going to accept
 

03:16:49.200 --> 03:16:51.321 align:start position:0%
construct the class it's going to accept
Fahrenheit<03:16:49.980><c> temperature</c><03:16:50.730><c> but</c><03:16:51.061><c> we're</c><03:16:51.211><c> going</c>

03:16:51.321 --> 03:16:51.331 align:start position:0%
Fahrenheit temperature but we're going
 

03:16:51.331 --> 03:16:52.850 align:start position:0%
Fahrenheit temperature but we're going
to<03:16:51.391><c> create</c><03:16:51.661><c> a</c><03:16:51.751><c> getter</c><03:16:52.081><c> and</c><03:16:52.171><c> setter</c><03:16:52.351><c> in</c><03:16:52.740><c> the</c>

03:16:52.850 --> 03:16:52.860 align:start position:0%
to create a getter and setter in the
 

03:16:52.860 --> 03:16:54.501 align:start position:0%
to create a getter and setter in the
class<03:16:53.131><c> to</c><03:16:53.341><c> obtain</c><03:16:53.671><c> the</c><03:16:53.851><c> temperature</c><03:16:54.331><c> in</c>

03:16:54.501 --> 03:16:54.511 align:start position:0%
class to obtain the temperature in
 

03:16:54.511 --> 03:16:57.081 align:start position:0%
class to obtain the temperature in
Celsius<03:16:55.320><c> so</c><03:16:56.011><c> it's</c><03:16:56.161><c> gonna</c><03:16:56.280><c> have</c><03:16:56.521><c> to</c><03:16:56.671><c> do</c><03:16:56.881><c> the</c>

03:16:57.081 --> 03:16:57.091 align:start position:0%
Celsius so it's gonna have to do the
 

03:16:57.091 --> 03:17:00.111 align:start position:0%
Celsius so it's gonna have to do the
calculation<03:16:57.900><c> right</c><03:16:58.261><c> within</c><03:16:58.530><c> the</c><03:16:59.011><c> class</c><03:16:59.371><c> so</c>

03:17:00.111 --> 03:17:00.121 align:start position:0%
calculation right within the class so
 

03:17:00.121 --> 03:17:02.421 align:start position:0%
calculation right within the class so
let's<03:17:00.331><c> do</c><03:17:00.601><c> that</c><03:17:00.631><c> we're</c><03:17:01.381><c> going</c><03:17:01.471><c> to</c><03:17:01.530><c> do</c><03:17:01.711><c> a</c><03:17:01.740><c> class</c>

03:17:02.421 --> 03:17:02.431 align:start position:0%
let's do that we're going to do a class
 

03:17:02.431 --> 03:17:08.301 align:start position:0%
let's do that we're going to do a class
of<03:17:04.311><c> thermostat</c><03:17:05.311><c> and</c><03:17:06.561><c> in</c><03:17:07.561><c> this</c><03:17:07.681><c> class</c><03:17:07.921><c> we</c><03:17:08.131><c> need</c>

03:17:08.301 --> 03:17:08.311 align:start position:0%
of thermostat and in this class we need
 

03:17:08.311 --> 03:17:11.871 align:start position:0%
of thermostat and in this class we need
the<03:17:08.400><c> constructor</c><03:17:10.221><c> but</c><03:17:11.221><c> when</c><03:17:11.431><c> you</c><03:17:11.551><c> first</c>

03:17:11.871 --> 03:17:11.881 align:start position:0%
the constructor but when you first
 

03:17:11.881 --> 03:17:13.611 align:start position:0%
the constructor but when you first
create<03:17:12.360><c> the</c><03:17:12.541><c> thermostat</c><03:17:13.200><c> you're</c><03:17:13.411><c> going</c><03:17:13.530><c> to</c>

03:17:13.611 --> 03:17:13.621 align:start position:0%
create the thermostat you're going to
 

03:17:13.621 --> 03:17:16.041 align:start position:0%
create the thermostat you're going to
pass<03:17:13.831><c> in</c><03:17:14.041><c> a</c><03:17:14.221><c> temperature</c><03:17:14.940><c> and</c><03:17:15.181><c> remember</c><03:17:15.900><c> this</c>

03:17:16.041 --> 03:17:16.051 align:start position:0%
pass in a temperature and remember this
 

03:17:16.051 --> 03:17:19.701 align:start position:0%
pass in a temperature and remember this
is<03:17:16.261><c> going</c><03:17:16.561><c> to</c><03:17:16.771><c> be</c><03:17:17.181><c> Fahrenheit</c><03:17:18.181><c> now</c><03:17:19.141><c> within</c>

03:17:19.701 --> 03:17:19.711 align:start position:0%
is going to be Fahrenheit now within
 

03:17:19.711 --> 03:17:22.041 align:start position:0%
is going to be Fahrenheit now within
this<03:17:19.921><c> constructor</c><03:17:20.820><c> we're</c><03:17:21.421><c> going</c><03:17:21.690><c> to</c><03:17:21.780><c> set</c><03:17:22.021><c> a</c>

03:17:22.041 --> 03:17:22.051 align:start position:0%
this constructor we're going to set a
 

03:17:22.051 --> 03:17:25.011 align:start position:0%
this constructor we're going to set a
private<03:17:22.530><c> variable</c><03:17:22.740><c> this</c><03:17:23.311><c> dot</c><03:17:24.021><c> underscore</c>

03:17:25.011 --> 03:17:25.021 align:start position:0%
private variable this dot underscore
 

03:17:25.021 --> 03:17:27.470 align:start position:0%
private variable this dot underscore
temp<03:17:25.530><c> so</c><03:17:26.521><c> the</c><03:17:27.121><c> word</c>

03:17:27.470 --> 03:17:27.480 align:start position:0%
temp so the word
 

03:17:27.480 --> 03:17:31.430 align:start position:0%
temp so the word
this<03:17:27.860><c> just</c><03:17:28.860><c> means</c><03:17:29.131><c> that</c><03:17:29.341><c> this</c><03:17:30.080><c> variable</c><03:17:31.080><c> is</c>

03:17:31.430 --> 03:17:31.440 align:start position:0%
this just means that this variable is
 

03:17:31.440 --> 03:17:33.621 align:start position:0%
this just means that this variable is
only<03:17:31.740><c> accessible</c><03:17:32.190><c> within</c><03:17:32.580><c> this</c><03:17:32.820><c> class</c><03:17:33.181><c> here</c>

03:17:33.621 --> 03:17:33.631 align:start position:0%
only accessible within this class here
 

03:17:33.631 --> 03:17:36.881 align:start position:0%
only accessible within this class here
and<03:17:33.811><c> the</c><03:17:34.591><c> underscore</c><03:17:35.370><c> temp</c><03:17:36.000><c> whenever</c><03:17:36.570><c> you</c>

03:17:36.881 --> 03:17:36.891 align:start position:0%
and the underscore temp whenever you
 

03:17:36.891 --> 03:17:39.801 align:start position:0%
and the underscore temp whenever you
start<03:17:37.891><c> a</c><03:17:38.070><c> variable</c><03:17:38.881><c> with</c><03:17:39.030><c> an</c><03:17:39.150><c> underscore</c>

03:17:39.801 --> 03:17:39.811 align:start position:0%
start a variable with an underscore
 

03:17:39.811 --> 03:17:43.220 align:start position:0%
start a variable with an underscore
that's<03:17:40.740><c> going</c><03:17:41.280><c> to</c><03:17:41.490><c> generally</c><03:17:42.301><c> signify</c><03:17:42.931><c> that</c>

03:17:43.220 --> 03:17:43.230 align:start position:0%
that's going to generally signify that
 

03:17:43.230 --> 03:17:45.020 align:start position:0%
that's going to generally signify that
it's<03:17:43.440><c> a</c><03:17:43.561><c> private</c><03:17:44.131><c> variable</c><03:17:44.311><c> that</c><03:17:44.761><c> you're</c><03:17:44.910><c> not</c>

03:17:45.020 --> 03:17:45.030 align:start position:0%
it's a private variable that you're not
 

03:17:45.030 --> 03:17:46.701 align:start position:0%
it's a private variable that you're not
supposed<03:17:45.271><c> to</c><03:17:45.330><c> access</c><03:17:45.780><c> it</c><03:17:45.900><c> outside</c><03:17:46.021><c> of</c><03:17:46.591><c> that</c>

03:17:46.701 --> 03:17:46.711 align:start position:0%
supposed to access it outside of that
 

03:17:46.711 --> 03:17:49.430 align:start position:0%
supposed to access it outside of that
scope<03:17:47.070><c> or</c><03:17:47.311><c> outside</c><03:17:47.610><c> of</c><03:17:47.671><c> that</c><03:17:47.761><c> class</c><03:17:48.120><c> so</c><03:17:48.870><c> we're</c>

03:17:49.430 --> 03:17:49.440 align:start position:0%
scope or outside of that class so we're
 

03:17:49.440 --> 03:17:52.100 align:start position:0%
scope or outside of that class so we're
gonna<03:17:49.591><c> set</c><03:17:49.980><c> the</c><03:17:50.190><c> temp</c><03:17:50.641><c> and</c><03:17:50.971><c> we're</c><03:17:51.721><c> not</c><03:17:51.841><c> going</c>

03:17:52.100 --> 03:17:52.110 align:start position:0%
gonna set the temp and we're not going
 

03:17:52.110 --> 03:17:54.411 align:start position:0%
gonna set the temp and we're not going
to<03:17:52.230><c> just</c><03:17:52.530><c> put</c><03:17:53.160><c> this</c><03:17:53.190><c> underscore</c><03:17:53.851><c> temp</c><03:17:54.091><c> equals</c>

03:17:54.411 --> 03:17:54.421 align:start position:0%
to just put this underscore temp equals
 

03:17:54.421 --> 03:17:57.440 align:start position:0%
to just put this underscore temp equals
temp<03:17:54.931><c> because</c><03:17:55.650><c> it's</c><03:17:56.551><c> passed</c><03:17:56.971><c> in</c><03:17:57.271><c> as</c><03:17:57.421><c> a</c>

03:17:57.440 --> 03:17:57.450 align:start position:0%
temp because it's passed in as a
 

03:17:57.450 --> 03:17:59.591 align:start position:0%
temp because it's passed in as a
Fahrenheit<03:17:58.141><c> and</c><03:17:58.290><c> we</c><03:17:58.440><c> want</c><03:17:58.620><c> to</c><03:17:58.681><c> convert</c><03:17:59.101><c> it</c><03:17:59.280><c> to</c>

03:17:59.591 --> 03:17:59.601 align:start position:0%
Fahrenheit and we want to convert it to
 

03:17:59.601 --> 03:18:02.001 align:start position:0%
Fahrenheit and we want to convert it to
Celsius<03:18:00.601><c> I</c><03:18:00.870><c> just</c><03:18:01.320><c> happen</c><03:18:01.591><c> to</c><03:18:01.650><c> have</c><03:18:01.740><c> the</c>

03:18:02.001 --> 03:18:02.011 align:start position:0%
Celsius I just happen to have the
 

03:18:02.011 --> 03:18:04.820 align:start position:0%
Celsius I just happen to have the
equation<03:18:02.580><c> for</c><03:18:02.610><c> Celsius</c><03:18:03.360><c> so</c><03:18:04.051><c> it's</c><03:18:04.230><c> five</c><03:18:04.591><c> over</c>

03:18:04.820 --> 03:18:04.830 align:start position:0%
equation for Celsius so it's five over
 

03:18:04.830 --> 03:18:11.060 align:start position:0%
equation for Celsius so it's five over
nine<03:18:05.070><c> times</c><03:18:06.171><c> and</c><03:18:07.171><c> then</c><03:18:07.921><c> with</c><03:18:08.101><c> temp</c><03:18:10.070><c> minus</c>

03:18:11.060 --> 03:18:11.070 align:start position:0%
nine times and then with temp minus
 

03:18:11.070 --> 03:18:15.381 align:start position:0%
nine times and then with temp minus
thirty-two<03:18:12.771><c> so</c><03:18:13.771><c> now</c><03:18:14.131><c> we</c><03:18:14.700><c> can</c><03:18:14.971><c> create</c><03:18:15.301><c> the</c>

03:18:15.381 --> 03:18:15.391 align:start position:0%
thirty-two so now we can create the
 

03:18:15.391 --> 03:18:20.180 align:start position:0%
thirty-two so now we can create the
getter<03:18:16.021><c> and</c><03:18:16.110><c> setter</c><03:18:17.841><c> so</c><03:18:18.841><c> we'll</c><03:18:19.681><c> forget</c><03:18:20.070><c> it</c>

03:18:20.180 --> 03:18:20.190 align:start position:0%
getter and setter so we'll forget it
 

03:18:20.190 --> 03:18:23.871 align:start position:0%
getter and setter so we'll forget it
will<03:18:20.280><c> you</c><03:18:20.370><c> get</c><03:18:20.961><c> temperature</c><03:18:21.961><c> and</c><03:18:22.761><c> we're</c><03:18:23.761><c> just</c>

03:18:23.871 --> 03:18:23.881 align:start position:0%
will you get temperature and we're just
 

03:18:23.881 --> 03:18:28.360 align:start position:0%
will you get temperature and we're just
going<03:18:24.120><c> to</c><03:18:24.240><c> return</c><03:18:25.341><c> this</c><03:18:26.341><c> dot</c><03:18:26.961><c> underscore</c><03:18:27.961><c> temp</c>

03:18:28.360 --> 03:18:28.370 align:start position:0%
going to return this dot underscore temp
 

03:18:28.370 --> 03:18:31.011 align:start position:0%
going to return this dot underscore temp
which<03:18:29.370><c> now</c><03:18:29.610><c> it's</c><03:18:29.881><c> in</c><03:18:30.030><c> Celsius</c><03:18:30.601><c> because</c><03:18:30.841><c> we're</c>

03:18:31.011 --> 03:18:31.021 align:start position:0%
which now it's in Celsius because we're
 

03:18:31.021 --> 03:18:33.801 align:start position:0%
which now it's in Celsius because we're
storing<03:18:31.440><c> the</c><03:18:31.801><c> value</c><03:18:31.830><c> in</c><03:18:32.461><c> Celsius</c><03:18:33.061><c> even</c><03:18:33.601><c> though</c>

03:18:33.801 --> 03:18:33.811 align:start position:0%
storing the value in Celsius even though
 

03:18:33.811 --> 03:18:36.230 align:start position:0%
storing the value in Celsius even though
the<03:18:34.320><c> thermostat</c><03:18:34.801><c> is</c><03:18:34.860><c> created</c><03:18:35.431><c> in</c><03:18:35.610><c> Fahrenheit</c>

03:18:36.230 --> 03:18:36.240 align:start position:0%
the thermostat is created in Fahrenheit
 

03:18:36.240 --> 03:18:38.480 align:start position:0%
the thermostat is created in Fahrenheit
so<03:18:37.051><c> with</c><03:18:37.290><c> the</c><03:18:37.440><c> setter</c><03:18:37.740><c> it's</c><03:18:37.950><c> going</c><03:18:38.101><c> to</c><03:18:38.160><c> be</c><03:18:38.311><c> the</c>

03:18:38.480 --> 03:18:38.490 align:start position:0%
so with the setter it's going to be the
 

03:18:38.490 --> 03:18:44.980 align:start position:0%
so with the setter it's going to be the
same<03:18:38.790><c> set</c><03:18:39.740><c> temperature</c><03:18:41.181><c> updated</c><03:18:42.410><c> temp</c><03:18:43.410><c> and</c>

03:18:44.980 --> 03:18:44.990 align:start position:0%
same set temperature updated temp and
 

03:18:44.990 --> 03:18:48.140 align:start position:0%
same set temperature updated temp and
it's<03:18:45.990><c> now</c><03:18:46.261><c> going</c><03:18:46.620><c> to</c><03:18:46.891><c> still</c><03:18:47.160><c> be</c><03:18:47.190><c> in</c><03:18:47.400><c> Celsius</c><03:18:47.940><c> so</c>

03:18:48.140 --> 03:18:48.150 align:start position:0%
it's now going to still be in Celsius so
 

03:18:48.150 --> 03:18:55.940 align:start position:0%
it's now going to still be in Celsius so
this<03:18:48.480><c> dot</c><03:18:49.730><c> temp</c><03:18:51.591><c> equals</c><03:18:52.820><c> updated</c><03:18:53.820><c> temp</c><03:18:54.950><c> so</c>

03:18:55.940 --> 03:18:55.950 align:start position:0%
this dot temp equals updated temp so
 

03:18:55.950 --> 03:18:57.591 align:start position:0%
this dot temp equals updated temp so
let's<03:18:56.370><c> look</c><03:18:56.610><c> at</c><03:18:56.761><c> the</c><03:18:56.851><c> code</c><03:18:57.061><c> down</c><03:18:57.240><c> here</c><03:18:57.480><c> how</c>

03:18:57.591 --> 03:18:57.601 align:start position:0%
let's look at the code down here how
 

03:18:57.601 --> 03:19:00.171 align:start position:0%
let's look at the code down here how
we're<03:18:57.750><c> using</c><03:18:57.780><c> it</c><03:18:58.171><c> so</c><03:18:58.740><c> the</c><03:18:59.040><c> consular</c><03:18:59.820><c> Mesilla</c>

03:19:00.171 --> 03:19:00.181 align:start position:0%
we're using it so the consular Mesilla
 

03:19:00.181 --> 03:19:02.480 align:start position:0%
we're using it so the consular Mesilla
equals<03:19:00.631><c> mate</c><03:19:00.990><c> class</c><03:19:01.351><c> this</c><03:19:01.921><c> mate</c><03:19:02.250><c> class</c>

03:19:02.480 --> 03:19:02.490 align:start position:0%
equals mate class this mate class
 

03:19:02.490 --> 03:19:04.220 align:start position:0%
equals mate class this mate class
function<03:19:03.091><c> is</c><03:19:03.240><c> going</c><03:19:03.391><c> to</c><03:19:03.480><c> return</c><03:19:03.931><c> this</c>

03:19:04.220 --> 03:19:04.230 align:start position:0%
function is going to return this
 

03:19:04.230 --> 03:19:08.091 align:start position:0%
function is going to return this
thermostat<03:19:04.801><c> object</c><03:19:05.761><c> here</c><03:19:06.120><c> and</c><03:19:06.471><c> then</c><03:19:07.471><c> we're</c>

03:19:08.091 --> 03:19:08.101 align:start position:0%
thermostat object here and then we're
 

03:19:08.101 --> 03:19:10.310 align:start position:0%
thermostat object here and then we're
going<03:19:08.280><c> to</c><03:19:08.400><c> do</c><03:19:08.521><c> a</c><03:19:08.551><c> constant</c><03:19:09.240><c> thermos</c><03:19:09.780><c> equals</c>

03:19:10.310 --> 03:19:10.320 align:start position:0%
going to do a constant thermos equals
 

03:19:10.320 --> 03:19:12.171 align:start position:0%
going to do a constant thermos equals
new<03:19:10.561><c> thermostat</c><03:19:11.280><c> so</c><03:19:11.851><c> when</c><03:19:12.030><c> you're</c>

03:19:12.171 --> 03:19:12.181 align:start position:0%
new thermostat so when you're
 

03:19:12.181 --> 03:19:14.150 align:start position:0%
new thermostat so when you're
instantiating<03:19:12.961><c> an</c><03:19:13.200><c> object</c><03:19:13.711><c> you</c><03:19:13.801><c> always</c><03:19:14.011><c> use</c>

03:19:14.150 --> 03:19:14.160 align:start position:0%
instantiating an object you always use
 

03:19:14.160 --> 03:19:16.730 align:start position:0%
instantiating an object you always use
the<03:19:14.341><c> new</c><03:19:14.551><c> keyword</c><03:19:14.820><c> new</c><03:19:15.660><c> thermostat</c><03:19:16.320><c> that's</c>

03:19:16.730 --> 03:19:16.740 align:start position:0%
the new keyword new thermostat that's
 

03:19:16.740 --> 03:19:20.421 align:start position:0%
the new keyword new thermostat that's
this<03:19:17.040><c> and</c><03:19:17.250><c> we're</c><03:19:17.341><c> passing</c><03:19:17.910><c> in</c><03:19:18.591><c> 76</c><03:19:19.591><c> that</c><03:19:20.131><c> goes</c>

03:19:20.421 --> 03:19:20.431 align:start position:0%
this and we're passing in 76 that goes
 

03:19:20.431 --> 03:19:23.600 align:start position:0%
this and we're passing in 76 that goes
into<03:19:20.641><c> the</c><03:19:20.910><c> constructor</c><03:19:21.421><c> the</c><03:19:21.750><c> temp</c><03:19:22.080><c> and</c><03:19:22.351><c> so</c><03:19:23.311><c> we</c>

03:19:23.600 --> 03:19:23.610 align:start position:0%
into the constructor the temp and so we
 

03:19:23.610 --> 03:19:25.371 align:start position:0%
into the constructor the temp and so we
do<03:19:23.820><c> this</c><03:19:23.940><c> calculation</c><03:19:24.240><c> to</c><03:19:24.870><c> convert</c><03:19:25.230><c> that</c>

03:19:25.371 --> 03:19:25.381 align:start position:0%
do this calculation to convert that
 

03:19:25.381 --> 03:19:28.610 align:start position:0%
do this calculation to convert that
Fahrenheit<03:19:26.070><c> to</c><03:19:26.400><c> the</c><03:19:26.580><c> Celsius</c><03:19:26.940><c> in</c><03:19:27.511><c> this</c><03:19:28.080><c> local</c>

03:19:28.610 --> 03:19:28.620 align:start position:0%
Fahrenheit to the Celsius in this local
 

03:19:28.620 --> 03:19:31.850 align:start position:0%
Fahrenheit to the Celsius in this local
variable<03:19:28.650><c> here</c><03:19:29.521><c> and</c><03:19:29.700><c> then</c><03:19:30.511><c> let</c><03:19:31.051><c> temp</c><03:19:31.410><c> equals</c>

03:19:31.850 --> 03:19:31.860 align:start position:0%
variable here and then let temp equals
 

03:19:31.860 --> 03:19:33.680 align:start position:0%
variable here and then let temp equals
thermal<03:19:32.400><c> temperature</c>

03:19:33.680 --> 03:19:33.690 align:start position:0%
thermal temperature
 

03:19:33.690 --> 03:19:36.470 align:start position:0%
thermal temperature
so<03:19:33.961><c> thermostat</c><03:19:34.650><c> temperature</c><03:19:35.311><c> is</c><03:19:35.551><c> going</c><03:19:36.301><c> to</c>

03:19:36.470 --> 03:19:36.480 align:start position:0%
so thermostat temperature is going to
 

03:19:36.480 --> 03:19:39.201 align:start position:0%
so thermostat temperature is going to
use<03:19:36.900><c> the</c><03:19:37.141><c> getter</c><03:19:37.410><c> get</c><03:19:37.950><c> temperature</c><03:19:38.641><c> and</c><03:19:38.881><c> it's</c>

03:19:39.201 --> 03:19:39.211 align:start position:0%
use the getter get temperature and it's
 

03:19:39.211 --> 03:19:41.300 align:start position:0%
use the getter get temperature and it's
going<03:19:39.330><c> to</c><03:19:39.421><c> return</c><03:19:39.811><c> this</c><03:19:40.261><c> down</c><03:19:40.561><c> underscore</c><03:19:40.950><c> 10</c>

03:19:41.300 --> 03:19:41.310 align:start position:0%
going to return this down underscore 10
 

03:19:41.310 --> 03:19:43.880 align:start position:0%
going to return this down underscore 10
so<03:19:41.909><c> a</c><03:19:41.939><c> key</c><03:19:42.449><c> thing</c><03:19:42.479><c> to</c><03:19:42.779><c> look</c><03:19:42.960><c> at</c><03:19:43.170><c> is</c><03:19:43.409><c> that</c><03:19:43.439><c> there</c>

03:19:43.880 --> 03:19:43.890 align:start position:0%
so a key thing to look at is that there
 

03:19:43.890 --> 03:19:46.399 align:start position:0%
so a key thing to look at is that there
are<03:19:44.040><c> no</c><03:19:44.369><c> parentheses</c><03:19:44.850><c> after</c><03:19:45.449><c> this</c><03:19:45.840><c> so</c>

03:19:46.399 --> 03:19:46.409 align:start position:0%
are no parentheses after this so
 

03:19:46.409 --> 03:19:48.800 align:start position:0%
are no parentheses after this so
generally<03:19:46.949><c> if</c><03:19:47.189><c> there's</c><03:19:47.790><c> if</c><03:19:48.000><c> something</c><03:19:48.659><c> is</c><03:19:48.779><c> a</c>

03:19:48.800 --> 03:19:48.810 align:start position:0%
generally if there's if something is a
 

03:19:48.810 --> 03:19:50.780 align:start position:0%
generally if there's if something is a
function<03:19:48.899><c> you</c><03:19:49.529><c> would</c><03:19:49.649><c> see</c><03:19:49.800><c> parentheses</c><03:19:50.489><c> after</c>

03:19:50.780 --> 03:19:50.790 align:start position:0%
function you would see parentheses after
 

03:19:50.790 --> 03:19:53.840 align:start position:0%
function you would see parentheses after
the<03:19:51.029><c> function</c><03:19:51.479><c> name</c><03:19:51.659><c> but</c><03:19:52.350><c> if</c><03:19:52.590><c> it's</c><03:19:52.829><c> a</c><03:19:52.979><c> variable</c>

03:19:53.840 --> 03:19:53.850 align:start position:0%
the function name but if it's a variable
 

03:19:53.850 --> 03:19:56.780 align:start position:0%
the function name but if it's a variable
or<03:19:54.060><c> property</c><03:19:54.779><c> name</c><03:19:55.020><c> it's</c><03:19:55.590><c> going</c><03:19:55.920><c> to</c><03:19:56.310><c> not</c><03:19:56.520><c> have</c>

03:19:56.780 --> 03:19:56.790 align:start position:0%
or property name it's going to not have
 

03:19:56.790 --> 03:19:59.830 align:start position:0%
or property name it's going to not have
parentheses<03:19:57.449><c> so</c><03:19:57.989><c> getters</c><03:19:58.409><c> and</c><03:19:58.439><c> setters</c><03:19:58.649><c> are</c>

03:19:59.830 --> 03:19:59.840 align:start position:0%
parentheses so getters and setters are
 

03:19:59.840 --> 03:20:03.050 align:start position:0%
parentheses so getters and setters are
access<03:20:00.840><c> similar</c><03:20:01.199><c> to</c><03:20:01.319><c> properties</c><03:20:01.859><c> and</c><03:20:02.130><c> then</c><03:20:02.909><c> we</c>

03:20:03.050 --> 03:20:03.060 align:start position:0%
access similar to properties and then we
 

03:20:03.060 --> 03:20:04.490 align:start position:0%
access similar to properties and then we
can<03:20:03.239><c> use</c><03:20:03.390><c> the</c><03:20:03.630><c> setter</c><03:20:04.109><c> here</c>

03:20:04.490 --> 03:20:04.500 align:start position:0%
can use the setter here
 

03:20:04.500 --> 03:20:07.460 align:start position:0%
can use the setter here
thermostat<03:20:05.130><c> temperature</c><03:20:05.640><c> equals</c><03:20:06.119><c> 26</c><03:20:07.109><c> and</c>

03:20:07.460 --> 03:20:07.470 align:start position:0%
thermostat temperature equals 26 and
 

03:20:07.470 --> 03:20:09.439 align:start position:0%
thermostat temperature equals 26 and
then<03:20:08.040><c> it</c><03:20:08.189><c> sets</c><03:20:08.550><c> it</c><03:20:08.760><c> with</c><03:20:08.909><c> the</c><03:20:09.090><c> updated</c>

03:20:09.439 --> 03:20:09.449 align:start position:0%
then it sets it with the updated
 

03:20:09.449 --> 03:20:12.500 align:start position:0%
then it sets it with the updated
temperature<03:20:09.989><c> and</c><03:20:10.229><c> now</c><03:20:11.159><c> we</c><03:20:11.760><c> can</c><03:20:11.970><c> say</c><03:20:12.119><c> temp</c>

03:20:12.500 --> 03:20:12.510 align:start position:0%
temperature and now we can say temp
 

03:20:12.510 --> 03:20:15.200 align:start position:0%
temperature and now we can say temp
equals<03:20:12.930><c> thermos</c><03:20:13.319><c> temperature</c><03:20:14.040><c> and</c><03:20:14.310><c> if</c><03:20:14.819><c> we</c><03:20:15.000><c> do</c>

03:20:15.200 --> 03:20:15.210 align:start position:0%
equals thermos temperature and if we do
 

03:20:15.210 --> 03:20:18.080 align:start position:0%
equals thermos temperature and if we do
a<03:20:15.239><c> console</c><03:20:15.899><c> dot</c><03:20:16.170><c> log</c><03:20:16.229><c> here</c><03:20:17.159><c> we</c><03:20:17.550><c> can</c><03:20:17.760><c> do</c><03:20:17.970><c> that</c>

03:20:18.080 --> 03:20:18.090 align:start position:0%
a console dot log here we can do that
 

03:20:18.090 --> 03:20:20.479 align:start position:0%
a console dot log here we can do that
with<03:20:18.270><c> the</c><03:20:18.449><c> temp</c><03:20:18.869><c> and</c><03:20:19.170><c> it</c><03:20:19.649><c> should</c><03:20:19.920><c> have</c><03:20:20.130><c> the</c><03:20:20.189><c> new</c>

03:20:20.479 --> 03:20:20.489 align:start position:0%
with the temp and it should have the new
 

03:20:20.489 --> 03:20:27.860 align:start position:0%
with the temp and it should have the new
temperature<03:20:21.090><c> if</c><03:20:21.720><c> I</c><03:20:22.159><c> load</c><03:20:23.159><c> that</c><03:20:23.430><c> 26</c>

03:20:27.860 --> 03:20:27.870 align:start position:0%
 
 

03:20:27.870 --> 03:20:30.440 align:start position:0%
 
in<03:20:27.930><c> the</c><03:20:28.740><c> past</c><03:20:29.040><c> people</c><03:20:29.311><c> would</c><03:20:29.580><c> use</c><03:20:29.820><c> the</c><03:20:30.030><c> require</c>

03:20:30.440 --> 03:20:30.450 align:start position:0%
in the past people would use the require
 

03:20:30.450 --> 03:20:32.930 align:start position:0%
in the past people would use the require
function<03:20:30.480><c> to</c><03:20:31.410><c> import</c><03:20:32.010><c> functions</c><03:20:32.521><c> and</c><03:20:32.670><c> code</c>

03:20:32.930 --> 03:20:32.940 align:start position:0%
function to import functions and code
 

03:20:32.940 --> 03:20:36.470 align:start position:0%
function to import functions and code
from<03:20:33.240><c> other</c><03:20:33.390><c> files</c><03:20:34.080><c> but</c><03:20:35.040><c> now</c><03:20:35.280><c> we</c><03:20:35.340><c> have</c><03:20:35.760><c> import</c>

03:20:36.470 --> 03:20:36.480 align:start position:0%
from other files but now we have import
 

03:20:36.480 --> 03:20:39.230 align:start position:0%
from other files but now we have import
and<03:20:36.720><c> export</c><03:20:36.990><c> you</c><03:20:37.950><c> can</c><03:20:38.010><c> export</c><03:20:38.610><c> code</c><03:20:38.910><c> in</c><03:20:39.061><c> one</c>

03:20:39.230 --> 03:20:39.240 align:start position:0%
and export you can export code in one
 

03:20:39.240 --> 03:20:41.360 align:start position:0%
and export you can export code in one
file<03:20:39.540><c> and</c><03:20:39.900><c> then</c><03:20:39.990><c> import</c><03:20:40.170><c> it</c><03:20:40.680><c> in</c><03:20:40.771><c> another</c><03:20:41.010><c> file</c>

03:20:41.360 --> 03:20:41.370 align:start position:0%
file and then import it in another file
 

03:20:41.370 --> 03:20:44.210 align:start position:0%
file and then import it in another file
it<03:20:42.120><c> also</c><03:20:42.390><c> allows</c><03:20:42.840><c> you</c><03:20:43.080><c> to</c><03:20:43.110><c> only</c><03:20:43.380><c> import</c>

03:20:44.210 --> 03:20:44.220 align:start position:0%
it also allows you to only import
 

03:20:44.220 --> 03:20:46.370 align:start position:0%
it also allows you to only import
certain<03:20:44.490><c> functions</c><03:20:45.210><c> from</c><03:20:45.360><c> a</c><03:20:45.510><c> file</c><03:20:45.750><c> or</c><03:20:45.990><c> certain</c>

03:20:46.370 --> 03:20:46.380 align:start position:0%
certain functions from a file or certain
 

03:20:46.380 --> 03:20:48.591 align:start position:0%
certain functions from a file or certain
variables<03:20:46.980><c> let</c><03:20:47.580><c> me</c><03:20:47.700><c> show</c><03:20:47.880><c> you</c><03:20:47.940><c> how</c><03:20:48.180><c> it</c><03:20:48.360><c> works</c>

03:20:48.591 --> 03:20:48.601 align:start position:0%
variables let me show you how it works
 

03:20:48.601 --> 03:20:51.560 align:start position:0%
variables let me show you how it works
so<03:20:48.960><c> in</c><03:20:49.351><c> this</c><03:20:49.500><c> file</c><03:20:49.680><c> we</c><03:20:49.980><c> have</c><03:20:50.280><c> this</c><03:20:50.760><c> capitalized</c>

03:20:51.560 --> 03:20:51.570 align:start position:0%
so in this file we have this capitalized
 

03:20:51.570 --> 03:20:54.020 align:start position:0%
so in this file we have this capitalized
string<03:20:51.990><c> function</c><03:20:52.561><c> we're</c><03:20:53.250><c> passing</c><03:20:53.730><c> in</c><03:20:53.820><c> the</c>

03:20:54.020 --> 03:20:54.030 align:start position:0%
string function we're passing in the
 

03:20:54.030 --> 03:20:56.750 align:start position:0%
string function we're passing in the
string<03:20:54.271><c> hello</c><03:20:54.720><c> and</c><03:20:55.021><c> we</c><03:20:55.410><c> want</c><03:20:55.590><c> to</c><03:20:55.830><c> log</c><03:20:56.250><c> out</c><03:20:56.460><c> the</c>

03:20:56.750 --> 03:20:56.760 align:start position:0%
string hello and we want to log out the
 

03:20:56.760 --> 03:20:59.180 align:start position:0%
string hello and we want to log out the
capitalized<03:20:57.450><c> strings</c><03:20:57.990><c> but</c><03:20:58.530><c> right</c><03:20:58.740><c> now</c><03:20:58.950><c> it</c>

03:20:59.180 --> 03:20:59.190 align:start position:0%
capitalized strings but right now it
 

03:20:59.190 --> 03:21:01.310 align:start position:0%
capitalized strings but right now it
just<03:20:59.220><c> has</c><03:20:59.580><c> an</c><03:20:59.760><c> error</c><03:21:00.120><c> because</c><03:21:00.570><c> there</c><03:21:00.750><c> is</c><03:21:00.990><c> no</c>

03:21:01.310 --> 03:21:01.320 align:start position:0%
just has an error because there is no
 

03:21:01.320 --> 03:21:03.591 align:start position:0%
just has an error because there is no
capitalized<03:21:02.130><c> string</c><03:21:02.430><c> function</c><03:21:03.000><c> in</c><03:21:03.150><c> this</c><03:21:03.330><c> file</c>

03:21:03.591 --> 03:21:03.601 align:start position:0%
capitalized string function in this file
 

03:21:03.601 --> 03:21:06.290 align:start position:0%
capitalized string function in this file
however<03:21:04.561><c> in</c><03:21:04.860><c> this</c><03:21:04.950><c> other</c><03:21:05.250><c> file</c><03:21:05.580><c> we</c><03:21:05.851><c> do</c><03:21:06.030><c> have</c><03:21:06.271><c> a</c>

03:21:06.290 --> 03:21:06.300 align:start position:0%
however in this other file we do have a
 

03:21:06.300 --> 03:21:08.870 align:start position:0%
however in this other file we do have a
capitalized<03:21:06.960><c> string</c><03:21:07.260><c> function</c><03:21:07.771><c> in</c><03:21:08.130><c> this</c>

03:21:08.870 --> 03:21:08.880 align:start position:0%
capitalized string function in this
 

03:21:08.880 --> 03:21:13.250 align:start position:0%
capitalized string function in this
string<03:21:09.271><c> function</c><03:21:09.780><c> GJ</c><03:21:10.140><c> s</c><03:21:10.830><c> we</c><03:21:11.640><c> have</c><03:21:12.050><c> export</c><03:21:13.050><c> this</c>

03:21:13.250 --> 03:21:13.260 align:start position:0%
string function GJ s we have export this
 

03:21:13.260 --> 03:21:15.020 align:start position:0%
string function GJ s we have export this
is<03:21:13.440><c> the</c><03:21:13.561><c> export</c><03:21:13.980><c> statement</c><03:21:14.490><c> I</c><03:21:14.521><c> was</c><03:21:14.640><c> talking</c>

03:21:15.020 --> 03:21:15.030 align:start position:0%
is the export statement I was talking
 

03:21:15.030 --> 03:21:17.570 align:start position:0%
is the export statement I was talking
about<03:21:15.090><c> and</c><03:21:15.570><c> then</c><03:21:16.080><c> it's</c><03:21:16.200><c> exporting</c><03:21:16.980><c> this</c>

03:21:17.570 --> 03:21:17.580 align:start position:0%
about and then it's exporting this
 

03:21:17.580 --> 03:21:20.261 align:start position:0%
about and then it's exporting this
function<03:21:18.540><c> it's</c><03:21:19.110><c> actually</c><03:21:19.530><c> a</c><03:21:19.561><c> variable</c>

03:21:20.261 --> 03:21:20.271 align:start position:0%
function it's actually a variable
 

03:21:20.271 --> 03:21:23.210 align:start position:0%
function it's actually a variable
capitalized<03:21:21.271><c> string</c><03:21:21.660><c> that's</c><03:21:22.021><c> set</c><03:21:22.380><c> to</c><03:21:22.410><c> equal</c><03:21:23.070><c> a</c>

03:21:23.210 --> 03:21:23.220 align:start position:0%
capitalized string that's set to equal a
 

03:21:23.220 --> 03:21:26.210 align:start position:0%
capitalized string that's set to equal a
function<03:21:23.851><c> this</c><03:21:24.390><c> is</c><03:21:24.450><c> a</c><03:21:24.930><c> an</c><03:21:25.260><c> arrow</c><03:21:25.650><c> function</c>

03:21:26.210 --> 03:21:26.220 align:start position:0%
function this is a an arrow function
 

03:21:26.220 --> 03:21:29.240 align:start position:0%
function this is a an arrow function
where<03:21:26.580><c> we</c><03:21:26.730><c> pass</c><03:21:27.061><c> in</c><03:21:27.271><c> a</c><03:21:27.360><c> string</c><03:21:27.390><c> and</c><03:21:28.080><c> then</c><03:21:29.040><c> we</c>

03:21:29.240 --> 03:21:29.250 align:start position:0%
where we pass in a string and then we
 

03:21:29.250 --> 03:21:33.110 align:start position:0%
where we pass in a string and then we
return<03:21:29.820><c> the</c><03:21:30.120><c> string</c><03:21:31.110><c> dot</c><03:21:31.440><c> to</c><03:21:31.800><c> uppercase</c><03:21:32.430><c> now</c><03:21:33.090><c> a</c>

03:21:33.110 --> 03:21:33.120 align:start position:0%
return the string dot to uppercase now a
 

03:21:33.120 --> 03:21:35.420 align:start position:0%
return the string dot to uppercase now a
to<03:21:33.450><c> uppercase</c><03:21:33.930><c> is</c><03:21:34.140><c> just</c><03:21:34.380><c> a</c><03:21:34.500><c> string</c><03:21:34.920><c> function</c>

03:21:35.420 --> 03:21:35.430 align:start position:0%
to uppercase is just a string function
 

03:21:35.430 --> 03:21:39.620 align:start position:0%
to uppercase is just a string function
that<03:21:35.811><c> makes</c><03:21:36.811><c> every</c><03:21:37.200><c> letter</c><03:21:37.410><c> uppercase</c><03:21:38.130><c> so</c><03:21:39.061><c> we</c>

03:21:39.620 --> 03:21:39.630 align:start position:0%
that makes every letter uppercase so we
 

03:21:39.630 --> 03:21:43.910 align:start position:0%
that makes every letter uppercase so we
can<03:21:40.040><c> import</c><03:21:41.040><c> this</c><03:21:41.700><c> in</c><03:21:42.030><c> our</c><03:21:42.271><c> other</c><03:21:42.480><c> file</c><03:21:42.930><c> so</c>

03:21:43.910 --> 03:21:43.920 align:start position:0%
can import this in our other file so
 

03:21:43.920 --> 03:21:46.400 align:start position:0%
can import this in our other file so
let's<03:21:44.250><c> go</c><03:21:44.430><c> back</c><03:21:44.610><c> to</c><03:21:44.760><c> our</c><03:21:44.851><c> other</c><03:21:44.970><c> file</c><03:21:45.360><c> and</c><03:21:45.660><c> I</c>

03:21:46.400 --> 03:21:46.410 align:start position:0%
let's go back to our other file and I
 

03:21:46.410 --> 03:21:49.670 align:start position:0%
let's go back to our other file and I
will<03:21:46.820><c> import</c><03:21:47.820><c> and</c><03:21:48.780><c> with</c><03:21:49.200><c> the</c><03:21:49.320><c> import</c>

03:21:49.670 --> 03:21:49.680 align:start position:0%
will import and with the import
 

03:21:49.680 --> 03:21:50.990 align:start position:0%
will import and with the import
statement<03:21:50.101><c> you're</c><03:21:50.280><c> going</c><03:21:50.400><c> to</c><03:21:50.460><c> use</c><03:21:50.580><c> curly</c>

03:21:50.990 --> 03:21:51.000 align:start position:0%
statement you're going to use curly
 

03:21:51.000 --> 03:21:54.040 align:start position:0%
statement you're going to use curly
braces<03:21:51.030><c> and</c><03:21:51.720><c> then</c><03:21:52.530><c> I'll</c><03:21:52.650><c> put</c><03:21:52.860><c> capitalized</c>

03:21:54.040 --> 03:21:54.050 align:start position:0%
braces and then I'll put capitalized
 

03:21:54.050 --> 03:21:58.490 align:start position:0%
braces and then I'll put capitalized
string<03:21:56.480><c> and</c><03:21:57.480><c> then</c><03:21:57.660><c> we</c><03:21:57.811><c> have</c><03:21:57.930><c> to</c><03:21:58.050><c> say</c><03:21:58.230><c> what</c>

03:21:58.490 --> 03:21:58.500 align:start position:0%
string and then we have to say what
 

03:21:58.500 --> 03:22:00.710 align:start position:0%
string and then we have to say what
we're<03:21:58.650><c> importing</c><03:21:59.280><c> it</c><03:21:59.521><c> from</c><03:21:59.851><c> we</c><03:22:00.480><c> want</c><03:22:00.660><c> to</c>

03:22:00.710 --> 03:22:00.720 align:start position:0%
we're importing it from we want to
 

03:22:00.720 --> 03:22:03.320 align:start position:0%
we're importing it from we want to
import<03:22:01.140><c> it</c><03:22:01.290><c> from</c><03:22:01.710><c> and</c><03:22:02.040><c> this</c><03:22:02.580><c> is</c><03:22:02.640><c> where</c><03:22:02.970><c> I</c><03:22:03.000><c> put</c>

03:22:03.320 --> 03:22:03.330 align:start position:0%
import it from and this is where I put
 

03:22:03.330 --> 03:22:05.301 align:start position:0%
import it from and this is where I put
the<03:22:03.480><c> file</c><03:22:03.780><c> name</c><03:22:04.080><c> now</c><03:22:04.771><c> normally</c><03:22:05.190><c> you're</c><03:22:05.280><c> going</c>

03:22:05.301 --> 03:22:05.311 align:start position:0%
the file name now normally you're going
 

03:22:05.311 --> 03:22:07.341 align:start position:0%
the file name now normally you're going
to<03:22:05.460><c> start</c><03:22:05.610><c> with</c><03:22:05.700><c> a</c><03:22:05.730><c> dot</c><03:22:05.970><c> slash</c><03:22:06.420><c> which</c><03:22:07.110><c> just</c>

03:22:07.341 --> 03:22:07.351 align:start position:0%
to start with a dot slash which just
 

03:22:07.351 --> 03:22:09.470 align:start position:0%
to start with a dot slash which just
means<03:22:07.530><c> the</c><03:22:07.680><c> current</c><03:22:08.190><c> directory</c><03:22:08.760><c> and</c><03:22:08.970><c> I'll</c>

03:22:09.470 --> 03:22:09.480 align:start position:0%
means the current directory and I'll
 

03:22:09.480 --> 03:22:13.810 align:start position:0%
means the current directory and I'll
type<03:22:09.750><c> in</c><03:22:09.900><c> the</c><03:22:09.960><c> file</c><03:22:10.140><c> name</c><03:22:10.190><c> string</c><03:22:11.930><c> function</c>

03:22:13.810 --> 03:22:13.820 align:start position:0%
type in the file name string function
 

03:22:13.820 --> 03:22:17.000 align:start position:0%
type in the file name string function
now<03:22:14.820><c> the</c><03:22:15.450><c> file</c><03:22:15.690><c> name</c><03:22:15.930><c> is</c><03:22:16.080><c> a</c><03:22:16.110><c> dot</c><03:22:16.351><c> a</c><03:22:16.530><c> yes</c><03:22:16.680><c> after</c>

03:22:17.000 --> 03:22:17.010 align:start position:0%
now the file name is a dot a yes after
 

03:22:17.010 --> 03:22:19.910 align:start position:0%
now the file name is a dot a yes after
it<03:22:17.311><c> but</c><03:22:17.610><c> that's</c><03:22:18.390><c> assumed</c><03:22:18.990><c> so</c><03:22:19.561><c> you</c><03:22:19.650><c> don't</c><03:22:19.800><c> have</c>

03:22:19.910 --> 03:22:19.920 align:start position:0%
it but that's assumed so you don't have
 

03:22:19.920 --> 03:22:21.801 align:start position:0%
it but that's assumed so you don't have
to<03:22:20.040><c> put</c><03:22:20.190><c> yes</c><03:22:20.790><c> you</c><03:22:20.940><c> can</c><03:22:21.061><c> just</c><03:22:21.180><c> put</c><03:22:21.480><c> the</c><03:22:21.601><c> file</c>

03:22:21.801 --> 03:22:21.811 align:start position:0%
to put yes you can just put the file
 

03:22:21.811 --> 03:22:24.650 align:start position:0%
to put yes you can just put the file
name<03:22:22.050><c> without</c><03:22:22.410><c> the</c><03:22:22.710><c> extension</c><03:22:23.280><c> so</c><03:22:24.000><c> if</c><03:22:24.300><c> I</c><03:22:24.420><c> run</c>

03:22:24.650 --> 03:22:24.660 align:start position:0%
name without the extension so if I run
 

03:22:24.660 --> 03:22:26.960 align:start position:0%
name without the extension so if I run
this<03:22:24.900><c> you</c><03:22:25.440><c> can</c><03:22:25.590><c> see</c><03:22:25.771><c> hello</c><03:22:26.190><c> in</c><03:22:26.400><c> all</c><03:22:26.490><c> capital</c>

03:22:26.960 --> 03:22:26.970 align:start position:0%
this you can see hello in all capital
 

03:22:26.970 --> 03:22:29.150 align:start position:0%
this you can see hello in all capital
letters<03:22:27.000><c> is</c><03:22:27.510><c> successfully</c><03:22:28.410><c> imported</c><03:22:28.890><c> this</c>

03:22:29.150 --> 03:22:29.160 align:start position:0%
letters is successfully imported this
 

03:22:29.160 --> 03:22:31.400 align:start position:0%
letters is successfully imported this
function<03:22:29.640><c> from</c><03:22:29.790><c> the</c><03:22:29.910><c> other</c><03:22:30.030><c> file</c><03:22:30.300><c> and</c><03:22:30.630><c> we</c><03:22:31.110><c> used</c>

03:22:31.400 --> 03:22:31.410 align:start position:0%
function from the other file and we used
 

03:22:31.410 --> 03:22:35.820 align:start position:0%
function from the other file and we used
it<03:22:31.590><c> in</c><03:22:31.771><c> this</c><03:22:31.950><c> file</c>

03:22:35.820 --> 03:22:35.830 align:start position:0%
 
 

03:22:35.830 --> 03:22:38.190 align:start position:0%
 
I<03:22:35.890><c> talked</c><03:22:36.880><c> a</c><03:22:37.000><c> little</c><03:22:37.150><c> bit</c><03:22:37.360><c> about</c><03:22:37.600><c> export</c><03:22:38.140><c> in</c>

03:22:38.190 --> 03:22:38.200 align:start position:0%
I talked a little bit about export in
 

03:22:38.200 --> 03:22:40.110 align:start position:0%
I talked a little bit about export in
the<03:22:38.230><c> last</c><03:22:38.590><c> lesson</c><03:22:38.920><c> but</c><03:22:39.430><c> now</c><03:22:39.550><c> I'm</c><03:22:39.760><c> going</c><03:22:39.940><c> to</c><03:22:40.000><c> go</c>

03:22:40.110 --> 03:22:40.120 align:start position:0%
the last lesson but now I'm going to go
 

03:22:40.120 --> 03:22:43.230 align:start position:0%
the last lesson but now I'm going to go
into<03:22:40.390><c> more</c><03:22:40.660><c> detail</c><03:22:41.170><c> you</c><03:22:41.890><c> export</c><03:22:42.670><c> functions</c>

03:22:43.230 --> 03:22:43.240 align:start position:0%
into more detail you export functions
 

03:22:43.240 --> 03:22:45.540 align:start position:0%
into more detail you export functions
and<03:22:43.420><c> variables</c><03:22:43.840><c> from</c><03:22:44.170><c> one</c><03:22:44.440><c> file</c><03:22:44.740><c> so</c><03:22:45.100><c> that</c><03:22:45.340><c> you</c>

03:22:45.540 --> 03:22:45.550 align:start position:0%
and variables from one file so that you
 

03:22:45.550 --> 03:22:48.570 align:start position:0%
and variables from one file so that you
can<03:22:45.850><c> import</c><03:22:46.540><c> them</c><03:22:46.780><c> into</c><03:22:47.080><c> another</c><03:22:47.470><c> file</c><03:22:47.980><c> that's</c>

03:22:48.570 --> 03:22:48.580 align:start position:0%
can import them into another file that's
 

03:22:48.580 --> 03:22:51.511 align:start position:0%
can import them into another file that's
how<03:22:48.760><c> you</c><03:22:48.820><c> can</c><03:22:49.061><c> reuse</c><03:22:49.240><c> different</c><03:22:49.930><c> code</c><03:22:50.200><c> so</c><03:22:51.070><c> we</c>

03:22:51.511 --> 03:22:51.521 align:start position:0%
how you can reuse different code so we
 

03:22:51.521 --> 03:22:53.340 align:start position:0%
how you can reuse different code so we
have<03:22:51.760><c> this</c><03:22:51.910><c> function</c><03:22:52.450><c> here</c><03:22:52.660><c> this</c><03:22:53.140><c> is</c><03:22:53.320><c> a</c>

03:22:53.340 --> 03:22:53.350 align:start position:0%
have this function here this is a
 

03:22:53.350 --> 03:22:55.290 align:start position:0%
have this function here this is a
capitalized<03:22:53.980><c> string</c><03:22:54.280><c> function</c><03:22:54.790><c> it</c><03:22:55.030><c> actually</c>

03:22:55.290 --> 03:22:55.300 align:start position:0%
capitalized string function it actually
 

03:22:55.300 --> 03:22:57.030 align:start position:0%
capitalized string function it actually
just<03:22:55.420><c> capitalizes</c><03:22:56.080><c> the</c><03:22:56.110><c> first</c><03:22:56.561><c> letter</c><03:22:56.830><c> of</c><03:22:56.890><c> the</c>

03:22:57.030 --> 03:22:57.040 align:start position:0%
just capitalizes the first letter of the
 

03:22:57.040 --> 03:22:59.070 align:start position:0%
just capitalizes the first letter of the
string<03:22:57.340><c> and</c><03:22:57.580><c> then</c><03:22:58.150><c> leaves</c><03:22:58.390><c> the</c><03:22:58.600><c> rest</c><03:22:58.811><c> of</c><03:22:58.990><c> the</c>

03:22:59.070 --> 03:22:59.080 align:start position:0%
string and then leaves the rest of the
 

03:22:59.080 --> 03:23:02.340 align:start position:0%
string and then leaves the rest of the
string<03:22:59.410><c> lowercase</c><03:23:00.100><c> and</c><03:23:00.450><c> before</c><03:23:01.450><c> I</c><03:23:01.720><c> showed</c><03:23:02.200><c> you</c>

03:23:02.340 --> 03:23:02.350 align:start position:0%
string lowercase and before I showed you
 

03:23:02.350 --> 03:23:04.200 align:start position:0%
string lowercase and before I showed you
you<03:23:02.470><c> can</c><03:23:02.650><c> just</c><03:23:02.800><c> put</c><03:23:03.010><c> export</c><03:23:03.550><c> right</c><03:23:03.790><c> before</c>

03:23:04.200 --> 03:23:04.210 align:start position:0%
you can just put export right before
 

03:23:04.210 --> 03:23:06.360 align:start position:0%
you can just put export right before
here<03:23:04.570><c> but</c><03:23:05.080><c> we</c><03:23:05.230><c> can</c><03:23:05.440><c> explore</c><03:23:05.800><c> a</c><03:23:05.890><c> different</c><03:23:06.040><c> way</c>

03:23:06.360 --> 03:23:06.370 align:start position:0%
here but we can explore a different way
 

03:23:06.370 --> 03:23:10.320 align:start position:0%
here but we can explore a different way
so<03:23:06.610><c> I'll</c><03:23:07.061><c> do</c><03:23:07.240><c> export</c><03:23:07.930><c> and</c><03:23:08.940><c> then</c><03:23:09.940><c> in</c><03:23:10.061><c> curly</c>

03:23:10.320 --> 03:23:10.330 align:start position:0%
so I'll do export and then in curly
 

03:23:10.330 --> 03:23:15.120 align:start position:0%
so I'll do export and then in curly
braces<03:23:10.830><c> capitalized</c><03:23:12.690><c> capitalized</c><03:23:14.130><c> string</c>

03:23:15.120 --> 03:23:15.130 align:start position:0%
braces capitalized capitalized string
 

03:23:15.130 --> 03:23:18.690 align:start position:0%
braces capitalized capitalized string
and<03:23:16.230><c> so</c><03:23:17.230><c> now</c><03:23:17.530><c> we've</c><03:23:17.830><c> just</c><03:23:18.010><c> explored</c><03:23:18.160><c> this</c>

03:23:18.690 --> 03:23:18.700 align:start position:0%
and so now we've just explored this
 

03:23:18.700 --> 03:23:21.570 align:start position:0%
and so now we've just explored this
function<03:23:19.300><c> and</c><03:23:19.480><c> to</c><03:23:20.140><c> export</c><03:23:20.710><c> a</c><03:23:20.860><c> variable</c><03:23:21.460><c> like</c>

03:23:21.570 --> 03:23:21.580 align:start position:0%
function and to export a variable like
 

03:23:21.580 --> 03:23:23.520 align:start position:0%
function and to export a variable like
this<03:23:21.820><c> we</c><03:23:22.030><c> have</c><03:23:22.180><c> Constable's</c><03:23:22.960><c> barkas</c>

03:23:23.520 --> 03:23:23.530 align:start position:0%
this we have Constable's barkas
 

03:23:23.530 --> 03:23:25.980 align:start position:0%
this we have Constable's barkas
particles<03:23:24.100><c> foo</c><03:23:24.340><c> to</c><03:23:24.940><c> export</c><03:23:25.360><c> these</c><03:23:25.480><c> variables</c>

03:23:25.980 --> 03:23:25.990 align:start position:0%
particles foo to export these variables
 

03:23:25.990 --> 03:23:30.980 align:start position:0%
particles foo to export these variables
you<03:23:26.110><c> just</c><03:23:26.320><c> type</c><03:23:27.190><c> an</c><03:23:27.370><c> export</c><03:23:28.110><c> like</c><03:23:29.110><c> both</c><03:23:29.320><c> before</c>

03:23:30.980 --> 03:23:30.990 align:start position:0%
you just type an export like both before
 

03:23:30.990 --> 03:23:33.780 align:start position:0%
you just type an export like both before
so<03:23:31.990><c> now</c><03:23:32.170><c> in</c><03:23:32.320><c> this</c><03:23:32.440><c> file</c><03:23:32.740><c> we're</c><03:23:33.010><c> exporting</c><03:23:33.460><c> this</c>

03:23:33.780 --> 03:23:33.790 align:start position:0%
so now in this file we're exporting this
 

03:23:33.790 --> 03:23:36.270 align:start position:0%
so now in this file we're exporting this
function<03:23:34.330><c> and</c><03:23:34.540><c> these</c><03:23:34.960><c> two</c><03:23:35.260><c> variables</c><03:23:35.680><c> and</c>

03:23:36.270 --> 03:23:36.280 align:start position:0%
function and these two variables and
 

03:23:36.280 --> 03:23:38.310 align:start position:0%
function and these two variables and
then<03:23:36.940><c> we</c><03:23:37.090><c> could</c><03:23:37.271><c> import</c><03:23:37.750><c> them</c><03:23:37.990><c> into</c><03:23:38.140><c> another</c>

03:23:38.310 --> 03:23:38.320 align:start position:0%
then we could import them into another
 

03:23:38.320 --> 03:23:42.280 align:start position:0%
then we could import them into another
file

03:23:42.280 --> 03:23:42.290 align:start position:0%
 
 

03:23:42.290 --> 03:23:45.130 align:start position:0%
 
if<03:23:43.160><c> a</c><03:23:43.399><c> file</c><03:23:43.700><c> exports</c><03:23:44.510><c> multiple</c><03:23:44.960><c> different</c>

03:23:45.130 --> 03:23:45.140 align:start position:0%
if a file exports multiple different
 

03:23:45.140 --> 03:23:47.320 align:start position:0%
if a file exports multiple different
things<03:23:45.290><c> you</c><03:23:45.770><c> can</c><03:23:45.979><c> import</c><03:23:46.760><c> each</c><03:23:47.000><c> things</c>

03:23:47.320 --> 03:23:47.330 align:start position:0%
things you can import each things
 

03:23:47.330 --> 03:23:49.690 align:start position:0%
things you can import each things
individually<03:23:47.660><c> or</c><03:23:48.319><c> you</c><03:23:49.040><c> can</c><03:23:49.220><c> import</c>

03:23:49.690 --> 03:23:49.700 align:start position:0%
individually or you can import
 

03:23:49.700 --> 03:23:51.760 align:start position:0%
individually or you can import
everything<03:23:50.210><c> so</c><03:23:51.020><c> let</c><03:23:51.229><c> me</c><03:23:51.319><c> show</c><03:23:51.470><c> you</c><03:23:51.500><c> how</c><03:23:51.740><c> you</c>

03:23:51.760 --> 03:23:51.770 align:start position:0%
everything so let me show you how you
 

03:23:51.770 --> 03:23:53.559 align:start position:0%
everything so let me show you how you
would<03:23:51.890><c> import</c><03:23:52.310><c> everything</c><03:23:52.700><c> from</c><03:23:53.029><c> a</c><03:23:53.060><c> file</c>

03:23:53.559 --> 03:23:53.569 align:start position:0%
would import everything from a file
 

03:23:53.569 --> 03:23:55.960 align:start position:0%
would import everything from a file
it's<03:23:53.990><c> just</c><03:23:54.260><c> import</c><03:23:54.920><c> and</c><03:23:55.220><c> then</c><03:23:55.729><c> you're</c><03:23:55.880><c> going</c>

03:23:55.960 --> 03:23:55.970 align:start position:0%
it's just import and then you're going
 

03:23:55.970 --> 03:23:58.840 align:start position:0%
it's just import and then you're going
to<03:23:56.029><c> put</c><03:23:56.300><c> an</c><03:23:56.390><c> asterisk</c><03:23:56.660><c> or</c><03:23:57.140><c> a</c><03:23:57.170><c> star</c><03:23:57.649><c> and</c><03:23:58.069><c> then</c>

03:23:58.840 --> 03:23:58.850 align:start position:0%
to put an asterisk or a star and then
 

03:23:58.850 --> 03:24:01.210 align:start position:0%
to put an asterisk or a star and then
you're<03:23:58.970><c> gonna</c><03:23:59.060><c> put</c><03:23:59.300><c> as</c><03:23:59.620><c> import</c><03:24:00.620><c> as</c><03:24:00.770><c> and</c><03:24:01.100><c> then</c>

03:24:01.210 --> 03:24:01.220 align:start position:0%
you're gonna put as import as and then
 

03:24:01.220 --> 03:24:03.460 align:start position:0%
you're gonna put as import as and then
you<03:24:01.250><c> have</c><03:24:01.370><c> to</c><03:24:01.460><c> create</c><03:24:01.790><c> an</c><03:24:02.270><c> object</c><03:24:02.600><c> to</c><03:24:03.109><c> store</c>

03:24:03.460 --> 03:24:03.470 align:start position:0%
you have to create an object to store
 

03:24:03.470 --> 03:24:06.700 align:start position:0%
you have to create an object to store
everything<03:24:03.979><c> in</c><03:24:04.370><c> so</c><03:24:05.090><c> I'm</c><03:24:05.479><c> gonna</c><03:24:05.630><c> import</c><03:24:06.229><c> stuff</c>

03:24:06.700 --> 03:24:06.710 align:start position:0%
everything in so I'm gonna import stuff
 

03:24:06.710 --> 03:24:08.920 align:start position:0%
everything in so I'm gonna import stuff
from<03:24:07.069><c> a</c><03:24:07.220><c> file</c><03:24:07.460><c> called</c><03:24:07.700><c> capitalized</c><03:24:08.479><c> strings</c>

03:24:08.920 --> 03:24:08.930 align:start position:0%
from a file called capitalized strings
 

03:24:08.930 --> 03:24:11.550 align:start position:0%
from a file called capitalized strings
so<03:24:09.529><c> I'm</c><03:24:09.620><c> going</c><03:24:09.800><c> to</c><03:24:09.859><c> call</c><03:24:10.130><c> this</c><03:24:10.340><c> capitalized</c>

03:24:11.550 --> 03:24:11.560 align:start position:0%
so I'm going to call this capitalized
 

03:24:11.560 --> 03:24:15.460 align:start position:0%
so I'm going to call this capitalized
strings<03:24:12.939><c> so</c><03:24:13.939><c> this</c><03:24:14.210><c> could</c><03:24:14.420><c> really</c><03:24:14.600><c> be</c><03:24:14.720><c> anything</c>

03:24:15.460 --> 03:24:15.470 align:start position:0%
strings so this could really be anything
 

03:24:15.470 --> 03:24:18.190 align:start position:0%
strings so this could really be anything
I'm<03:24:15.620><c> creating</c><03:24:16.340><c> an</c><03:24:16.550><c> object</c><03:24:16.850><c> with</c><03:24:17.600><c> this</c><03:24:17.899><c> and</c>

03:24:18.190 --> 03:24:18.200 align:start position:0%
I'm creating an object with this and
 

03:24:18.200 --> 03:24:20.349 align:start position:0%
I'm creating an object with this and
then<03:24:18.950><c> I'm</c><03:24:19.069><c> going</c><03:24:19.189><c> to</c><03:24:19.279><c> say</c><03:24:19.430><c> what</c><03:24:19.790><c> I'm</c><03:24:19.880><c> importing</c>

03:24:20.349 --> 03:24:20.359 align:start position:0%
then I'm going to say what I'm importing
 

03:24:20.359 --> 03:24:23.380 align:start position:0%
then I'm going to say what I'm importing
it<03:24:20.479><c> from</c><03:24:20.620><c> from</c><03:24:21.620><c> and</c><03:24:21.979><c> then</c><03:24:22.729><c> I</c><03:24:22.760><c> just</c><03:24:23.029><c> put</c><03:24:23.270><c> the</c>

03:24:23.380 --> 03:24:23.390 align:start position:0%
it from from and then I just put the
 

03:24:23.390 --> 03:24:25.660 align:start position:0%
it from from and then I just put the
file<03:24:23.689><c> name</c><03:24:23.930><c> in</c><03:24:24.200><c> this</c><03:24:24.740><c> case</c><03:24:24.950><c> it's</c><03:24:25.430><c> just</c><03:24:25.490><c> going</c>

03:24:25.660 --> 03:24:25.670 align:start position:0%
file name in this case it's just going
 

03:24:25.670 --> 03:24:30.370 align:start position:0%
file name in this case it's just going
to<03:24:25.729><c> be</c><03:24:26.200><c> capitalized</c><03:24:27.580><c> strings</c><03:24:28.990><c> sometimes</c><03:24:29.990><c> you</c>

03:24:30.370 --> 03:24:30.380 align:start position:0%
to be capitalized strings sometimes you
 

03:24:30.380 --> 03:24:32.200 align:start position:0%
to be capitalized strings sometimes you
would<03:24:30.470><c> have</c><03:24:30.649><c> to</c><03:24:30.770><c> put</c><03:24:30.920><c> a</c><03:24:30.979><c> dot</c><03:24:31.250><c> slash</c><03:24:31.609><c> if</c><03:24:31.910><c> it's</c><03:24:32.090><c> in</c>

03:24:32.200 --> 03:24:32.210 align:start position:0%
would have to put a dot slash if it's in
 

03:24:32.210 --> 03:24:34.360 align:start position:0%
would have to put a dot slash if it's in
the<03:24:32.330><c> same</c><03:24:32.569><c> directory</c><03:24:33.140><c> there</c><03:24:33.380><c> and</c><03:24:33.620><c> then</c><03:24:34.279><c> I'll</c>

03:24:34.360 --> 03:24:34.370 align:start position:0%
the same directory there and then I'll
 

03:24:34.370 --> 03:24:35.920 align:start position:0%
the same directory there and then I'll
make<03:24:34.550><c> sure</c><03:24:34.640><c> to</c><03:24:34.729><c> put</c><03:24:34.850><c> a</c><03:24:34.880><c> semicolon</c><03:24:35.270><c> at</c><03:24:35.750><c> the</c><03:24:35.810><c> end</c>

03:24:35.920 --> 03:24:35.930 align:start position:0%
make sure to put a semicolon at the end
 

03:24:35.930 --> 03:24:38.559 align:start position:0%
make sure to put a semicolon at the end
so<03:24:36.830><c> if</c><03:24:37.010><c> you're</c><03:24:37.160><c> importing</c><03:24:37.670><c> everything</c><03:24:38.390><c> you</c>

03:24:38.559 --> 03:24:38.569 align:start position:0%
so if you're importing everything you
 

03:24:38.569 --> 03:24:40.990 align:start position:0%
so if you're importing everything you
always<03:24:38.720><c> start</c><03:24:39.020><c> off</c><03:24:39.109><c> with</c><03:24:39.350><c> import</c><03:24:39.890><c> star</c><03:24:40.250><c> as</c><03:24:40.580><c> and</c>

03:24:40.990 --> 03:24:41.000 align:start position:0%
always start off with import star as and
 

03:24:41.000 --> 03:24:43.120 align:start position:0%
always start off with import star as and
then<03:24:41.479><c> this</c><03:24:41.779><c> can</c><03:24:42.080><c> be</c><03:24:42.200><c> anything</c><03:24:42.500><c> it</c><03:24:42.800><c> can</c><03:24:42.890><c> be</c><03:24:43.010><c> at</c>

03:24:43.120 --> 03:24:43.130 align:start position:0%
then this can be anything it can be at
 

03:24:43.130 --> 03:24:44.830 align:start position:0%
then this can be anything it can be at
any<03:24:43.250><c> object</c><03:24:43.819><c> name</c><03:24:44.000><c> that</c><03:24:44.149><c> you</c><03:24:44.240><c> create</c><03:24:44.600><c> and</c>

03:24:44.830 --> 03:24:44.840 align:start position:0%
any object name that you create and
 

03:24:44.840 --> 03:24:46.750 align:start position:0%
any object name that you create and
they're<03:24:45.290><c> going</c><03:24:45.380><c> to</c><03:24:45.470><c> put</c><03:24:45.620><c> from</c><03:24:45.979><c> and</c><03:24:46.279><c> then</c><03:24:46.700><c> you</c>

03:24:46.750 --> 03:24:46.760 align:start position:0%
they're going to put from and then you
 

03:24:46.760 --> 03:24:48.250 align:start position:0%
they're going to put from and then you
put<03:24:46.939><c> the</c><03:24:47.029><c> file</c><03:24:47.270><c> name</c><03:24:47.510><c> in</c><03:24:47.689><c> quotation</c><03:24:48.229><c> marks</c>

03:24:48.250 --> 03:24:48.260 align:start position:0%
put the file name in quotation marks
 

03:24:48.260 --> 03:24:52.920 align:start position:0%
put the file name in quotation marks
just<03:24:48.560><c> like</c><03:24:48.800><c> that</c>

03:24:52.920 --> 03:24:52.930 align:start position:0%
 
 

03:24:52.930 --> 03:24:55.530 align:start position:0%
 
before<03:24:53.920><c> when</c><03:24:54.101><c> I</c><03:24:54.160><c> talked</c><03:24:54.370><c> about</c><03:24:54.460><c> exports</c><03:24:55.240><c> I</c><03:24:55.390><c> was</c>

03:24:55.530 --> 03:24:55.540 align:start position:0%
before when I talked about exports I was
 

03:24:55.540 --> 03:24:58.051 align:start position:0%
before when I talked about exports I was
talking<03:24:55.930><c> about</c><03:24:55.960><c> named</c><03:24:56.500><c> exports</c><03:24:57.311><c> there's</c><03:24:57.910><c> also</c>

03:24:58.051 --> 03:24:58.061 align:start position:0%
talking about named exports there's also
 

03:24:58.061 --> 03:25:00.660 align:start position:0%
talking about named exports there's also
something<03:24:58.450><c> called</c><03:24:58.601><c> an</c><03:24:58.930><c> export</c><03:24:59.500><c> default</c><03:25:00.040><c> this</c>

03:25:00.660 --> 03:25:00.670 align:start position:0%
something called an export default this
 

03:25:00.670 --> 03:25:03.720 align:start position:0%
something called an export default this
is<03:25:00.730><c> a</c><03:25:01.090><c> fallback</c><03:25:01.660><c> export</c><03:25:02.620><c> and</c><03:25:02.860><c> it's</c><03:25:03.280><c> often</c><03:25:03.700><c> used</c>

03:25:03.720 --> 03:25:03.730 align:start position:0%
is a fallback export and it's often used
 

03:25:03.730 --> 03:25:06.480 align:start position:0%
is a fallback export and it's often used
if<03:25:04.180><c> you</c><03:25:04.330><c> only</c><03:25:04.630><c> want</c><03:25:05.080><c> to</c><03:25:05.140><c> export</c><03:25:05.830><c> one</c><03:25:06.190><c> thing</c>

03:25:06.480 --> 03:25:06.490 align:start position:0%
if you only want to export one thing
 

03:25:06.490 --> 03:25:09.810 align:start position:0%
if you only want to export one thing
from<03:25:06.880><c> a</c><03:25:07.000><c> file</c><03:25:07.330><c> so</c><03:25:08.140><c> if</c><03:25:08.440><c> you</c><03:25:08.920><c> let's</c><03:25:09.340><c> say</c><03:25:09.490><c> I</c><03:25:09.550><c> want</c>

03:25:09.810 --> 03:25:09.820 align:start position:0%
from a file so if you let's say I want
 

03:25:09.820 --> 03:25:12.210 align:start position:0%
from a file so if you let's say I want
this<03:25:10.030><c> to</c><03:25:10.300><c> be</c><03:25:10.330><c> my</c><03:25:10.690><c> fallback</c><03:25:11.080><c> export</c><03:25:11.860><c> I'm</c><03:25:11.980><c> just</c>

03:25:12.210 --> 03:25:12.220 align:start position:0%
this to be my fallback export I'm just
 

03:25:12.220 --> 03:25:14.341 align:start position:0%
this to be my fallback export I'm just
going<03:25:12.460><c> to</c><03:25:12.580><c> only</c><03:25:12.760><c> export</c><03:25:13.420><c> this</c><03:25:13.540><c> one</c><03:25:13.840><c> thing</c><03:25:14.110><c> from</c>

03:25:14.341 --> 03:25:14.351 align:start position:0%
going to only export this one thing from
 

03:25:14.351 --> 03:25:18.000 align:start position:0%
going to only export this one thing from
the<03:25:14.470><c> file</c><03:25:14.710><c> I</c><03:25:15.040><c> can</c><03:25:15.370><c> just</c><03:25:15.760><c> put</c><03:25:16.030><c> export</c><03:25:17.010><c> default</c>

03:25:18.000 --> 03:25:18.010 align:start position:0%
the file I can just put export default
 

03:25:18.010 --> 03:25:21.150 align:start position:0%
the file I can just put export default
so<03:25:19.000><c> now</c><03:25:19.210><c> we</c><03:25:19.271><c> know</c><03:25:19.660><c> that</c><03:25:19.690><c> this</c><03:25:20.021><c> is</c><03:25:20.260><c> just</c><03:25:20.290><c> the</c><03:25:20.650><c> the</c>

03:25:21.150 --> 03:25:21.160 align:start position:0%
so now we know that this is just the the
 

03:25:21.160 --> 03:25:23.551 align:start position:0%
so now we know that this is just the the
fallback<03:25:21.460><c> though</c><03:25:22.390><c> basically</c><03:25:23.050><c> just</c><03:25:23.230><c> the</c><03:25:23.380><c> one</c>

03:25:23.551 --> 03:25:23.561 align:start position:0%
fallback though basically just the one
 

03:25:23.561 --> 03:25:24.870 align:start position:0%
fallback though basically just the one
thing<03:25:23.771><c> we're</c><03:25:23.950><c> going</c><03:25:24.070><c> to</c><03:25:24.130><c> export</c><03:25:24.521><c> from</c><03:25:24.670><c> this</c>

03:25:24.870 --> 03:25:24.880 align:start position:0%
thing we're going to export from this
 

03:25:24.880 --> 03:25:29.060 align:start position:0%
thing we're going to export from this
file

03:25:29.060 --> 03:25:29.070 align:start position:0%
 
 

03:25:29.070 --> 03:25:32.250 align:start position:0%
 
so<03:25:30.070><c> we</c><03:25:30.250><c> talked</c><03:25:30.550><c> about</c><03:25:30.670><c> exporting</c><03:25:31.540><c> a</c><03:25:31.720><c> default</c>

03:25:32.250 --> 03:25:32.260 align:start position:0%
so we talked about exporting a default
 

03:25:32.260 --> 03:25:34.650 align:start position:0%
so we talked about exporting a default
export<03:25:32.920><c> now</c><03:25:33.670><c> I'm</c><03:25:33.939><c> going</c><03:25:34.090><c> to</c><03:25:34.240><c> show</c><03:25:34.390><c> you</c><03:25:34.450><c> how</c><03:25:34.570><c> to</c>

03:25:34.650 --> 03:25:34.660 align:start position:0%
export now I'm going to show you how to
 

03:25:34.660 --> 03:25:37.469 align:start position:0%
export now I'm going to show you how to
import<03:25:35.260><c> a</c><03:25:35.439><c> default</c><03:25:35.830><c> export</c><03:25:36.130><c> it's</c><03:25:37.030><c> pretty</c><03:25:37.390><c> much</c>

03:25:37.469 --> 03:25:37.479 align:start position:0%
import a default export it's pretty much
 

03:25:37.479 --> 03:25:39.360 align:start position:0%
import a default export it's pretty much
the<03:25:37.689><c> same</c><03:25:37.840><c> as</c><03:25:38.020><c> before</c><03:25:38.140><c> but</c><03:25:38.380><c> there</c><03:25:38.740><c> is</c><03:25:38.920><c> a</c><03:25:38.950><c> slight</c>

03:25:39.360 --> 03:25:39.370 align:start position:0%
the same as before but there is a slight
 

03:25:39.370 --> 03:25:42.090 align:start position:0%
the same as before but there is a slight
difference<03:25:40.090><c> so</c><03:25:40.660><c> we</c><03:25:41.050><c> are</c><03:25:41.170><c> going</c><03:25:41.380><c> to</c><03:25:41.470><c> pretend</c><03:25:41.920><c> we</c>

03:25:42.090 --> 03:25:42.100 align:start position:0%
difference so we are going to pretend we
 

03:25:42.100 --> 03:25:44.670 align:start position:0%
difference so we are going to pretend we
have<03:25:42.370><c> a</c><03:25:42.399><c> file</c><03:25:42.729><c> called</c><03:25:42.760><c> math</c><03:25:43.420><c> functions</c><03:25:44.170><c> that</c>

03:25:44.670 --> 03:25:44.680 align:start position:0%
have a file called math functions that
 

03:25:44.680 --> 03:25:47.610 align:start position:0%
have a file called math functions that
has<03:25:44.920><c> a</c><03:25:44.950><c> default</c><03:25:45.490><c> export</c><03:25:45.880><c> name</c><03:25:46.240><c> subtract</c><03:25:46.930><c> so</c>

03:25:47.610 --> 03:25:47.620 align:start position:0%
has a default export name subtract so
 

03:25:47.620 --> 03:25:48.929 align:start position:0%
has a default export name subtract so
let<03:25:47.830><c> me</c><03:25:47.890><c> show</c><03:25:48.040><c> you</c><03:25:48.130><c> how</c><03:25:48.250><c> you</c><03:25:48.310><c> would</c><03:25:48.399><c> import</c>

03:25:48.929 --> 03:25:48.939 align:start position:0%
let me show you how you would import
 

03:25:48.939 --> 03:25:52.380 align:start position:0%
let me show you how you would import
that<03:25:49.120><c> so</c><03:25:49.720><c> it's</c><03:25:49.840><c> going</c><03:25:49.930><c> to</c><03:25:49.990><c> be</c><03:25:50.140><c> import</c><03:25:51.390><c> subtract</c>

03:25:52.380 --> 03:25:52.390 align:start position:0%
that so it's going to be import subtract
 

03:25:52.390 --> 03:25:55.620 align:start position:0%
that so it's going to be import subtract
and<03:25:53.010><c> we've</c><03:25:54.010><c> already</c><03:25:54.370><c> reached</c><03:25:54.880><c> the</c><03:25:55.120><c> difference</c>

03:25:55.620 --> 03:25:55.630 align:start position:0%
and we've already reached the difference
 

03:25:55.630 --> 03:25:57.990 align:start position:0%
and we've already reached the difference
here<03:25:55.899><c> if</c><03:25:56.140><c> it's</c><03:25:56.439><c> not</c><03:25:56.530><c> a</c><03:25:56.649><c> default</c><03:25:57.220><c> export</c><03:25:57.640><c> you'll</c>

03:25:57.990 --> 03:25:58.000 align:start position:0%
here if it's not a default export you'll
 

03:25:58.000 --> 03:26:00.690 align:start position:0%
here if it's not a default export you'll
put<03:25:58.270><c> curly</c><03:25:58.720><c> braces</c><03:25:58.990><c> around</c><03:25:59.200><c> this</c><03:25:59.649><c> but</c><03:26:00.280><c> it</c><03:26:00.430><c> is</c><03:26:00.670><c> a</c>

03:26:00.690 --> 03:26:00.700 align:start position:0%
put curly braces around this but it is a
 

03:26:00.700 --> 03:26:03.240 align:start position:0%
put curly braces around this but it is a
default<03:26:01.359><c> export</c><03:26:01.899><c> so</c><03:26:02.170><c> we</c><03:26:02.380><c> are</c><03:26:02.500><c> not</c><03:26:02.740><c> going</c><03:26:03.130><c> to</c>

03:26:03.240 --> 03:26:03.250 align:start position:0%
default export so we are not going to
 

03:26:03.250 --> 03:26:05.639 align:start position:0%
default export so we are not going to
use<03:26:03.430><c> curly</c><03:26:03.970><c> braces</c><03:26:04.000><c> but</c><03:26:04.870><c> we</c><03:26:04.990><c> still</c><03:26:05.260><c> have</c><03:26:05.470><c> to</c>

03:26:05.639 --> 03:26:05.649 align:start position:0%
use curly braces but we still have to
 

03:26:05.649 --> 03:26:07.080 align:start position:0%
use curly braces but we still have to
say<03:26:05.859><c> what</c><03:26:06.130><c> it</c><03:26:06.220><c> what</c><03:26:06.370><c> it's</c><03:26:06.490><c> from</c>

03:26:07.080 --> 03:26:07.090 align:start position:0%
say what it what it's from
 

03:26:07.090 --> 03:26:13.920 align:start position:0%
say what it what it's from
so<03:26:07.390><c> from</c><03:26:08.609><c> math</c><03:26:10.590><c> functions</c><03:26:12.149><c> okay</c><03:26:13.149><c> so</c><03:26:13.570><c> that</c><03:26:13.899><c> is</c>

03:26:13.920 --> 03:26:13.930 align:start position:0%
so from math functions okay so that is
 

03:26:13.930 --> 03:26:18.110 align:start position:0%
so from math functions okay so that is
how<03:26:14.170><c> you</c><03:26:14.439><c> would</c><03:26:14.770><c> import</c><03:26:15.250><c> a</c><03:26:15.490><c> default</c><03:26:16.030><c> export</c>

03:26:18.110 --> 03:26:18.120 align:start position:0%
how you would import a default export
 

03:26:18.120 --> 03:26:21.389 align:start position:0%
how you would import a default export
well<03:26:19.120><c> thanks</c><03:26:19.600><c> for</c><03:26:19.720><c> watching</c><03:26:19.890><c> don't</c><03:26:20.890><c> forget</c><03:26:21.010><c> to</c>

03:26:21.389 --> 03:26:21.399 align:start position:0%
well thanks for watching don't forget to
 

03:26:21.399 --> 03:26:24.599 align:start position:0%
well thanks for watching don't forget to
subscribe<03:26:21.580><c> and</c><03:26:22.210><c> remember</c><03:26:22.770><c> use</c><03:26:23.770><c> your</c><03:26:23.800><c> code</c><03:26:24.310><c> for</c>

03:26:24.599 --> 03:26:24.609 align:start position:0%
subscribe and remember use your code for
 

03:26:24.609 --> 03:26:26.820 align:start position:0%
subscribe and remember use your code for
good

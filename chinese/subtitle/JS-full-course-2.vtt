00:05:39.770 --> 00:05:41.469 align:start position:0%
你可以看到这些全都是灰色

00:05:41.479 --> 00:05:44.649 align:start position:0%
因为它们都是注释

00:05:44.659 --> 00:05:48.309 align:start position:0%
然后我输入 number = 9

00:05:51.529 --> 00:05:53.519 align:start position:0%
你可以看到它们是有颜色的

00:05:53.529 --> 00:05:58.840 align:start position:0%
因为它们没有被注释掉

00:06:01.070 --> 00:06:04.510 align:start position:0%
接下来我们学习数据类型和变量

00:06:04.520 --> 00:06:06.430 align:start position:0%
在计算机科学中，所有对计算机有一定意义的内容都是数据

00:06:09.200 --> 00:06:11.260 align:start position:0%
JavaScript 中有七种数据类型

00:06:14.180 --> 00:06:16.930 align:start position:0%
最常见的是 string（字符类型）和 number（数值类型）

00:06:19.670 --> 00:06:23.140 align:start position:0%
string 就是文本

00:06:23.150 --> 00:06:25.690 align:start position:0%
number 就是数值

00:06:25.700 --> 00:06:28.270 align:start position:0%
我们从头开始看

00:06:28.280 --> 00:06:29.950 align:start position:0%
undefined 是未被定义的数据

00:06:29.960 --> 00:06:33.040 align:start position:0%
比如一个变量，你没给它赋值，它就是 undefined

00:06:33.050 --> 00:06:36.100 align:start position:0%
null 是空值

00:06:36.110 --> 00:06:38.680 align:start position:0%
你已经给他赋值，这个值是空值

00:06:38.690 --> 00:06:42.040 align:start position:0%
这就是 null

00:06:42.050 --> 00:06:45.730 align:start position:0%
boolean（布尔类型）指是或者非

00:06:45.740 --> 00:06:48.580 align:start position:0%
string 我们已经说过了

00:06:48.590 --> 00:06:50.710 align:start position:0%
symbol 是一个不可变的原始值，是独一无二的

00:06:50.720 --> 00:06:55.140 align:start position:0%
稍后我们会对它进行更多讨论

00:06:55.150 --> 00:06:58.420 align:start position:0%
number 就是一个数值

00:06:58.430 --> 00:07:00.910 align:start position:0%
object（对象）可以存储许多不同的键值对

00:07:00.920 --> 00:07:04.420 align:start position:0%
我们也是稍后再讨论它

00:07:04.430 --> 00:07:08.530 align:start position:0%
你常常会把数据赋值给一个变量

00:07:08.540 --> 00:07:11.020 align:start position:0%
变量允许计算机动态存储和操作数据

00:07:16.820 --> 00:07:19.660 align:start position:0%
它其实就是一个指向数据变量的标签

00:07:20.990 --> 00:07:22.600 align:start position:0%
就像是一个盒子，你可以往里面放任何东西

00:07:22.610 --> 00:07:26.470 align:start position:0%
你可以往里面放自己需要的数据

00:07:29.570 --> 00:07:33.880 align:start position:0%
声明变量的一种方式是用 VAR

00:07:33.890 --> 00:07:36.310 align:start position:0%
我可以输入 myName，给它任何赋值

00:07:36.320 --> 00:07:39.760 align:start position:0%
它可以是前面说的任何一种数据类型

00:07:39.770 --> 00:07:43.090 align:start position:0%
不过通常我们会给它字符类型的赋值

00:07:43.100 --> 00:07:47.680 align:start position:0%
所以我给它赋值为 Beau

00:07:47.690 --> 00:07:50.040 align:start position:0%
也可以给它其他数据类型的赋值

00:07:50.050 --> 00:07:54.190 align:start position:0%
比如说，myName = 8

00:07:54.200 --> 00:07:57.610 align:start position:0%
你稍后也可以赋值其他数据类型

00:07:57.620 --> 00:08:00.460 align:start position:0%
在 JavaScript 里声明一个变量有三种方式

00:08:03.230 --> 00:08:06.190 align:start position:0%
var 是其中一种方式，曾经是唯一方式

00:08:06.200 --> 00:08:08.680 align:start position:0%
但是现在有另外两种方式了

00:08:08.690 --> 00:08:12.580 align:start position:0%
有一种方式是 let

00:08:12.590 --> 00:08:16.300 align:start position:0%
所以我可以输入 let ourName = "freeCodeCamp"

00:08:20.960 --> 00:08:23.200 align:start position:0%
还有一种方式是 const

00:08:23.210 --> 00:08:27.820 align:start position:0%
我可以输入 const pi = 3.14

00:08:27.830 --> 00:08:31.750 align:start position:0%
var，let 和 const 之间的区别是

00:08:31.760 --> 00:08:33.550 align:start position:0%
var 可以用于你的整个程序

00:08:38.300 --> 00:08:41.740 align:start position:0%
let 只用于你声明使用它的范围

00:08:43.550 --> 00:08:45.430 align:start position:0%
稍后我们会讨论更多 let 和 const 的用法

00:08:45.440 --> 00:08:48.030 align:start position:0%
所以我暂时只简要介绍一下它们

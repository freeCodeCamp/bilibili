with<01:42:52.300><c> a</c><01:42:52.330><c> value</c><01:42:52.780><c> of</c><01:42:52.900><c> undefined</c><01:42:53.530><c> so</c><01:42:54.370><c> let's</c><01:42:54.580><c> do</c>

01:42:54.750 --> 01:42:54.760 align:start position:0%
with a value of undefined so let's do
 

01:42:54.760 --> 01:42:57.240 align:start position:0%
with a value of undefined so let's do
that<01:42:54.970><c> we're</c><01:42:55.120><c> gonna</c><01:42:55.240><c> set</c><01:42:55.660><c> an</c><01:42:55.750><c> if</c><01:42:55.990><c> statement</c><01:42:56.290><c> if</c>

01:42:57.240 --> 01:42:57.250 align:start position:0%
that we're gonna set an if statement if
 

01:42:57.250 --> 01:43:04.560 align:start position:0%
that we're gonna set an if statement if
a<01:42:57.640><c> is</c><01:42:58.540><c> less</c><01:42:58.990><c> than</c><01:43:00.180><c> zero</c><01:43:02.250><c> or</c><01:43:03.250><c> that's</c><01:43:03.940><c> two</c><01:43:04.270><c> pipes</c>

01:43:04.560 --> 01:43:04.570 align:start position:0%
a is less than zero or that's two pipes
 

01:43:04.570 --> 01:43:10.710 align:start position:0%
a is less than zero or that's two pipes
B<01:43:05.020><c> is</c><01:43:05.380><c> less</c><01:43:06.220><c> than</c><01:43:06.870><c> zero</c><01:43:08.340><c> then</c><01:43:09.390><c> we're</c><01:43:10.390><c> going</c><01:43:10.660><c> to</c>

01:43:10.710 --> 01:43:10.720 align:start position:0%
B is less than zero then we're going to
 

01:43:10.720 --> 01:43:18.390 align:start position:0%
B is less than zero then we're going to
return<01:43:10.990><c> an</c><01:43:13.260><c> undefined</c><01:43:15.930><c> so</c><01:43:16.930><c> we</c><01:43:17.560><c> can</c><01:43:17.770><c> do</c><01:43:17.950><c> a</c><01:43:17.980><c> test</c>

01:43:18.390 --> 01:43:18.400 align:start position:0%
return an undefined so we can do a test
 

01:43:18.400 --> 01:43:25.020 align:start position:0%
return an undefined so we can do a test
here<01:43:19.500><c> console.log</c><01:43:23.160><c> eight</c><01:43:24.160><c> but</c><01:43:24.610><c> what</c><01:43:24.790><c> if</c><01:43:24.880><c> this</c>

01:43:25.020 --> 01:43:25.030 align:start position:0%
here console.log eight but what if this
 

01:43:25.030 --> 01:43:29.220 align:start position:0%
here console.log eight but what if this
is<01:43:25.090><c> a</c><01:43:25.510><c> negative</c><01:43:26.380><c> number</c><01:43:27.960><c> it's</c><01:43:28.960><c> going</c><01:43:29.080><c> to</c>

01:43:29.220 --> 01:43:29.230 align:start position:0%
is a negative number it's going to
 

01:43:29.230 --> 01:43:32.370 align:start position:0%
is a negative number it's going to
return<01:43:29.620><c> undefined</c><01:43:30.810><c> Skrim</c><01:43:31.810><c> beheads</c><01:43:32.110><c> a</c><01:43:32.170><c> little</c>

01:43:32.370 --> 01:43:32.380 align:start position:0%
return undefined Skrim beheads a little
 

01:43:32.380 --> 01:43:34.800 align:start position:0%
return undefined Skrim beheads a little
quirk<01:43:32.740><c> here</c><01:43:33.070><c> where</c><01:43:33.250><c> it</c><01:43:33.340><c> just</c><01:43:33.490><c> shows</c><01:43:33.700><c> null</c><01:43:34.120><c> but</c>

01:43:34.800 --> 01:43:34.810 align:start position:0%
quirk here where it just shows null but
 

01:43:34.810 --> 01:43:41.470 align:start position:0%
quirk here where it just shows null but
in<01:43:35.080><c> a</c><01:43:35.500><c> browser</c><01:43:35.950><c> will</c><01:43:36.430><c> show</c><01:43:36.640><c> undefined</c>

01:43:41.470 --> 01:43:41.480 align:start position:0%
 
 

01:43:41.480 --> 01:43:44.500 align:start position:0%
 
we<01:43:41.960><c> are</c><01:43:42.080><c> going</c><01:43:42.350><c> to</c><01:43:42.380><c> create</c><01:43:42.739><c> a</c><01:43:43.010><c> blackjack</c><01:43:43.520><c> card</c>

01:43:44.500 --> 01:43:44.510 align:start position:0%
we are going to create a blackjack card
 

01:43:44.510 --> 01:43:47.530 align:start position:0%
we are going to create a blackjack card
counting<01:43:44.690><c> function</c><01:43:45.580><c> so</c><01:43:46.580><c> how</c><01:43:46.820><c> how</c><01:43:47.120><c> card</c>

01:43:47.530 --> 01:43:47.540 align:start position:0%
counting function so how how card
 

01:43:47.540 --> 01:43:49.689 align:start position:0%
counting function so how how card
counting<01:43:47.989><c> works</c><01:43:48.260><c> at</c><01:43:48.800><c> least</c><01:43:49.160><c> how</c><01:43:49.370><c> this</c>

01:43:49.689 --> 01:43:49.699 align:start position:0%
counting works at least how this
 

01:43:49.699 --> 01:43:52.300 align:start position:0%
counting works at least how this
function<01:43:50.150><c> is</c><01:43:50.239><c> gonna</c><01:43:50.420><c> work</c><01:43:50.750><c> is</c><01:43:50.989><c> that</c><01:43:51.830><c> when</c><01:43:52.130><c> you</c>

01:43:52.300 --> 01:43:52.310 align:start position:0%
function is gonna work is that when you
 

01:43:52.310 --> 01:43:55.630 align:start position:0%
function is gonna work is that when you
see<01:43:52.640><c> a</c><01:43:52.850><c> low</c><01:43:53.360><c> card</c><01:43:53.810><c> that</c><01:43:54.380><c> count</c><01:43:54.710><c> goes</c><01:43:55.040><c> up</c><01:43:55.340><c> and</c>

01:43:55.630 --> 01:43:55.640 align:start position:0%
see a low card that count goes up and
 

01:43:55.640 --> 01:43:58.419 align:start position:0%
see a low card that count goes up and
when<01:43:56.179><c> you</c><01:43:56.270><c> see</c><01:43:56.449><c> a</c><01:43:56.480><c> high</c><01:43:56.929><c> card</c><01:43:57.320><c> that</c><01:43:57.949><c> count</c><01:43:58.219><c> goes</c>

01:43:58.419 --> 01:43:58.429 align:start position:0%
when you see a high card that count goes
 

01:43:58.429 --> 01:44:01.090 align:start position:0%
when you see a high card that count goes
down<01:43:58.760><c> and</c><01:43:59.150><c> if</c><01:43:59.390><c> it's</c><01:43:59.570><c> a</c><01:43:59.780><c> middle</c><01:44:00.199><c> value</c><01:44:00.350><c> card</c><01:44:00.830><c> the</c>

01:44:01.090 --> 01:44:01.100 align:start position:0%
down and if it's a middle value card the
 

01:44:01.100 --> 01:44:04.510 align:start position:0%
down and if it's a middle value card the
count<01:44:01.370><c> stays</c><01:44:01.760><c> the</c><01:44:02.179><c> same</c><01:44:02.210><c> and</c><01:44:02.810><c> then</c><01:44:03.739><c> when</c><01:44:04.370><c> the</c>

01:44:04.510 --> 01:44:04.520 align:start position:0%
count stays the same and then when the
 

01:44:04.520 --> 01:44:07.060 align:start position:0%
count stays the same and then when the
count<01:44:04.790><c> is</c><01:44:04.969><c> positive</c><01:44:05.780><c> the</c><01:44:06.080><c> player</c><01:44:06.350><c> should</c><01:44:06.739><c> bet</c>

01:44:07.060 --> 01:44:07.070 align:start position:0%
count is positive the player should bet
 

01:44:07.070 --> 01:44:09.850 align:start position:0%
count is positive the player should bet
high<01:44:07.400><c> and</c><01:44:07.850><c> when</c><01:44:08.300><c> the</c><01:44:08.420><c> count</c><01:44:08.690><c> is</c><01:44:08.870><c> zero</c><01:44:09.560><c> or</c>

01:44:09.850 --> 01:44:09.860 align:start position:0%
high and when the count is zero or
 

01:44:09.860 --> 01:44:13.810 align:start position:0%
high and when the count is zero or
negative<01:44:10.340><c> the</c><01:44:11.150><c> player</c><01:44:11.510><c> should</c><01:44:11.960><c> bet</c><01:44:12.380><c> low</c><01:44:12.830><c> so</c><01:44:13.520><c> we</c>

01:44:13.810 --> 01:44:13.820 align:start position:0%
negative the player should bet low so we
 

01:44:13.820 --> 01:44:17.650 align:start position:0%
negative the player should bet low so we
are<01:44:14.150><c> going</c><01:44:14.600><c> to</c><01:44:14.870><c> use</c><01:44:15.440><c> a</c><01:44:15.679><c> switch</c><01:44:16.400><c> statement</c><01:44:16.699><c> to</c>

01:44:17.650 --> 01:44:17.660 align:start position:0%
are going to use a switch statement to
 

01:44:17.660 --> 01:44:21.010 align:start position:0%
are going to use a switch statement to
figure<01:44:18.080><c> out</c><01:44:18.260><c> what</c><01:44:19.219><c> card</c><01:44:19.790><c> has</c><01:44:20.210><c> been</c><01:44:20.239><c> passed</c><01:44:20.690><c> in</c>

01:44:21.010 --> 01:44:21.020 align:start position:0%
figure out what card has been passed in
 

01:44:21.020 --> 01:44:23.530 align:start position:0%
figure out what card has been passed in
and<01:44:21.230><c> what</c><01:44:21.410><c> to</c><01:44:21.530><c> do</c><01:44:21.739><c> about</c><01:44:22.070><c> it</c><01:44:22.280><c> you</c><01:44:22.940><c> can</c><01:44:23.150><c> see</c><01:44:23.360><c> that</c>

01:44:23.530 --> 01:44:23.540 align:start position:0%
and what to do about it you can see that
 

01:44:23.540 --> 01:44:25.689 align:start position:0%
and what to do about it you can see that
the<01:44:23.630><c> function</c><01:44:23.810><c> looks</c><01:44:24.199><c> like</c><01:44:24.260><c> this</c><01:44:24.620><c> see</c><01:44:25.280><c> see</c><01:44:25.550><c> and</c>

01:44:25.689 --> 01:44:25.699 align:start position:0%
the function looks like this see see and
 

01:44:25.699 --> 01:44:28.330 align:start position:0%
the function looks like this see see and
we<01:44:25.760><c> pass</c><01:44:26.030><c> in</c><01:44:26.210><c> a</c><01:44:26.300><c> card</c><01:44:26.690><c> and</c><01:44:27.160><c> depending</c><01:44:28.160><c> on</c><01:44:28.190><c> what</c>

01:44:28.330 --> 01:44:28.340 align:start position:0%
we pass in a card and depending on what
 

01:44:28.340 --> 01:44:30.790 align:start position:0%
we pass in a card and depending on what
the<01:44:28.460><c> card</c><01:44:28.760><c> is</c><01:44:28.910><c> it's</c><01:44:29.420><c> going</c><01:44:29.690><c> to</c><01:44:29.810><c> increase</c><01:44:30.440><c> this</c>

01:44:30.790 --> 01:44:30.800 align:start position:0%
the card is it's going to increase this
 

01:44:30.800 --> 01:44:33.250 align:start position:0%
the card is it's going to increase this
global<01:44:31.400><c> count</c><01:44:31.730><c> variable</c><01:44:32.330><c> or</c><01:44:32.810><c> it's</c><01:44:32.960><c> going</c><01:44:33.140><c> to</c>

01:44:33.250 --> 01:44:33.260 align:start position:0%
global count variable or it's going to
 

01:44:33.260 --> 01:44:35.470 align:start position:0%
global count variable or it's going to
decrease<01:44:33.710><c> it</c><01:44:34.040><c> or</c><01:44:34.219><c> it's</c><01:44:34.699><c> going</c><01:44:34.850><c> to</c><01:44:34.910><c> stay</c><01:44:35.179><c> the</c>

01:44:35.470 --> 01:44:35.480 align:start position:0%
decrease it or it's going to stay the
 

01:44:35.480 --> 01:44:38.950 align:start position:0%
decrease it or it's going to stay the
same<01:44:35.719><c> and</c><01:44:36.219><c> then</c><01:44:37.219><c> we</c><01:44:37.730><c> are</c><01:44:37.820><c> going</c><01:44:38.030><c> to</c><01:44:38.120><c> return</c><01:44:38.360><c> two</c>

01:44:38.950 --> 01:44:38.960 align:start position:0%
same and then we are going to return two
 

01:44:38.960 --> 01:44:41.050 align:start position:0%
same and then we are going to return two
things<01:44:39.380><c> we're</c><01:44:39.770><c> not</c><01:44:39.860><c> gonna</c><01:44:40.040><c> return</c><01:44:40.370><c> changeme</c>

01:44:41.050 --> 01:44:41.060 align:start position:0%
things we're not gonna return changeme
 

01:44:41.060 --> 01:44:44.020 align:start position:0%
things we're not gonna return changeme
we<01:44:41.600><c> are</c><01:44:41.750><c> going</c><01:44:42.020><c> to</c><01:44:42.170><c> return</c><01:44:42.380><c> the</c><01:44:43.310><c> current</c><01:44:43.760><c> count</c>

01:44:44.020 --> 01:44:44.030 align:start position:0%
we are going to return the current count
 

01:44:44.030 --> 01:44:47.110 align:start position:0%
we are going to return the current count
value<01:44:44.570><c> and</c><01:44:44.780><c> whether</c><01:44:45.500><c> the</c><01:44:45.830><c> player</c><01:44:46.219><c> should</c><01:44:46.670><c> hold</c>

01:44:47.110 --> 01:44:47.120 align:start position:0%
value and whether the player should hold
 

01:44:47.120 --> 01:44:51.880 align:start position:0%
value and whether the player should hold
or<01:44:47.449><c> bet</c><01:44:48.429><c> so</c><01:44:49.429><c> every</c><01:44:50.239><c> time</c><01:44:50.480><c> you</c><01:44:50.690><c> call</c><01:44:50.960><c> the</c><01:44:51.350><c> CC</c>

01:44:51.880 --> 01:44:51.890 align:start position:0%
or bet so every time you call the CC
 

01:44:51.890 --> 01:44:55.240 align:start position:0%
or bet so every time you call the CC
function<01:44:52.520><c> it's</c><01:44:53.150><c> going</c><01:44:53.600><c> to</c><01:44:53.870><c> change</c><01:44:54.500><c> this</c><01:44:54.860><c> count</c>

01:44:55.240 --> 01:44:55.250 align:start position:0%
function it's going to change this count
 

01:44:55.250 --> 01:44:58.450 align:start position:0%
function it's going to change this count
value<01:44:55.820><c> and</c><01:44:56.060><c> return</c><01:44:56.810><c> the</c><01:44:57.020><c> total</c><01:44:57.320><c> count</c><01:44:57.560><c> so</c>

01:44:58.450 --> 01:44:58.460 align:start position:0%
value and return the total count so
 

01:44:58.460 --> 01:45:01.270 align:start position:0%
value and return the total count so
let's<01:44:58.699><c> see</c><01:44:58.940><c> how</c><01:44:59.179><c> this</c><01:44:59.420><c> is</c><01:44:59.480><c> going</c><01:44:59.960><c> to</c><01:45:00.140><c> work</c><01:45:00.280><c> we</c>

01:45:01.270 --> 01:45:01.280 align:start position:0%
let's see how this is going to work we
 

01:45:01.280 --> 01:45:03.250 align:start position:0%
let's see how this is going to work we
are<01:45:01.310><c> going</c><01:45:01.460><c> to</c><01:45:01.969><c> use</c><01:45:02.540><c> the</c><01:45:02.780><c> switch</c><01:45:03.110><c> statement</c>

01:45:03.250 --> 01:45:03.260 align:start position:0%
are going to use the switch statement
 

01:45:03.260 --> 01:45:08.979 align:start position:0%
are going to use the switch statement
like<01:45:03.710><c> I</c><01:45:03.739><c> said</c><01:45:04.179><c> and</c><01:45:06.219><c> we're</c><01:45:07.219><c> going</c><01:45:07.460><c> to</c><01:45:07.699><c> check</c><01:45:08.540><c> the</c>

01:45:08.979 --> 01:45:08.989 align:start position:0%
like I said and we're going to check the
 

01:45:08.989 --> 01:45:13.510 align:start position:0%
like I said and we're going to check the
card<01:45:09.380><c> value</c><01:45:09.469><c> that</c><01:45:09.949><c> was</c><01:45:10.100><c> passed</c><01:45:10.130><c> in</c><01:45:11.739><c> so</c><01:45:12.739><c> if</c><01:45:13.340><c> the</c>

01:45:13.510 --> 01:45:13.520 align:start position:0%
card value that was passed in so if the
 

01:45:13.520 --> 01:45:17.020 align:start position:0%
card value that was passed in so if the
case<01:45:14.060><c> is</c><01:45:14.360><c> 2</c><01:45:14.660><c> 3</c><01:45:14.870><c> 4</c><01:45:15.170><c> 5</c><01:45:15.350><c> 6</c><01:45:15.739><c> we</c><01:45:16.429><c> are</c><01:45:16.550><c> going</c><01:45:16.850><c> to</c>

01:45:17.020 --> 01:45:17.030 align:start position:0%
case is 2 3 4 5 6 we are going to
 

01:45:17.030 --> 01:45:19.689 align:start position:0%
case is 2 3 4 5 6 we are going to
increment<01:45:17.690><c> the</c><01:45:18.050><c> count</c><01:45:18.320><c> variable</c><01:45:18.739><c> so</c><01:45:19.580><c> we're</c>

01:45:19.689 --> 01:45:19.699 align:start position:0%
increment the count variable so we're
 

01:45:19.699 --> 01:45:23.350 align:start position:0%
increment the count variable so we're
going<01:45:19.790><c> to</c><01:45:19.850><c> do</c><01:45:19.940><c> like</c><01:45:20.060><c> this</c><01:45:20.300><c> case</c><01:45:21.190><c> 2</c><01:45:22.190><c> I'm</c><01:45:23.179><c> going</c>

01:45:23.350 --> 01:45:23.360 align:start position:0%
going to do like this case 2 I'm going
 

01:45:23.360 --> 01:45:25.750 align:start position:0%
going to do like this case 2 I'm going
to<01:45:23.420><c> do</c><01:45:23.540><c> some</c><01:45:23.780><c> copying</c><01:45:24.350><c> and</c><01:45:24.530><c> pasting</c><01:45:24.800><c> if</c><01:45:25.370><c> the</c>

01:45:25.750 --> 01:45:25.760 align:start position:0%
to do some copying and pasting if the
 

01:45:25.760 --> 01:45:28.390 align:start position:0%
to do some copying and pasting if the
case<01:45:25.940><c> is</c><01:45:26.120><c> 2</c><01:45:26.390><c> 3</c><01:45:26.900><c> 4</c><01:45:27.290><c> 5</c><01:45:27.650><c> 6</c>

01:45:28.390 --> 01:45:28.400 align:start position:0%
case is 2 3 4 5 6
 

01:45:28.400 --> 01:45:30.040 align:start position:0%
case is 2 3 4 5 6
well<01:45:29.030><c> it</c><01:45:29.090><c> just</c><01:45:29.270><c> had</c><01:45:29.360><c> to</c><01:45:29.480><c> actually</c><01:45:29.750><c> change</c>

01:45:30.040 --> 01:45:30.050 align:start position:0%
well it just had to actually change
 

01:45:30.050 --> 01:45:37.300 align:start position:0%
well it just had to actually change
these<01:45:30.199><c> values</c><01:45:30.340><c> 3</c><01:45:31.390><c> 4</c><01:45:32.980><c> 5</c><01:45:34.690><c> 6</c><01:45:35.690><c> now</c><01:45:36.140><c> there</c><01:45:36.469><c> are</c><01:45:36.679><c> many</c>

01:45:37.300 --> 01:45:37.310 align:start position:0%
these values 3 4 5 6 now there are many
 

01:45:37.310 --> 01:45:40.390 align:start position:0%
these values 3 4 5 6 now there are many
ways<01:45:37.699><c> to</c><01:45:38.090><c> write</c><01:45:38.270><c> any</c><01:45:38.540><c> program</c><01:45:38.980><c> this</c><01:45:39.980><c> could</c><01:45:40.280><c> be</c>

01:45:40.390 --> 01:45:40.400 align:start position:0%
ways to write any program this could be
 

01:45:40.400 --> 01:45:41.830 align:start position:0%
ways to write any program this could be
done<01:45:40.550><c> with</c><01:45:40.699><c> if</c><01:45:40.910><c> statements</c><01:45:41.540><c> and</c><01:45:41.600><c> else</c>

01:45:41.830 --> 01:45:41.840 align:start position:0%
done with if statements and else
 

01:45:41.840 --> 01:45:44.169 align:start position:0%
done with if statements and else
statements<01:45:42.440><c> it</c><01:45:42.590><c> could</c><01:45:43.280><c> be</c><01:45:43.520><c> even</c><01:45:43.699><c> done</c><01:45:44.030><c> with</c>

01:45:44.169 --> 01:45:44.179 align:start position:0%
statements it could be even done with
 

01:45:44.179 --> 01:45:45.610 align:start position:0%
statements it could be even done with
other<01:45:44.420><c> other</c><01:45:44.810><c> ways</c><01:45:45.050><c> that</c><01:45:45.230><c> we</c><01:45:45.290><c> haven't</c><01:45:45.560><c> even</c>

01:45:45.610 --> 01:45:45.620 align:start position:0%
other other ways that we haven't even
 

01:45:45.620 --> 01:45:48.220 align:start position:0%
other other ways that we haven't even
talked<01:45:45.980><c> about</c><01:45:46.160><c> yet</c><01:45:46.550><c> as</c><01:45:46.790><c> long</c><01:45:47.360><c> as</c><01:45:47.570><c> the</c><01:45:47.719><c> program</c>

01:45:48.220 --> 01:45:48.230 align:start position:0%
talked about yet as long as the program
 

01:45:48.230 --> 01:45:50.979 align:start position:0%
talked about yet as long as the program
works<01:45:48.650><c> in</c><01:45:49.070><c> this</c><01:45:49.820><c> case</c><01:45:50.120><c> that's</c><01:45:50.420><c> all</c><01:45:50.690><c> that</c>

01:45:50.979 --> 01:45:50.989 align:start position:0%
works in this case that's all that
 

01:45:50.989 --> 01:45:53.560 align:start position:0%
works in this case that's all that
matters<01:45:51.469><c> so</c><01:45:51.770><c> if</c><01:45:52.370><c> you</c><01:45:52.610><c> find</c><01:45:52.850><c> a</c><01:45:53.060><c> different</c><01:45:53.449><c> way</c>

01:45:53.560 --> 01:45:53.570 align:start position:0%
matters so if you find a different way
 

01:45:53.570 --> 01:45:54.830 align:start position:0%
matters so if you find a different way
to<01:45:53.600><c> write</c><01:45:53.840><c> this</c><01:45:54.140><c> program</c>

01:45:54.830 --> 01:45:54.840 align:start position:0%
to write this program
 

01:45:54.840 --> 01:45:58.010 align:start position:0%
to write this program
that's<01:45:55.050><c> great</c><01:45:55.340><c> so</c><01:45:56.340><c> if</c><01:45:56.700><c> the</c><01:45:57.210><c> case</c><01:45:57.420><c> is</c><01:45:57.570><c> two</c><01:45:57.780><c> three</c>

01:45:58.010 --> 01:45:58.020 align:start position:0%
that's great so if the case is two three
 

01:45:58.020 --> 01:46:01.250 align:start position:0%
that's great so if the case is two three
four<01:45:58.200><c> five</c><01:45:58.440><c> or</c><01:45:58.680><c> six</c><01:45:59.190><c> we</c><01:46:00.120><c> are</c><01:46:00.270><c> going</c><01:46:00.570><c> to</c><01:46:00.810><c> take</c>

01:46:01.250 --> 01:46:01.260 align:start position:0%
four five or six we are going to take
 

01:46:01.260 --> 01:46:05.360 align:start position:0%
four five or six we are going to take
the<01:46:01.560><c> account</c><01:46:01.860><c> value</c><01:46:02.100><c> and</c><01:46:02.760><c> if</c><01:46:03.060><c> we</c><01:46:03.210><c> just</c><01:46:03.390><c> do</c><01:46:04.370><c> plus</c>

01:46:05.360 --> 01:46:05.370 align:start position:0%
the account value and if we just do plus
 

01:46:05.370 --> 01:46:08.510 align:start position:0%
the account value and if we just do plus
plus<01:46:05.760><c> that</c><01:46:06.420><c> increments</c><01:46:07.080><c> it</c><01:46:07.200><c> by</c><01:46:07.410><c> one</c><01:46:07.740><c> and</c><01:46:08.010><c> then</c>

01:46:08.510 --> 01:46:08.520 align:start position:0%
plus that increments it by one and then
 

01:46:08.520 --> 01:46:12.770 align:start position:0%
plus that increments it by one and then
we're<01:46:08.700><c> going</c><01:46:08.880><c> to</c><01:46:09.120><c> break</c><01:46:09.510><c> now</c><01:46:10.280><c> if</c><01:46:11.280><c> the</c><01:46:12.180><c> case</c><01:46:12.540><c> is</c>

01:46:12.770 --> 01:46:12.780 align:start position:0%
we're going to break now if the case is
 

01:46:12.780 --> 01:46:15.770 align:start position:0%
we're going to break now if the case is
seven<01:46:13.140><c> eight</c><01:46:13.260><c> nine</c><01:46:13.470><c> so</c><01:46:14.280><c> let's</c><01:46:14.730><c> pay</c><01:46:15.180><c> some</c><01:46:15.450><c> three</c>

01:46:15.770 --> 01:46:15.780 align:start position:0%
seven eight nine so let's pay some three
 

01:46:15.780 --> 01:46:22.340 align:start position:0%
seven eight nine so let's pay some three
of<01:46:15.900><c> these</c><01:46:16.490><c> blue</c><01:46:17.960><c> seven</c><01:46:18.960><c> eight</c><01:46:19.700><c> nine</c><01:46:21.350><c> actually</c>

01:46:22.340 --> 01:46:22.350 align:start position:0%
of these blue seven eight nine actually
 

01:46:22.350 --> 01:46:25.460 align:start position:0%
of these blue seven eight nine actually
we're<01:46:22.470><c> going</c><01:46:22.560><c> to</c><01:46:22.620><c> do</c><01:46:22.740><c> nothing</c><01:46:24.080><c> the</c><01:46:25.080><c> account</c><01:46:25.350><c> is</c>

01:46:25.460 --> 01:46:25.470 align:start position:0%
we're going to do nothing the account is
 

01:46:25.470 --> 01:46:27.140 align:start position:0%
we're going to do nothing the account is
not<01:46:25.530><c> going</c><01:46:25.740><c> to</c><01:46:25.830><c> change</c><01:46:25.890><c> at</c><01:46:26.160><c> all</c><01:46:26.280><c> so</c><01:46:26.850><c> we</c><01:46:27.120><c> don't</c>

01:46:27.140 --> 01:46:27.150 align:start position:0%
not going to change at all so we don't
 

01:46:27.150 --> 01:46:29.720 align:start position:0%
not going to change at all so we don't
even<01:46:27.330><c> need</c><01:46:27.540><c> case</c><01:46:28.050><c> seven</c><01:46:28.410><c> or</c><01:46:28.470><c> eight</c><01:46:28.530><c> nine</c><01:46:28.770><c> so</c>

01:46:29.720 --> 01:46:29.730 align:start position:0%
even need case seven or eight nine so
 

01:46:29.730 --> 01:46:31.550 align:start position:0%
even need case seven or eight nine so
instead<01:46:30.060><c> of</c><01:46:30.120><c> doing</c><01:46:30.270><c> seven</c><01:46:30.660><c> eight</c><01:46:30.780><c> nine</c><01:46:30.930><c> we</c>

01:46:31.550 --> 01:46:31.560 align:start position:0%
instead of doing seven eight nine we
 

01:46:31.560 --> 01:46:33.710 align:start position:0%
instead of doing seven eight nine we
just<01:46:32.010><c> need</c><01:46:32.160><c> to</c><01:46:32.340><c> check</c><01:46:33.030><c> in</c><01:46:33.240><c> the</c><01:46:33.450><c> case</c><01:46:33.690><c> that</c>

01:46:33.710 --> 01:46:33.720 align:start position:0%
just need to check in the case that
 

01:46:33.720 --> 01:46:35.840 align:start position:0%
just need to check in the case that
something<01:46:34.110><c> is</c><01:46:34.230><c> actually</c><01:46:34.350><c> going</c><01:46:34.710><c> to</c><01:46:34.800><c> happen</c><01:46:35.040><c> so</c>

01:46:35.840 --> 01:46:35.850 align:start position:0%
something is actually going to happen so
 

01:46:35.850 --> 01:46:38.180 align:start position:0%
something is actually going to happen so
we<01:46:36.660><c> are</c><01:46:36.780><c> going</c><01:46:36.930><c> to</c><01:46:37.080><c> decrement</c><01:46:37.710><c> the</c><01:46:37.830><c> count</c>

01:46:38.180 --> 01:46:38.190 align:start position:0%
we are going to decrement the count
 

01:46:38.190 --> 01:46:41.330 align:start position:0%
we are going to decrement the count
variable<01:46:38.430><c> if</c><01:46:38.940><c> we</c><01:46:39.570><c> have</c><01:46:39.840><c> ten</c><01:46:40.320><c> Jack</c><01:46:40.740><c> queen</c><01:46:41.310><c> king</c>

01:46:41.330 --> 01:46:41.340 align:start position:0%
variable if we have ten Jack queen king
 

01:46:41.340 --> 01:46:43.940 align:start position:0%
variable if we have ten Jack queen king
or<01:46:42.030><c> ace</c><01:46:42.420><c> so</c><01:46:43.200><c> that's</c><01:46:43.350><c> what</c><01:46:43.470><c> we're</c><01:46:43.560><c> gonna</c><01:46:43.620><c> change</c>

01:46:43.940 --> 01:46:43.950 align:start position:0%
or ace so that's what we're gonna change
 

01:46:43.950 --> 01:46:59.240 align:start position:0%
or ace so that's what we're gonna change
this<01:46:44.190><c> to</c><01:46:44.330><c> ten</c><01:46:47.120><c> Jack</c><01:46:49.490><c> queen</c><01:46:50.490><c> king</c><01:46:53.030><c> or</c><01:46:56.360><c> bass</c><01:46:58.250><c> in</c>

01:46:59.240 --> 01:46:59.250 align:start position:0%
this to ten Jack queen king or bass in
 

01:46:59.250 --> 01:47:01.670 align:start position:0%
this to ten Jack queen king or bass in
this<01:46:59.400><c> case</c><01:46:59.700><c> we're</c><01:47:00.450><c> going</c><01:47:00.660><c> to</c><01:47:00.750><c> decrement</c><01:47:01.530><c> the</c>

01:47:01.670 --> 01:47:01.680 align:start position:0%
this case we're going to decrement the
 

01:47:01.680 --> 01:47:05.300 align:start position:0%
this case we're going to decrement the
count<01:47:02.040><c> so</c><01:47:02.640><c> you</c><01:47:02.730><c> can</c><01:47:02.850><c> do</c><01:47:02.940><c> count</c><01:47:03.300><c> -</c><01:47:04.140><c> -</c><01:47:04.770><c> so</c><01:47:05.250><c> that's</c>

01:47:05.300 --> 01:47:05.310 align:start position:0%
count so you can do count - - so that's
 

01:47:05.310 --> 01:47:07.250 align:start position:0%
count so you can do count - - so that's
the<01:47:05.490><c> same</c><01:47:05.670><c> as</c><01:47:05.910><c> count</c><01:47:06.180><c> equals</c><01:47:06.510><c> count</c><01:47:06.570><c> minus</c><01:47:07.050><c> one</c>

01:47:07.250 --> 01:47:07.260 align:start position:0%
the same as count equals count minus one
 

01:47:07.260 --> 01:47:14.660 align:start position:0%
the same as count equals count minus one
and<01:47:07.850><c> then</c><01:47:08.850><c> we</c><01:47:09.420><c> will</c><01:47:09.450><c> break</c><01:47:12.020><c> now</c><01:47:13.020><c> we've</c><01:47:13.740><c> taken</c>

01:47:14.660 --> 01:47:14.670 align:start position:0%
and then we will break now we've taken
 

01:47:14.670 --> 01:47:17.150 align:start position:0%
and then we will break now we've taken
care<01:47:15.180><c> of</c><01:47:15.210><c> the</c><01:47:15.810><c> count</c><01:47:16.230><c> and</c><01:47:16.440><c> up</c><01:47:16.620><c> game</c><01:47:16.800><c> account</c>

01:47:17.150 --> 01:47:17.160 align:start position:0%
care of the count and up game account
 

01:47:17.160 --> 01:47:19.130 align:start position:0%
care of the count and up game account
now<01:47:17.850><c> we</c><01:47:17.910><c> have</c><01:47:18.120><c> to</c><01:47:18.240><c> take</c><01:47:18.540><c> care</c><01:47:18.750><c> of</c><01:47:18.780><c> what</c><01:47:18.990><c> we're</c>

01:47:19.130 --> 01:47:19.140 align:start position:0%
now we have to take care of what we're
 

01:47:19.140 --> 01:47:22.700 align:start position:0%
now we have to take care of what we're
going<01:47:19.350><c> to</c><01:47:19.380><c> return</c><01:47:20.030><c> we</c><01:47:21.030><c> are</c><01:47:21.120><c> going</c><01:47:21.450><c> to</c><01:47:21.710><c> return</c>

01:47:22.700 --> 01:47:22.710 align:start position:0%
going to return we are going to return
 

01:47:22.710 --> 01:47:26.780 align:start position:0%
going to return we are going to return
the<01:47:23.460><c> count</c><01:47:23.960><c> and</c><01:47:24.960><c> we're</c><01:47:25.560><c> also</c><01:47:25.800><c> going</c><01:47:26.190><c> to</c><01:47:26.280><c> return</c>

01:47:26.780 --> 01:47:26.790 align:start position:0%
the count and we're also going to return
 

01:47:26.790 --> 01:47:31.070 align:start position:0%
the count and we're also going to return
whether<01:47:27.210><c> we</c><01:47:27.960><c> are</c><01:47:28.230><c> going</c><01:47:28.650><c> to</c><01:47:28.860><c> hold</c><01:47:29.310><c> or</c><01:47:29.670><c> bet</c><01:47:30.210><c> so</c>

01:47:31.070 --> 01:47:31.080 align:start position:0%
whether we are going to hold or bet so
 

01:47:31.080 --> 01:47:32.300 align:start position:0%
whether we are going to hold or bet so
we're<01:47:31.320><c> going</c><01:47:31.500><c> to</c><01:47:31.650><c> actually</c><01:47:31.800><c> return</c><01:47:32.250><c> a</c>

01:47:32.300 --> 01:47:32.310 align:start position:0%
we're going to actually return a
 

01:47:32.310 --> 01:47:33.950 align:start position:0%
we're going to actually return a
variable<01:47:32.910><c> but</c><01:47:33.060><c> first</c><01:47:33.300><c> we're</c><01:47:33.420><c> going</c><01:47:33.600><c> to</c><01:47:33.660><c> space</c>

01:47:33.950 --> 01:47:33.960 align:start position:0%
variable but first we're going to space
 

01:47:33.960 --> 01:47:36.100 align:start position:0%
variable but first we're going to space
there's<01:47:34.290><c> a</c><01:47:34.350><c> space</c><01:47:34.650><c> between</c><01:47:34.680><c> the</c><01:47:35.400><c> number</c><01:47:35.820><c> and</c>

01:47:36.100 --> 01:47:36.110 align:start position:0%
there's a space between the number and
 

01:47:36.110 --> 01:47:40.750 align:start position:0%
there's a space between the number and
then<01:47:37.110><c> we're</c><01:47:37.800><c> going</c><01:47:38.100><c> to</c><01:47:38.130><c> return</c><01:47:38.660><c> the</c><01:47:39.740><c> hold</c>

01:47:40.750 --> 01:47:40.760 align:start position:0%
then we're going to return the hold
 

01:47:40.760 --> 01:47:43.220 align:start position:0%
then we're going to return the hold
variable<01:47:41.760><c> now</c><01:47:42.150><c> this</c><01:47:42.330><c> is</c><01:47:42.450><c> a</c><01:47:42.480><c> variable</c><01:47:42.900><c> we</c>

01:47:43.220 --> 01:47:43.230 align:start position:0%
variable now this is a variable we
 

01:47:43.230 --> 01:47:45.410 align:start position:0%
variable now this is a variable we
haven't<01:47:43.740><c> created</c><01:47:44.010><c> yet</c><01:47:44.220><c> normally</c><01:47:45.060><c> this</c><01:47:45.210><c> would</c>

01:47:45.410 --> 01:47:45.420 align:start position:0%
haven't created yet normally this would
 

01:47:45.420 --> 01:47:47.390 align:start position:0%
haven't created yet normally this would
be<01:47:45.450><c> the</c><01:47:45.780><c> perfect</c><01:47:46.260><c> time</c><01:47:46.410><c> to</c><01:47:46.470><c> use</c><01:47:46.650><c> the</c><01:47:46.920><c> ternary</c>

01:47:47.390 --> 01:47:47.400 align:start position:0%
be the perfect time to use the ternary
 

01:47:47.400 --> 01:47:49.160 align:start position:0%
be the perfect time to use the ternary
operator<01:47:47.880><c> but</c><01:47:48.390><c> we</c><01:47:48.510><c> haven't</c><01:47:48.750><c> learned</c><01:47:48.900><c> that</c><01:47:49.050><c> yet</c>

01:47:49.160 --> 01:47:49.170 align:start position:0%
operator but we haven't learned that yet
 

01:47:49.170 --> 01:47:51.350 align:start position:0%
operator but we haven't learned that yet
and<01:47:49.680><c> what</c><01:47:50.520><c> we're</c><01:47:50.700><c> not</c><01:47:50.790><c> going</c><01:47:50.970><c> to</c><01:47:51.000><c> learn</c><01:47:51.210><c> that</c>

01:47:51.350 --> 01:47:51.360 align:start position:0%
and what we're not going to learn that
 

01:47:51.360 --> 01:47:52.850 align:start position:0%
and what we're not going to learn that
for<01:47:51.510><c> a</c><01:47:51.570><c> few</c><01:47:51.750><c> more</c><01:47:51.930><c> lessons</c><01:47:52.110><c> so</c><01:47:52.410><c> I</c><01:47:52.470><c> won't</c><01:47:52.710><c> use</c>

01:47:52.850 --> 01:47:52.860 align:start position:0%
for a few more lessons so I won't use
 

01:47:52.860 --> 01:47:55.760 align:start position:0%
for a few more lessons so I won't use
that<01:47:52.890><c> now</c><01:47:53.310><c> we</c><01:47:54.150><c> are</c><01:47:54.180><c> going</c><01:47:54.480><c> to</c><01:47:54.750><c> set</c><01:47:55.350><c> what</c><01:47:55.590><c> that</c>

01:47:55.760 --> 01:47:55.770 align:start position:0%
that now we are going to set what that
 

01:47:55.770 --> 01:47:59.600 align:start position:0%
that now we are going to set what that
hold<01:47:56.070><c> that</c><01:47:56.340><c> value</c><01:47:56.850><c> is</c><01:47:57.410><c> first</c><01:47:58.410><c> we'll</c><01:47:59.130><c> create</c>

01:47:59.600 --> 01:47:59.610 align:start position:0%
hold that value is first we'll create
 

01:47:59.610 --> 01:48:05.410 align:start position:0%
hold that value is first we'll create
the<01:47:59.790><c> hold</c><01:48:00.510><c> variable</c><01:48:01.340><c> variable</c><01:48:02.340><c> hold</c><01:48:03.240><c> back</c><01:48:04.110><c> and</c>

01:48:05.410 --> 01:48:05.420 align:start position:0%
the hold variable variable hold back and
 

01:48:05.420 --> 01:48:08.270 align:start position:0%
the hold variable variable hold back and
we'll<01:48:06.420><c> set</c><01:48:06.840><c> it</c><01:48:06.990><c> to</c>

01:48:08.270 --> 01:48:08.280 align:start position:0%
we'll set it to
 

01:48:08.280 --> 01:48:19.510 align:start position:0%
we'll set it to
hold<01:48:09.240><c> however</c><01:48:09.900><c> if</c><01:48:12.800><c> count</c><01:48:13.800><c> is</c><01:48:15.860><c> more</c><01:48:16.860><c> than</c><01:48:17.220><c> zero</c>

01:48:19.510 --> 01:48:19.520 align:start position:0%
hold however if count is more than zero
 

01:48:19.520 --> 01:48:28.720 align:start position:0%
hold however if count is more than zero
then<01:48:20.520><c> we</c><01:48:21.270><c> can</c><01:48:21.300><c> set</c><01:48:21.780><c> hold</c><01:48:22.640><c> that</c><01:48:24.530><c> to</c><01:48:25.530><c> equal</c><01:48:26.360><c> that</c>

01:48:28.720 --> 01:48:28.730 align:start position:0%
then we can set hold that to equal that
 

01:48:28.730 --> 01:48:33.950 align:start position:0%
then we can set hold that to equal that
so<01:48:29.730><c> now</c><01:48:30.740><c> this</c><01:48:31.740><c> should</c><01:48:32.250><c> work</c><01:48:32.760><c> let's</c><01:48:33.390><c> test</c><01:48:33.780><c> it</c>

01:48:33.950 --> 01:48:33.960 align:start position:0%
so now this should work let's test it
 

01:48:33.960 --> 01:48:35.630 align:start position:0%
so now this should work let's test it
out<01:48:34.050><c> and</c><01:48:34.320><c> see</c><01:48:34.380><c> if</c><01:48:34.710><c> we've</c><01:48:34.860><c> made</c><01:48:35.100><c> any</c><01:48:35.250><c> mistakes</c>

01:48:35.630 --> 01:48:35.640 align:start position:0%
out and see if we've made any mistakes
 

01:48:35.640 --> 01:48:41.060 align:start position:0%
out and see if we've made any mistakes
yet<01:48:35.960><c> hold</c><01:48:36.960><c> that</c><01:48:37.170><c> is</c><01:48:37.320><c> not</c><01:48:37.620><c> defined</c><01:48:39.200><c> well</c><01:48:40.200><c> we</c>

01:48:41.060 --> 01:48:41.070 align:start position:0%
yet hold that is not defined well we
 

01:48:41.070 --> 01:48:41.780 align:start position:0%
yet hold that is not defined well we
have<01:48:41.250><c> it</c><01:48:41.340><c> right</c><01:48:41.460><c> here</c>

01:48:41.780 --> 01:48:41.790 align:start position:0%
have it right here
 

01:48:41.790 --> 01:48:44.660 align:start position:0%
have it right here
hold<01:48:42.060><c> Oh</c><01:48:42.540><c> we</c><01:48:42.690><c> spelled</c><01:48:42.990><c> that</c><01:48:43.110><c> wrong</c><01:48:43.380><c> so</c><01:48:44.070><c> instead</c>

01:48:44.660 --> 01:48:44.670 align:start position:0%
hold Oh we spelled that wrong so instead
 

01:48:44.670 --> 01:48:48.460 align:start position:0%
hold Oh we spelled that wrong so instead
of<01:48:44.730><c> halt</c><01:48:45.090><c> bet</c><01:48:45.510><c> that</c><01:48:45.780><c> should</c><01:48:45.900><c> we</c><01:48:45.960><c> hold</c><01:48:46.290><c> that</c>

01:48:48.460 --> 01:48:48.470 align:start position:0%
of halt bet that should we hold that
 

01:48:48.470 --> 01:48:52.250 align:start position:0%
of halt bet that should we hold that
okay<01:48:49.470><c> in</c><01:48:49.680><c> this</c><01:48:50.040><c> case</c><01:48:50.340><c> we're</c><01:48:50.790><c> going</c><01:48:51.030><c> to</c><01:48:51.260><c> bet</c>

01:48:52.250 --> 01:48:52.260 align:start position:0%
okay in this case we're going to bet
 

01:48:52.260 --> 01:48:55.130 align:start position:0%
okay in this case we're going to bet
because<01:48:53.130><c> we</c><01:48:53.790><c> had</c><01:48:54.150><c> a</c><01:48:54.510><c> bunch</c><01:48:54.780><c> of</c><01:48:54.930><c> positive</c>

01:48:55.130 --> 01:48:55.140 align:start position:0%
because we had a bunch of positive
 

01:48:55.140 --> 01:48:57.050 align:start position:0%
because we had a bunch of positive
numbers<01:48:55.470><c> and</c><01:48:55.680><c> then</c><01:48:55.920><c> negative</c><01:48:56.250><c> numbers</c><01:48:56.550><c> but</c><01:48:56.940><c> if</c>

01:48:57.050 --> 01:48:57.060 align:start position:0%
numbers and then negative numbers but if
 

01:48:57.060 --> 01:49:04.180 align:start position:0%
numbers and then negative numbers but if
we<01:48:57.270><c> change</c><01:48:57.720><c> this</c><01:48:58.080><c> to</c><01:48:58.730><c> K</c><01:48:59.730><c> I</c><01:49:01.190><c> change</c><01:49:02.190><c> this</c><01:49:02.400><c> to</c><01:49:03.170><c> 10</c>

01:49:04.180 --> 01:49:04.190 align:start position:0%
we change this to K I change this to 10
 

01:49:04.190 --> 01:49:07.880 align:start position:0%
we change this to K I change this to 10
what<01:49:05.190><c> do</c><01:49:05.370><c> what</c><01:49:05.490><c> happens</c><01:49:06.260><c> now</c><01:49:07.260><c> we're</c><01:49:07.770><c> gonna</c>

01:49:07.880 --> 01:49:07.890 align:start position:0%
what do what happens now we're gonna
 

01:49:07.890 --> 01:49:14.340 align:start position:0%
what do what happens now we're gonna
hold<01:49:08.780><c> okay</c><01:49:09.780><c> it</c><01:49:09.930><c> worked</c>

01:49:14.340 --> 01:49:14.350 align:start position:0%
 
 

01:49:14.350 --> 01:49:17.400 align:start position:0%
 
objects<01:49:15.370><c> objects</c><01:49:16.370><c> are</c><01:49:16.490><c> similar</c><01:49:16.850><c> to</c><01:49:17.030><c> arrays</c>

01:49:17.400 --> 01:49:17.410 align:start position:0%
objects objects are similar to arrays
 

01:49:17.410 --> 01:49:20.650 align:start position:0%
objects objects are similar to arrays
except<01:49:18.410><c> that</c><01:49:18.560><c> instead</c><01:49:18.710><c> of</c><01:49:18.920><c> using</c><01:49:19.150><c> indexes</c><01:49:20.150><c> to</c>

01:49:20.650 --> 01:49:20.660 align:start position:0%
except that instead of using indexes to
 

01:49:20.660 --> 01:49:24.520 align:start position:0%
except that instead of using indexes to
access<01:49:21.380><c> data</c><01:49:22.070><c> you</c><01:49:22.490><c> use</c><01:49:22.520><c> properties</c><01:49:23.480><c> so</c><01:49:24.170><c> here's</c>

01:49:24.520 --> 01:49:24.530 align:start position:0%
access data you use properties so here's
 

01:49:24.530 --> 01:49:27.400 align:start position:0%
access data you use properties so here's
an<01:49:24.680><c> object</c><01:49:24.890><c> called</c><01:49:25.460><c> our</c><01:49:25.730><c> dog</c><01:49:26.290><c> objects</c><01:49:27.290><c> are</c>

01:49:27.400 --> 01:49:27.410 align:start position:0%
an object called our dog objects are
 

01:49:27.410 --> 01:49:29.470 align:start position:0%
an object called our dog objects are
going<01:49:27.590><c> to</c><01:49:27.740><c> be</c><01:49:27.830><c> defined</c><01:49:28.460><c> with</c><01:49:28.700><c> these</c><01:49:28.880><c> curly</c>

01:49:29.470 --> 01:49:29.480 align:start position:0%
going to be defined with these curly
 

01:49:29.480 --> 01:49:31.420 align:start position:0%
going to be defined with these curly
braces<01:49:29.720><c> before</c><01:49:30.260><c> at</c><01:49:30.680><c> the</c><01:49:30.860><c> beginning</c><01:49:31.010><c> of</c><01:49:31.370><c> the</c>

01:49:31.420 --> 01:49:31.430 align:start position:0%
braces before at the beginning of the
 

01:49:31.430 --> 01:49:34.300 align:start position:0%
braces before at the beginning of the
end<01:49:31.670><c> and</c><01:49:32.000><c> these</c><01:49:32.540><c> are</c><01:49:32.780><c> the</c><01:49:32.960><c> properties</c><01:49:33.500><c> now</c><01:49:34.250><c> the</c>

01:49:34.300 --> 01:49:34.310 align:start position:0%
end and these are the properties now the
 

01:49:34.310 --> 01:49:37.960 align:start position:0%
end and these are the properties now the
properties<01:49:35.240><c> are</c><01:49:36.010><c> everything</c><01:49:37.010><c> before</c><01:49:37.640><c> the</c>

01:49:37.960 --> 01:49:37.970 align:start position:0%
properties are everything before the
 

01:49:37.970 --> 01:49:41.680 align:start position:0%
properties are everything before the
colons<01:49:38.690><c> so</c><01:49:39.440><c> we</c><01:49:40.070><c> have</c><01:49:40.400><c> name</c><01:49:40.850><c> that's</c><01:49:41.150><c> a</c><01:49:41.240><c> property</c>

01:49:41.680 --> 01:49:41.690 align:start position:0%
colons so we have name that's a property
 

01:49:41.690 --> 01:49:44.410 align:start position:0%
colons so we have name that's a property
legs<01:49:42.050><c> the</c><01:49:42.320><c> property</c><01:49:42.830><c> and</c><01:49:43.010><c> then</c><01:49:43.580><c> the</c><01:49:43.820><c> values</c>

01:49:44.410 --> 01:49:44.420 align:start position:0%
legs the property and then the values
 

01:49:44.420 --> 01:49:47.050 align:start position:0%
legs the property and then the values
are<01:49:44.750><c> the</c><01:49:44.960><c> things</c><01:49:45.230><c> after</c><01:49:45.830><c> the</c><01:49:45.920><c> colons</c><01:49:46.340><c> here</c><01:49:46.640><c> so</c>

01:49:47.050 --> 01:49:47.060 align:start position:0%
are the things after the colons here so
 

01:49:47.060 --> 01:49:50.650 align:start position:0%
are the things after the colons here so
the<01:49:47.630><c> name</c><01:49:47.930><c> is</c><01:49:48.200><c> camper</c><01:49:48.980><c> the</c><01:49:49.250><c> legs</c><01:49:49.580><c> four</c><01:49:50.120><c> tails</c>

01:49:50.650 --> 01:49:50.660 align:start position:0%
the name is camper the legs four tails
 

01:49:50.660 --> 01:49:52.510 align:start position:0%
the name is camper the legs four tails
there's<01:49:50.960><c> like</c><01:49:51.110><c> one</c><01:49:51.350><c> tail</c><01:49:51.590><c> on</c><01:49:51.740><c> this</c><01:49:51.920><c> dog</c><01:49:52.190><c> and</c>

01:49:52.510 --> 01:49:52.520 align:start position:0%
there's like one tail on this dog and
 

01:49:52.520 --> 01:49:55.900 align:start position:0%
there's like one tail on this dog and
friends<01:49:53.480><c> are</c><01:49:53.660><c> everything</c><01:49:54.340><c> now</c><01:49:55.340><c> you</c><01:49:55.370><c> can</c><01:49:55.670><c> see</c>

01:49:55.900 --> 01:49:55.910 align:start position:0%
friends are everything now you can see
 

01:49:55.910 --> 01:49:58.630 align:start position:0%
friends are everything now you can see
that<01:49:56.270><c> with</c><01:49:57.110><c> the</c><01:49:57.260><c> properties</c><01:49:57.830><c> can</c><01:49:58.070><c> be</c><01:49:58.100><c> strings</c>

01:49:58.630 --> 01:49:58.640 align:start position:0%
that with the properties can be strings
 

01:49:58.640 --> 01:50:00.610 align:start position:0%
that with the properties can be strings
they<01:49:59.000><c> can</c><01:49:59.180><c> be</c><01:49:59.330><c> numbers</c><01:49:59.810><c> they</c><01:50:00.050><c> can</c><01:50:00.110><c> be</c><01:50:00.230><c> arrays</c>

01:50:00.610 --> 01:50:00.620 align:start position:0%
they can be numbers they can be arrays
 

01:50:00.620 --> 01:50:03.310 align:start position:0%
they can be numbers they can be arrays
they<01:50:01.400><c> can</c><01:50:01.610><c> be</c><01:50:01.730><c> any</c><01:50:01.970><c> data</c><01:50:02.270><c> type</c><01:50:02.600><c> in</c><01:50:02.840><c> JavaScript</c>

01:50:03.310 --> 01:50:03.320 align:start position:0%
they can be any data type in JavaScript
 

01:50:03.320 --> 01:50:06.790 align:start position:0%
they can be any data type in JavaScript
so<01:50:04.310><c> now</c><01:50:04.730><c> we</c><01:50:05.300><c> are</c><01:50:05.420><c> going</c><01:50:05.630><c> to</c><01:50:05.810><c> create</c><01:50:06.170><c> our</c><01:50:06.380><c> own</c>

01:50:06.790 --> 01:50:06.800 align:start position:0%
so now we are going to create our own
 

01:50:06.800 --> 01:50:09.810 align:start position:0%
so now we are going to create our own
dog<01:50:07.190><c> so</c><01:50:08.090><c> this</c><01:50:08.450><c> is</c><01:50:08.600><c> going</c><01:50:08.900><c> to</c><01:50:08.990><c> have</c><01:50:09.200><c> a</c><01:50:09.230><c> name</c>

01:50:09.810 --> 01:50:09.820 align:start position:0%
dog so this is going to have a name
 

01:50:09.820 --> 01:50:14.140 align:start position:0%
dog so this is going to have a name
personally<01:50:10.820><c> I</c><01:50:11.030><c> like</c><01:50:11.480><c> the</c><01:50:11.720><c> name</c><01:50:12.220><c> Quincy</c><01:50:13.220><c> so</c>

01:50:14.140 --> 01:50:14.150 align:start position:0%
personally I like the name Quincy so
 

01:50:14.150 --> 01:50:16.890 align:start position:0%
personally I like the name Quincy so
we'll<01:50:14.750><c> use</c><01:50:14.990><c> that</c><01:50:15.230><c> for</c><01:50:15.290><c> our</c><01:50:15.500><c> dog's</c><01:50:15.830><c> name</c><01:50:16.160><c> also</c>

01:50:16.890 --> 01:50:16.900 align:start position:0%
we'll use that for our dog's name also
 

01:50:16.900 --> 01:50:21.520 align:start position:0%
we'll use that for our dog's name also
we're<01:50:17.900><c> going</c><01:50:18.560><c> to</c><01:50:18.650><c> have</c><01:50:18.770><c> legs</c><01:50:20.530><c> unfortunately</c>

01:50:21.520 --> 01:50:21.530 align:start position:0%
we're going to have legs unfortunately
 

01:50:21.530 --> 01:50:23.830 align:start position:0%
we're going to have legs unfortunately
our<01:50:21.710><c> dog</c><01:50:22.070><c> has</c><01:50:22.280><c> had</c><01:50:22.460><c> an</c><01:50:22.700><c> accident</c><01:50:23.180><c> he</c><01:50:23.390><c> only</c><01:50:23.660><c> has</c>

01:50:23.830 --> 01:50:23.840 align:start position:0%
our dog has had an accident he only has
 

01:50:23.840 --> 01:50:28.000 align:start position:0%
our dog has had an accident he only has
three<01:50:24.170><c> legs</c><01:50:24.940><c> but</c><01:50:25.940><c> to</c><01:50:26.120><c> make</c><01:50:26.390><c> up</c><01:50:26.630><c> for</c><01:50:27.020><c> the</c><01:50:27.290><c> only</c>

01:50:28.000 --> 01:50:28.010 align:start position:0%
three legs but to make up for the only
 

01:50:28.010 --> 01:50:32.650 align:start position:0%
three legs but to make up for the only
having<01:50:28.310><c> three</c><01:50:28.580><c> legs</c><01:50:28.610><c> he</c><01:50:29.540><c> does</c><01:50:29.840><c> have</c><01:50:30.700><c> two</c><01:50:31.700><c> tails</c>

01:50:32.650 --> 01:50:32.660 align:start position:0%
having three legs he does have two tails
 

01:50:32.660 --> 01:50:37.540 align:start position:0%
having three legs he does have two tails
and<01:50:33.200><c> four</c><01:50:34.070><c> friends</c><01:50:35.860><c> another</c><01:50:36.860><c> unfortunate</c>

01:50:37.540 --> 01:50:37.550 align:start position:0%
and four friends another unfortunate
 

01:50:37.550 --> 01:50:40.960 align:start position:0%
and four friends another unfortunate
thing<01:50:37.970><c> it's</c><01:50:38.240><c> an</c><01:50:38.390><c> empty</c><01:50:38.840><c> array</c><01:50:39.470><c> he</c><01:50:39.980><c> has</c><01:50:40.280><c> no</c>

01:50:40.960 --> 01:50:40.970 align:start position:0%
thing it's an empty array he has no
 

01:50:40.970 --> 01:50:44.470 align:start position:0%
thing it's an empty array he has no
friends<01:50:41.840><c> okay</c><01:50:42.830><c> we've</c><01:50:43.100><c> now</c><01:50:43.130><c> created</c><01:50:43.790><c> our</c><01:50:44.150><c> own</c>

01:50:44.470 --> 01:50:44.480 align:start position:0%
friends okay we've now created our own
 

01:50:44.480 --> 01:50:48.960 align:start position:0%
friends okay we've now created our own
object

01:50:48.960 --> 01:50:48.970 align:start position:0%
 
 

01:50:48.970 --> 01:50:51.810 align:start position:0%
 
there<01:50:49.840><c> are</c><01:50:50.020><c> two</c><01:50:50.290><c> main</c><01:50:50.500><c> ways</c><01:50:50.740><c> to</c><01:50:50.800><c> access</c><01:50:51.670><c> a</c>

01:50:51.810 --> 01:50:51.820 align:start position:0%
there are two main ways to access a
 

01:50:51.820 --> 01:50:54.810 align:start position:0%
there are two main ways to access a
property<01:50:52.150><c> on</c><01:50:52.510><c> an</c><01:50:52.840><c> object</c><01:50:53.470><c> the</c><01:50:54.250><c> first</c><01:50:54.550><c> I</c><01:50:54.640><c> will</c>

01:50:54.810 --> 01:50:54.820 align:start position:0%
property on an object the first I will
 

01:50:54.820 --> 01:50:57.030 align:start position:0%
property on an object the first I will
talk<01:50:54.970><c> about</c><01:50:55.000><c> is</c><01:50:55.300><c> dot</c><01:50:55.570><c> notation</c><01:50:55.840><c> so</c><01:50:56.800><c> we</c><01:50:56.920><c> have</c>

01:50:57.030 --> 01:50:57.040 align:start position:0%
talk about is dot notation so we have
 

01:50:57.040 --> 01:50:59.910 align:start position:0%
talk about is dot notation so we have
this<01:50:57.160><c> test</c><01:50:57.490><c> object</c><01:50:58.030><c> and</c><01:50:58.240><c> we</c><01:50:58.720><c> have</c><01:50:58.870><c> hat</c><01:50:59.260><c> shirt</c>

01:50:59.910 --> 01:50:59.920 align:start position:0%
this test object and we have hat shirt
 

01:50:59.920 --> 01:51:02.310 align:start position:0%
this test object and we have hat shirt
and<01:51:00.280><c> shoes</c><01:51:01.090><c> and</c><01:51:01.420><c> we</c><01:51:01.480><c> want</c><01:51:01.660><c> to</c><01:51:01.720><c> find</c><01:51:01.930><c> out</c><01:51:02.110><c> the</c>

01:51:02.310 --> 01:51:02.320 align:start position:0%
and shoes and we want to find out the
 

01:51:02.320 --> 01:51:05.520 align:start position:0%
and shoes and we want to find out the
value<01:51:02.740><c> of</c><01:51:02.770><c> these</c><01:51:03.070><c> properties</c><01:51:03.550><c> so</c><01:51:04.260><c> right</c><01:51:05.260><c> here</c>

01:51:05.520 --> 01:51:05.530 align:start position:0%
value of these properties so right here
 

01:51:05.530 --> 01:51:07.440 align:start position:0%
value of these properties so right here
the<01:51:05.680><c> hat</c><01:51:05.920><c> value</c><01:51:06.160><c> we're</c><01:51:06.670><c> gonna</c><01:51:06.760><c> set</c><01:51:07.000><c> a</c><01:51:07.030><c> test</c>

01:51:07.440 --> 01:51:07.450 align:start position:0%
the hat value we're gonna set a test
 

01:51:07.450 --> 01:51:09.900 align:start position:0%
the hat value we're gonna set a test
object<01:51:07.660><c> now</c><01:51:08.440><c> here's</c><01:51:08.770><c> where</c><01:51:09.280><c> we</c><01:51:09.430><c> use</c><01:51:09.580><c> the</c><01:51:09.730><c> dot</c>

01:51:09.900 --> 01:51:09.910 align:start position:0%
object now here's where we use the dot
 

01:51:09.910 --> 01:51:12.390 align:start position:0%
object now here's where we use the dot
notation<01:51:09.940><c> we</c><01:51:10.780><c> just</c><01:51:10.990><c> put</c><01:51:11.200><c> a</c><01:51:11.230><c> dot</c><01:51:11.560><c> or</c><01:51:11.860><c> a</c><01:51:12.040><c> period</c>

01:51:12.390 --> 01:51:12.400 align:start position:0%
notation we just put a dot or a period
 

01:51:12.400 --> 01:51:14.640 align:start position:0%
notation we just put a dot or a period
and<01:51:12.730><c> then</c><01:51:13.420><c> I</c><01:51:13.540><c> put</c><01:51:13.750><c> the</c><01:51:13.870><c> name</c><01:51:14.020><c> of</c><01:51:14.170><c> the</c><01:51:14.230><c> property</c>

01:51:14.640 --> 01:51:14.650 align:start position:0%
and then I put the name of the property
 

01:51:14.650 --> 01:51:17.880 align:start position:0%
and then I put the name of the property
about<01:51:14.860><c> hat</c><01:51:15.130><c> and</c><01:51:15.570><c> then</c><01:51:16.570><c> for</c><01:51:16.810><c> the</c><01:51:16.900><c> shirt</c><01:51:17.200><c> value</c><01:51:17.680><c> I</c>

01:51:17.880 --> 01:51:17.890 align:start position:0%
about hat and then for the shirt value I
 

01:51:17.890 --> 01:51:21.840 align:start position:0%
about hat and then for the shirt value I
will<01:51:18.280><c> do</c><01:51:18.670><c> dot</c><01:51:19.270><c> shirt</c><01:51:19.960><c> so</c><01:51:20.830><c> see</c><01:51:21.220><c> this</c><01:51:21.460><c> word</c><01:51:21.700><c> right</c>

01:51:21.840 --> 01:51:21.850 align:start position:0%
will do dot shirt so see this word right
 

01:51:21.850 --> 01:51:23.880 align:start position:0%
will do dot shirt so see this word right
here<01:51:22.180><c> is</c><01:51:22.300><c> just</c><01:51:22.510><c> the</c><01:51:22.630><c> word</c><01:51:22.810><c> here</c><01:51:23.140><c> so</c><01:51:23.350><c> the</c><01:51:23.560><c> value</c>

01:51:23.880 --> 01:51:23.890 align:start position:0%
here is just the word here so the value
 

01:51:23.890 --> 01:51:26.550 align:start position:0%
here is just the word here so the value
of<01:51:23.920><c> hat</c><01:51:24.190><c> value</c><01:51:24.670><c> test</c><01:51:25.390><c> object</c><01:51:25.840><c> that</c><01:51:25.900><c> hat</c><01:51:26.170><c> is</c><01:51:26.350><c> now</c>

01:51:26.550 --> 01:51:26.560 align:start position:0%
of hat value test object that hat is now
 

01:51:26.560 --> 01:51:29.160 align:start position:0%
of hat value test object that hat is now
gonna<01:51:26.740><c> be</c><01:51:26.830><c> ball</c><01:51:27.220><c> cap</c><01:51:27.550><c> and</c><01:51:27.790><c> the</c><01:51:28.750><c> value</c><01:51:29.020><c> of</c><01:51:29.050><c> the</c>

01:51:29.160 --> 01:51:29.170 align:start position:0%
gonna be ball cap and the value of the
 

01:51:29.170 --> 01:51:36.100 align:start position:0%
gonna be ball cap and the value of the
shirt<01:51:29.470><c> value</c><01:51:30.010><c> is</c><01:51:30.190><c> going</c><01:51:30.760><c> to</c><01:51:30.850><c> be</c><01:51:31.080><c> jersey</c>

01:51:36.100 --> 01:51:36.110 align:start position:0%
 
 

01:51:36.110 --> 01:51:38.890 align:start position:0%
 
besides<01:51:36.890><c> using</c><01:51:37.250><c> dot</c><01:51:37.490><c> notation</c><01:51:37.520><c> you</c><01:51:38.480><c> can</c><01:51:38.510><c> also</c>

01:51:38.890 --> 01:51:38.900 align:start position:0%
besides using dot notation you can also
 

01:51:38.900 --> 01:51:42.190 align:start position:0%
besides using dot notation you can also
use<01:51:39.500><c> bracket</c><01:51:40.310><c> notation</c><01:51:40.460><c> to</c><01:51:41.210><c> access</c><01:51:41.960><c> a</c>

01:51:42.190 --> 01:51:42.200 align:start position:0%
use bracket notation to access a
 

01:51:42.200 --> 01:51:45.250 align:start position:0%
use bracket notation to access a
property<01:51:42.770><c> and</c><01:51:43.430><c> an</c><01:51:43.550><c> object</c><01:51:44.090><c> you</c><01:51:44.960><c> can</c><01:51:45.140><c> use</c>

01:51:45.250 --> 01:51:45.260 align:start position:0%
property and an object you can use
 

01:51:45.260 --> 01:51:48.220 align:start position:0%
property and an object you can use
bracket<01:51:45.830><c> notation</c><01:51:46.060><c> anytime</c><01:51:47.060><c> but</c><01:51:47.900><c> it</c><01:51:48.080><c> is</c>

01:51:48.220 --> 01:51:48.230 align:start position:0%
bracket notation anytime but it is
 

01:51:48.230 --> 01:51:51.310 align:start position:0%
bracket notation anytime but it is
required<01:51:48.470><c> if</c><01:51:49.400><c> the</c><01:51:50.090><c> name</c><01:51:50.330><c> has</c><01:51:50.540><c> a</c><01:51:50.570><c> space</c><01:51:50.960><c> in</c><01:51:51.230><c> it</c>

01:51:51.310 --> 01:51:51.320 align:start position:0%
required if the name has a space in it
 

01:51:51.320 --> 01:51:55.030 align:start position:0%
required if the name has a space in it
you<01:51:51.890><c> can</c><01:51:52.130><c> see</c><01:51:52.400><c> in</c><01:51:52.520><c> this</c><01:51:52.670><c> object</c><01:51:53.390><c> we</c><01:51:53.930><c> have</c><01:51:54.040><c> three</c>

01:51:55.030 --> 01:51:55.040 align:start position:0%
you can see in this object we have three
 

01:51:55.040 --> 01:51:57.310 align:start position:0%
you can see in this object we have three
properties<01:51:55.640><c> and</c><01:51:56.000><c> each</c><01:51:56.180><c> of</c><01:51:56.420><c> them</c><01:51:56.570><c> have</c><01:51:56.810><c> a</c><01:51:56.840><c> space</c>

01:51:57.310 --> 01:51:57.320 align:start position:0%
properties and each of them have a space
 

01:51:57.320 --> 01:52:00.340 align:start position:0%
properties and each of them have a space
so<01:51:58.190><c> to</c><01:51:58.250><c> get</c><01:51:58.880><c> the</c><01:51:59.090><c> value</c><01:51:59.540><c> of</c><01:51:59.570><c> these</c><01:51:59.750><c> properties</c>

01:52:00.340 --> 01:52:00.350 align:start position:0%
so to get the value of these properties
 

01:52:00.350 --> 01:52:02.500 align:start position:0%
so to get the value of these properties
we're<01:52:00.950><c> going</c><01:52:01.190><c> to</c><01:52:01.310><c> have</c><01:52:01.520><c> to</c><01:52:01.700><c> use</c><01:52:01.850><c> bracket</c>

01:52:02.500 --> 01:52:02.510 align:start position:0%
we're going to have to use bracket
 

01:52:02.510 --> 01:52:04.990 align:start position:0%
we're going to have to use bracket
notation<01:52:02.920><c> so</c><01:52:03.920><c> the</c><01:52:04.010><c> entre</c><01:52:04.430><c> value</c><01:52:04.820><c> we're</c><01:52:04.940><c> going</c>

01:52:04.990 --> 01:52:05.000 align:start position:0%
notation so the entre value we're going
 

01:52:05.000 --> 01:52:06.640 align:start position:0%
notation so the entre value we're going
to<01:52:05.090><c> test</c><01:52:05.420><c> object</c><01:52:05.960><c> that's</c><01:52:06.140><c> the</c><01:52:06.320><c> name</c><01:52:06.470><c> of</c><01:52:06.500><c> the</c>

01:52:06.640 --> 01:52:06.650 align:start position:0%
to test object that's the name of the
 

01:52:06.650 --> 01:52:08.590 align:start position:0%
to test object that's the name of the
object<01:52:06.800><c> and</c><01:52:07.370><c> then</c><01:52:07.880><c> we're</c><01:52:07.970><c> gonna</c><01:52:08.060><c> put</c><01:52:08.330><c> brackets</c>

01:52:08.590 --> 01:52:08.600 align:start position:0%
object and then we're gonna put brackets
 

01:52:08.600 --> 01:52:12.010 align:start position:0%
object and then we're gonna put brackets
kind<01:52:09.470><c> of</c><01:52:09.590><c> like</c><01:52:09.770><c> an</c><01:52:09.950><c> array</c><01:52:10.460><c> index</c><01:52:10.780><c> so</c><01:52:11.780><c> you</c><01:52:11.840><c> need</c>

01:52:12.010 --> 01:52:12.020 align:start position:0%
kind of like an array index so you need
 

01:52:12.020 --> 01:52:13.510 align:start position:0%
kind of like an array index so you need
the<01:52:12.080><c> opening</c><01:52:12.440><c> and</c><01:52:12.530><c> closing</c><01:52:12.860><c> brackets</c><01:52:12.890><c> and</c>

01:52:13.510 --> 01:52:13.520 align:start position:0%
the opening and closing brackets and
 

01:52:13.520 --> 01:52:17.050 align:start position:0%
the opening and closing brackets and
inside<01:52:14.330><c> we</c><01:52:15.230><c> will</c><01:52:15.620><c> put</c><01:52:15.980><c> the</c><01:52:16.190><c> name</c><01:52:16.400><c> of</c><01:52:16.760><c> the</c>

01:52:17.050 --> 01:52:17.060 align:start position:0%
inside we will put the name of the
 

01:52:17.060 --> 01:52:22.330 align:start position:0%
inside we will put the name of the
property<01:52:17.390><c> so</c><01:52:17.990><c> I'll</c><01:52:18.110><c> do</c><01:52:18.260><c> a</c><01:52:18.530><c> an</c><01:52:19.210><c> entree</c><01:52:20.210><c> and</c><01:52:21.340><c> then</c>

01:52:22.330 --> 01:52:22.340 align:start position:0%
property so I'll do a an entree and then
 

01:52:22.340 --> 01:52:24.580 align:start position:0%
property so I'll do a an entree and then
we<01:52:22.640><c> can</c><01:52:22.850><c> do</c><01:52:22.940><c> it</c><01:52:22.970><c> again</c><01:52:23.120><c> down</c><01:52:23.480><c> here</c><01:52:23.540><c> for</c><01:52:24.470><c> the</c>

01:52:24.580 --> 01:52:24.590 align:start position:0%
we can do it again down here for the
 

01:52:24.590 --> 01:52:27.760 align:start position:0%
we can do it again down here for the
drink<01:52:24.950><c> value</c><01:52:25.430><c> and</c><01:52:25.880><c> I'll</c><01:52:26.540><c> I'll</c><01:52:26.900><c> use</c><01:52:27.110><c> a</c><01:52:27.140><c> single</c>

01:52:27.760 --> 01:52:27.770 align:start position:0%
drink value and I'll I'll use a single
 

01:52:27.770 --> 01:52:29.110 align:start position:0%
drink value and I'll I'll use a single
quote<01:52:27.980><c> this</c><01:52:28.190><c> happens</c><01:52:28.490><c> have</c><01:52:28.610><c> a</c><01:52:28.640><c> double</c><01:52:28.940><c> quote</c>

01:52:29.110 --> 01:52:29.120 align:start position:0%
quote this happens have a double quote
 

01:52:29.120 --> 01:52:31.450 align:start position:0%
quote this happens have a double quote
to<01:52:29.330><c> show</c><01:52:29.510><c> that</c><01:52:29.660><c> each</c><01:52:29.900><c> of</c><01:52:29.930><c> those</c><01:52:30.230><c> will</c><01:52:30.680><c> work</c><01:52:30.710><c> the</c>

01:52:31.450 --> 01:52:31.460 align:start position:0%
to show that each of those will work the
 

01:52:31.460 --> 01:52:35.980 align:start position:0%
to show that each of those will work the
drink<01:52:32.290><c> and</c><01:52:33.880><c> then</c><01:52:34.880><c> we</c><01:52:35.060><c> need</c><01:52:35.270><c> the</c><01:52:35.450><c> closing</c>

01:52:35.980 --> 01:52:35.990 align:start position:0%
drink and then we need the closing
 

01:52:35.990 --> 01:52:40.900 align:start position:0%
drink and then we need the closing
brackets<01:52:36.530><c> here</c><01:52:37.870><c> so</c><01:52:38.870><c> now</c><01:52:39.080><c> Andre</c><01:52:39.830><c> value</c><01:52:40.250><c> is</c><01:52:40.460><c> set</c>

01:52:40.900 --> 01:52:40.910 align:start position:0%
brackets here so now Andre value is set
 

01:52:40.910 --> 01:52:44.230 align:start position:0%
brackets here so now Andre value is set
equal<01:52:41.090><c> hamburger</c><01:52:41.930><c> and</c><01:52:42.220><c> drink</c><01:52:43.220><c> value</c><01:52:43.640><c> is</c><01:52:43.820><c> set</c>

01:52:44.230 --> 01:52:44.240 align:start position:0%
equal hamburger and drink value is set
 

01:52:44.240 --> 01:52:49.529 align:start position:0%
equal hamburger and drink value is set
to<01:52:44.390><c> equal</c><01:52:44.540><c> water</c>

01:52:49.529 --> 01:52:49.539 align:start position:0%
 
 

01:52:49.539 --> 01:52:52.049 align:start position:0%
 
bracket<01:52:50.320><c> notation</c><01:52:50.469><c> can</c><01:52:51.070><c> also</c><01:52:51.280><c> be</c><01:52:51.610><c> used</c><01:52:51.880><c> to</c>

01:52:52.049 --> 01:52:52.059 align:start position:0%
bracket notation can also be used to
 

01:52:52.059 --> 01:52:54.209 align:start position:0%
bracket notation can also be used to
look<01:52:52.300><c> up</c><01:52:52.480><c> object</c><01:52:53.019><c> properties</c><01:52:53.559><c> using</c>

01:52:54.209 --> 01:52:54.219 align:start position:0%
look up object properties using
 

01:52:54.219 --> 01:52:56.910 align:start position:0%
look up object properties using
variables<01:52:55.179><c> so</c><01:52:55.840><c> here</c><01:52:56.139><c> we</c><01:52:56.289><c> have</c><01:52:56.440><c> this</c><01:52:56.590><c> test</c>

01:52:56.910 --> 01:52:56.920 align:start position:0%
variables so here we have this test
 

01:52:56.920 --> 01:52:58.790 align:start position:0%
variables so here we have this test
object<01:52:57.489><c> we</c><01:52:57.909><c> have</c><01:52:58.059><c> these</c><01:52:58.150><c> different</c><01:52:58.389><c> numbers</c>

01:52:58.790 --> 01:52:58.800 align:start position:0%
object we have these different numbers
 

01:52:58.800 --> 01:53:02.759 align:start position:0%
object we have these different numbers
associated<01:52:59.800><c> with</c><01:52:59.920><c> these</c><01:53:00.130><c> names</c><01:53:00.579><c> here</c><01:53:01.090><c> and</c><01:53:01.769><c> we</c>

01:53:02.759 --> 01:53:02.769 align:start position:0%
associated with these names here and we
 

01:53:02.769 --> 01:53:05.189 align:start position:0%
associated with these names here and we
are<01:53:02.889><c> going</c><01:53:03.099><c> to</c><01:53:03.219><c> set</c><01:53:03.610><c> this</c><01:53:03.789><c> variable</c><01:53:04.179><c> to</c><01:53:04.809><c> be</c><01:53:04.840><c> one</c>

01:53:05.189 --> 01:53:05.199 align:start position:0%
are going to set this variable to be one
 

01:53:05.199 --> 01:53:08.759 align:start position:0%
are going to set this variable to be one
of<01:53:05.289><c> the</c><01:53:05.380><c> numbers</c><01:53:05.769><c> so</c><01:53:06.429><c> I'll</c><01:53:06.579><c> set</c><01:53:06.909><c> this</c><01:53:07.150><c> to</c><01:53:07.389><c> be</c><01:53:07.769><c> 16</c>

01:53:08.759 --> 01:53:08.769 align:start position:0%
of the numbers so I'll set this to be 16
 

01:53:08.769 --> 01:53:13.350 align:start position:0%
of the numbers so I'll set this to be 16
so<01:53:09.760><c> now</c><01:53:10.210><c> we</c><01:53:10.840><c> can</c><01:53:11.139><c> in</c><01:53:11.349><c> this</c><01:53:11.500><c> test</c><01:53:11.889><c> object</c><01:53:12.400><c> 16</c><01:53:13.030><c> is</c>

01:53:13.350 --> 01:53:13.360 align:start position:0%
so now we can in this test object 16 is
 

01:53:13.360 --> 01:53:16.410 align:start position:0%
so now we can in this test object 16 is
Montana<01:53:14.260><c> and</c><01:53:14.650><c> we</c><01:53:15.400><c> can</c><01:53:15.670><c> look</c><01:53:15.909><c> that</c><01:53:16.059><c> up</c><01:53:16.179><c> using</c>

01:53:16.410 --> 01:53:16.420 align:start position:0%
Montana and we can look that up using
 

01:53:16.420 --> 01:53:18.180 align:start position:0%
Montana and we can look that up using
the<01:53:16.630><c> variable</c><01:53:17.139><c> name</c><01:53:17.289><c> instead</c><01:53:17.590><c> of</c><01:53:17.650><c> the</c><01:53:17.829><c> numbers</c>

01:53:18.180 --> 01:53:18.190 align:start position:0%
the variable name instead of the numbers
 

01:53:18.190 --> 01:53:20.250 align:start position:0%
the variable name instead of the numbers
so<01:53:18.219><c> instead</c><01:53:18.550><c> of</c><01:53:18.670><c> putting</c><01:53:18.880><c> 16</c><01:53:19.449><c> I'm</c><01:53:19.869><c> going</c><01:53:20.079><c> to</c>

01:53:20.250 --> 01:53:20.260 align:start position:0%
so instead of putting 16 I'm going to
 

01:53:20.260 --> 01:53:24.779 align:start position:0%
so instead of putting 16 I'm going to
put<01:53:20.500><c> player</c><01:53:21.250><c> number</c><01:53:21.909><c> in</c><01:53:22.030><c> here</c><01:53:22.360><c> and</c><01:53:22.920><c> now</c><01:53:23.920><c> player</c>

01:53:24.779 --> 01:53:24.789 align:start position:0%
put player number in here and now player
 

01:53:24.789 --> 01:53:29.100 align:start position:0%
put player number in here and now player
is<01:53:25.210><c> set</c><01:53:26.170><c> to</c><01:53:26.559><c> the</c><01:53:27.190><c> word</c><01:53:27.429><c> the</c><01:53:27.760><c> string</c><01:53:28.150><c> Montana</c>

01:53:29.100 --> 01:53:29.110 align:start position:0%
is set to the word the string Montana
 

01:53:29.110 --> 01:53:32.490 align:start position:0%
is set to the word the string Montana
and<01:53:29.440><c> we</c><01:53:29.920><c> use</c><01:53:30.190><c> this</c><01:53:30.400><c> variable</c><01:53:30.880><c> to</c><01:53:31.300><c> look</c><01:53:31.630><c> up</c><01:53:31.840><c> the</c>

01:53:32.490 --> 01:53:32.500 align:start position:0%
and we use this variable to look up the
 

01:53:32.500 --> 01:53:36.969 align:start position:0%
and we use this variable to look up the
object<01:53:33.039><c> property</c>

01:53:36.969 --> 01:53:36.979 align:start position:0%
 
 

01:53:36.979 --> 01:53:40.089 align:start position:0%
 
we<01:53:37.729><c> can</c><01:53:37.940><c> use</c><01:53:38.090><c> dot</c><01:53:38.329><c> notation</c><01:53:38.360><c> to</c><01:53:39.079><c> update</c><01:53:39.590><c> object</c>

01:53:40.089 --> 01:53:40.099 align:start position:0%
we can use dot notation to update object
 

01:53:40.099 --> 01:53:42.549 align:start position:0%
we can use dot notation to update object
properties<01:53:40.670><c> here</c><01:53:41.599><c> you</c><01:53:41.780><c> can</c><01:53:41.989><c> see</c><01:53:42.170><c> an</c><01:53:42.320><c> object</c>

01:53:42.549 --> 01:53:42.559 align:start position:0%
properties here you can see an object
 

01:53:42.559 --> 01:53:46.000 align:start position:0%
properties here you can see an object
called<01:53:43.039><c> our</c><01:53:43.249><c> dog</c><01:53:43.729><c> it</c><01:53:44.179><c> has</c><01:53:44.719><c> a</c><01:53:44.749><c> named</c><01:53:45.170><c> legs</c><01:53:45.530><c> tails</c>

01:53:46.000 --> 01:53:46.010 align:start position:0%
called our dog it has a named legs tails
 

01:53:46.010 --> 01:53:49.870 align:start position:0%
called our dog it has a named legs tails
friends<01:53:46.820><c> and</c><01:53:46.999><c> the</c><01:53:47.570><c> name</c><01:53:47.809><c> is</c><01:53:48.050><c> camper</c><01:53:48.880><c> however</c>

01:53:49.870 --> 01:53:49.880 align:start position:0%
friends and the name is camper however
 

01:53:49.880 --> 01:53:52.989 align:start position:0%
friends and the name is camper however
here<01:53:50.329><c> we</c><01:53:50.449><c> use</c><01:53:50.959><c> dot</c><01:53:51.229><c> notation</c><01:53:51.440><c> our</c><01:53:51.949><c> dog</c><01:53:52.309><c> name</c>

01:53:52.989 --> 01:53:52.999 align:start position:0%
here we use dot notation our dog name
 

01:53:52.999 --> 01:53:56.140 align:start position:0%
here we use dot notation our dog name
and<01:53:53.389><c> use</c><01:53:54.079><c> the</c><01:53:54.289><c> assignment</c><01:53:54.979><c> operator</c><01:53:55.150><c> the</c>

01:53:56.140 --> 01:53:56.150 align:start position:0%
and use the assignment operator the
 

01:53:56.150 --> 01:53:58.600 align:start position:0%
and use the assignment operator the
equal<01:53:56.539><c> sign</c><01:53:56.780><c> to</c><01:53:57.110><c> set</c><01:53:57.559><c> the</c><01:53:57.769><c> name</c><01:53:58.039><c> to</c><01:53:58.249><c> happy</c>

01:53:58.600 --> 01:53:58.610 align:start position:0%
equal sign to set the name to happy
 

01:53:58.610 --> 01:54:01.839 align:start position:0%
equal sign to set the name to happy
camper<01:53:59.119><c> so</c><01:53:59.900><c> if</c><01:54:00.289><c> we</c><01:54:00.679><c> did</c><01:54:00.829><c> console</c><01:54:01.249><c> dot</c><01:54:01.369><c> log</c><01:54:01.429><c> on</c>

01:54:01.839 --> 01:54:01.849 align:start position:0%
camper so if we did console dot log on
 

01:54:01.849 --> 01:54:03.969 align:start position:0%
camper so if we did console dot log on
our<01:54:02.090><c> dog</c><01:54:02.269><c> name</c><01:54:02.749><c> it</c><01:54:03.050><c> would</c><01:54:03.409><c> no</c><01:54:03.590><c> longer</c><01:54:03.619><c> be</c>

01:54:03.969 --> 01:54:03.979 align:start position:0%
our dog name it would no longer be
 

01:54:03.979 --> 01:54:06.819 align:start position:0%
our dog name it would no longer be
camper<01:54:04.579><c> it</c><01:54:04.760><c> would</c><01:54:04.880><c> be</c><01:54:05.030><c> happy</c><01:54:05.659><c> camper</c><01:54:06.110><c> well</c><01:54:06.650><c> we</c>

01:54:06.819 --> 01:54:06.829 align:start position:0%
camper it would be happy camper well we
 

01:54:06.829 --> 01:54:08.859 align:start position:0%
camper it would be happy camper well we
have<01:54:06.920><c> another</c><01:54:07.159><c> dog</c><01:54:07.369><c> here</c><01:54:07.760><c> with</c><01:54:08.269><c> a</c><01:54:08.300><c> name</c><01:54:08.599><c> of</c>

01:54:08.859 --> 01:54:08.869 align:start position:0%
have another dog here with a name of
 

01:54:08.869 --> 01:54:11.319 align:start position:0%
have another dog here with a name of
coder<01:54:09.229><c> but</c><01:54:09.920><c> we</c><01:54:10.039><c> want</c><01:54:10.219><c> to</c><01:54:10.309><c> change</c><01:54:10.579><c> the</c><01:54:10.820><c> name</c><01:54:11.059><c> to</c>

01:54:11.319 --> 01:54:11.329 align:start position:0%
coder but we want to change the name to
 

01:54:11.329 --> 01:54:13.810 align:start position:0%
coder but we want to change the name to
happy<01:54:12.229><c> coder</c><01:54:12.499><c> so</c><01:54:12.829><c> that's</c><01:54:13.400><c> what</c><01:54:13.550><c> I'll</c><01:54:13.610><c> do</c><01:54:13.789><c> right</c>

01:54:13.810 --> 01:54:13.820 align:start position:0%
happy coder so that's what I'll do right
 

01:54:13.820 --> 01:54:21.399 align:start position:0%
happy coder so that's what I'll do right
here<01:54:14.360><c> so</c><01:54:15.019><c> my</c><01:54:15.769><c> dog</c><01:54:16.280><c> dot</c><01:54:16.880><c> name</c><01:54:18.369><c> equals</c><01:54:20.409><c> happy</c>

01:54:21.399 --> 01:54:21.409 align:start position:0%
here so my dog dot name equals happy
 

01:54:21.409 --> 01:54:25.689 align:start position:0%
here so my dog dot name equals happy
coder<01:54:22.869><c> so</c><01:54:23.869><c> just</c><01:54:24.139><c> like</c><01:54:24.260><c> above</c><01:54:24.889><c> we</c><01:54:25.309><c> use</c><01:54:25.489><c> dot</c>

01:54:25.689 --> 01:54:25.699 align:start position:0%
coder so just like above we use dot
 

01:54:25.699 --> 01:54:28.390 align:start position:0%
coder so just like above we use dot
notation<01:54:25.729><c> to</c><01:54:26.269><c> set</c><01:54:27.050><c> the</c><01:54:27.229><c> object</c><01:54:27.380><c> property</c><01:54:28.070><c> to</c><01:54:28.369><c> a</c>

01:54:28.390 --> 01:54:28.400 align:start position:0%
notation to set the object property to a
 

01:54:28.400 --> 01:54:33.259 align:start position:0%
notation to set the object property to a
new<01:54:28.699><c> value</c>

01:54:33.259 --> 01:54:33.269 align:start position:0%
 
 

01:54:33.269 --> 01:54:36.109 align:start position:0%
 
you<01:54:33.869><c> can</c><01:54:34.109><c> add</c><01:54:34.349><c> new</c><01:54:34.619><c> properties</c><01:54:34.949><c> to</c><01:54:35.279><c> an</c><01:54:35.579><c> object</c>

01:54:36.109 --> 01:54:36.119 align:start position:0%
you can add new properties to an object
 

01:54:36.119 --> 01:54:38.349 align:start position:0%
you can add new properties to an object
using<01:54:36.329><c> dot</c><01:54:36.779><c> notation</c><01:54:36.809><c> or</c><01:54:37.649><c> bracket</c><01:54:38.189><c> notation</c>

01:54:38.349 --> 01:54:38.359 align:start position:0%
using dot notation or bracket notation
 

01:54:38.359 --> 01:54:41.119 align:start position:0%
using dot notation or bracket notation
so<01:54:39.359><c> here's</c><01:54:39.809><c> an</c><01:54:39.899><c> example</c><01:54:40.199><c> right</c><01:54:40.409><c> here</c><01:54:40.529><c> we</c><01:54:40.889><c> have</c>

01:54:41.119 --> 01:54:41.129 align:start position:0%
so here's an example right here we have
 

01:54:41.129 --> 01:54:44.269 align:start position:0%
so here's an example right here we have
this<01:54:41.339><c> object</c><01:54:41.729><c> our</c><01:54:42.329><c> dog</c><01:54:42.929><c> and</c><01:54:43.379><c> there's</c><01:54:44.010><c> four</c>

01:54:44.269 --> 01:54:44.279 align:start position:0%
this object our dog and there's four
 

01:54:44.279 --> 01:54:46.459 align:start position:0%
this object our dog and there's four
properties<01:54:44.939><c> here</c><01:54:45.359><c> but</c><01:54:45.809><c> down</c><01:54:45.989><c> here</c><01:54:46.019><c> we're</c>

01:54:46.459 --> 01:54:46.469 align:start position:0%
properties here but down here we're
 

01:54:46.469 --> 01:54:49.429 align:start position:0%
properties here but down here we're
adding<01:54:46.679><c> a</c><01:54:46.949><c> new</c><01:54:47.249><c> property</c><01:54:47.789><c> our</c><01:54:48.089><c> dog</c><01:54:48.689><c> bark</c>

01:54:49.429 --> 01:54:49.439 align:start position:0%
adding a new property our dog bark
 

01:54:49.439 --> 01:54:52.609 align:start position:0%
adding a new property our dog bark
equals<01:54:49.979><c> bow-wow</c><01:54:50.429><c> so</c><01:54:51.239><c> it</c><01:54:51.599><c> had</c><01:54:51.869><c> four</c><01:54:52.169><c> properties</c>

01:54:52.609 --> 01:54:52.619 align:start position:0%
equals bow-wow so it had four properties
 

01:54:52.619 --> 01:54:54.589 align:start position:0%
equals bow-wow so it had four properties
but<01:54:52.919><c> now</c><01:54:53.069><c> it</c><01:54:53.219><c> has</c><01:54:53.249><c> five</c><01:54:53.639><c> properties</c><01:54:53.969><c> as</c><01:54:54.449><c> the</c>

01:54:54.589 --> 01:54:54.599 align:start position:0%
but now it has five properties as the
 

01:54:54.599 --> 01:54:56.899 align:start position:0%
but now it has five properties as the
property<01:54:54.989><c> bark</c><01:54:55.289><c> as</c><01:54:55.559><c> well</c><01:54:55.799><c> now</c><01:54:56.639><c> down</c><01:54:56.879><c> here</c>

01:54:56.899 --> 01:54:56.909 align:start position:0%
property bark as well now down here
 

01:54:56.909 --> 01:54:59.809 align:start position:0%
property bark as well now down here
we'll<01:54:57.449><c> add</c><01:54:57.659><c> a</c><01:54:57.689><c> property</c><01:54:58.049><c> to</c><01:54:58.589><c> the</c><01:54:59.279><c> my</c><01:54:59.549><c> dog</c>

01:54:59.809 --> 01:54:59.819 align:start position:0%
we'll add a property to the my dog
 

01:54:59.819 --> 01:55:05.149 align:start position:0%
we'll add a property to the my dog
object<01:55:00.419><c> so</c><01:55:01.109><c> we</c><01:55:01.439><c> can</c><01:55:01.469><c> do</c><01:55:01.799><c> my</c><01:55:02.429><c> dog</c><01:55:02.849><c> and</c><01:55:03.919><c> then</c><01:55:04.919><c> here</c>

01:55:05.149 --> 01:55:05.159 align:start position:0%
object so we can do my dog and then here
 

01:55:05.159 --> 01:55:06.919 align:start position:0%
object so we can do my dog and then here
I'm<01:55:05.279><c> going</c><01:55:05.399><c> to</c><01:55:05.459><c> use</c><01:55:05.519><c> bracket</c><01:55:06.239><c> notation</c><01:55:06.329><c> set</c>

01:55:06.919 --> 01:55:06.929 align:start position:0%
I'm going to use bracket notation set
 

01:55:06.929 --> 01:55:10.879 align:start position:0%
I'm going to use bracket notation set
dot<01:55:07.169><c> notation</c><01:55:07.789><c> bark</c><01:55:09.169><c> I'm</c><01:55:10.169><c> going</c><01:55:10.469><c> to</c><01:55:10.529><c> set</c><01:55:10.679><c> that</c>

01:55:10.879 --> 01:55:10.889 align:start position:0%
dot notation bark I'm going to set that
 

01:55:10.889 --> 01:55:15.259 align:start position:0%
dot notation bark I'm going to set that
to<01:55:10.949><c> equal</c><01:55:12.079><c> booth</c><01:55:13.079><c> and</c><01:55:13.879><c> because</c><01:55:14.879><c> he's</c><01:55:14.999><c> yelling</c>

01:55:15.259 --> 01:55:15.269 align:start position:0%
to equal booth and because he's yelling
 

01:55:15.269 --> 01:55:17.419 align:start position:0%
to equal booth and because he's yelling
it<01:55:15.510><c> will</c><01:55:15.749><c> have</c><01:55:15.989><c> an</c><01:55:16.229><c> exclamation</c><01:55:16.649><c> point</c><01:55:17.189><c> and</c>

01:55:17.419 --> 01:55:17.429 align:start position:0%
it will have an exclamation point and
 

01:55:17.429 --> 01:55:22.899 align:start position:0%
it will have an exclamation point and
that's<01:55:17.879><c> how</c><01:55:17.999><c> you</c><01:55:18.059><c> add</c><01:55:18.269><c> properties</c><01:55:18.809><c> to</c><01:55:18.839><c> objects</c>

01:55:22.899 --> 01:55:22.909 align:start position:0%
 
 

01:55:22.909 --> 01:55:25.510 align:start position:0%
 
it's<01:55:23.600><c> simple</c><01:55:24.080><c> to</c><01:55:24.199><c> delete</c><01:55:24.530><c> a</c><01:55:24.620><c> property</c><01:55:25.190><c> from</c><01:55:25.370><c> an</c>

01:55:25.510 --> 01:55:25.520 align:start position:0%
it's simple to delete a property from an
 

01:55:25.520 --> 01:55:28.180 align:start position:0%
it's simple to delete a property from an
object<01:55:25.699><c> our</c><01:55:26.270><c> dog</c><01:55:27.199><c> object</c><01:55:27.800><c> has</c><01:55:27.949><c> all</c><01:55:28.100><c> these</c>

01:55:28.180 --> 01:55:28.190 align:start position:0%
object our dog object has all these
 

01:55:28.190 --> 01:55:30.580 align:start position:0%
object our dog object has all these
properties<01:55:28.699><c> and</c><01:55:29.000><c> with</c><01:55:29.630><c> the</c><01:55:29.810><c> delete</c><01:55:30.199><c> keyword</c>

01:55:30.580 --> 01:55:30.590 align:start position:0%
properties and with the delete keyword
 

01:55:30.590 --> 01:55:34.540 align:start position:0%
properties and with the delete keyword
delete<01:55:31.460><c> our</c><01:55:31.670><c> dog</c><01:55:32.090><c> bark</c><01:55:32.840><c> so</c><01:55:33.530><c> now</c><01:55:33.710><c> this</c><01:55:33.949><c> property</c>

01:55:34.540 --> 01:55:34.550 align:start position:0%
delete our dog bark so now this property
 

01:55:34.550 --> 01:55:36.790 align:start position:0%
delete our dog bark so now this property
here<01:55:34.850><c> the</c><01:55:35.120><c> bark</c><01:55:35.389><c> has</c><01:55:35.659><c> been</c><01:55:35.870><c> deleted</c><01:55:36.380><c> and</c><01:55:36.620><c> is</c><01:55:36.770><c> no</c>

01:55:36.790 --> 01:55:36.800 align:start position:0%
here the bark has been deleted and is no
 

01:55:36.800 --> 01:55:38.800 align:start position:0%
here the bark has been deleted and is no
longer<01:55:37.159><c> in</c><01:55:37.370><c> the</c><01:55:37.670><c> object</c><01:55:38.150><c> after</c><01:55:38.389><c> we</c><01:55:38.719><c> have</c>

01:55:38.800 --> 01:55:38.810 align:start position:0%
longer in the object after we have
 

01:55:38.810 --> 01:55:40.870 align:start position:0%
longer in the object after we have
deleted<01:55:39.110><c> it</c><01:55:39.290><c> so</c><01:55:39.949><c> we</c><01:55:40.070><c> can</c><01:55:40.190><c> do</c><01:55:40.280><c> the</c><01:55:40.370><c> same</c><01:55:40.580><c> thing</c>

01:55:40.870 --> 01:55:40.880 align:start position:0%
deleted it so we can do the same thing
 

01:55:40.880 --> 01:55:44.260 align:start position:0%
deleted it so we can do the same thing
down<01:55:41.090><c> here</c><01:55:41.510><c> and</c><01:55:41.690><c> this</c><01:55:42.500><c> time</c><01:55:42.770><c> we</c><01:55:43.699><c> will</c><01:55:43.940><c> delete</c>

01:55:44.260 --> 01:55:44.270 align:start position:0%
down here and this time we will delete
 

01:55:44.270 --> 01:55:49.180 align:start position:0%
down here and this time we will delete
the<01:55:44.330><c> Hills</c><01:55:45.230><c> property</c><01:55:45.800><c> my</c><01:55:46.790><c> dog</c><01:55:47.179><c> that</c><01:55:47.750><c> kills</c><01:55:48.320><c> so</c>

01:55:49.180 --> 01:55:49.190 align:start position:0%
the Hills property my dog that kills so
 

01:55:49.190 --> 01:55:51.760 align:start position:0%
the Hills property my dog that kills so
now<01:55:49.400><c> the</c><01:55:49.790><c> my</c><01:55:50.030><c> dog</c><01:55:50.360><c> object</c><01:55:51.020><c> no</c><01:55:51.230><c> longer</c><01:55:51.560><c> has</c><01:55:51.739><c> a</c>

01:55:51.760 --> 01:55:51.770 align:start position:0%
now the my dog object no longer has a
 

01:55:51.770 --> 01:55:56.510 align:start position:0%
now the my dog object no longer has a
tails<01:55:52.130><c> property</c>

01:55:56.510 --> 01:55:56.520 align:start position:0%
 
 

01:55:56.520 --> 01:55:58.950 align:start position:0%
 
objects<01:55:57.520><c> can</c><01:55:57.640><c> be</c><01:55:57.790><c> thought</c><01:55:57.970><c> of</c><01:55:58.030><c> as</c><01:55:58.210><c> a</c><01:55:58.270><c> key</c><01:55:58.600><c> value</c>

01:55:58.950 --> 01:55:58.960 align:start position:0%
objects can be thought of as a key value
 

01:55:58.960 --> 01:56:01.620 align:start position:0%
objects can be thought of as a key value
storage<01:55:59.290><c> like</c><01:55:59.680><c> a</c><01:55:59.710><c> dictionary</c><01:56:00.010><c> you</c><01:56:00.640><c> can</c><01:56:01.390><c> use</c><01:56:01.510><c> an</c>

01:56:01.620 --> 01:56:01.630 align:start position:0%
storage like a dictionary you can use an
 

01:56:01.630 --> 01:56:04.890 align:start position:0%
storage like a dictionary you can use an
object<01:56:01.840><c> to</c><01:56:02.200><c> look</c><01:56:02.530><c> up</c><01:56:02.710><c> values</c><01:56:03.310><c> so</c><01:56:04.000><c> in</c><01:56:04.390><c> this</c><01:56:04.630><c> case</c>

01:56:04.890 --> 01:56:04.900 align:start position:0%
object to look up values so in this case
 

01:56:04.900 --> 01:56:07.680 align:start position:0%
object to look up values so in this case
we<01:56:05.110><c> have</c><01:56:05.440><c> a</c><01:56:05.650><c> switch</c><01:56:06.550><c> statement</c><01:56:06.790><c> that</c><01:56:07.540><c> returns</c>

01:56:07.680 --> 01:56:07.690 align:start position:0%
we have a switch statement that returns
 

01:56:07.690 --> 01:56:10.620 align:start position:0%
we have a switch statement that returns
certain<01:56:08.410><c> values</c><01:56:08.860><c> so</c><01:56:09.490><c> when</c><01:56:09.640><c> you</c><01:56:09.700><c> pass</c><01:56:09.970><c> an</c><01:56:10.180><c> alpha</c>

01:56:10.620 --> 01:56:10.630 align:start position:0%
certain values so when you pass an alpha
 

01:56:10.630 --> 01:56:12.600 align:start position:0%
certain values so when you pass an alpha
to<01:56:10.840><c> the</c><01:56:10.870><c> function</c><01:56:11.350><c> it</c><01:56:11.530><c> returns</c><01:56:11.560><c> Adams</c><01:56:12.340><c> if</c><01:56:12.460><c> you</c>

01:56:12.600 --> 01:56:12.610 align:start position:0%
to the function it returns Adams if you
 

01:56:12.610 --> 01:56:16.230 align:start position:0%
to the function it returns Adams if you
pass<01:56:13.090><c> in</c><01:56:13.300><c> Bravo</c><01:56:13.840><c> it</c><01:56:14.050><c> returns</c><01:56:14.590><c> Boston</c><01:56:15.280><c> we</c><01:56:16.000><c> can</c>

01:56:16.230 --> 01:56:16.240 align:start position:0%
pass in Bravo it returns Boston we can
 

01:56:16.240 --> 01:56:19.320 align:start position:0%
pass in Bravo it returns Boston we can
replace<01:56:16.690><c> this</c><01:56:17.320><c> switch</c><01:56:17.800><c> statement</c><01:56:18.180><c> with</c><01:56:19.180><c> an</c>

01:56:19.320 --> 01:56:19.330 align:start position:0%
replace this switch statement with an
 

01:56:19.330 --> 01:56:22.350 align:start position:0%
replace this switch statement with an
object<01:56:19.690><c> and</c><01:56:20.350><c> use</c><01:56:20.920><c> the</c><01:56:21.130><c> object</c><01:56:21.700><c> for</c><01:56:21.940><c> lookups</c>

01:56:22.350 --> 01:56:22.360 align:start position:0%
object and use the object for lookups
 

01:56:22.360 --> 01:56:24.750 align:start position:0%
object and use the object for lookups
instead<01:56:22.840><c> of</c><01:56:22.930><c> the</c><01:56:23.080><c> switch</c><01:56:23.380><c> statement</c><01:56:23.730><c> let</c><01:56:24.730><c> me</c>

01:56:24.750 --> 01:56:24.760 align:start position:0%
instead of the switch statement let me
 

01:56:24.760 --> 01:56:27.360 align:start position:0%
instead of the switch statement let me
show<01:56:24.970><c> you</c><01:56:25.030><c> how</c><01:56:25.270><c> that's</c><01:56:25.450><c> done</c><01:56:25.780><c> I'm</c><01:56:26.260><c> going</c><01:56:27.010><c> to</c>

01:56:27.360 --> 01:56:27.370 align:start position:0%
show you how that's done I'm going to
 

01:56:27.370 --> 01:56:31.380 align:start position:0%
show you how that's done I'm going to
create<01:56:27.940><c> var</c><01:56:29.100><c> lookup</c><01:56:30.130><c> this</c><01:56:30.760><c> is</c><01:56:30.970><c> going</c><01:56:31.180><c> to</c><01:56:31.240><c> be</c><01:56:31.330><c> an</c>

01:56:31.380 --> 01:56:31.390 align:start position:0%
create var lookup this is going to be an
 

01:56:31.390 --> 01:56:35.250 align:start position:0%
create var lookup this is going to be an
object<01:56:31.630><c> here</c><01:56:32.170><c> and</c><01:56:32.790><c> the</c><01:56:33.790><c> object</c><01:56:34.390><c> is</c><01:56:34.600><c> going</c><01:56:35.170><c> to</c>

01:56:35.250 --> 01:56:35.260 align:start position:0%
object here and the object is going to
 

01:56:35.260 --> 01:56:37.950 align:start position:0%
object here and the object is going to
have<01:56:35.410><c> a</c><01:56:35.440><c> bunch</c><01:56:35.650><c> of</c><01:56:35.770><c> key</c><01:56:36.010><c> value</c><01:56:36.340><c> pairs</c><01:56:36.640><c> so</c><01:56:37.420><c> we</c>

01:56:37.950 --> 01:56:37.960 align:start position:0%
have a bunch of key value pairs so we
 

01:56:37.960 --> 01:56:43.820 align:start position:0%
have a bunch of key value pairs so we
have<01:56:38.170><c> alpha</c><01:56:38.440><c> and</c><01:56:39.180><c> that's</c><01:56:40.180><c> going</c><01:56:40.510><c> to</c><01:56:40.630><c> be</c><01:56:41.970><c> Adams</c>

01:56:43.820 --> 01:56:43.830 align:start position:0%
have alpha and that's going to be Adams
 

01:56:43.830 --> 01:56:51.810 align:start position:0%
have alpha and that's going to be Adams
and<01:56:45.300><c> then</c><01:56:46.300><c> we</c><01:56:46.720><c> have</c><01:56:47.310><c> Bravo</c><01:56:48.310><c> and</c><01:56:50.400><c> the</c><01:56:51.400><c> value</c><01:56:51.790><c> for</c>

01:56:51.810 --> 01:56:51.820 align:start position:0%
and then we have Bravo and the value for
 

01:56:51.820 --> 01:56:57.630 align:start position:0%
and then we have Bravo and the value for
Bravo<01:56:52.390><c> is</c><01:56:52.600><c> going</c><01:56:53.140><c> to</c><01:56:53.260><c> be</c><01:56:53.700><c> Boston</c><01:56:55.200><c> and</c><01:56:56.640><c> that's</c>

01:56:57.630 --> 01:56:57.640 align:start position:0%
Bravo is going to be Boston and that's
 

01:56:57.640 --> 01:57:01.100 align:start position:0%
Bravo is going to be Boston and that's
it<01:56:57.910><c> so</c><01:56:58.750><c> we</c><01:56:59.320><c> can</c><01:56:59.530><c> now</c><01:56:59.740><c> delete</c><01:57:00.430><c> this</c><01:57:00.670><c> whole</c>

01:57:01.100 --> 01:57:01.110 align:start position:0%
it so we can now delete this whole
 

01:57:01.110 --> 01:57:04.860 align:start position:0%
it so we can now delete this whole
switch<01:57:02.110><c> statement</c><01:57:02.740><c> and</c><01:57:03.210><c> now</c><01:57:04.210><c> we</c><01:57:04.270><c> can</c><01:57:04.630><c> say</c>

01:57:04.860 --> 01:57:04.870 align:start position:0%
switch statement and now we can say
 

01:57:04.870 --> 01:57:11.250 align:start position:0%
switch statement and now we can say
result<01:57:06.900><c> equals</c><01:57:08.940><c> lookup</c><01:57:09.940><c> in</c><01:57:10.150><c> bracket</c><01:57:11.140><c> notation</c>

01:57:11.250 --> 01:57:11.260 align:start position:0%
result equals lookup in bracket notation
 

01:57:11.260 --> 01:57:15.300 align:start position:0%
result equals lookup in bracket notation
we<01:57:12.100><c> put</c><01:57:12.430><c> the</c><01:57:12.670><c> value</c><01:57:13.090><c> that</c><01:57:13.360><c> was</c><01:57:13.540><c> passed</c><01:57:13.600><c> in</c><01:57:14.310><c> and</c>

01:57:15.300 --> 01:57:15.310 align:start position:0%
we put the value that was passed in and
 

01:57:15.310 --> 01:57:17.190 align:start position:0%
we put the value that was passed in and
I<01:57:15.370><c> forgot</c><01:57:15.700><c> one</c><01:57:15.940><c> thing</c><01:57:15.970><c> which</c><01:57:16.420><c> was</c><01:57:16.570><c> the</c><01:57:16.750><c> equal</c>

01:57:17.190 --> 01:57:17.200 align:start position:0%
I forgot one thing which was the equal
 

01:57:17.200 --> 01:57:20.550 align:start position:0%
I forgot one thing which was the equal
sign<01:57:17.470><c> here</c><01:57:17.670><c> because</c><01:57:18.670><c> lookup</c><01:57:19.420><c> equals</c><01:57:20.080><c> this</c>

01:57:20.550 --> 01:57:20.560 align:start position:0%
sign here because lookup equals this
 

01:57:20.560 --> 01:57:24.450 align:start position:0%
sign here because lookup equals this
object<01:57:20.860><c> and</c><01:57:21.400><c> let's</c><01:57:22.150><c> do</c><01:57:22.420><c> a</c><01:57:22.450><c> test</c><01:57:23.110><c> so</c><01:57:23.950><c> let</c><01:57:24.190><c> me</c><01:57:24.250><c> put</c>

01:57:24.450 --> 01:57:24.460 align:start position:0%
object and let's do a test so let me put
 

01:57:24.460 --> 01:57:27.960 align:start position:0%
object and let's do a test so let me put
console<01:57:25.120><c> dot</c><01:57:25.960><c> log</c><01:57:26.220><c> so</c><01:57:27.220><c> we</c><01:57:27.250><c> can</c><01:57:27.460><c> actually</c><01:57:27.550><c> see</c>

01:57:27.960 --> 01:57:27.970 align:start position:0%
console dot log so we can actually see
 

01:57:27.970 --> 01:57:31.740 align:start position:0%
console dot log so we can actually see
what<01:57:28.380><c> happens</c><01:57:29.380><c> here</c><01:57:29.710><c> so</c><01:57:30.400><c> if</c><01:57:30.670><c> we</c><01:57:31.090><c> do</c><01:57:31.180><c> charlie</c>

01:57:31.740 --> 01:57:31.750 align:start position:0%
what happens here so if we do charlie
 

01:57:31.750 --> 01:57:38.240 align:start position:0%
what happens here so if we do charlie
we're<01:57:32.380><c> gonna</c><01:57:32.500><c> get</c><01:57:32.800><c> Chicago</c><01:57:33.460><c> if</c><01:57:34.000><c> we</c><01:57:34.840><c> do</c><01:57:36.150><c> Foxtrot</c>

01:57:38.240 --> 01:57:38.250 align:start position:0%
we're gonna get Chicago if we do Foxtrot
 

01:57:38.250 --> 01:57:46.090 align:start position:0%
we're gonna get Chicago if we do Foxtrot
the<01:57:39.250><c> result</c><01:57:39.670><c> will</c><01:57:39.850><c> be</c><01:57:39.880><c> Frank</c><01:57:40.800><c> so</c><01:57:41.800><c> it</c><01:57:41.920><c> works</c>

01:57:46.090 --> 01:57:46.100 align:start position:0%
 
 

01:57:46.100 --> 01:57:48.340 align:start position:0%
 
you<01:57:46.850><c> can</c><01:57:47.000><c> check</c><01:57:47.270><c> if</c><01:57:47.420><c> an</c><01:57:47.540><c> object</c><01:57:47.750><c> has</c><01:57:48.320><c> a</c>

01:57:48.340 --> 01:57:48.350 align:start position:0%
you can check if an object has a
 

01:57:48.350 --> 01:57:51.580 align:start position:0%
you can check if an object has a
property<01:57:49.250><c> with</c><01:57:49.910><c> the</c><01:57:50.210><c> has</c><01:57:50.510><c> owned</c><01:57:50.900><c> property</c>

01:57:51.580 --> 01:57:51.590 align:start position:0%
property with the has owned property
 

01:57:51.590 --> 01:57:54.220 align:start position:0%
property with the has owned property
method<01:57:52.160><c> let</c><01:57:53.060><c> me</c><01:57:53.210><c> show</c><01:57:53.510><c> you</c><01:57:53.570><c> how</c><01:57:53.750><c> to</c><01:57:53.780><c> use</c><01:57:54.050><c> this</c>

01:57:54.220 --> 01:57:54.230 align:start position:0%
method let me show you how to use this
 

01:57:54.230 --> 01:57:57.100 align:start position:0%
method let me show you how to use this
method<01:57:54.560><c> and</c><01:57:55.010><c> finish</c><01:57:56.000><c> making</c><01:57:56.420><c> this</c><01:57:56.570><c> function</c>

01:57:57.100 --> 01:57:57.110 align:start position:0%
method and finish making this function
 

01:57:57.110 --> 01:57:59.560 align:start position:0%
method and finish making this function
where<01:57:57.590><c> we</c><01:57:57.620><c> check</c><01:57:58.100><c> if</c><01:57:58.370><c> an</c><01:57:58.610><c> object</c><01:57:58.880><c> has</c><01:57:59.360><c> a</c>

01:57:59.560 --> 01:57:59.570 align:start position:0%
where we check if an object has a
 

01:57:59.570 --> 01:58:02.020 align:start position:0%
where we check if an object has a
specific<01:58:00.200><c> property</c><01:58:00.500><c> if</c><01:58:00.950><c> it</c><01:58:01.460><c> doesn't</c><01:58:01.760><c> have</c><01:58:01.910><c> the</c>

01:58:02.020 --> 01:58:02.030 align:start position:0%
specific property if it doesn't have the
 

01:58:02.030 --> 01:58:05.020 align:start position:0%
specific property if it doesn't have the
property<01:58:02.510><c> will</c><01:58:02.810><c> return</c><01:58:03.200><c> not</c><01:58:03.560><c> found</c><01:58:03.950><c> so</c><01:58:04.730><c> let</c><01:58:04.910><c> me</c>

01:58:05.020 --> 01:58:05.030 align:start position:0%
property will return not found so let me
 

01:58:05.030 --> 01:58:06.850 align:start position:0%
property will return not found so let me
show<01:58:05.240><c> you</c><01:58:05.300><c> how</c><01:58:05.540><c> that's</c><01:58:05.720><c> going</c><01:58:06.020><c> to</c><01:58:06.110><c> work</c><01:58:06.170><c> we'll</c>

01:58:06.850 --> 01:58:06.860 align:start position:0%
show you how that's going to work we'll
 

01:58:06.860 --> 01:58:09.520 align:start position:0%
show you how that's going to work we'll
do<01:58:07.010><c> my</c><01:58:07.370><c> abs</c><01:58:07.790><c> that's</c><01:58:08.330><c> the</c><01:58:08.570><c> object</c><01:58:09.020><c> up</c><01:58:09.200><c> above</c>

01:58:09.520 --> 01:58:09.530 align:start position:0%
do my abs that's the object up above
 

01:58:09.530 --> 01:58:15.070 align:start position:0%
do my abs that's the object up above
dock<01:58:10.370><c> has</c><01:58:11.120><c> owned</c><01:58:11.740><c> dropped</c><01:58:12.740><c> 40</c><01:58:13.340><c> and</c><01:58:13.870><c> then</c><01:58:14.870><c> we</c>

01:58:15.070 --> 01:58:15.080 align:start position:0%
dock has owned dropped 40 and then we
 

01:58:15.080 --> 01:58:16.660 align:start position:0%
dock has owned dropped 40 and then we
pass<01:58:15.410><c> in</c><01:58:15.620><c> the</c><01:58:15.740><c> property</c><01:58:16.100><c> we're</c><01:58:16.190><c> gonna</c><01:58:16.280><c> check</c>

01:58:16.660 --> 01:58:16.670 align:start position:0%
pass in the property we're gonna check
 

01:58:16.670 --> 01:58:20.050 align:start position:0%
pass in the property we're gonna check
which<01:58:16.940><c> is</c><01:58:16.970><c> check</c><01:58:17.570><c> crop</c><01:58:18.490><c> this</c><01:58:19.490><c> is</c><01:58:19.700><c> either</c><01:58:19.820><c> gonna</c>

01:58:20.050 --> 01:58:20.060 align:start position:0%
which is check crop this is either gonna
 

01:58:20.060 --> 01:58:23.140 align:start position:0%
which is check crop this is either gonna
come<01:58:20.330><c> back</c><01:58:20.510><c> as</c><01:58:20.810><c> true</c><01:58:21.290><c> or</c><01:58:21.320><c> false</c><01:58:21.950><c> if</c><01:58:22.340><c> it</c><01:58:22.460><c> has</c><01:58:22.730><c> the</c>

01:58:23.140 --> 01:58:23.150 align:start position:0%
come back as true or false if it has the
 

01:58:23.150 --> 01:58:25.120 align:start position:0%
come back as true or false if it has the
property<01:58:23.660><c> so</c><01:58:24.110><c> let's</c><01:58:24.320><c> make</c><01:58:24.500><c> this</c><01:58:24.620><c> into</c><01:58:24.860><c> an</c><01:58:24.950><c> if</c>

01:58:25.120 --> 01:58:25.130 align:start position:0%
property so let's make this into an if
 

01:58:25.130 --> 01:58:29.050 align:start position:0%
property so let's make this into an if
statement<01:58:25.370><c> if</c><01:58:26.260><c> my</c><01:58:27.260><c> my</c><01:58:27.830><c> object</c><01:58:28.310><c> has</c><01:58:28.730><c> own</c>

01:58:29.050 --> 01:58:29.060 align:start position:0%
statement if my my object has own
 

01:58:29.060 --> 01:58:32.710 align:start position:0%
statement if my my object has own
property<01:58:29.660><c> check</c><01:58:29.960><c> crop</c><01:58:30.760><c> but</c><01:58:31.760><c> if</c><01:58:31.970><c> that's</c><01:58:32.270><c> true</c>

01:58:32.710 --> 01:58:32.720 align:start position:0%
property check crop but if that's true
 

01:58:32.720 --> 01:58:38.350 align:start position:0%
property check crop but if that's true
we're<01:58:33.440><c> going</c><01:58:33.470><c> to</c><01:58:33.770><c> return</c><01:58:34.510><c> my</c><01:58:35.510><c> ABS</c><01:58:36.100><c> and</c><01:58:37.360><c> then</c>

01:58:38.350 --> 01:58:38.360 align:start position:0%
we're going to return my ABS and then
 

01:58:38.360 --> 01:58:42.490 align:start position:0%
we're going to return my ABS and then
use<01:58:39.020><c> bracket</c><01:58:39.560><c> notation</c><01:58:40.090><c> check</c><01:58:41.090><c> crop</c><01:58:41.930><c> so</c><01:58:42.290><c> go</c>

01:58:42.490 --> 01:58:42.500 align:start position:0%
use bracket notation check crop so go
 

01:58:42.500 --> 01:58:44.290 align:start position:0%
use bracket notation check crop so go
we're<01:58:42.710><c> going</c><01:58:42.860><c> to</c><01:58:42.950><c> return</c><01:58:43.250><c> the</c><01:58:43.310><c> value</c><01:58:43.460><c> of</c><01:58:44.060><c> that</c>

01:58:44.290 --> 01:58:44.300 align:start position:0%
we're going to return the value of that
 

01:58:44.300 --> 01:58:52.920 align:start position:0%
we're going to return the value of that
property<01:58:45.040><c> else</c><01:58:46.870><c> we're</c><01:58:47.870><c> going</c><01:58:48.140><c> to</c><01:58:50.440><c> return</c><01:58:51.580><c> not</c>

01:58:52.920 --> 01:58:52.930 align:start position:0%
property else we're going to return not
 

01:58:52.930 --> 01:58:58.150 align:start position:0%
property else we're going to return not
found<01:58:55.360><c> so</c><01:58:56.360><c> let's</c><01:58:56.630><c> pick</c><01:58:56.900><c> up</c><01:58:57.020><c> this</c><01:58:57.230><c> other</c><01:58:57.560><c> return</c>

01:58:58.150 --> 01:58:58.160 align:start position:0%
found so let's pick up this other return
 

01:58:58.160 --> 01:59:03.370 align:start position:0%
found so let's pick up this other return
statement<01:58:58.670><c> and</c><01:58:59.440><c> I'll</c><01:59:00.440><c> do</c><01:59:00.560><c> a</c><01:59:00.590><c> test</c><01:59:01.900><c> so</c><01:59:02.900><c> when</c><01:59:03.260><c> we</c>

01:59:03.370 --> 01:59:03.380 align:start position:0%
statement and I'll do a test so when we
 

01:59:03.380 --> 01:59:07.180 align:start position:0%
statement and I'll do a test so when we
pass<01:59:03.650><c> in</c><01:59:03.860><c> gift</c><01:59:04.220><c> here</c><01:59:04.640><c> we</c><01:59:05.540><c> returned</c><01:59:05.990><c> pony</c><01:59:06.470><c> but</c>

01:59:07.180 --> 01:59:07.190 align:start position:0%
pass in gift here we returned pony but
 

01:59:07.190 --> 01:59:10.990 align:start position:0%
pass in gift here we returned pony but
let's<01:59:07.430><c> say</c><01:59:07.640><c> we</c><01:59:07.790><c> passed</c><01:59:08.120><c> in</c><01:59:08.420><c> hello</c><01:59:09.790><c> you</c><01:59:10.790><c> load</c>

01:59:10.990 --> 01:59:11.000 align:start position:0%
let's say we passed in hello you load
 

01:59:11.000 --> 01:59:18.270 align:start position:0%
let's say we passed in hello you load
that<01:59:11.030><c> not</c><01:59:11.960><c> found</c><01:59:12.820><c> okay</c><01:59:13.820><c> it</c><01:59:13.970><c> works</c>

01:59:18.270 --> 01:59:18.280 align:start position:0%
 
 

01:59:18.280 --> 01:59:21.240 align:start position:0%
 
a<01:59:18.690><c> JavaScript</c><01:59:19.690><c> object</c><01:59:19.780><c> is</c><01:59:20.350><c> a</c><01:59:20.500><c> way</c><01:59:20.710><c> to</c><01:59:20.770><c> store</c>

01:59:21.240 --> 01:59:21.250 align:start position:0%
a JavaScript object is a way to store
 

01:59:21.250 --> 01:59:24.750 align:start position:0%
a JavaScript object is a way to store
flexible<01:59:22.000><c> data</c><01:59:22.500><c> so</c><01:59:23.500><c> you</c><01:59:23.560><c> can</c><01:59:23.950><c> store</c><01:59:24.220><c> strings</c>

01:59:24.750 --> 01:59:24.760 align:start position:0%
flexible data so you can store strings
 

01:59:24.760 --> 01:59:28.590 align:start position:0%
flexible data so you can store strings
numbers<01:59:25.570><c> and</c><01:59:26.370><c> arrays</c><01:59:27.370><c> and</c><01:59:27.850><c> even</c><01:59:28.390><c> other</c>

01:59:28.590 --> 01:59:28.600 align:start position:0%
numbers and arrays and even other
 

01:59:28.600 --> 01:59:31.860 align:start position:0%
numbers and arrays and even other
objects<01:59:29.230><c> so</c><01:59:29.980><c> in</c><01:59:30.280><c> this</c><01:59:30.460><c> example</c><01:59:30.850><c> we</c><01:59:31.240><c> have</c><01:59:31.270><c> an</c>

01:59:31.860 --> 01:59:31.870 align:start position:0%
objects so in this example we have an
 

01:59:31.870 --> 01:59:34.080 align:start position:0%
objects so in this example we have an
array<01:59:32.350><c> called</c><01:59:32.620><c> MyMusic</c><01:59:33.340><c> we</c><01:59:33.550><c> can</c><01:59:33.790><c> see</c><01:59:33.910><c> it's</c><01:59:34.030><c> an</c>

01:59:34.080 --> 01:59:34.090 align:start position:0%
array called MyMusic we can see it's an
 

01:59:34.090 --> 01:59:36.060 align:start position:0%
array called MyMusic we can see it's an
array<01:59:34.300><c> because</c><01:59:34.480><c> we</c><01:59:34.660><c> have</c><01:59:34.900><c> the</c><01:59:35.080><c> open</c><01:59:35.590><c> break</c><01:59:35.800><c> and</c>

01:59:36.060 --> 01:59:36.070 align:start position:0%
array because we have the open break and
 

01:59:36.070 --> 01:59:39.140 align:start position:0%
array because we have the open break and
closed<01:59:36.370><c> bracket</c><01:59:36.910><c> but</c><01:59:37.540><c> inside</c><01:59:38.050><c> the</c><01:59:38.260><c> array</c><01:59:38.680><c> are</c>

01:59:39.140 --> 01:59:39.150 align:start position:0%
closed bracket but inside the array are
 

01:59:39.150 --> 01:59:42.330 align:start position:0%
closed bracket but inside the array are
objects<01:59:40.150><c> so</c><01:59:40.600><c> this</c><01:59:41.170><c> is</c><01:59:41.350><c> one</c><01:59:41.620><c> of</c><01:59:41.650><c> the</c><01:59:41.830><c> objects</c>

01:59:42.330 --> 01:59:42.340 align:start position:0%
objects so this is one of the objects
 

01:59:42.340 --> 01:59:43.890 align:start position:0%
objects so this is one of the objects
and<01:59:42.520><c> inside</c><01:59:42.790><c> the</c><01:59:42.910><c> objects</c><01:59:43.300><c> are</c><01:59:43.420><c> all</c><01:59:43.510><c> these</c><01:59:43.630><c> key</c>

01:59:43.890 --> 01:59:43.900 align:start position:0%
and inside the objects are all these key
 

01:59:43.900 --> 01:59:46.140 align:start position:0%
and inside the objects are all these key
value<01:59:44.260><c> pairs</c><01:59:44.650><c> with</c><01:59:45.310><c> the</c><01:59:45.520><c> strings</c><01:59:45.880><c> and</c><01:59:46.060><c> the</c>

01:59:46.140 --> 01:59:46.150 align:start position:0%
value pairs with the strings and the
 

01:59:46.150 --> 01:59:48.210 align:start position:0%
value pairs with the strings and the
numbers<01:59:46.510><c> and</c><01:59:46.660><c> so</c><01:59:46.840><c> on</c><01:59:46.990><c> so</c><01:59:47.560><c> I'm</c><01:59:47.800><c> going</c><01:59:47.980><c> to</c><01:59:48.010><c> add</c>

01:59:48.210 --> 01:59:48.220 align:start position:0%
numbers and so on so I'm going to add
 

01:59:48.220 --> 01:59:51.510 align:start position:0%
numbers and so on so I'm going to add
another<01:59:48.520><c> object</c><01:59:49.290><c> so</c><01:59:50.290><c> since</c><01:59:50.920><c> this</c><01:59:51.070><c> is</c><01:59:51.130><c> array</c>

01:59:51.510 --> 01:59:51.520 align:start position:0%
another object so since this is array
 

01:59:51.520 --> 01:59:53.490 align:start position:0%
another object so since this is array
after<01:59:51.910><c> each</c><01:59:52.090><c> element</c><01:59:52.630><c> in</c><01:59:52.690><c> an</c><01:59:52.840><c> array</c><01:59:52.930><c> you</c><01:59:53.170><c> have</c>

01:59:53.490 --> 01:59:53.500 align:start position:0%
after each element in an array you have
 

01:59:53.500 --> 01:59:54.930 align:start position:0%
after each element in an array you have
a<01:59:53.560><c> comma</c><01:59:53.830><c> so</c><01:59:54.070><c> I'm</c><01:59:54.130><c> gonna</c><01:59:54.250><c> add</c><01:59:54.400><c> a</c><01:59:54.430><c> comma</c><01:59:54.790><c> here</c>

01:59:54.930 --> 01:59:54.940 align:start position:0%
a comma so I'm gonna add a comma here
 

01:59:54.940 --> 01:59:58.200 align:start position:0%
a comma so I'm gonna add a comma here
and<01:59:55.290><c> then</c><01:59:56.290><c> I'm</c><01:59:56.530><c> going</c><01:59:56.770><c> to</c><01:59:56.860><c> add</c><01:59:57.070><c> my</c><01:59:57.430><c> next</c><01:59:57.880><c> record</c>

01:59:58.200 --> 01:59:58.210 align:start position:0%
and then I'm going to add my next record
 

01:59:58.210 --> 02:00:01.740 align:start position:0%
and then I'm going to add my next record
